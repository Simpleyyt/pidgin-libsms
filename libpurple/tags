!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACTIVE_CANDIDATE_PAIR	media/backend-iface.c	/^	ACTIVE_CANDIDATE_PAIR,$/;"	e	enum:__anon125	file:
ADDR_CTRL	util.c	3474;"	d	file:
ADDR_CTRL	util.c	3548;"	d	file:
ADD_PORT_MAPPING_PARAMS	upnp.c	93;"	d	file:
ADVANCE	nat-pmp.c	120;"	d	file:
ALLOW_TAG	util.c	1422;"	d	file:
ALLOW_TAG_ALT	util.c	1345;"	d	file:
ATTRIB_MAPPEDADDRESS	stun.c	54;"	d	file:
BOUNDARY	mime.c	439;"	d	file:
BOUNDARY	mime.c	466;"	d	file:
BUF_LEN	internal.h	75;"	d
BUF_LONG	internal.h	76;"	d
CALL_FN_W_10W	valgrind.h	1322;"	d
CALL_FN_W_10W	valgrind.h	1765;"	d
CALL_FN_W_10W	valgrind.h	2271;"	d
CALL_FN_W_10W	valgrind.h	2826;"	d
CALL_FN_W_10W	valgrind.h	3387;"	d
CALL_FN_W_10W	valgrind.h	888;"	d
CALL_FN_W_11W	valgrind.h	1362;"	d
CALL_FN_W_11W	valgrind.h	1811;"	d
CALL_FN_W_11W	valgrind.h	2323;"	d
CALL_FN_W_11W	valgrind.h	2880;"	d
CALL_FN_W_11W	valgrind.h	3441;"	d
CALL_FN_W_11W	valgrind.h	926;"	d
CALL_FN_W_12W	valgrind.h	1404;"	d
CALL_FN_W_12W	valgrind.h	1861;"	d
CALL_FN_W_12W	valgrind.h	2379;"	d
CALL_FN_W_12W	valgrind.h	2938;"	d
CALL_FN_W_12W	valgrind.h	3499;"	d
CALL_FN_W_12W	valgrind.h	967;"	d
CALL_FN_W_5W	valgrind.h	1156;"	d
CALL_FN_W_5W	valgrind.h	1597;"	d
CALL_FN_W_5W	valgrind.h	2073;"	d
CALL_FN_W_5W	valgrind.h	2618;"	d
CALL_FN_W_5W	valgrind.h	3179;"	d
CALL_FN_W_5W	valgrind.h	730;"	d
CALL_FN_W_6W	valgrind.h	1184;"	d
CALL_FN_W_6W	valgrind.h	1625;"	d
CALL_FN_W_6W	valgrind.h	2107;"	d
CALL_FN_W_6W	valgrind.h	2654;"	d
CALL_FN_W_6W	valgrind.h	3215;"	d
CALL_FN_W_6W	valgrind.h	757;"	d
CALL_FN_W_7W	valgrind.h	1214;"	d
CALL_FN_W_7W	valgrind.h	1655;"	d
CALL_FN_W_7W	valgrind.h	2143;"	d
CALL_FN_W_7W	valgrind.h	2692;"	d
CALL_FN_W_7W	valgrind.h	3253;"	d
CALL_FN_W_7W	valgrind.h	786;"	d
CALL_FN_W_8W	valgrind.h	1248;"	d
CALL_FN_W_8W	valgrind.h	1688;"	d
CALL_FN_W_8W	valgrind.h	2182;"	d
CALL_FN_W_8W	valgrind.h	2733;"	d
CALL_FN_W_8W	valgrind.h	3294;"	d
CALL_FN_W_8W	valgrind.h	818;"	d
CALL_FN_W_9W	valgrind.h	1284;"	d
CALL_FN_W_9W	valgrind.h	1723;"	d
CALL_FN_W_9W	valgrind.h	2223;"	d
CALL_FN_W_9W	valgrind.h	2776;"	d
CALL_FN_W_9W	valgrind.h	3337;"	d
CALL_FN_W_9W	valgrind.h	852;"	d
CALL_FN_W_W	valgrind.h	1064;"	d
CALL_FN_W_W	valgrind.h	1505;"	d
CALL_FN_W_W	valgrind.h	1957;"	d
CALL_FN_W_W	valgrind.h	2494;"	d
CALL_FN_W_W	valgrind.h	3055;"	d
CALL_FN_W_W	valgrind.h	642;"	d
CALL_FN_W_WW	valgrind.h	1084;"	d
CALL_FN_W_WW	valgrind.h	1525;"	d
CALL_FN_W_WW	valgrind.h	1983;"	d
CALL_FN_W_WW	valgrind.h	2522;"	d
CALL_FN_W_WW	valgrind.h	3083;"	d
CALL_FN_W_WW	valgrind.h	661;"	d
CALL_FN_W_WWW	valgrind.h	1106;"	d
CALL_FN_W_WWW	valgrind.h	1547;"	d
CALL_FN_W_WWW	valgrind.h	2011;"	d
CALL_FN_W_WWW	valgrind.h	2552;"	d
CALL_FN_W_WWW	valgrind.h	3113;"	d
CALL_FN_W_WWW	valgrind.h	682;"	d
CALL_FN_W_WWWW	valgrind.h	1130;"	d
CALL_FN_W_WWWW	valgrind.h	1571;"	d
CALL_FN_W_WWWW	valgrind.h	2041;"	d
CALL_FN_W_WWWW	valgrind.h	2584;"	d
CALL_FN_W_WWWW	valgrind.h	3145;"	d
CALL_FN_W_WWWW	valgrind.h	705;"	d
CALL_FN_W_v	valgrind.h	1046;"	d
CALL_FN_W_v	valgrind.h	1487;"	d
CALL_FN_W_v	valgrind.h	1933;"	d
CALL_FN_W_v	valgrind.h	2468;"	d
CALL_FN_W_v	valgrind.h	3029;"	d
CALL_FN_W_v	valgrind.h	626;"	d
CALL_FN_v_W	valgrind.h	603;"	d
CALL_FN_v_WW	valgrind.h	607;"	d
CALL_FN_v_WWW	valgrind.h	611;"	d
CALL_FN_v_v	valgrind.h	599;"	d
CANDIDATES_PREPARED	media.c	/^	CANDIDATES_PREPARED,$/;"	e	enum:__anon76	file:
CANDIDATES_PREPARED	media/backend-iface.c	/^	CANDIDATES_PREPARED,$/;"	e	enum:__anon125	file:
CHECK_ERROR	dbus-bindings.h	47;"	d
CHECK_QUOTE	util.c	1435;"	d	file:
CHECK_QUOTE	util.c	1864;"	d	file:
CODECS_CHANGED	media.c	/^	CODECS_CHANGED,$/;"	e	enum:__anon76	file:
CODECS_CHANGED	media/backend-iface.c	/^	CODECS_CHANGED,$/;"	e	enum:__anon125	file:
CONFIG_ARGS	config.h	8;"	d
CreateProcess	libtool	/^   CreateProcess().  We must quote the arguments since Win32 CreateProcess()$/;"	f
DBUS_API_SUBJECT_TO_CHANGE	core.c	58;"	d	file:
DBUS_API_SUBJECT_TO_CHANGE	dbus-maybe.h	12;"	d
DBUS_API_SUBJECT_TO_CHANGE	dbus-server.c	25;"	d	file:
DBUS_API_SUBJECT_TO_CHANGE	purple-client-example.c	2;"	d	file:
DBUS_API_SUBJECT_TO_CHANGE	purple-client.c	2;"	d	file:
DBUS_EXPORT	dbus-maybe.h	31;"	d
DBUS_EXPORT	dbus-server.h	202;"	d
DBUS_INTERFACE_PURPLE	dbus-purple.h	29;"	d
DBUS_PATH_PURPLE	dbus-purple.h	28;"	d
DBUS_SERVICE_PURPLE	dbus-purple.h	27;"	d
DEFAULT_AUTOAWAY_MESSAGE	savedstatuses.c	48;"	d	file:
DEFAULT_BUF_SIZE	circbuffer.c	28;"	d	file:
DEFAULT_HTTP_PORT	upnp.c	42;"	d	file:
DELETE_PORT_MAPPING_PARAMS	upnp.c	107;"	d	file:
DISCOVERY_TIMEOUT	upnp.c	43;"	d	file:
DISPLAY_VERSION	config.h	22;"	d
DNS_TYPE_SRV	dnssrv.c	38;"	d	file:
DNS_TYPE_TXT	dnssrv.c	41;"	d	file:
ENABLE_NLS	config.h	28;"	d
ENCODING_LEGACY_MIXED	desktopitem.c	/^	ENCODING_LEGACY_MIXED$/;"	e	enum:__anon48	file:
ENCODING_UNKNOWN	desktopitem.c	/^	ENCODING_UNKNOWN,$/;"	e	enum:__anon48	file:
ENCODING_UTF8	desktopitem.c	/^	ENCODING_UTF8,$/;"	e	enum:__anon48	file:
Encoding	desktopitem.c	/^} Encoding;$/;"	t	typeref:enum:__anon48	file:
FT_INITIAL_BUFFER_SIZE	ft.c	37;"	d	file:
FT_MAX_BUFFER_SIZE	ft.c	38;"	d	file:
FirstBrace	desktopitem.c	/^	FirstBrace,$/;"	e	enum:__anon49	file:
GAIM_BLIST_BUDDY_NODE	gaim-compat.h	200;"	d
GAIM_BLIST_CHAT_NODE	gaim-compat.h	201;"	d
GAIM_BLIST_CONTACT_NODE	gaim-compat.h	199;"	d
GAIM_BLIST_GROUP_NODE	gaim-compat.h	198;"	d
GAIM_BLIST_NODE_FLAG_NO_SAVE	gaim-compat.h	212;"	d
GAIM_BLIST_NODE_HAS_FLAG	gaim-compat.h	215;"	d
GAIM_BLIST_NODE_IS_BUDDY	gaim-compat.h	206;"	d
GAIM_BLIST_NODE_IS_CHAT	gaim-compat.h	205;"	d
GAIM_BLIST_NODE_IS_CONTACT	gaim-compat.h	207;"	d
GAIM_BLIST_NODE_IS_GROUP	gaim-compat.h	208;"	d
GAIM_BLIST_NODE_NAME	gaim-compat.h	218;"	d
GAIM_BLIST_NODE_SHOULD_SAVE	gaim-compat.h	216;"	d
GAIM_BLIST_OTHER_NODE	gaim-compat.h	202;"	d
GAIM_BUDDY_IS_ONLINE	gaim-compat.h	210;"	d
GAIM_CALLBACK	gaim-compat.h	1751;"	d
GAIM_CBFLAGS_FOUNDER	gaim-compat.h	602;"	d
GAIM_CBFLAGS_HALFOP	gaim-compat.h	600;"	d
GAIM_CBFLAGS_NONE	gaim-compat.h	598;"	d
GAIM_CBFLAGS_OP	gaim-compat.h	601;"	d
GAIM_CBFLAGS_TYPING	gaim-compat.h	603;"	d
GAIM_CBFLAGS_VOICE	gaim-compat.h	599;"	d
GAIM_CIPHER	gaim-compat.h	369;"	d
GAIM_CIPHER_CAPS_APPEND	gaim-compat.h	383;"	d
GAIM_CIPHER_CAPS_DECRYPT	gaim-compat.h	386;"	d
GAIM_CIPHER_CAPS_DIGEST	gaim-compat.h	384;"	d
GAIM_CIPHER_CAPS_ENCRYPT	gaim-compat.h	385;"	d
GAIM_CIPHER_CAPS_GET_KEY_SIZE	gaim-compat.h	390;"	d
GAIM_CIPHER_CAPS_GET_OPT	gaim-compat.h	378;"	d
GAIM_CIPHER_CAPS_GET_SALT_SIZE	gaim-compat.h	388;"	d
GAIM_CIPHER_CAPS_INIT	gaim-compat.h	379;"	d
GAIM_CIPHER_CAPS_RESET	gaim-compat.h	380;"	d
GAIM_CIPHER_CAPS_SET_IV	gaim-compat.h	382;"	d
GAIM_CIPHER_CAPS_SET_KEY	gaim-compat.h	389;"	d
GAIM_CIPHER_CAPS_SET_OPT	gaim-compat.h	377;"	d
GAIM_CIPHER_CAPS_SET_SALT	gaim-compat.h	387;"	d
GAIM_CIPHER_CAPS_UNINIT	gaim-compat.h	381;"	d
GAIM_CIPHER_CAPS_UNKNOWN	gaim-compat.h	391;"	d
GAIM_CIPHER_CONTEXT	gaim-compat.h	371;"	d
GAIM_CIPHER_OPS	gaim-compat.h	370;"	d
GAIM_CMD_FLAG_ALLOW_WRONG_ARGS	gaim-compat.h	474;"	d
GAIM_CMD_FLAG_CHAT	gaim-compat.h	472;"	d
GAIM_CMD_FLAG_IM	gaim-compat.h	471;"	d
GAIM_CMD_FLAG_PRPL_ONLY	gaim-compat.h	473;"	d
GAIM_CMD_FUNC	gaim-compat.h	456;"	d
GAIM_CMD_P_ALIAS	gaim-compat.h	467;"	d
GAIM_CMD_P_DEFAULT	gaim-compat.h	464;"	d
GAIM_CMD_P_HIGH	gaim-compat.h	468;"	d
GAIM_CMD_P_LOW	gaim-compat.h	463;"	d
GAIM_CMD_P_PLUGIN	gaim-compat.h	466;"	d
GAIM_CMD_P_PRPL	gaim-compat.h	465;"	d
GAIM_CMD_P_VERY_HIGH	gaim-compat.h	469;"	d
GAIM_CMD_P_VERY_LOW	gaim-compat.h	462;"	d
GAIM_CMD_RET_CONTINUE	gaim-compat.h	460;"	d
GAIM_CMD_RET_FAILED	gaim-compat.h	459;"	d
GAIM_CMD_RET_OK	gaim-compat.h	458;"	d
GAIM_CMD_STATUS_FAILED	gaim-compat.h	450;"	d
GAIM_CMD_STATUS_NOT_FOUND	gaim-compat.h	451;"	d
GAIM_CMD_STATUS_OK	gaim-compat.h	449;"	d
GAIM_CMD_STATUS_WRONG_ARGS	gaim-compat.h	452;"	d
GAIM_CMD_STATUS_WRONG_PRPL	gaim-compat.h	453;"	d
GAIM_CMD_STATUS_WRONG_TYPE	gaim-compat.h	454;"	d
GAIM_CONNECTED	gaim-compat.h	503;"	d
GAIM_CONNECTING	gaim-compat.h	504;"	d
GAIM_CONNECTION_AUTO_RESP	gaim-compat.h	493;"	d
GAIM_CONNECTION_FORMATTING_WBFO	gaim-compat.h	494;"	d
GAIM_CONNECTION_HTML	gaim-compat.h	491;"	d
GAIM_CONNECTION_IS_CONNECTED	gaim-compat.h	518;"	d
GAIM_CONNECTION_IS_VALID	gaim-compat.h	534;"	d
GAIM_CONNECTION_NO_BGCOLOR	gaim-compat.h	492;"	d
GAIM_CONNECTION_NO_FONTSIZE	gaim-compat.h	496;"	d
GAIM_CONNECTION_NO_IMAGES	gaim-compat.h	498;"	d
GAIM_CONNECTION_NO_NEWLINES	gaim-compat.h	495;"	d
GAIM_CONNECTION_NO_URLDESC	gaim-compat.h	497;"	d
GAIM_CONV_ACCOUNT_OFFLINE	gaim-compat.h	568;"	d
GAIM_CONV_ACCOUNT_ONLINE	gaim-compat.h	567;"	d
GAIM_CONV_CHAT	gaim-compat.h	632;"	d
GAIM_CONV_IM	gaim-compat.h	628;"	d
GAIM_CONV_TYPE_ANY	gaim-compat.h	556;"	d
GAIM_CONV_TYPE_CHAT	gaim-compat.h	554;"	d
GAIM_CONV_TYPE_IM	gaim-compat.h	553;"	d
GAIM_CONV_TYPE_MISC	gaim-compat.h	555;"	d
GAIM_CONV_TYPE_UNKNOWN	gaim-compat.h	552;"	d
GAIM_CONV_UPDATE_ACCOUNT	gaim-compat.h	562;"	d
GAIM_CONV_UPDATE_ADD	gaim-compat.h	560;"	d
GAIM_CONV_UPDATE_AWAY	gaim-compat.h	569;"	d
GAIM_CONV_UPDATE_CHATLEFT	gaim-compat.h	572;"	d
GAIM_CONV_UPDATE_FEATURES	gaim-compat.h	573;"	d
GAIM_CONV_UPDATE_ICON	gaim-compat.h	570;"	d
GAIM_CONV_UPDATE_LOGGING	gaim-compat.h	565;"	d
GAIM_CONV_UPDATE_REMOVE	gaim-compat.h	561;"	d
GAIM_CONV_UPDATE_TITLE	gaim-compat.h	571;"	d
GAIM_CONV_UPDATE_TOPIC	gaim-compat.h	566;"	d
GAIM_CONV_UPDATE_TYPING	gaim-compat.h	563;"	d
GAIM_CONV_UPDATE_UNSEEN	gaim-compat.h	564;"	d
GAIM_DEBUG_ALL	gaim-compat.h	743;"	d
GAIM_DEBUG_ERROR	gaim-compat.h	747;"	d
GAIM_DEBUG_FATAL	gaim-compat.h	748;"	d
GAIM_DEBUG_INFO	gaim-compat.h	745;"	d
GAIM_DEBUG_MISC	gaim-compat.h	744;"	d
GAIM_DEBUG_WARNING	gaim-compat.h	746;"	d
GAIM_DEFAULT_ACTION_NONE	gaim-compat.h	1512;"	d
GAIM_DESKTOP_ITEM_ACTIONS	gaim-compat.h	801;"	d
GAIM_DESKTOP_ITEM_COMMENT	gaim-compat.h	799;"	d
GAIM_DESKTOP_ITEM_DEFAULT_APP	gaim-compat.h	812;"	d
GAIM_DESKTOP_ITEM_DEV	gaim-compat.h	813;"	d
GAIM_DESKTOP_ITEM_DOC_PATH	gaim-compat.h	820;"	d
GAIM_DESKTOP_ITEM_ENCODING	gaim-compat.h	791;"	d
GAIM_DESKTOP_ITEM_EXEC	gaim-compat.h	800;"	d
GAIM_DESKTOP_ITEM_FILE_PATTERN	gaim-compat.h	796;"	d
GAIM_DESKTOP_ITEM_FS_TYPE	gaim-compat.h	814;"	d
GAIM_DESKTOP_ITEM_GENERIC_NAME	gaim-compat.h	794;"	d
GAIM_DESKTOP_ITEM_HIDDEN	gaim-compat.h	804;"	d
GAIM_DESKTOP_ITEM_ICON	gaim-compat.h	802;"	d
GAIM_DESKTOP_ITEM_MIME_TYPE	gaim-compat.h	810;"	d
GAIM_DESKTOP_ITEM_MINI_ICON	gaim-compat.h	803;"	d
GAIM_DESKTOP_ITEM_MOUNT_POINT	gaim-compat.h	815;"	d
GAIM_DESKTOP_ITEM_NAME	gaim-compat.h	793;"	d
GAIM_DESKTOP_ITEM_NO_DISPLAY	gaim-compat.h	798;"	d
GAIM_DESKTOP_ITEM_PATH	gaim-compat.h	805;"	d
GAIM_DESKTOP_ITEM_PATTERNS	gaim-compat.h	811;"	d
GAIM_DESKTOP_ITEM_READ_ONLY	gaim-compat.h	816;"	d
GAIM_DESKTOP_ITEM_SORT_ORDER	gaim-compat.h	818;"	d
GAIM_DESKTOP_ITEM_SWALLOW_EXEC	gaim-compat.h	809;"	d
GAIM_DESKTOP_ITEM_SWALLOW_TITLE	gaim-compat.h	808;"	d
GAIM_DESKTOP_ITEM_TERMINAL	gaim-compat.h	806;"	d
GAIM_DESKTOP_ITEM_TERMINAL_OPTIONS	gaim-compat.h	807;"	d
GAIM_DESKTOP_ITEM_TRY_EXEC	gaim-compat.h	797;"	d
GAIM_DESKTOP_ITEM_TYPE	gaim-compat.h	795;"	d
GAIM_DESKTOP_ITEM_TYPE_APPLICATION	gaim-compat.h	774;"	d
GAIM_DESKTOP_ITEM_TYPE_DIRECTORY	gaim-compat.h	778;"	d
GAIM_DESKTOP_ITEM_TYPE_FSDEVICE	gaim-compat.h	776;"	d
GAIM_DESKTOP_ITEM_TYPE_LINK	gaim-compat.h	775;"	d
GAIM_DESKTOP_ITEM_TYPE_MIME_TYPE	gaim-compat.h	777;"	d
GAIM_DESKTOP_ITEM_TYPE_NULL	gaim-compat.h	772;"	d
GAIM_DESKTOP_ITEM_TYPE_OTHER	gaim-compat.h	773;"	d
GAIM_DESKTOP_ITEM_TYPE_SERVICE	gaim-compat.h	779;"	d
GAIM_DESKTOP_ITEM_TYPE_SERVICE_TYPE	gaim-compat.h	780;"	d
GAIM_DESKTOP_ITEM_UNMOUNT_ICON	gaim-compat.h	817;"	d
GAIM_DESKTOP_ITEM_URL	gaim-compat.h	819;"	d
GAIM_DESKTOP_ITEM_VERSION	gaim-compat.h	792;"	d
GAIM_DISCONNECTED	gaim-compat.h	502;"	d
GAIM_ICON_SCALE_DISPLAY	gaim-compat.h	1487;"	d
GAIM_ICON_SCALE_SEND	gaim-compat.h	1488;"	d
GAIM_INIT_PLUGIN	gaim-compat.h	1217;"	d
GAIM_INPUT_READ	gaim-compat.h	852;"	d
GAIM_INPUT_WRITE	gaim-compat.h	853;"	d
GAIM_IS_PROTOCOL_PLUGIN	gaim-compat.h	1495;"	d
GAIM_LOG_CHAT	gaim-compat.h	980;"	d
GAIM_LOG_IM	gaim-compat.h	979;"	d
GAIM_LOG_READ_NO_NEWLINE	gaim-compat.h	985;"	d
GAIM_LOG_SYSTEM	gaim-compat.h	981;"	d
GAIM_MAJOR_VERSION	gaim-compat.h	2270;"	d
GAIM_MESSAGE_ACTIVE_ONLY	gaim-compat.h	587;"	d
GAIM_MESSAGE_AUTO_RESP	gaim-compat.h	586;"	d
GAIM_MESSAGE_DELAYED	gaim-compat.h	592;"	d
GAIM_MESSAGE_ERROR	gaim-compat.h	591;"	d
GAIM_MESSAGE_IMAGES	gaim-compat.h	594;"	d
GAIM_MESSAGE_NICK	gaim-compat.h	588;"	d
GAIM_MESSAGE_NO_LOG	gaim-compat.h	589;"	d
GAIM_MESSAGE_RAW	gaim-compat.h	593;"	d
GAIM_MESSAGE_RECV	gaim-compat.h	584;"	d
GAIM_MESSAGE_SEND	gaim-compat.h	583;"	d
GAIM_MESSAGE_SYSTEM	gaim-compat.h	585;"	d
GAIM_MESSAGE_WHISPER	gaim-compat.h	590;"	d
GAIM_MICRO_VERSION	gaim-compat.h	2272;"	d
GAIM_MINOR_VERSION	gaim-compat.h	2271;"	d
GAIM_NOTIFY_BUTTON_ADD	gaim-compat.h	1098;"	d
GAIM_NOTIFY_BUTTON_CONTINUE	gaim-compat.h	1097;"	d
GAIM_NOTIFY_BUTTON_IM	gaim-compat.h	1100;"	d
GAIM_NOTIFY_BUTTON_INFO	gaim-compat.h	1099;"	d
GAIM_NOTIFY_BUTTON_INVITE	gaim-compat.h	1102;"	d
GAIM_NOTIFY_BUTTON_JOIN	gaim-compat.h	1101;"	d
GAIM_NOTIFY_BUTTON_LABELED	gaim-compat.h	1096;"	d
GAIM_NOTIFY_EMAIL	gaim-compat.h	1081;"	d
GAIM_NOTIFY_EMAILS	gaim-compat.h	1082;"	d
GAIM_NOTIFY_FORMATTED	gaim-compat.h	1083;"	d
GAIM_NOTIFY_MESSAGE	gaim-compat.h	1080;"	d
GAIM_NOTIFY_MSG_ERROR	gaim-compat.h	1090;"	d
GAIM_NOTIFY_MSG_INFO	gaim-compat.h	1092;"	d
GAIM_NOTIFY_MSG_WARNING	gaim-compat.h	1091;"	d
GAIM_NOTIFY_SEARCHRESULTS	gaim-compat.h	1084;"	d
GAIM_NOTIFY_URI	gaim-compat.h	1086;"	d
GAIM_NOTIFY_USERINFO	gaim-compat.h	1085;"	d
GAIM_NOTIFY_USER_INFO_ENTRY_PAIR	gaim-compat.h	1108;"	d
GAIM_NOTIFY_USER_INFO_ENTRY_SECTION_BREAK	gaim-compat.h	1109;"	d
GAIM_NOTIFY_USER_INFO_ENTRY_SECTION_HEADER	gaim-compat.h	1110;"	d
GAIM_NOT_TYPING	gaim-compat.h	577;"	d
GAIM_NO_TZ_OFF	gaim-compat.h	2092;"	d
GAIM_NUM_SOUNDS	gaim-compat.h	1862;"	d
GAIM_PLUGIN_ACTIONS	gaim-compat.h	1215;"	d
GAIM_PLUGIN_FLAG_INVISIBLE	gaim-compat.h	1206;"	d
GAIM_PLUGIN_HAS_ACTIONS	gaim-compat.h	1214;"	d
GAIM_PLUGIN_HAS_PREF_FRAME	gaim-compat.h	1211;"	d
GAIM_PLUGIN_LOADER	gaim-compat.h	1197;"	d
GAIM_PLUGIN_LOADER_INFO	gaim-compat.h	1210;"	d
GAIM_PLUGIN_MAGIC	gaim-compat.h	1208;"	d
GAIM_PLUGIN_PREF_CHOICE	gaim-compat.h	1285;"	d
GAIM_PLUGIN_PREF_INFO	gaim-compat.h	1286;"	d
GAIM_PLUGIN_PREF_NONE	gaim-compat.h	1284;"	d
GAIM_PLUGIN_PREF_STRING_FORMAT	gaim-compat.h	1287;"	d
GAIM_PLUGIN_PROTOCOL	gaim-compat.h	1198;"	d
GAIM_PLUGIN_PROTOCOL_INFO	gaim-compat.h	1497;"	d
GAIM_PLUGIN_STANDARD	gaim-compat.h	1196;"	d
GAIM_PLUGIN_UI_INFO	gaim-compat.h	1212;"	d
GAIM_PLUGIN_UNKNOWN	gaim-compat.h	1195;"	d
GAIM_POUNCE_AWAY	gaim-compat.h	1325;"	d
GAIM_POUNCE_AWAY_RETURN	gaim-compat.h	1326;"	d
GAIM_POUNCE_IDLE	gaim-compat.h	1327;"	d
GAIM_POUNCE_IDLE_RETURN	gaim-compat.h	1328;"	d
GAIM_POUNCE_MESSAGE_RECEIVED	gaim-compat.h	1332;"	d
GAIM_POUNCE_NONE	gaim-compat.h	1322;"	d
GAIM_POUNCE_OPTION_AWAY	gaim-compat.h	1336;"	d
GAIM_POUNCE_OPTION_NONE	gaim-compat.h	1335;"	d
GAIM_POUNCE_SIGNOFF	gaim-compat.h	1324;"	d
GAIM_POUNCE_SIGNON	gaim-compat.h	1323;"	d
GAIM_POUNCE_TYPED	gaim-compat.h	1330;"	d
GAIM_POUNCE_TYPING	gaim-compat.h	1329;"	d
GAIM_POUNCE_TYPING_STOPPED	gaim-compat.h	1331;"	d
GAIM_PREF_BOOLEAN	gaim-compat.h	1376;"	d
GAIM_PREF_INT	gaim-compat.h	1377;"	d
GAIM_PREF_NONE	gaim-compat.h	1375;"	d
GAIM_PREF_PATH	gaim-compat.h	1380;"	d
GAIM_PREF_PATH_LIST	gaim-compat.h	1381;"	d
GAIM_PREF_STRING	gaim-compat.h	1378;"	d
GAIM_PREF_STRING_LIST	gaim-compat.h	1379;"	d
GAIM_PRESENCE_CONTEXT_ACCOUNT	gaim-compat.h	1912;"	d
GAIM_PRESENCE_CONTEXT_BUDDY	gaim-compat.h	1914;"	d
GAIM_PRESENCE_CONTEXT_CONV	gaim-compat.h	1913;"	d
GAIM_PRESENCE_CONTEXT_UNSET	gaim-compat.h	1911;"	d
GAIM_PRIORITY_DEFAULT	gaim-compat.h	1202;"	d
GAIM_PRIORITY_HIGHEST	gaim-compat.h	1203;"	d
GAIM_PRIORITY_LOWEST	gaim-compat.h	1204;"	d
GAIM_PRIVACY_ALLOW_ALL	gaim-compat.h	1424;"	d
GAIM_PRIVACY_ALLOW_BUDDYLIST	gaim-compat.h	1428;"	d
GAIM_PRIVACY_ALLOW_USERS	gaim-compat.h	1426;"	d
GAIM_PRIVACY_DENY_ALL	gaim-compat.h	1425;"	d
GAIM_PRIVACY_DENY_USERS	gaim-compat.h	1427;"	d
GAIM_PROXY_HTTP	gaim-compat.h	1448;"	d
GAIM_PROXY_NONE	gaim-compat.h	1447;"	d
GAIM_PROXY_SOCKS4	gaim-compat.h	1449;"	d
GAIM_PROXY_SOCKS5	gaim-compat.h	1450;"	d
GAIM_PROXY_USE_ENVVAR	gaim-compat.h	1451;"	d
GAIM_PROXY_USE_GLOBAL	gaim-compat.h	1446;"	d
GAIM_REQUEST_ACTION	gaim-compat.h	1516;"	d
GAIM_REQUEST_CHOICE	gaim-compat.h	1515;"	d
GAIM_REQUEST_FIELDS	gaim-compat.h	1517;"	d
GAIM_REQUEST_FIELD_ACCOUNT	gaim-compat.h	1530;"	d
GAIM_REQUEST_FIELD_BOOLEAN	gaim-compat.h	1525;"	d
GAIM_REQUEST_FIELD_CHOICE	gaim-compat.h	1526;"	d
GAIM_REQUEST_FIELD_IMAGE	gaim-compat.h	1529;"	d
GAIM_REQUEST_FIELD_INTEGER	gaim-compat.h	1524;"	d
GAIM_REQUEST_FIELD_LABEL	gaim-compat.h	1528;"	d
GAIM_REQUEST_FIELD_LIST	gaim-compat.h	1527;"	d
GAIM_REQUEST_FIELD_NONE	gaim-compat.h	1522;"	d
GAIM_REQUEST_FIELD_STRING	gaim-compat.h	1523;"	d
GAIM_REQUEST_FILE	gaim-compat.h	1518;"	d
GAIM_REQUEST_FOLDER	gaim-compat.h	1519;"	d
GAIM_REQUEST_INPUT	gaim-compat.h	1514;"	d
GAIM_ROOMLIST_FIELD_BOOL	gaim-compat.h	1681;"	d
GAIM_ROOMLIST_FIELD_INT	gaim-compat.h	1682;"	d
GAIM_ROOMLIST_FIELD_STRING	gaim-compat.h	1683;"	d
GAIM_ROOMLIST_ROOMTYPE_CATEGORY	gaim-compat.h	1677;"	d
GAIM_ROOMLIST_ROOMTYPE_ROOM	gaim-compat.h	1678;"	d
GAIM_SIGNAL_PRIORITY_DEFAULT	gaim-compat.h	1756;"	d
GAIM_SIGNAL_PRIORITY_HIGHEST	gaim-compat.h	1757;"	d
GAIM_SIGNAL_PRIORITY_LOWEST	gaim-compat.h	1758;"	d
GAIM_SOUND_BUDDY_ARRIVE	gaim-compat.h	1851;"	d
GAIM_SOUND_BUDDY_LEAVE	gaim-compat.h	1852;"	d
GAIM_SOUND_CHAT_JOIN	gaim-compat.h	1856;"	d
GAIM_SOUND_CHAT_LEAVE	gaim-compat.h	1857;"	d
GAIM_SOUND_CHAT_NICK	gaim-compat.h	1861;"	d
GAIM_SOUND_CHAT_SAY	gaim-compat.h	1859;"	d
GAIM_SOUND_CHAT_YOU_SAY	gaim-compat.h	1858;"	d
GAIM_SOUND_FIRST_RECEIVE	gaim-compat.h	1854;"	d
GAIM_SOUND_POUNCE_DEFAULT	gaim-compat.h	1860;"	d
GAIM_SOUND_RECEIVE	gaim-compat.h	1853;"	d
GAIM_SOUND_SEND	gaim-compat.h	1855;"	d
GAIM_SSL_CONNECT_FAILED	gaim-compat.h	1881;"	d
GAIM_SSL_DEFAULT_PORT	gaim-compat.h	1878;"	d
GAIM_SSL_HANDSHAKE_FAILED	gaim-compat.h	1880;"	d
GAIM_STATUS_AVAILABLE	gaim-compat.h	1919;"	d
GAIM_STATUS_AWAY	gaim-compat.h	1922;"	d
GAIM_STATUS_EXTENDED_AWAY	gaim-compat.h	1923;"	d
GAIM_STATUS_INVISIBLE	gaim-compat.h	1921;"	d
GAIM_STATUS_MOBILE	gaim-compat.h	1924;"	d
GAIM_STATUS_NUM_PRIMITIVES	gaim-compat.h	1925;"	d
GAIM_STATUS_OFFLINE	gaim-compat.h	1918;"	d
GAIM_STATUS_UNAVAILABLE	gaim-compat.h	1920;"	d
GAIM_STATUS_UNSET	gaim-compat.h	1917;"	d
GAIM_STRING_FORMAT_TYPE_HTML	gaim-compat.h	1280;"	d
GAIM_STRING_FORMAT_TYPE_MULTILINE	gaim-compat.h	1279;"	d
GAIM_STRING_FORMAT_TYPE_NONE	gaim-compat.h	1278;"	d
GAIM_STUN_NAT_TYPE_FULL_CONE	gaim-compat.h	2039;"	d
GAIM_STUN_NAT_TYPE_PORT_RESTRICTED_CONE	gaim-compat.h	2041;"	d
GAIM_STUN_NAT_TYPE_PUBLIC_IP	gaim-compat.h	2037;"	d
GAIM_STUN_NAT_TYPE_RESTRICTED_CONE	gaim-compat.h	2040;"	d
GAIM_STUN_NAT_TYPE_SYMMETRIC	gaim-compat.h	2042;"	d
GAIM_STUN_NAT_TYPE_UNKNOWN_NAT	gaim-compat.h	2038;"	d
GAIM_STUN_STATUS_DISCOVERED	gaim-compat.h	2034;"	d
GAIM_STUN_STATUS_DISCOVERING	gaim-compat.h	2033;"	d
GAIM_STUN_STATUS_UNDISCOVERED	gaim-compat.h	2031;"	d
GAIM_STUN_STATUS_UNKNOWN	gaim-compat.h	2032;"	d
GAIM_SUBTYPE_ACCOUNT	gaim-compat.h	2206;"	d
GAIM_SUBTYPE_BLIST	gaim-compat.h	2207;"	d
GAIM_SUBTYPE_BLIST_BUDDY	gaim-compat.h	2208;"	d
GAIM_SUBTYPE_BLIST_CHAT	gaim-compat.h	2210;"	d
GAIM_SUBTYPE_BLIST_GROUP	gaim-compat.h	2209;"	d
GAIM_SUBTYPE_BLIST_NODE	gaim-compat.h	2215;"	d
GAIM_SUBTYPE_BUDDY_ICON	gaim-compat.h	2211;"	d
GAIM_SUBTYPE_CIPHER	gaim-compat.h	2216;"	d
GAIM_SUBTYPE_CONNECTION	gaim-compat.h	2212;"	d
GAIM_SUBTYPE_CONVERSATION	gaim-compat.h	2213;"	d
GAIM_SUBTYPE_LOG	gaim-compat.h	2218;"	d
GAIM_SUBTYPE_PLUGIN	gaim-compat.h	2214;"	d
GAIM_SUBTYPE_SAVEDSTATUS	gaim-compat.h	2220;"	d
GAIM_SUBTYPE_STATUS	gaim-compat.h	2217;"	d
GAIM_SUBTYPE_UNKNOWN	gaim-compat.h	2205;"	d
GAIM_SUBTYPE_USERINFO	gaim-compat.h	2222;"	d
GAIM_SUBTYPE_XFER	gaim-compat.h	2219;"	d
GAIM_SUBTYPE_XMLNODE	gaim-compat.h	2221;"	d
GAIM_TYPED	gaim-compat.h	579;"	d
GAIM_TYPE_BOOLEAN	gaim-compat.h	2188;"	d
GAIM_TYPE_BOXED	gaim-compat.h	2201;"	d
GAIM_TYPE_CHAR	gaim-compat.h	2186;"	d
GAIM_TYPE_DESKTOP_ITEM	gaim-compat.h	786;"	d
GAIM_TYPE_ENUM	gaim-compat.h	2200;"	d
GAIM_TYPE_INT	gaim-compat.h	2191;"	d
GAIM_TYPE_INT64	gaim-compat.h	2195;"	d
GAIM_TYPE_LONG	gaim-compat.h	2193;"	d
GAIM_TYPE_OBJECT	gaim-compat.h	2198;"	d
GAIM_TYPE_POINTER	gaim-compat.h	2199;"	d
GAIM_TYPE_SHORT	gaim-compat.h	2189;"	d
GAIM_TYPE_STRING	gaim-compat.h	2197;"	d
GAIM_TYPE_SUBTYPE	gaim-compat.h	2185;"	d
GAIM_TYPE_UCHAR	gaim-compat.h	2187;"	d
GAIM_TYPE_UINT	gaim-compat.h	2192;"	d
GAIM_TYPE_UINT64	gaim-compat.h	2196;"	d
GAIM_TYPE_ULONG	gaim-compat.h	2194;"	d
GAIM_TYPE_UNKNOWN	gaim-compat.h	2184;"	d
GAIM_TYPE_USHORT	gaim-compat.h	2190;"	d
GAIM_TYPING	gaim-compat.h	578;"	d
GAIM_VERSION_CHECK	gaim-compat.h	2274;"	d
GAIM_XFER_RECEIVE	gaim-compat.h	873;"	d
GAIM_XFER_SEND	gaim-compat.h	872;"	d
GAIM_XFER_STATUS_ACCEPTED	gaim-compat.h	879;"	d
GAIM_XFER_STATUS_CANCEL_LOCAL	gaim-compat.h	882;"	d
GAIM_XFER_STATUS_CANCEL_REMOTE	gaim-compat.h	883;"	d
GAIM_XFER_STATUS_DONE	gaim-compat.h	881;"	d
GAIM_XFER_STATUS_NOT_STARTED	gaim-compat.h	878;"	d
GAIM_XFER_STATUS_STARTED	gaim-compat.h	880;"	d
GAIM_XFER_STATUS_UNKNOWN	gaim-compat.h	877;"	d
GAIM_XFER_UNKNOWN	gaim-compat.h	871;"	d
GNOME2_CMDS	proxy.c	235;"	d	file:
GNOME3_CMDS	proxy.c	236;"	d	file:
GNOME_PROXY_HTTP_HOST	proxy.c	231;"	d	file:
GNOME_PROXY_HTTP_PASS	proxy.c	234;"	d	file:
GNOME_PROXY_HTTP_PORT	proxy.c	232;"	d	file:
GNOME_PROXY_HTTP_USER	proxy.c	233;"	d	file:
GNOME_PROXY_MODE	proxy.c	227;"	d	file:
GNOME_PROXY_SOCKS_HOST	proxy.c	229;"	d	file:
GNOME_PROXY_SOCKS_PORT	proxy.c	230;"	d	file:
GNOME_PROXY_USE_SAME_PROXY	proxy.c	228;"	d	file:
G_GNUC_NULL_TERMINATED	purple.h	40;"	d
G_GNUC_NULL_TERMINATED	purple.h	42;"	d
G_MAXSSIZE	internal.h	130;"	d
G_MAXSSIZE	internal.h	132;"	d
GaimAccount	gaim-compat.h	33;"	d
GaimAccountOption	gaim-compat.h	147;"	d
GaimAccountRequestAuthorizationCb	gaim-compat.h	36;"	d
GaimAccountUiOps	gaim-compat.h	32;"	d
GaimAccountUserSplit	gaim-compat.h	148;"	d
GaimBlistNode	gaim-compat.h	191;"	d
GaimBlistNodeFlags	gaim-compat.h	213;"	d
GaimBlistNodeType	gaim-compat.h	203;"	d
GaimBlistUiOps	gaim-compat.h	190;"	d
GaimBuddy	gaim-compat.h	196;"	d
GaimBuddyIcon	gaim-compat.h	338;"	d
GaimBuddyIconSpec	gaim-compat.h	1491;"	d
GaimBuddyList	gaim-compat.h	189;"	d
GaimCallback	gaim-compat.h	1753;"	d
GaimChat	gaim-compat.h	193;"	d
GaimCipher	gaim-compat.h	373;"	d
GaimCipherContext	gaim-compat.h	375;"	d
GaimCipherOps	gaim-compat.h	374;"	d
GaimCircBuffer	gaim-compat.h	434;"	d
GaimCmdFlag	gaim-compat.h	445;"	d
GaimCmdFunc	gaim-compat.h	477;"	d
GaimCmdId	gaim-compat.h	479;"	d
GaimCmdPriority	gaim-compat.h	444;"	d
GaimCmdRet	gaim-compat.h	447;"	d
GaimCmdStatus	gaim-compat.h	446;"	d
GaimConnection	gaim-compat.h	489;"	d
GaimConnectionFlags	gaim-compat.h	500;"	d
GaimConnectionState	gaim-compat.h	506;"	d
GaimConnectionUiOps	gaim-compat.h	508;"	d
GaimContact	gaim-compat.h	195;"	d
GaimConvChat	gaim-compat.h	549;"	d
GaimConvChatBuddy	gaim-compat.h	550;"	d
GaimConvChatBuddyFlags	gaim-compat.h	605;"	d
GaimConvIm	gaim-compat.h	548;"	d
GaimConvUpdateType	gaim-compat.h	575;"	d
GaimConversation	gaim-compat.h	547;"	d
GaimConversationType	gaim-compat.h	558;"	d
GaimConversationUiOps	gaim-compat.h	546;"	d
GaimCore	gaim-compat.h	727;"	d
GaimCoreUiOps	gaim-compat.h	729;"	d
GaimDebugLevel	gaim-compat.h	750;"	d
GaimDebugUiOps	gaim-compat.h	752;"	d
GaimDesktopItem	gaim-compat.h	784;"	d
GaimDesktopItemType	gaim-compat.h	782;"	d
GaimDnsQueryConnectFunction	gaim-compat.h	831;"	d
GaimDnsQueryData	gaim-compat.h	830;"	d
GaimEventLoopUiOps	gaim-compat.h	857;"	d
GaimFilterAccountFunc	gaim-compat.h	35;"	d
GaimGroup	gaim-compat.h	194;"	d
GaimIconScaleRules	gaim-compat.h	1489;"	d
GaimIdleUiOps	gaim-compat.h	949;"	d
GaimInfoFieldFormatCallback	gaim-compat.h	2070;"	d
GaimInputCondition	gaim-compat.h	855;"	d
GaimInputFunction	gaim-compat.h	856;"	d
GaimKeyValuePair	gaim-compat.h	2072;"	d
GaimLog	gaim-compat.h	974;"	d
GaimLogCommonLoggerData	gaim-compat.h	976;"	d
GaimLogLogger	gaim-compat.h	975;"	d
GaimLogReadFlags	gaim-compat.h	987;"	d
GaimLogSet	gaim-compat.h	977;"	d
GaimLogSetCallback	gaim-compat.h	989;"	d
GaimLogType	gaim-compat.h	983;"	d
GaimMenuAction	gaim-compat.h	2068;"	d
GaimMessageFlags	gaim-compat.h	596;"	d
GaimMimeDocument	gaim-compat.h	1026;"	d
GaimMimePart	gaim-compat.h	1027;"	d
GaimNetworkListenCallback	gaim-compat.h	1054;"	d
GaimNetworkListenData	gaim-compat.h	1052;"	d
GaimNotifyCloseCallback	gaim-compat.h	1078;"	d
GaimNotifyMsgType	gaim-compat.h	1094;"	d
GaimNotifySearchButton	gaim-compat.h	1116;"	d
GaimNotifySearchButtonType	gaim-compat.h	1104;"	d
GaimNotifySearchColumn	gaim-compat.h	1114;"	d
GaimNotifySearchResults	gaim-compat.h	1106;"	d
GaimNotifySearchResultsCallback	gaim-compat.h	1115;"	d
GaimNotifyType	gaim-compat.h	1088;"	d
GaimNotifyUiOps	gaim-compat.h	1118;"	d
GaimNotifyUserInfo	gaim-compat.h	1076;"	d
GaimNotifyUserInfoEntry	gaim-compat.h	1075;"	d
GaimNotifyUserInfoEntryType	gaim-compat.h	1112;"	d
GaimPlugin	gaim-compat.h	1188;"	d
GaimPluginAction	gaim-compat.h	1192;"	d
GaimPluginInfo	gaim-compat.h	1189;"	d
GaimPluginLoaderInfo	gaim-compat.h	1191;"	d
GaimPluginPref	gaim-compat.h	1276;"	d
GaimPluginPrefFrame	gaim-compat.h	1275;"	d
GaimPluginPrefType	gaim-compat.h	1289;"	d
GaimPluginPriority	gaim-compat.h	1193;"	d
GaimPluginProtocolInfo	gaim-compat.h	1485;"	d
GaimPluginType	gaim-compat.h	1200;"	d
GaimPluginUiInfo	gaim-compat.h	1190;"	d
GaimPounce	gaim-compat.h	1320;"	d
GaimPounceCb	gaim-compat.h	1339;"	d
GaimPounceEvent	gaim-compat.h	1333;"	d
GaimPounceOption	gaim-compat.h	1337;"	d
GaimPrefCallback	gaim-compat.h	1384;"	d
GaimPrefType	gaim-compat.h	1382;"	d
GaimPresence	gaim-compat.h	1908;"	d
GaimPresenceContext	gaim-compat.h	1915;"	d
GaimPrivacyType	gaim-compat.h	1429;"	d
GaimPrivacyUiOps	gaim-compat.h	1431;"	d
GaimProtocolOptions	gaim-compat.h	1493;"	d
GaimProxyConnectData	gaim-compat.h	1456;"	d
GaimProxyConnectFunction	gaim-compat.h	1457;"	d
GaimProxyInfo	gaim-compat.h	1454;"	d
GaimProxyType	gaim-compat.h	1452;"	d
GaimRequestActionCb	gaim-compat.h	1542;"	d
GaimRequestChoiceCb	gaim-compat.h	1543;"	d
GaimRequestField	gaim-compat.h	1537;"	d
GaimRequestFieldGroup	gaim-compat.h	1535;"	d
GaimRequestFieldType	gaim-compat.h	1531;"	d
GaimRequestFields	gaim-compat.h	1533;"	d
GaimRequestFieldsCb	gaim-compat.h	1544;"	d
GaimRequestFileCb	gaim-compat.h	1545;"	d
GaimRequestInputCb	gaim-compat.h	1541;"	d
GaimRequestType	gaim-compat.h	1520;"	d
GaimRequestUiOps	gaim-compat.h	1539;"	d
GaimRoomlist	gaim-compat.h	1672;"	d
GaimRoomlistField	gaim-compat.h	1674;"	d
GaimRoomlistFieldType	gaim-compat.h	1684;"	d
GaimRoomlistRoom	gaim-compat.h	1673;"	d
GaimRoomlistRoomType	gaim-compat.h	1679;"	d
GaimRoomlistUiOps	gaim-compat.h	1675;"	d
GaimSavedStatus	gaim-compat.h	1709;"	d
GaimSavedStatusSub	gaim-compat.h	1710;"	d
GaimSignalMarshalFunc	gaim-compat.h	1754;"	d
GaimSoundEventID	gaim-compat.h	1863;"	d
GaimSoundUiOps	gaim-compat.h	1865;"	d
GaimSrvCallback	gaim-compat.h	845;"	d
GaimSrvQueryData	gaim-compat.h	844;"	d
GaimSrvResponse	gaim-compat.h	843;"	d
GaimSslConnection	gaim-compat.h	1884;"	d
GaimSslErrorFunction	gaim-compat.h	1887;"	d
GaimSslErrorType	gaim-compat.h	1882;"	d
GaimSslInputFunction	gaim-compat.h	1886;"	d
GaimSslOps	gaim-compat.h	1889;"	d
GaimStatus	gaim-compat.h	1909;"	d
GaimStatusAttr	gaim-compat.h	1907;"	d
GaimStatusPrimitive	gaim-compat.h	1926;"	d
GaimStatusType	gaim-compat.h	1906;"	d
GaimStoredImage	gaim-compat.h	960;"	d
GaimStringFormatType	gaim-compat.h	1282;"	d
GaimStringref	gaim-compat.h	2016;"	d
GaimStunNatDiscovery	gaim-compat.h	2029;"	d
GaimStunNatType	gaim-compat.h	2043;"	d
GaimStunStatus	gaim-compat.h	2035;"	d
GaimSubType	gaim-compat.h	2223;"	d
GaimType	gaim-compat.h	2202;"	d
GaimTypingState	gaim-compat.h	581;"	d
GaimUPnPCallback	gaim-compat.h	2056;"	d
GaimUtilFetchUrlCallback	gaim-compat.h	2155;"	d
GaimUtilFetchUrlData	gaim-compat.h	2067;"	d
GaimValue	gaim-compat.h	2225;"	d
GaimWhiteboard	gaim-compat.h	2279;"	d
GaimWhiteboardPrplOps	gaim-compat.h	2278;"	d
GaimWhiteboardUiOps	gaim-compat.h	2280;"	d
GaimXfer	gaim-compat.h	869;"	d
GaimXferStatusType	gaim-compat.h	885;"	d
GaimXferType	gaim-compat.h	875;"	d
GaimXferUiOps	gaim-compat.h	887;"	d
HAVE_ALLOCA	config.h	34;"	d
HAVE_ALLOCA_H	config.h	38;"	d
HAVE_ARPA_NAMESER_COMPAT_H	config.h	44;"	d
HAVE_ATEXIT	config.h	47;"	d
HAVE_BIND_TEXTDOMAIN_CODESET	config.h	50;"	d
HAVE_CONNECT	config.h	53;"	d
HAVE_DAYLIGHT	config.h	59;"	d
HAVE_DCGETTEXT	config.h	65;"	d
HAVE_DLFCN_H	config.h	72;"	d
HAVE_FCNTL_H	config.h	90;"	d
HAVE_FILENO	config.h	93;"	d
HAVE_GETADDRINFO	config.h	96;"	d
HAVE_GETHOSTID	config.h	99;"	d
HAVE_GETIFADDRS	config.h	102;"	d
HAVE_GETOPT_LONG	config.h	105;"	d
HAVE_GETTEXT	config.h	108;"	d
HAVE_INET_NTOP	config.h	123;"	d
HAVE_INTTYPES_H	config.h	126;"	d
HAVE_IPV6_V6ONLY	config.h	132;"	d
HAVE_LC_MESSAGES	config.h	150;"	d
HAVE_LIBNSL	config.h	159;"	d
HAVE_LIBRESOLV	config.h	165;"	d
HAVE_LOCALE_H	config.h	174;"	d
HAVE_LRAND48	config.h	177;"	d
HAVE_MALLOC_H	config.h	180;"	d
HAVE_MEMCPY	config.h	183;"	d
HAVE_MEMMOVE	config.h	186;"	d
HAVE_MEMORY_H	config.h	189;"	d
HAVE_PATHS_H	config.h	216;"	d
HAVE_RANDOM	config.h	234;"	d
HAVE_REGEX_H	config.h	237;"	d
HAVE_SETLOCALE	config.h	240;"	d
HAVE_SGTTY_H	config.h	243;"	d
HAVE_SIGNAL_H	config.h	246;"	d
HAVE_SNPRINTF	config.h	255;"	d
HAVE_STDARG_H	config.h	264;"	d
HAVE_STDINT_H	config.h	267;"	d
HAVE_STDLIB_H	config.h	270;"	d
HAVE_STRCHR	config.h	273;"	d
HAVE_STRDUP	config.h	276;"	d
HAVE_STRERROR	config.h	279;"	d
HAVE_STRFTIME	config.h	282;"	d
HAVE_STRFTIME_Z_FORMAT	config.h	285;"	d
HAVE_STRINGS_H	config.h	288;"	d
HAVE_STRING_H	config.h	291;"	d
HAVE_STRSTR	config.h	294;"	d
HAVE_STRUCT_TM_TM_ZONE	config.h	300;"	d
HAVE_SYS_CDEFS_H	config.h	303;"	d
HAVE_SYS_FILE_H	config.h	306;"	d
HAVE_SYS_IOCTL_H	config.h	312;"	d
HAVE_SYS_PARAM_H	config.h	318;"	d
HAVE_SYS_SELECT_H	config.h	321;"	d
HAVE_SYS_SOCKET_H	config.h	324;"	d
HAVE_SYS_STAT_H	config.h	327;"	d
HAVE_SYS_SYSCTL_H	config.h	330;"	d
HAVE_SYS_TIME_H	config.h	333;"	d
HAVE_SYS_TYPES_H	config.h	336;"	d
HAVE_SYS_UIO_H	config.h	339;"	d
HAVE_SYS_UTSNAME_H	config.h	342;"	d
HAVE_SYS_WAIT_H	config.h	345;"	d
HAVE_TERMIOS_H	config.h	351;"	d
HAVE_TIMEGM	config.h	354;"	d
HAVE_TIMEZONE	config.h	357;"	d
HAVE_TM_GMTOFF	config.h	363;"	d
HAVE_TM_ZONE	config.h	367;"	d
HAVE_UNISTD_H	config.h	374;"	d
HAVE_VPRINTF	config.h	377;"	d
HOST_NAME_MAX	internal.h	122;"	d
HTTPMU_HOST_ADDRESS	upnp.c	53;"	d	file:
HTTPMU_HOST_PORT	upnp.c	54;"	d	file:
HTTP_GOODSTRING	proxy.c	908;"	d	file:
HTTP_GOODSTRING2	proxy.c	909;"	d	file:
HTTP_HEADER_ACTION	upnp.c	72;"	d	file:
HTTP_OK	upnp.c	41;"	d	file:
HX_SIZE_OF_IFREQ	network.c	65;"	d	file:
HX_SIZE_OF_IFREQ	network.c	67;"	d	file:
INET6_ADDRSTRLEN	proxy.c	2150;"	d	file:
INIT_MEDIA	mediamanager.c	/^	INIT_MEDIA,$/;"	e	enum:__anon68	file:
IS_ENTITY	util.c	953;"	d	file:
I_WRAP_SONAME_FNNAME_ZU	valgrind.h	584;"	d
I_WRAP_SONAME_FNNAME_ZZ	valgrind.h	587;"	d
IgnoreToEOL	desktopitem.c	/^	IgnoreToEOL,$/;"	e	enum:__anon49	file:
IgnoreToEOLFirst	desktopitem.c	/^	IgnoreToEOLFirst,$/;"	e	enum:__anon49	file:
KEEPALIVE_INTERVAL	connection.c	43;"	d	file:
KeyDef	desktopitem.c	/^	KeyDef,$/;"	e	enum:__anon49	file:
KeyDefOnKey	desktopitem.c	/^	KeyDefOnKey,$/;"	e	enum:__anon49	file:
KeyValue	desktopitem.c	/^	KeyValue$/;"	e	enum:__anon49	file:
LAST_SIGNAL	media.c	/^	LAST_SIGNAL$/;"	e	enum:__anon76	file:
LAST_SIGNAL	media/backend-iface.c	/^	LAST_SIGNAL$/;"	e	enum:__anon125	file:
LAST_SIGNAL	mediamanager.c	/^	LAST_SIGNAL$/;"	e	enum:__anon68	file:
LEVEL	media.c	/^	LEVEL,$/;"	e	enum:__anon76	file:
LPFNWINHTTPGETIEPROXYCONFIG	proxy.c	/^typedef BOOL (CALLBACK* LPFNWINHTTPGETIEPROXYCONFIG)(\/*IN OUT*\/ WINHTTP_CURRENT_USER_IE_PROXY_CONFIG* pProxyConfig);$/;"	t	file:
LT_OBJDIR	config.h	393;"	d
MAX_DNS_CHILDREN	dnsquery.c	71;"	d	file:
MAX_TRANSIENTS	savedstatuses.c	43;"	d	file:
MAX_UPNP_DOWNLOAD	upnp.c	45;"	d	file:
MSGTYPE_BINDINGREQUEST	stun.c	51;"	d	file:
MSGTYPE_BINDINGRESPONSE	stun.c	52;"	d	file:
MSG_LEN	internal.h	71;"	d
MyDnsQuery_UTF8	dnssrv.c	/^static DNS_STATUS (WINAPI *MyDnsQuery_UTF8) ($/;"	v	file:
MyDnsRecordListFree	dnssrv.c	/^static void (WINAPI *MyDnsRecordListFree) (PDNS_RECORD pRecordList,$/;"	v	file:
MyWSANSPIoctl	network.c	/^static int (WSAAPI *MyWSANSPIoctl) ($/;"	v	file:
NEWLINE_S	xmlnode.c	44;"	d	file:
NEWLINE_S	xmlnode.c	46;"	d	file:
NEW_CANDIDATE	media.c	/^	NEW_CANDIDATE,$/;"	e	enum:__anon76	file:
NEW_CANDIDATE	media/backend-iface.c	/^	NEW_CANDIDATE,$/;"	e	enum:__anon125	file:
NM_CHECK_VERSION	network.c	75;"	d	file:
NO_BUDDY_ICONS	prpl.h	65;"	d
NO_WIDECHAR	config.h	399;"	d
NS_NLA	network.c	616;"	d	file:
NTLM_NEGOTIATE_NTLM2_KEY	ntlm.c	35;"	d	file:
NULLIFY	dbus-bindings.h	45;"	d
NUM_UDP_ATTEMPTS	upnp.c	50;"	d	file:
NVALGRIND	valgrind.h	116;"	d
N_	internal.h	53;"	d
N_	internal.h	55;"	d
N_	internal.h	59;"	d
OPT_PROTO_CHAT_TOPIC	prpl.h	/^	OPT_PROTO_CHAT_TOPIC = 0x00000008,$/;"	e	enum:__anon96
OPT_PROTO_IM_IMAGE	prpl.h	/^	OPT_PROTO_IM_IMAGE = 0x00000040,$/;"	e	enum:__anon96
OPT_PROTO_INVITE_MESSAGE	prpl.h	/^	OPT_PROTO_INVITE_MESSAGE = 0x00000800$/;"	e	enum:__anon96
OPT_PROTO_MAIL_CHECK	prpl.h	/^	OPT_PROTO_MAIL_CHECK = 0x00000020,$/;"	e	enum:__anon96
OPT_PROTO_NO_PASSWORD	prpl.h	/^	OPT_PROTO_NO_PASSWORD = 0x00000010,$/;"	e	enum:__anon96
OPT_PROTO_PASSWORD_OPTIONAL	prpl.h	/^	OPT_PROTO_PASSWORD_OPTIONAL = 0x00000080,$/;"	e	enum:__anon96
OPT_PROTO_REGISTER_NOSCREENNAME	prpl.h	/^	OPT_PROTO_REGISTER_NOSCREENNAME = 0x00000200,$/;"	e	enum:__anon96
OPT_PROTO_SLASH_COMMANDS_NATIVE	prpl.h	/^	OPT_PROTO_SLASH_COMMANDS_NATIVE = 0x00000400,$/;"	e	enum:__anon96
OPT_PROTO_UNIQUE_CHATNAME	prpl.h	/^	OPT_PROTO_UNIQUE_CHATNAME = 0x00000004,$/;"	e	enum:__anon96
OPT_PROTO_USE_POINTSIZE	prpl.h	/^	OPT_PROTO_USE_POINTSIZE = 0x00000100,$/;"	e	enum:__anon96
OUTGOING_FLAG	value.c	30;"	d	file:
OnSecHeader	desktopitem.c	/^	OnSecHeader,$/;"	e	enum:__anon49	file:
OrigFn	valgrind.h	/^   OrigFn;$/;"	t	typeref:struct:__anon105
OrigFn	valgrind.h	/^   OrigFn;$/;"	t	typeref:struct:__anon106
OrigFn	valgrind.h	/^   OrigFn;$/;"	t	typeref:struct:__anon107
OrigFn	valgrind.h	/^   OrigFn;$/;"	t	typeref:struct:__anon108
OrigFn	valgrind.h	/^   OrigFn;$/;"	t	typeref:struct:__anon109
OrigFn	valgrind.h	/^   OrigFn;$/;"	t	typeref:struct:__anon110
PACKAGE	config.h	405;"	d
PACKAGE_BUGREPORT	config.h	408;"	d
PACKAGE_NAME	config.h	411;"	d
PACKAGE_STRING	config.h	414;"	d
PACKAGE_TARNAME	config.h	417;"	d
PACKAGE_URL	config.h	420;"	d
PACKAGE_VERSION	config.h	423;"	d
PAGE_CTRL	util.c	3476;"	d	file:
PAGE_CTRL	util.c	3550;"	d	file:
PASSWD_CTRL	util.c	3478;"	d	file:
PASSWD_CTRL	util.c	3552;"	d	file:
PLAT_amd64_linux	valgrind.h	3918;"	d
PLAT_amd64_linux	valgrind.h	89;"	d
PLAT_amd64_linux	valgrind.h	98;"	d
PLAT_ppc32_aix5	valgrind.h	106;"	d
PLAT_ppc32_aix5	valgrind.h	3921;"	d
PLAT_ppc32_aix5	valgrind.h	92;"	d
PLAT_ppc32_linux	valgrind.h	100;"	d
PLAT_ppc32_linux	valgrind.h	3919;"	d
PLAT_ppc32_linux	valgrind.h	90;"	d
PLAT_ppc64_aix5	valgrind.h	104;"	d
PLAT_ppc64_aix5	valgrind.h	3922;"	d
PLAT_ppc64_aix5	valgrind.h	93;"	d
PLAT_ppc64_linux	valgrind.h	102;"	d
PLAT_ppc64_linux	valgrind.h	3920;"	d
PLAT_ppc64_linux	valgrind.h	91;"	d
PLAT_x86_linux	valgrind.h	3917;"	d
PLAT_x86_linux	valgrind.h	88;"	d
PLAT_x86_linux	valgrind.h	96;"	d
PMP_DEBUG	nat-pmp.c	57;"	d	file:
PMP_MAP_OPCODE_TCP	nat-pmp.c	112;"	d	file:
PMP_MAP_OPCODE_UDP	nat-pmp.c	111;"	d	file:
PMP_PORT	nat-pmp.c	115;"	d	file:
PMP_TIMEOUT	nat-pmp.c	116;"	d	file:
PMP_VERSION	nat-pmp.c	114;"	d	file:
PORT_CTRL	util.c	3475;"	d	file:
PORT_CTRL	util.c	3549;"	d	file:
PORT_MAPPING_DESCRIPTION	upnp.c	91;"	d	file:
PORT_MAPPING_LEASE_TIME	upnp.c	90;"	d	file:
PROP_0	media.c	/^	PROP_0,$/;"	e	enum:__anon77	file:
PROP_0	media/backend-fs2.c	/^	PROP_0,$/;"	e	enum:__anon124	file:
PROP_0	mediamanager.c	/^	PROP_0,$/;"	e	enum:__anon69	file:
PROP_0	smiley.c	/^	PROP_0,$/;"	e	enum:__anon83	file:
PROP_ACCOUNT	media.c	/^	PROP_ACCOUNT,$/;"	e	enum:__anon77	file:
PROP_AUTHOR	theme.c	/^	PROP_AUTHOR,$/;"	e	enum:__anon27	file:
PROP_BACKEND	media.c	/^	PROP_BACKEND,$/;"	e	enum:__anon77	file:
PROP_BASE_IP	media/candidate.c	/^	PROP_BASE_IP,$/;"	e	enum:__anon123	file:
PROP_BASE_PORT	media/candidate.c	/^	PROP_BASE_PORT,$/;"	e	enum:__anon123	file:
PROP_CANDIDATE_0	media/candidate.c	/^	PROP_CANDIDATE_0,$/;"	e	enum:__anon123	file:
PROP_CHANNELS	media/codec.c	/^	PROP_CHANNELS,$/;"	e	enum:__anon133	file:
PROP_CLOCK_RATE	media/codec.c	/^	PROP_CLOCK_RATE,$/;"	e	enum:__anon133	file:
PROP_CODEC_0	media/codec.c	/^	PROP_CODEC_0,$/;"	e	enum:__anon133	file:
PROP_COMPONENT_ID	media/candidate.c	/^	PROP_COMPONENT_ID,$/;"	e	enum:__anon123	file:
PROP_CONFERENCE_TYPE	media.c	/^	PROP_CONFERENCE_TYPE,$/;"	e	enum:__anon77	file:
PROP_CONFERENCE_TYPE	media/backend-fs2.c	/^	PROP_CONFERENCE_TYPE,$/;"	e	enum:__anon124	file:
PROP_CREATE_CB	mediamanager.c	/^	PROP_CREATE_CB,$/;"	e	enum:__anon69	file:
PROP_DESCRIPTION	theme.c	/^	PROP_DESCRIPTION,$/;"	e	enum:__anon27	file:
PROP_DIR	theme.c	/^	PROP_DIR,$/;"	e	enum:__anon27	file:
PROP_ENCODING_NAME	media/codec.c	/^	PROP_ENCODING_NAME,$/;"	e	enum:__anon133	file:
PROP_FOUNDATION	media/candidate.c	/^	PROP_FOUNDATION,$/;"	e	enum:__anon123	file:
PROP_ID	media/codec.c	/^	PROP_ID,$/;"	e	enum:__anon133	file:
PROP_ID	mediamanager.c	/^	PROP_ID,$/;"	e	enum:__anon69	file:
PROP_IMAGE	theme.c	/^	PROP_IMAGE$/;"	e	enum:__anon27	file:
PROP_IMGSTORE	smiley.c	/^	PROP_IMGSTORE$/;"	e	enum:__anon83	file:
PROP_IMGSTORE_S	smiley.c	295;"	d	file:
PROP_INITIATOR	media.c	/^	PROP_INITIATOR,$/;"	e	enum:__anon77	file:
PROP_IP	media/candidate.c	/^	PROP_IP,$/;"	e	enum:__anon123	file:
PROP_MANAGER	media.c	/^	PROP_MANAGER,$/;"	e	enum:__anon77	file:
PROP_MEDIA	media/backend-fs2.c	/^	PROP_MEDIA,$/;"	e	enum:__anon124	file:
PROP_MEDIA_TYPE	media/codec.c	/^	PROP_MEDIA_TYPE,$/;"	e	enum:__anon133	file:
PROP_NAME	mediamanager.c	/^	PROP_NAME,$/;"	e	enum:__anon69	file:
PROP_NAME	theme.c	/^	PROP_NAME,$/;"	e	enum:__anon27	file:
PROP_OPTIONAL_PARAMS	media/codec.c	/^	PROP_OPTIONAL_PARAMS,$/;"	e	enum:__anon133	file:
PROP_PASSWORD	media/candidate.c	/^	PROP_PASSWORD,$/;"	e	enum:__anon123	file:
PROP_PORT	media/candidate.c	/^	PROP_PORT,$/;"	e	enum:__anon123	file:
PROP_PRIORITY	media/candidate.c	/^	PROP_PRIORITY,$/;"	e	enum:__anon123	file:
PROP_PROTOCOL	media/candidate.c	/^	PROP_PROTOCOL,$/;"	e	enum:__anon123	file:
PROP_PRPL_DATA	media.c	/^	PROP_PRPL_DATA,$/;"	e	enum:__anon77	file:
PROP_SHORTCUT	smiley.c	/^	PROP_SHORTCUT,$/;"	e	enum:__anon83	file:
PROP_SHORTCUT_S	smiley.c	294;"	d	file:
PROP_TTL	media/candidate.c	/^	PROP_TTL,$/;"	e	enum:__anon123	file:
PROP_TYPE	media/candidate.c	/^	PROP_TYPE,$/;"	e	enum:__anon123	file:
PROP_TYPE	mediamanager.c	/^	PROP_TYPE,$/;"	e	enum:__anon69	file:
PROP_TYPE	theme-loader.c	/^	PROP_TYPE,$/;"	e	enum:__anon44	file:
PROP_TYPE	theme.c	/^	PROP_TYPE,$/;"	e	enum:__anon27	file:
PROP_USERNAME	media/candidate.c	/^	PROP_USERNAME,$/;"	e	enum:__anon123	file:
PROP_ZERO	theme-loader.c	/^	PROP_ZERO = 0,$/;"	e	enum:__anon44	file:
PROP_ZERO	theme.c	/^	PROP_ZERO = 0,$/;"	e	enum:__anon27	file:
PTFunc	theme-manager.h	/^typedef void (*PTFunc) (PurpleTheme *);$/;"	t
PURPLE_ACCOUNT_GET_PRIVATE	account.c	49;"	d	file:
PURPLE_ACCOUNT_REQUEST_AUTHORIZATION	account.h	/^	PURPLE_ACCOUNT_REQUEST_AUTHORIZATION = 0 \/* Account authorization request *\/$/;"	e	enum:__anon85
PURPLE_ACCOUNT_RESPONSE_ACCEPT	account.h	/^	PURPLE_ACCOUNT_RESPONSE_ACCEPT = 1$/;"	e	enum:__anon86
PURPLE_ACCOUNT_RESPONSE_DENY	account.h	/^	PURPLE_ACCOUNT_RESPONSE_DENY = -1,$/;"	e	enum:__anon86
PURPLE_ACCOUNT_RESPONSE_IGNORE	account.h	/^	PURPLE_ACCOUNT_RESPONSE_IGNORE = -2,$/;"	e	enum:__anon86
PURPLE_ACCOUNT_RESPONSE_PASS	account.h	/^	PURPLE_ACCOUNT_RESPONSE_PASS = 0,$/;"	e	enum:__anon86
PURPLE_BLIST_BUDDY_NODE	blist.h	/^	PURPLE_BLIST_BUDDY_NODE,$/;"	e	enum:__anon103
PURPLE_BLIST_CHAT_NODE	blist.h	/^	PURPLE_BLIST_CHAT_NODE,$/;"	e	enum:__anon103
PURPLE_BLIST_CONTACT_NODE	blist.h	/^	PURPLE_BLIST_CONTACT_NODE,$/;"	e	enum:__anon103
PURPLE_BLIST_GROUP_NODE	blist.h	/^	PURPLE_BLIST_GROUP_NODE,$/;"	e	enum:__anon103
PURPLE_BLIST_NODE	blist.h	81;"	d
PURPLE_BLIST_NODE_FLAG_NO_SAVE	blist.h	/^	PURPLE_BLIST_NODE_FLAG_NO_SAVE      = 1 << 0 \/**< node should not be saved with the buddy list *\/$/;"	e	enum:__anon104
PURPLE_BLIST_NODE_HAS_FLAG	blist.h	83;"	d
PURPLE_BLIST_NODE_HAS_FLAG	dbus-define-api.h	/^gboolean PURPLE_BLIST_NODE_HAS_FLAG(PurpleBlistNode *node, int flags);$/;"	p	signature:(PurpleBlistNode *node, int flags)
PURPLE_BLIST_NODE_IS_BUDDY	blist.h	64;"	d
PURPLE_BLIST_NODE_IS_BUDDY	dbus-define-api.h	/^gboolean PURPLE_BLIST_NODE_IS_BUDDY(PurpleBlistNode *node);$/;"	p	signature:(PurpleBlistNode *node)
PURPLE_BLIST_NODE_IS_CHAT	blist.h	63;"	d
PURPLE_BLIST_NODE_IS_CHAT	dbus-define-api.h	/^gboolean PURPLE_BLIST_NODE_IS_CHAT(PurpleBlistNode *node);$/;"	p	signature:(PurpleBlistNode *node)
PURPLE_BLIST_NODE_IS_CONTACT	blist.h	65;"	d
PURPLE_BLIST_NODE_IS_CONTACT	dbus-define-api.h	/^gboolean PURPLE_BLIST_NODE_IS_CONTACT(PurpleBlistNode *node);$/;"	p	signature:(PurpleBlistNode *node)
PURPLE_BLIST_NODE_IS_GROUP	blist.h	66;"	d
PURPLE_BLIST_NODE_IS_GROUP	dbus-define-api.h	/^gboolean PURPLE_BLIST_NODE_IS_GROUP(PurpleBlistNode *node);$/;"	p	signature:(PurpleBlistNode *node)
PURPLE_BLIST_NODE_NAME	blist.h	86;"	d
PURPLE_BLIST_NODE_SHOULD_SAVE	blist.h	84;"	d
PURPLE_BLIST_NODE_SHOULD_SAVE	dbus-define-api.h	/^gboolean PURPLE_BLIST_NODE_SHOULD_SAVE(PurpleBlistNode *node);$/;"	p	signature:(PurpleBlistNode *node)
PURPLE_BLIST_OTHER_NODE	blist.h	/^	PURPLE_BLIST_OTHER_NODE$/;"	e	enum:__anon103
PURPLE_BUDDY	blist.h	102;"	d
PURPLE_BUDDY_IS_ONLINE	blist.h	68;"	d
PURPLE_BUDDY_IS_ONLINE	dbus-define-api.h	/^gboolean PURPLE_BUDDY_IS_ONLINE(PurpleBuddy *buddy);$/;"	p	signature:(PurpleBuddy *buddy)
PURPLE_CALLBACK	signals.h	32;"	d
PURPLE_CBFLAGS_AWAY	conversation.h	/^	PURPLE_CBFLAGS_AWAY          = 0x0020  \/**< Currently away. @since 2.8.0 *\/$/;"	e	enum:__anon60
PURPLE_CBFLAGS_FOUNDER	conversation.h	/^	PURPLE_CBFLAGS_FOUNDER       = 0x0008, \/**< Channel Founder              *\/$/;"	e	enum:__anon60
PURPLE_CBFLAGS_HALFOP	conversation.h	/^	PURPLE_CBFLAGS_HALFOP        = 0x0002, \/**< Half-op                      *\/$/;"	e	enum:__anon60
PURPLE_CBFLAGS_NONE	conversation.h	/^	PURPLE_CBFLAGS_NONE          = 0x0000, \/**< No flags                     *\/$/;"	e	enum:__anon60
PURPLE_CBFLAGS_OP	conversation.h	/^	PURPLE_CBFLAGS_OP            = 0x0004, \/**< Channel Op or Moderator      *\/$/;"	e	enum:__anon60
PURPLE_CBFLAGS_TYPING	conversation.h	/^	PURPLE_CBFLAGS_TYPING        = 0x0010, \/**< Currently typing             *\/$/;"	e	enum:__anon60
PURPLE_CBFLAGS_VOICE	conversation.h	/^	PURPLE_CBFLAGS_VOICE         = 0x0001, \/**< Voiced user or "Participant" *\/$/;"	e	enum:__anon60
PURPLE_CERTIFICATE_CA_UNKNOWN	certificate.c	/^	PURPLE_CERTIFICATE_CA_UNKNOWN = 0x02,$/;"	e	enum:__anon12	file:
PURPLE_CERTIFICATE_EXPIRED	certificate.c	/^	PURPLE_CERTIFICATE_EXPIRED = 0x08,$/;"	e	enum:__anon12	file:
PURPLE_CERTIFICATE_FATALS_MASK	certificate.c	/^	PURPLE_CERTIFICATE_FATALS_MASK = 0xFFFF0000,$/;"	e	enum:__anon12	file:
PURPLE_CERTIFICATE_INVALID	certificate.h	/^	PURPLE_CERTIFICATE_INVALID = 0,$/;"	e	enum:__anon55
PURPLE_CERTIFICATE_INVALID_CHAIN	certificate.c	/^	PURPLE_CERTIFICATE_INVALID_CHAIN = 0x10000,$/;"	e	enum:__anon12	file:
PURPLE_CERTIFICATE_LAST	certificate.c	/^	PURPLE_CERTIFICATE_LAST = 0x40000,$/;"	e	enum:__anon12	file:
PURPLE_CERTIFICATE_NAME_MISMATCH	certificate.c	/^	PURPLE_CERTIFICATE_NAME_MISMATCH = 0x10,$/;"	e	enum:__anon12	file:
PURPLE_CERTIFICATE_NON_FATALS_MASK	certificate.c	/^	PURPLE_CERTIFICATE_NON_FATALS_MASK = 0x0000FFFF,$/;"	e	enum:__anon12	file:
PURPLE_CERTIFICATE_NOT_ACTIVATED	certificate.c	/^	PURPLE_CERTIFICATE_NOT_ACTIVATED = 0x04,$/;"	e	enum:__anon12	file:
PURPLE_CERTIFICATE_NO_CA_POOL	certificate.c	/^	PURPLE_CERTIFICATE_NO_CA_POOL = 0x20,$/;"	e	enum:__anon12	file:
PURPLE_CERTIFICATE_NO_PROBLEMS	certificate.c	/^	PURPLE_CERTIFICATE_NO_PROBLEMS = 0,$/;"	e	enum:__anon12	file:
PURPLE_CERTIFICATE_REVOKED	certificate.c	/^	PURPLE_CERTIFICATE_REVOKED = 0x20000,$/;"	e	enum:__anon12	file:
PURPLE_CERTIFICATE_SELF_SIGNED	certificate.c	/^	PURPLE_CERTIFICATE_SELF_SIGNED = 0x01,$/;"	e	enum:__anon12	file:
PURPLE_CERTIFICATE_UNKNOWN_ERROR	certificate.c	/^	PURPLE_CERTIFICATE_UNKNOWN_ERROR = -1,$/;"	e	enum:__anon12	file:
PURPLE_CERTIFICATE_VALID	certificate.h	/^	PURPLE_CERTIFICATE_VALID = 1$/;"	e	enum:__anon55
PURPLE_CHAT	blist.h	107;"	d
PURPLE_CIPHER	cipher.h	33;"	d
PURPLE_CIPHER_BATCH_MODE_CBC	cipher.h	/^	PURPLE_CIPHER_BATCH_MODE_CBC$/;"	e	enum:_PurpleCipherBatchMode
PURPLE_CIPHER_BATCH_MODE_ECB	cipher.h	/^	PURPLE_CIPHER_BATCH_MODE_ECB,$/;"	e	enum:_PurpleCipherBatchMode
PURPLE_CIPHER_CAPS_APPEND	cipher.h	/^	PURPLE_CIPHER_CAPS_APPEND           = 1 << 7,   \/**< Append flag		*\/$/;"	e	enum:_PurpleCipherCaps
PURPLE_CIPHER_CAPS_DECRYPT	cipher.h	/^	PURPLE_CIPHER_CAPS_DECRYPT          = 1 << 10,  \/**< Decrypt flag		*\/$/;"	e	enum:_PurpleCipherCaps
PURPLE_CIPHER_CAPS_DIGEST	cipher.h	/^	PURPLE_CIPHER_CAPS_DIGEST           = 1 << 8,   \/**< Digest flag		*\/$/;"	e	enum:_PurpleCipherCaps
PURPLE_CIPHER_CAPS_ENCRYPT	cipher.h	/^	PURPLE_CIPHER_CAPS_ENCRYPT          = 1 << 9,   \/**< Encrypt flag		*\/$/;"	e	enum:_PurpleCipherCaps
PURPLE_CIPHER_CAPS_GET_BATCH_MODE	cipher.h	/^	PURPLE_CIPHER_CAPS_GET_BATCH_MODE   = 1 << 16,  \/**< Get batch mode flag *\/$/;"	e	enum:_PurpleCipherCaps
PURPLE_CIPHER_CAPS_GET_BLOCK_SIZE	cipher.h	/^	PURPLE_CIPHER_CAPS_GET_BLOCK_SIZE   = 1 << 17,  \/**< The get block size flag *\/$/;"	e	enum:_PurpleCipherCaps
PURPLE_CIPHER_CAPS_GET_KEY_SIZE	cipher.h	/^	PURPLE_CIPHER_CAPS_GET_KEY_SIZE     = 1 << 14,  \/**< Get key size flag	*\/$/;"	e	enum:_PurpleCipherCaps
PURPLE_CIPHER_CAPS_GET_OPT	cipher.h	/^	PURPLE_CIPHER_CAPS_GET_OPT          = 1 << 2,   \/**< Get option flag	*\/$/;"	e	enum:_PurpleCipherCaps
PURPLE_CIPHER_CAPS_GET_SALT_SIZE	cipher.h	/^	PURPLE_CIPHER_CAPS_GET_SALT_SIZE    = 1 << 12,  \/**< Get salt size flag	*\/$/;"	e	enum:_PurpleCipherCaps
PURPLE_CIPHER_CAPS_INIT	cipher.h	/^	PURPLE_CIPHER_CAPS_INIT             = 1 << 3,   \/**< Init flag			*\/$/;"	e	enum:_PurpleCipherCaps
PURPLE_CIPHER_CAPS_RESET	cipher.h	/^	PURPLE_CIPHER_CAPS_RESET            = 1 << 4,   \/**< Reset flag			*\/$/;"	e	enum:_PurpleCipherCaps
PURPLE_CIPHER_CAPS_SET_BATCH_MODE	cipher.h	/^	PURPLE_CIPHER_CAPS_SET_BATCH_MODE   = 1 << 15,  \/**< Set batch mode flag *\/$/;"	e	enum:_PurpleCipherCaps
PURPLE_CIPHER_CAPS_SET_IV	cipher.h	/^	PURPLE_CIPHER_CAPS_SET_IV           = 1 << 6,   \/**< Set IV flag		*\/$/;"	e	enum:_PurpleCipherCaps
PURPLE_CIPHER_CAPS_SET_KEY	cipher.h	/^	PURPLE_CIPHER_CAPS_SET_KEY          = 1 << 13,  \/**< Set key flag		*\/$/;"	e	enum:_PurpleCipherCaps
PURPLE_CIPHER_CAPS_SET_KEY_WITH_LEN	cipher.h	/^	PURPLE_CIPHER_CAPS_SET_KEY_WITH_LEN = 1 << 18,  \/**< The set key with length flag *\/$/;"	e	enum:_PurpleCipherCaps
PURPLE_CIPHER_CAPS_SET_OPT	cipher.h	/^	PURPLE_CIPHER_CAPS_SET_OPT          = 1 << 1,   \/**< Set option flag	*\/$/;"	e	enum:_PurpleCipherCaps
PURPLE_CIPHER_CAPS_SET_SALT	cipher.h	/^	PURPLE_CIPHER_CAPS_SET_SALT         = 1 << 11,  \/**< Set salt flag		*\/$/;"	e	enum:_PurpleCipherCaps
PURPLE_CIPHER_CAPS_UNINIT	cipher.h	/^	PURPLE_CIPHER_CAPS_UNINIT           = 1 << 5,   \/**< Uninit flag		*\/$/;"	e	enum:_PurpleCipherCaps
PURPLE_CIPHER_CAPS_UNKNOWN	cipher.h	/^	PURPLE_CIPHER_CAPS_UNKNOWN          = 1 << 19   \/**< Unknown			*\/$/;"	e	enum:_PurpleCipherCaps
PURPLE_CIPHER_CONTEXT	cipher.h	35;"	d
PURPLE_CIPHER_H	cipher.h	28;"	d
PURPLE_CIPHER_OPS	cipher.h	34;"	d
PURPLE_CMD_FLAG_ALLOW_WRONG_ARGS	cmds.h	/^	PURPLE_CMD_FLAG_ALLOW_WRONG_ARGS = 0x08$/;"	e	enum:_PurpleCmdFlag
PURPLE_CMD_FLAG_CHAT	cmds.h	/^	PURPLE_CMD_FLAG_CHAT             = 0x02,$/;"	e	enum:_PurpleCmdFlag
PURPLE_CMD_FLAG_IM	cmds.h	/^	PURPLE_CMD_FLAG_IM               = 0x01,$/;"	e	enum:_PurpleCmdFlag
PURPLE_CMD_FLAG_PRPL_ONLY	cmds.h	/^	PURPLE_CMD_FLAG_PRPL_ONLY        = 0x04,$/;"	e	enum:_PurpleCmdFlag
PURPLE_CMD_FUNC	cmds.h	57;"	d
PURPLE_CMD_P_ALIAS	cmds.h	/^	PURPLE_CMD_P_ALIAS     =  4000,$/;"	e	enum:_PurpleCmdPriority
PURPLE_CMD_P_DEFAULT	cmds.h	/^	PURPLE_CMD_P_DEFAULT   =  1000,$/;"	e	enum:_PurpleCmdPriority
PURPLE_CMD_P_HIGH	cmds.h	/^	PURPLE_CMD_P_HIGH      =  5000,$/;"	e	enum:_PurpleCmdPriority
PURPLE_CMD_P_LOW	cmds.h	/^	PURPLE_CMD_P_LOW       =     0,$/;"	e	enum:_PurpleCmdPriority
PURPLE_CMD_P_PLUGIN	cmds.h	/^	PURPLE_CMD_P_PLUGIN    =  3000,$/;"	e	enum:_PurpleCmdPriority
PURPLE_CMD_P_PRPL	cmds.h	/^	PURPLE_CMD_P_PRPL      =  2000,$/;"	e	enum:_PurpleCmdPriority
PURPLE_CMD_P_VERY_HIGH	cmds.h	/^	PURPLE_CMD_P_VERY_HIGH =  6000$/;"	e	enum:_PurpleCmdPriority
PURPLE_CMD_P_VERY_LOW	cmds.h	/^	PURPLE_CMD_P_VERY_LOW  = -1000,$/;"	e	enum:_PurpleCmdPriority
PURPLE_CMD_RET_CONTINUE	cmds.h	/^	PURPLE_CMD_RET_CONTINUE \/**< Continue, looking for other commands with the same name to call. *\/$/;"	e	enum:_PurpleCmdRet
PURPLE_CMD_RET_FAILED	cmds.h	/^	PURPLE_CMD_RET_FAILED,   \/**< The command failed, but stop looking.*\/$/;"	e	enum:_PurpleCmdRet
PURPLE_CMD_RET_OK	cmds.h	/^	PURPLE_CMD_RET_OK,       \/**< Everything's okay; Don't look for another command to call. *\/$/;"	e	enum:_PurpleCmdRet
PURPLE_CMD_STATUS_FAILED	cmds.h	/^	PURPLE_CMD_STATUS_FAILED,$/;"	e	enum:_PurpleCmdStatus
PURPLE_CMD_STATUS_NOT_FOUND	cmds.h	/^	PURPLE_CMD_STATUS_NOT_FOUND,$/;"	e	enum:_PurpleCmdStatus
PURPLE_CMD_STATUS_OK	cmds.h	/^	PURPLE_CMD_STATUS_OK,$/;"	e	enum:_PurpleCmdStatus
PURPLE_CMD_STATUS_WRONG_ARGS	cmds.h	/^	PURPLE_CMD_STATUS_WRONG_ARGS,$/;"	e	enum:_PurpleCmdStatus
PURPLE_CMD_STATUS_WRONG_PRPL	cmds.h	/^	PURPLE_CMD_STATUS_WRONG_PRPL,$/;"	e	enum:_PurpleCmdStatus
PURPLE_CMD_STATUS_WRONG_TYPE	cmds.h	/^	PURPLE_CMD_STATUS_WRONG_TYPE$/;"	e	enum:_PurpleCmdStatus
PURPLE_CONNECTED	connection.h	/^	PURPLE_CONNECTED,        \/**< Connected.    *\/$/;"	e	enum:__anon72
PURPLE_CONNECTING	connection.h	/^	PURPLE_CONNECTING        \/**< Connecting.   *\/$/;"	e	enum:__anon72
PURPLE_CONNECTION_ALLOW_CUSTOM_SMILEY	connection.h	/^	PURPLE_CONNECTION_ALLOW_CUSTOM_SMILEY = 0x0100, \/**< Connection supports sending and receiving custom smileys *\/$/;"	e	enum:__anon71
PURPLE_CONNECTION_AUTO_RESP	connection.h	/^	PURPLE_CONNECTION_AUTO_RESP  = 0x0004,  \/**< Send auto responses when away.       *\/$/;"	e	enum:__anon71
PURPLE_CONNECTION_ERROR_AUTHENTICATION_FAILED	connection.h	/^	PURPLE_CONNECTION_ERROR_AUTHENTICATION_FAILED = 2,$/;"	e	enum:__anon73
PURPLE_CONNECTION_ERROR_AUTHENTICATION_IMPOSSIBLE	connection.h	/^	PURPLE_CONNECTION_ERROR_AUTHENTICATION_IMPOSSIBLE = 3,$/;"	e	enum:__anon73
PURPLE_CONNECTION_ERROR_CERT_EXPIRED	connection.h	/^	PURPLE_CONNECTION_ERROR_CERT_EXPIRED = 10,$/;"	e	enum:__anon73
PURPLE_CONNECTION_ERROR_CERT_FINGERPRINT_MISMATCH	connection.h	/^	PURPLE_CONNECTION_ERROR_CERT_FINGERPRINT_MISMATCH = 13,$/;"	e	enum:__anon73
PURPLE_CONNECTION_ERROR_CERT_HOSTNAME_MISMATCH	connection.h	/^	PURPLE_CONNECTION_ERROR_CERT_HOSTNAME_MISMATCH = 12,$/;"	e	enum:__anon73
PURPLE_CONNECTION_ERROR_CERT_NOT_ACTIVATED	connection.h	/^	PURPLE_CONNECTION_ERROR_CERT_NOT_ACTIVATED = 11,$/;"	e	enum:__anon73
PURPLE_CONNECTION_ERROR_CERT_NOT_PROVIDED	connection.h	/^	PURPLE_CONNECTION_ERROR_CERT_NOT_PROVIDED = 8,$/;"	e	enum:__anon73
PURPLE_CONNECTION_ERROR_CERT_OTHER_ERROR	connection.h	/^	PURPLE_CONNECTION_ERROR_CERT_OTHER_ERROR = 15,$/;"	e	enum:__anon73
PURPLE_CONNECTION_ERROR_CERT_SELF_SIGNED	connection.h	/^	PURPLE_CONNECTION_ERROR_CERT_SELF_SIGNED = 14,$/;"	e	enum:__anon73
PURPLE_CONNECTION_ERROR_CERT_UNTRUSTED	connection.h	/^	PURPLE_CONNECTION_ERROR_CERT_UNTRUSTED = 9,$/;"	e	enum:__anon73
PURPLE_CONNECTION_ERROR_ENCRYPTION_ERROR	connection.h	/^	PURPLE_CONNECTION_ERROR_ENCRYPTION_ERROR = 5,$/;"	e	enum:__anon73
PURPLE_CONNECTION_ERROR_INVALID_SETTINGS	connection.h	/^	PURPLE_CONNECTION_ERROR_INVALID_SETTINGS = 7,$/;"	e	enum:__anon73
PURPLE_CONNECTION_ERROR_INVALID_USERNAME	connection.h	/^	PURPLE_CONNECTION_ERROR_INVALID_USERNAME = 1,$/;"	e	enum:__anon73
PURPLE_CONNECTION_ERROR_NAME_IN_USE	connection.h	/^	PURPLE_CONNECTION_ERROR_NAME_IN_USE = 6,$/;"	e	enum:__anon73
PURPLE_CONNECTION_ERROR_NETWORK_ERROR	connection.h	/^	PURPLE_CONNECTION_ERROR_NETWORK_ERROR = 0,$/;"	e	enum:__anon73
PURPLE_CONNECTION_ERROR_NO_SSL_SUPPORT	connection.h	/^	PURPLE_CONNECTION_ERROR_NO_SSL_SUPPORT = 4,$/;"	e	enum:__anon73
PURPLE_CONNECTION_ERROR_OTHER_ERROR	connection.h	/^	PURPLE_CONNECTION_ERROR_OTHER_ERROR = 16$/;"	e	enum:__anon73
PURPLE_CONNECTION_FORMATTING_WBFO	connection.h	/^	PURPLE_CONNECTION_FORMATTING_WBFO = 0x0008, \/**< The text buffer must be formatted as a whole *\/$/;"	e	enum:__anon71
PURPLE_CONNECTION_HTML	connection.h	/^	PURPLE_CONNECTION_HTML       = 0x0001, \/**< Connection sends\/receives in 'HTML'. *\/$/;"	e	enum:__anon71
PURPLE_CONNECTION_IS_CONNECTED	connection.h	396;"	d
PURPLE_CONNECTION_IS_CONNECTED	dbus-define-api.h	/^gboolean PURPLE_CONNECTION_IS_CONNECTED(PurpleConnection *connection);$/;"	p	signature:(PurpleConnection *connection)
PURPLE_CONNECTION_IS_VALID	connection.h	572;"	d
PURPLE_CONNECTION_IS_VALID	dbus-define-api.h	/^gboolean PURPLE_CONNECTION_IS_VALID(PurpleConnection *connection);$/;"	p	signature:(PurpleConnection *connection)
PURPLE_CONNECTION_NO_BGCOLOR	connection.h	/^	PURPLE_CONNECTION_NO_BGCOLOR = 0x0002, \/**< Connection does not send\/receive$/;"	e	enum:__anon71
PURPLE_CONNECTION_NO_FONTSIZE	connection.h	/^	PURPLE_CONNECTION_NO_FONTSIZE = 0x0020, \/**< Connection does not send\/receive font sizes *\/$/;"	e	enum:__anon71
PURPLE_CONNECTION_NO_IMAGES	connection.h	/^	PURPLE_CONNECTION_NO_IMAGES = 0x0080,  \/**< Connection does not support sending of images *\/$/;"	e	enum:__anon71
PURPLE_CONNECTION_NO_NEWLINES	connection.h	/^	PURPLE_CONNECTION_NO_NEWLINES = 0x0010, \/**< No new lines are allowed in outgoing messages *\/$/;"	e	enum:__anon71
PURPLE_CONNECTION_NO_URLDESC	connection.h	/^	PURPLE_CONNECTION_NO_URLDESC = 0x0040,  \/**< Connection does not support descriptions with links *\/$/;"	e	enum:__anon71
PURPLE_CONNECTION_SUPPORT_MOODS	connection.h	/^	PURPLE_CONNECTION_SUPPORT_MOODS = 0x0200, \/**< Connection supports setting moods *\/$/;"	e	enum:__anon71
PURPLE_CONNECTION_SUPPORT_MOOD_MESSAGES	connection.h	/^	PURPLE_CONNECTION_SUPPORT_MOOD_MESSAGES = 0x0400 \/**< Connection supports setting a message on moods *\/$/;"	e	enum:__anon71
PURPLE_CONTACT	blist.h	97;"	d
PURPLE_CONV_ACCOUNT_OFFLINE	conversation.h	/^	PURPLE_CONV_ACCOUNT_OFFLINE, \/**< One of the user's accounts went offline. *\/$/;"	e	enum:__anon57
PURPLE_CONV_ACCOUNT_ONLINE	conversation.h	/^	PURPLE_CONV_ACCOUNT_ONLINE,  \/**< One of the user's accounts went online.  *\/$/;"	e	enum:__anon57
PURPLE_CONV_CHAT	conversation.h	617;"	d
PURPLE_CONV_CHAT	dbus-define-api.h	/^PurpleConvIm *PURPLE_CONV_CHAT(const PurpleConversation *conversation);$/;"	p	signature:(const PurpleConversation *conversation)
PURPLE_CONV_IM	conversation.h	604;"	d
PURPLE_CONV_IM	dbus-define-api.h	/^PurpleConvIm *PURPLE_CONV_IM(const PurpleConversation *conversation);$/;"	p	signature:(const PurpleConversation *conversation)
PURPLE_CONV_TYPE_ANY	conversation.h	/^	PURPLE_CONV_TYPE_ANY          \/**< Any type of conversation.  *\/$/;"	e	enum:__anon56
PURPLE_CONV_TYPE_CHAT	conversation.h	/^	PURPLE_CONV_TYPE_CHAT,        \/**< Chat room.                 *\/$/;"	e	enum:__anon56
PURPLE_CONV_TYPE_IM	conversation.h	/^	PURPLE_CONV_TYPE_IM,          \/**< Instant Message.           *\/$/;"	e	enum:__anon56
PURPLE_CONV_TYPE_MISC	conversation.h	/^	PURPLE_CONV_TYPE_MISC,        \/**< A misc. conversation.      *\/$/;"	e	enum:__anon56
PURPLE_CONV_TYPE_UNKNOWN	conversation.h	/^	PURPLE_CONV_TYPE_UNKNOWN = 0, \/**< Unknown conversation type. *\/$/;"	e	enum:__anon56
PURPLE_CONV_UPDATE_ACCOUNT	conversation.h	/^	PURPLE_CONV_UPDATE_ACCOUNT, \/**< The purple_account was changed. *\/$/;"	e	enum:__anon57
PURPLE_CONV_UPDATE_ADD	conversation.h	/^	PURPLE_CONV_UPDATE_ADD = 0, \/**< The buddy associated with the conversation$/;"	e	enum:__anon57
PURPLE_CONV_UPDATE_AWAY	conversation.h	/^	PURPLE_CONV_UPDATE_AWAY,     \/**< The other user went away.                *\/$/;"	e	enum:__anon57
PURPLE_CONV_UPDATE_CHATLEFT	conversation.h	/^	PURPLE_CONV_UPDATE_CHATLEFT,$/;"	e	enum:__anon57
PURPLE_CONV_UPDATE_FEATURES	conversation.h	/^	PURPLE_CONV_UPDATE_FEATURES  \/**< The features for a chat have changed *\/$/;"	e	enum:__anon57
PURPLE_CONV_UPDATE_ICON	conversation.h	/^	PURPLE_CONV_UPDATE_ICON,     \/**< The other user's buddy icon changed.     *\/$/;"	e	enum:__anon57
PURPLE_CONV_UPDATE_LOGGING	conversation.h	/^	PURPLE_CONV_UPDATE_LOGGING, \/**< Logging for this conversation was$/;"	e	enum:__anon57
PURPLE_CONV_UPDATE_REMOVE	conversation.h	/^	PURPLE_CONV_UPDATE_REMOVE,  \/**< The buddy associated with the conversation$/;"	e	enum:__anon57
PURPLE_CONV_UPDATE_TITLE	conversation.h	/^	PURPLE_CONV_UPDATE_TITLE,$/;"	e	enum:__anon57
PURPLE_CONV_UPDATE_TOPIC	conversation.h	/^	PURPLE_CONV_UPDATE_TOPIC,   \/**< The topic for a chat was updated. *\/$/;"	e	enum:__anon57
PURPLE_CONV_UPDATE_TYPING	conversation.h	/^	PURPLE_CONV_UPDATE_TYPING,  \/**< The typing state was updated. *\/$/;"	e	enum:__anon57
PURPLE_CONV_UPDATE_UNSEEN	conversation.h	/^	PURPLE_CONV_UPDATE_UNSEEN,  \/**< The unseen state was updated. *\/$/;"	e	enum:__anon57
PURPLE_DBUS_DECLARE_TYPE	dbus-server.h	71;"	d
PURPLE_DBUS_DEFINE_INHERITING_TYPE	dbus-server.h	77;"	d
PURPLE_DBUS_DEFINE_TYPE	dbus-server.h	74;"	d
PURPLE_DBUS_ID_TO_POINTER	dbus-bindings.h	49;"	d
PURPLE_DBUS_POINTER_TO_ID	dbus-bindings.h	57;"	d
PURPLE_DBUS_REGISTER_POINTER	dbus-maybe.h	18;"	d
PURPLE_DBUS_REGISTER_POINTER	dbus-maybe.h	26;"	d
PURPLE_DBUS_RETURN_FALSE_IF_DISABLED	dbus-server.h	80;"	d
PURPLE_DBUS_TYPE	dbus-server.h	68;"	d
PURPLE_DBUS_UNREGISTER_POINTER	dbus-maybe.h	22;"	d
PURPLE_DBUS_UNREGISTER_POINTER	dbus-maybe.h	30;"	d
PURPLE_DEBUG_ALL	debug.h	/^	PURPLE_DEBUG_ALL = 0,  \/**< All debug levels.              *\/$/;"	e	enum:__anon30
PURPLE_DEBUG_ERROR	debug.h	/^	PURPLE_DEBUG_ERROR,    \/**< Errors.                        *\/$/;"	e	enum:__anon30
PURPLE_DEBUG_FATAL	debug.h	/^	PURPLE_DEBUG_FATAL     \/**< Fatal errors.                  *\/$/;"	e	enum:__anon30
PURPLE_DEBUG_INFO	debug.h	/^	PURPLE_DEBUG_INFO,     \/**< General operation Information. *\/$/;"	e	enum:__anon30
PURPLE_DEBUG_MISC	debug.h	/^	PURPLE_DEBUG_MISC,     \/**< General chatter.               *\/$/;"	e	enum:__anon30
PURPLE_DEBUG_WARNING	debug.h	/^	PURPLE_DEBUG_WARNING,  \/**< Warnings.                      *\/$/;"	e	enum:__anon30
PURPLE_DEFAULT_ACTION_NONE	request.h	38;"	d
PURPLE_DESKTOP_ITEM_ACTIONS	desktopitem.h	97;"	d
PURPLE_DESKTOP_ITEM_COMMENT	desktopitem.h	95;"	d
PURPLE_DESKTOP_ITEM_DEFAULT_APP	desktopitem.h	108;"	d
PURPLE_DESKTOP_ITEM_DEV	desktopitem.h	109;"	d
PURPLE_DESKTOP_ITEM_DOC_PATH	desktopitem.h	116;"	d
PURPLE_DESKTOP_ITEM_ENCODING	desktopitem.h	87;"	d
PURPLE_DESKTOP_ITEM_EXEC	desktopitem.h	96;"	d
PURPLE_DESKTOP_ITEM_FILE_PATTERN	desktopitem.h	92;"	d
PURPLE_DESKTOP_ITEM_FS_TYPE	desktopitem.h	110;"	d
PURPLE_DESKTOP_ITEM_GENERIC_NAME	desktopitem.h	90;"	d
PURPLE_DESKTOP_ITEM_HIDDEN	desktopitem.h	100;"	d
PURPLE_DESKTOP_ITEM_ICON	desktopitem.h	98;"	d
PURPLE_DESKTOP_ITEM_MIME_TYPE	desktopitem.h	106;"	d
PURPLE_DESKTOP_ITEM_MINI_ICON	desktopitem.h	99;"	d
PURPLE_DESKTOP_ITEM_MOUNT_POINT	desktopitem.h	111;"	d
PURPLE_DESKTOP_ITEM_NAME	desktopitem.h	89;"	d
PURPLE_DESKTOP_ITEM_NO_DISPLAY	desktopitem.h	94;"	d
PURPLE_DESKTOP_ITEM_OVERFLOW	desktopitem.c	1083;"	d	file:
PURPLE_DESKTOP_ITEM_OVERFLOW	desktopitem.c	953;"	d	file:
PURPLE_DESKTOP_ITEM_PATH	desktopitem.h	101;"	d
PURPLE_DESKTOP_ITEM_PATTERNS	desktopitem.h	107;"	d
PURPLE_DESKTOP_ITEM_READ_ONLY	desktopitem.h	112;"	d
PURPLE_DESKTOP_ITEM_SORT_ORDER	desktopitem.h	114;"	d
PURPLE_DESKTOP_ITEM_SWALLOW_EXEC	desktopitem.h	105;"	d
PURPLE_DESKTOP_ITEM_SWALLOW_TITLE	desktopitem.h	104;"	d
PURPLE_DESKTOP_ITEM_TERMINAL	desktopitem.h	102;"	d
PURPLE_DESKTOP_ITEM_TERMINAL_OPTIONS	desktopitem.h	103;"	d
PURPLE_DESKTOP_ITEM_TRY_EXEC	desktopitem.h	93;"	d
PURPLE_DESKTOP_ITEM_TYPE	desktopitem.h	91;"	d
PURPLE_DESKTOP_ITEM_TYPE_APPLICATION	desktopitem.h	/^	PURPLE_DESKTOP_ITEM_TYPE_APPLICATION,$/;"	e	enum:__anon51
PURPLE_DESKTOP_ITEM_TYPE_DIRECTORY	desktopitem.h	/^	PURPLE_DESKTOP_ITEM_TYPE_DIRECTORY,$/;"	e	enum:__anon51
PURPLE_DESKTOP_ITEM_TYPE_FSDEVICE	desktopitem.h	/^	PURPLE_DESKTOP_ITEM_TYPE_FSDEVICE,$/;"	e	enum:__anon51
PURPLE_DESKTOP_ITEM_TYPE_LINK	desktopitem.h	/^	PURPLE_DESKTOP_ITEM_TYPE_LINK,$/;"	e	enum:__anon51
PURPLE_DESKTOP_ITEM_TYPE_MIME_TYPE	desktopitem.h	/^	PURPLE_DESKTOP_ITEM_TYPE_MIME_TYPE,$/;"	e	enum:__anon51
PURPLE_DESKTOP_ITEM_TYPE_NULL	desktopitem.h	/^	PURPLE_DESKTOP_ITEM_TYPE_NULL = 0 \/* This means its NULL, that is, not$/;"	e	enum:__anon51
PURPLE_DESKTOP_ITEM_TYPE_OTHER	desktopitem.h	/^	PURPLE_DESKTOP_ITEM_TYPE_OTHER \/* This means it's not one of the below$/;"	e	enum:__anon51
PURPLE_DESKTOP_ITEM_TYPE_SERVICE	desktopitem.h	/^	PURPLE_DESKTOP_ITEM_TYPE_SERVICE,$/;"	e	enum:__anon51
PURPLE_DESKTOP_ITEM_TYPE_SERVICE_TYPE	desktopitem.h	/^	PURPLE_DESKTOP_ITEM_TYPE_SERVICE_TYPE$/;"	e	enum:__anon51
PURPLE_DESKTOP_ITEM_UNMOUNT_ICON	desktopitem.h	113;"	d
PURPLE_DESKTOP_ITEM_URL	desktopitem.h	115;"	d
PURPLE_DESKTOP_ITEM_VERSION	desktopitem.h	88;"	d
PURPLE_DEVEL_WEBSITE	internal.h	161;"	d
PURPLE_DISABLE_DEPRECATED	dbus-server.c	30;"	d	file:
PURPLE_DISCONNECTED	connection.h	/^	PURPLE_DISCONNECTED = 0, \/**< Disconnected. *\/$/;"	e	enum:__anon72
PURPLE_DNSQUERY_USE_FORK	dnsquery.c	42;"	d	file:
PURPLE_GET_THEME_MANAGER_CLASS	theme-manager.h	45;"	d
PURPLE_GROUP	blist.h	92;"	d
PURPLE_ICON_SCALE_DISPLAY	prpl.h	/^	PURPLE_ICON_SCALE_DISPLAY = 0x01,		\/**< We scale the icon when we display it *\/$/;"	e	enum:__anon95
PURPLE_ICON_SCALE_SEND	prpl.h	/^	PURPLE_ICON_SCALE_SEND = 0x02			\/**< We scale the icon before we send it to the server *\/$/;"	e	enum:__anon95
PURPLE_IDLE_AUTO_AWAY	idle.c	/^	PURPLE_IDLE_AUTO_AWAY,$/;"	e	enum:__anon50	file:
PURPLE_IDLE_AWAY_BUT_NOT_AUTO_AWAY	idle.c	/^	PURPLE_IDLE_AWAY_BUT_NOT_AUTO_AWAY$/;"	e	enum:__anon50	file:
PURPLE_IDLE_NOT_AWAY	idle.c	/^	PURPLE_IDLE_NOT_AWAY = 0,$/;"	e	enum:__anon50	file:
PURPLE_INIT_PLUGIN	plugin.h	222;"	d
PURPLE_INIT_PLUGIN	plugin.h	232;"	d
PURPLE_INPUT_READ	eventloop.h	/^	PURPLE_INPUT_READ  = 1 << 0,  \/**< A read condition.  *\/$/;"	e	enum:__anon53
PURPLE_INPUT_WRITE	eventloop.h	/^	PURPLE_INPUT_WRITE = 1 << 1   \/**< A write condition. *\/$/;"	e	enum:__anon53
PURPLE_IS_MEDIA	media.h	42;"	d
PURPLE_IS_MEDIA_BACKEND	media/backend-iface.h	38;"	d
PURPLE_IS_MEDIA_BACKEND_FS2	media/backend-fs2.h	40;"	d
PURPLE_IS_MEDIA_BACKEND_FS2_CLASS	media/backend-fs2.h	41;"	d
PURPLE_IS_MEDIA_CANDIDATE	media/candidate.h	37;"	d
PURPLE_IS_MEDIA_CANDIDATE_CLASS	media/candidate.h	38;"	d
PURPLE_IS_MEDIA_CLASS	media.h	43;"	d
PURPLE_IS_MEDIA_CODEC	media/codec.h	42;"	d
PURPLE_IS_MEDIA_CODEC_CLASS	media/codec.h	43;"	d
PURPLE_IS_MEDIA_ELEMENT_INFO	media-gst.h	41;"	d
PURPLE_IS_MEDIA_ELEMENT_INFO_CLASS	media-gst.h	42;"	d
PURPLE_IS_MEDIA_MANAGER	mediamanager.h	46;"	d
PURPLE_IS_MEDIA_MANAGER_CLASS	mediamanager.h	47;"	d
PURPLE_IS_PROTOCOL_PLUGIN	prpl.h	658;"	d
PURPLE_IS_SMILEY	smiley.h	50;"	d
PURPLE_IS_SMILEY_CLASS	smiley.h	51;"	d
PURPLE_IS_SOUND_THEME	sound-theme.h	47;"	d
PURPLE_IS_SOUND_THEME_CLASS	sound-theme.h	48;"	d
PURPLE_IS_SOUND_THEME_LOADER	sound-theme-loader.h	45;"	d
PURPLE_IS_SOUND_THEME_LOADER_CLASS	sound-theme-loader.h	46;"	d
PURPLE_IS_THEME	theme.h	45;"	d
PURPLE_IS_THEME_CLASS	theme.h	46;"	d
PURPLE_IS_THEME_LOADER	theme-loader.h	46;"	d
PURPLE_IS_THEME_LOADER_CLASS	theme-loader.h	47;"	d
PURPLE_IS_THEME_MANAGER	theme-manager.h	43;"	d
PURPLE_IS_THEME_MANAGER_CLASS	theme-manager.h	44;"	d
PURPLE_LOG_CHAT	log.h	/^	PURPLE_LOG_CHAT,$/;"	e	enum:__anon79
PURPLE_LOG_IM	log.h	/^	PURPLE_LOG_IM,$/;"	e	enum:__anon79
PURPLE_LOG_READ_NO_NEWLINE	log.h	/^	PURPLE_LOG_READ_NO_NEWLINE = 1$/;"	e	enum:__anon80
PURPLE_LOG_SYSTEM	log.h	/^	PURPLE_LOG_SYSTEM$/;"	e	enum:__anon79
PURPLE_MAJOR_VERSION	version.h	28;"	d
PURPLE_MEDIA	media.h	40;"	d
PURPLE_MEDIA_AUDIO	media/enum-types.h	/^	PURPLE_MEDIA_AUDIO = PURPLE_MEDIA_RECV_AUDIO | PURPLE_MEDIA_SEND_AUDIO,$/;"	e	enum:__anon131
PURPLE_MEDIA_BACKEND	media/backend-iface.h	39;"	d
PURPLE_MEDIA_BACKEND_FS2	media/backend-fs2.h	42;"	d
PURPLE_MEDIA_BACKEND_FS2_CLASS	media/backend-fs2.h	43;"	d
PURPLE_MEDIA_BACKEND_FS2_GET_CLASS	media/backend-fs2.h	44;"	d
PURPLE_MEDIA_BACKEND_FS2_GET_PRIVATE	media/backend-fs2.c	55;"	d	file:
PURPLE_MEDIA_BACKEND_GET_INTERFACE	media/backend-iface.h	40;"	d
PURPLE_MEDIA_CANDIDATE	media/candidate.h	39;"	d
PURPLE_MEDIA_CANDIDATE_CLASS	media/candidate.h	40;"	d
PURPLE_MEDIA_CANDIDATE_GET_CLASS	media/candidate.h	41;"	d
PURPLE_MEDIA_CANDIDATE_GET_PRIVATE	media/candidate.c	34;"	d	file:
PURPLE_MEDIA_CANDIDATE_TYPE_HOST	media/enum-types.h	/^	PURPLE_MEDIA_CANDIDATE_TYPE_HOST,$/;"	e	enum:__anon126
PURPLE_MEDIA_CANDIDATE_TYPE_MULTICAST	media/enum-types.h	/^	PURPLE_MEDIA_CANDIDATE_TYPE_MULTICAST$/;"	e	enum:__anon126
PURPLE_MEDIA_CANDIDATE_TYPE_PRFLX	media/enum-types.h	/^	PURPLE_MEDIA_CANDIDATE_TYPE_PRFLX,$/;"	e	enum:__anon126
PURPLE_MEDIA_CANDIDATE_TYPE_RELAY	media/enum-types.h	/^	PURPLE_MEDIA_CANDIDATE_TYPE_RELAY,$/;"	e	enum:__anon126
PURPLE_MEDIA_CANDIDATE_TYPE_SRFLX	media/enum-types.h	/^	PURPLE_MEDIA_CANDIDATE_TYPE_SRFLX,$/;"	e	enum:__anon126
PURPLE_MEDIA_CAPS_AUDIO	media/enum-types.h	/^	PURPLE_MEDIA_CAPS_AUDIO = 1,$/;"	e	enum:__anon127
PURPLE_MEDIA_CAPS_AUDIO_SINGLE_DIRECTION	media/enum-types.h	/^	PURPLE_MEDIA_CAPS_AUDIO_SINGLE_DIRECTION = 1 << 1,$/;"	e	enum:__anon127
PURPLE_MEDIA_CAPS_AUDIO_VIDEO	media/enum-types.h	/^	PURPLE_MEDIA_CAPS_AUDIO_VIDEO = 1 << 4,$/;"	e	enum:__anon127
PURPLE_MEDIA_CAPS_CHANGE_DIRECTION	media/enum-types.h	/^	PURPLE_MEDIA_CAPS_CHANGE_DIRECTION = 1 << 6$/;"	e	enum:__anon127
PURPLE_MEDIA_CAPS_MODIFY_SESSION	media/enum-types.h	/^	PURPLE_MEDIA_CAPS_MODIFY_SESSION = 1 << 5,$/;"	e	enum:__anon127
PURPLE_MEDIA_CAPS_NONE	media/enum-types.h	/^	PURPLE_MEDIA_CAPS_NONE = 0,$/;"	e	enum:__anon127
PURPLE_MEDIA_CAPS_VIDEO	media/enum-types.h	/^	PURPLE_MEDIA_CAPS_VIDEO = 1 << 2,$/;"	e	enum:__anon127
PURPLE_MEDIA_CAPS_VIDEO_SINGLE_DIRECTION	media/enum-types.h	/^	PURPLE_MEDIA_CAPS_VIDEO_SINGLE_DIRECTION = 1 << 3,$/;"	e	enum:__anon127
PURPLE_MEDIA_CLASS	media.h	41;"	d
PURPLE_MEDIA_CODEC	media/codec.h	44;"	d
PURPLE_MEDIA_CODEC_CLASS	media/codec.h	45;"	d
PURPLE_MEDIA_CODEC_GET_CLASS	media/codec.h	46;"	d
PURPLE_MEDIA_CODEC_GET_PRIVATE	media/codec.c	34;"	d	file:
PURPLE_MEDIA_COMPONENT_NONE	media/enum-types.h	/^	PURPLE_MEDIA_COMPONENT_NONE = 0,$/;"	e	enum:__anon128
PURPLE_MEDIA_COMPONENT_RTCP	media/enum-types.h	/^	PURPLE_MEDIA_COMPONENT_RTCP = 2$/;"	e	enum:__anon128
PURPLE_MEDIA_COMPONENT_RTP	media/enum-types.h	/^	PURPLE_MEDIA_COMPONENT_RTP = 1,$/;"	e	enum:__anon128
PURPLE_MEDIA_ELEMENT_AUDIO	media-gst.h	/^	PURPLE_MEDIA_ELEMENT_AUDIO = 1,			\/** supports audio *\/$/;"	e	enum:__anon88
PURPLE_MEDIA_ELEMENT_AUDIO_VIDEO	media-gst.h	/^	PURPLE_MEDIA_ELEMENT_AUDIO_VIDEO = PURPLE_MEDIA_ELEMENT_AUDIO$/;"	e	enum:__anon88
PURPLE_MEDIA_ELEMENT_INFO	media-gst.h	39;"	d
PURPLE_MEDIA_ELEMENT_INFO_CLASS	media-gst.h	40;"	d
PURPLE_MEDIA_ELEMENT_INFO_GET_CLASS	media-gst.h	43;"	d
PURPLE_MEDIA_ELEMENT_INFO_GET_PRIVATE	mediamanager.c	97;"	d	file:
PURPLE_MEDIA_ELEMENT_MULTI_SINK	media-gst.h	/^	PURPLE_MEDIA_ELEMENT_MULTI_SINK = 1 << 6, 	\/** has multiple sink pads *\/$/;"	e	enum:__anon88
PURPLE_MEDIA_ELEMENT_MULTI_SRC	media-gst.h	/^	PURPLE_MEDIA_ELEMENT_MULTI_SRC = 1 << 3, 	\/** has multiple src pads *\/$/;"	e	enum:__anon88
PURPLE_MEDIA_ELEMENT_NONE	media-gst.h	/^	PURPLE_MEDIA_ELEMENT_NONE = 0,			\/** empty element *\/$/;"	e	enum:__anon88
PURPLE_MEDIA_ELEMENT_NO_SINKS	media-gst.h	/^	PURPLE_MEDIA_ELEMENT_NO_SINKS = 0,		\/** has no sink pads *\/$/;"	e	enum:__anon88
PURPLE_MEDIA_ELEMENT_NO_SRCS	media-gst.h	/^	PURPLE_MEDIA_ELEMENT_NO_SRCS = 0,		\/** has no src pads *\/$/;"	e	enum:__anon88
PURPLE_MEDIA_ELEMENT_ONE_SINK	media-gst.h	/^	PURPLE_MEDIA_ELEMENT_ONE_SINK = 1 << 5, 	\/** has one sink pad *\/$/;"	e	enum:__anon88
PURPLE_MEDIA_ELEMENT_ONE_SRC	media-gst.h	/^	PURPLE_MEDIA_ELEMENT_ONE_SRC = 1 << 2,		\/** has one src pad *\/$/;"	e	enum:__anon88
PURPLE_MEDIA_ELEMENT_REQUEST_SINK	media-gst.h	/^	PURPLE_MEDIA_ELEMENT_REQUEST_SINK = 1 << 7, 	\/** sink pads must be requested *\/$/;"	e	enum:__anon88
PURPLE_MEDIA_ELEMENT_REQUEST_SRC	media-gst.h	/^	PURPLE_MEDIA_ELEMENT_REQUEST_SRC = 1 << 4, 	\/** src pads must be requested *\/$/;"	e	enum:__anon88
PURPLE_MEDIA_ELEMENT_SINK	media-gst.h	/^	PURPLE_MEDIA_ELEMENT_SINK = 1 << 10,		\/** can be set as an active sink *\/$/;"	e	enum:__anon88
PURPLE_MEDIA_ELEMENT_SRC	media-gst.h	/^	PURPLE_MEDIA_ELEMENT_SRC = 1 << 9,		\/** can be set as an active src *\/$/;"	e	enum:__anon88
PURPLE_MEDIA_ELEMENT_UNIQUE	media-gst.h	/^	PURPLE_MEDIA_ELEMENT_UNIQUE = 1 << 8,		\/** This element is unique and$/;"	e	enum:__anon88
PURPLE_MEDIA_ELEMENT_VIDEO	media-gst.h	/^	PURPLE_MEDIA_ELEMENT_VIDEO = 1 << 1,		\/** supports video *\/$/;"	e	enum:__anon88
PURPLE_MEDIA_GET_CLASS	media.h	44;"	d
PURPLE_MEDIA_GET_PRIVATE	media.c	109;"	d	file:
PURPLE_MEDIA_INFO_ACCEPT	media/enum-types.h	/^	PURPLE_MEDIA_INFO_ACCEPT,$/;"	e	enum:__anon129
PURPLE_MEDIA_INFO_HANGUP	media/enum-types.h	/^	PURPLE_MEDIA_INFO_HANGUP = 0,$/;"	e	enum:__anon129
PURPLE_MEDIA_INFO_HOLD	media/enum-types.h	/^	PURPLE_MEDIA_INFO_HOLD,$/;"	e	enum:__anon129
PURPLE_MEDIA_INFO_MUTE	media/enum-types.h	/^	PURPLE_MEDIA_INFO_MUTE,$/;"	e	enum:__anon129
PURPLE_MEDIA_INFO_PAUSE	media/enum-types.h	/^	PURPLE_MEDIA_INFO_PAUSE,$/;"	e	enum:__anon129
PURPLE_MEDIA_INFO_REJECT	media/enum-types.h	/^	PURPLE_MEDIA_INFO_REJECT,$/;"	e	enum:__anon129
PURPLE_MEDIA_INFO_UNHOLD	media/enum-types.h	/^	PURPLE_MEDIA_INFO_UNHOLD$/;"	e	enum:__anon129
PURPLE_MEDIA_INFO_UNMUTE	media/enum-types.h	/^	PURPLE_MEDIA_INFO_UNMUTE,$/;"	e	enum:__anon129
PURPLE_MEDIA_INFO_UNPAUSE	media/enum-types.h	/^	PURPLE_MEDIA_INFO_UNPAUSE,$/;"	e	enum:__anon129
PURPLE_MEDIA_MANAGER	mediamanager.h	44;"	d
PURPLE_MEDIA_MANAGER_CLASS	mediamanager.h	45;"	d
PURPLE_MEDIA_MANAGER_GET_CLASS	mediamanager.h	48;"	d
PURPLE_MEDIA_MANAGER_GET_PRIVATE	mediamanager.c	96;"	d	file:
PURPLE_MEDIA_NETWORK_PROTOCOL_TCP	media/enum-types.h	/^	PURPLE_MEDIA_NETWORK_PROTOCOL_TCP$/;"	e	enum:__anon130
PURPLE_MEDIA_NETWORK_PROTOCOL_UDP	media/enum-types.h	/^	PURPLE_MEDIA_NETWORK_PROTOCOL_UDP,$/;"	e	enum:__anon130
PURPLE_MEDIA_NONE	media/enum-types.h	/^	PURPLE_MEDIA_NONE	= 0,$/;"	e	enum:__anon131
PURPLE_MEDIA_RECV_AUDIO	media/enum-types.h	/^	PURPLE_MEDIA_RECV_AUDIO = 1 << 0,$/;"	e	enum:__anon131
PURPLE_MEDIA_RECV_VIDEO	media/enum-types.h	/^	PURPLE_MEDIA_RECV_VIDEO = 1 << 2,$/;"	e	enum:__anon131
PURPLE_MEDIA_SEND_AUDIO	media/enum-types.h	/^	PURPLE_MEDIA_SEND_AUDIO = 1 << 1,$/;"	e	enum:__anon131
PURPLE_MEDIA_SEND_VIDEO	media/enum-types.h	/^	PURPLE_MEDIA_SEND_VIDEO = 1 << 3,$/;"	e	enum:__anon131
PURPLE_MEDIA_STATE_CONNECTED	media/enum-types.h	/^	PURPLE_MEDIA_STATE_CONNECTED,$/;"	e	enum:__anon132
PURPLE_MEDIA_STATE_END	media/enum-types.h	/^	PURPLE_MEDIA_STATE_END$/;"	e	enum:__anon132
PURPLE_MEDIA_STATE_NEW	media/enum-types.h	/^	PURPLE_MEDIA_STATE_NEW = 0,$/;"	e	enum:__anon132
PURPLE_MEDIA_TYPE_CAPS	media/enum-types.h	35;"	d
PURPLE_MEDIA_TYPE_INFO_TYPE	media/enum-types.h	36;"	d
PURPLE_MEDIA_TYPE_STATE	media/enum-types.h	39;"	d
PURPLE_MEDIA_VIDEO	media/enum-types.h	/^	PURPLE_MEDIA_VIDEO = PURPLE_MEDIA_RECV_VIDEO | PURPLE_MEDIA_SEND_VIDEO$/;"	e	enum:__anon131
PURPLE_MESSAGE_ACTIVE_ONLY	conversation.h	/^	PURPLE_MESSAGE_ACTIVE_ONLY = 0x0010,  \/**< Hint to the UI that this$/;"	e	enum:__anon59
PURPLE_MESSAGE_AUTO_RESP	conversation.h	/^	PURPLE_MESSAGE_AUTO_RESP   = 0x0008, \/**< Auto response.           *\/$/;"	e	enum:__anon59
PURPLE_MESSAGE_DELAYED	conversation.h	/^	PURPLE_MESSAGE_DELAYED     = 0x0400, \/**< Delayed message.         *\/$/;"	e	enum:__anon59
PURPLE_MESSAGE_ERROR	conversation.h	/^	PURPLE_MESSAGE_ERROR       = 0x0200, \/**< Error message.           *\/$/;"	e	enum:__anon59
PURPLE_MESSAGE_IMAGES	conversation.h	/^	PURPLE_MESSAGE_IMAGES      = 0x1000, \/**< Message contains images  *\/$/;"	e	enum:__anon59
PURPLE_MESSAGE_INVISIBLE	conversation.h	/^	PURPLE_MESSAGE_INVISIBLE   = 0x8000  \/**< Message should not be displayed *\/$/;"	e	enum:__anon59
PURPLE_MESSAGE_NICK	conversation.h	/^	PURPLE_MESSAGE_NICK        = 0x0020, \/**< Contains your nick.      *\/$/;"	e	enum:__anon59
PURPLE_MESSAGE_NOTIFY	conversation.h	/^	PURPLE_MESSAGE_NOTIFY      = 0x2000, \/**< Message is a notification *\/$/;"	e	enum:__anon59
PURPLE_MESSAGE_NO_LINKIFY	conversation.h	/^	PURPLE_MESSAGE_NO_LINKIFY  = 0x4000, \/**< Message should not be auto-$/;"	e	enum:__anon59
PURPLE_MESSAGE_NO_LOG	conversation.h	/^	PURPLE_MESSAGE_NO_LOG      = 0x0040, \/**< Do not log.              *\/$/;"	e	enum:__anon59
PURPLE_MESSAGE_RAW	conversation.h	/^	PURPLE_MESSAGE_RAW         = 0x0800, \/**< "Raw" message - don't$/;"	e	enum:__anon59
PURPLE_MESSAGE_RECV	conversation.h	/^	PURPLE_MESSAGE_RECV        = 0x0002, \/**< Incoming message.        *\/$/;"	e	enum:__anon59
PURPLE_MESSAGE_SEND	conversation.h	/^	PURPLE_MESSAGE_SEND        = 0x0001, \/**< Outgoing message.        *\/$/;"	e	enum:__anon59
PURPLE_MESSAGE_SYSTEM	conversation.h	/^	PURPLE_MESSAGE_SYSTEM      = 0x0004, \/**< System message.          *\/$/;"	e	enum:__anon59
PURPLE_MESSAGE_WHISPER	conversation.h	/^	PURPLE_MESSAGE_WHISPER     = 0x0080, \/**< Whispered message.       *\/$/;"	e	enum:__anon59
PURPLE_MICRO_VERSION	version.h	32;"	d
PURPLE_MINOR_VERSION	version.h	30;"	d
PURPLE_MOOD_COMMENT	status.h	149;"	d
PURPLE_MOOD_NAME	status.h	148;"	d
PURPLE_NOTIFY_BUTTON_ADD	notify.h	/^	PURPLE_NOTIFY_BUTTON_ADD,$/;"	e	enum:__anon114
PURPLE_NOTIFY_BUTTON_CONTINUE	notify.h	/^	PURPLE_NOTIFY_BUTTON_CONTINUE = 1,$/;"	e	enum:__anon114
PURPLE_NOTIFY_BUTTON_IM	notify.h	/^	PURPLE_NOTIFY_BUTTON_IM,$/;"	e	enum:__anon114
PURPLE_NOTIFY_BUTTON_INFO	notify.h	/^	PURPLE_NOTIFY_BUTTON_INFO,$/;"	e	enum:__anon114
PURPLE_NOTIFY_BUTTON_INVITE	notify.h	/^	PURPLE_NOTIFY_BUTTON_INVITE$/;"	e	enum:__anon114
PURPLE_NOTIFY_BUTTON_JOIN	notify.h	/^	PURPLE_NOTIFY_BUTTON_JOIN,$/;"	e	enum:__anon114
PURPLE_NOTIFY_BUTTON_LABELED	notify.h	/^	PURPLE_NOTIFY_BUTTON_LABELED = 0,  \/**< special use, see _button_add_labeled *\/$/;"	e	enum:__anon114
PURPLE_NOTIFY_EMAIL	notify.h	/^	PURPLE_NOTIFY_EMAIL,         \/**< Single email notification.   *\/$/;"	e	enum:__anon112
PURPLE_NOTIFY_EMAILS	notify.h	/^	PURPLE_NOTIFY_EMAILS,        \/**< Multiple email notification. *\/$/;"	e	enum:__anon112
PURPLE_NOTIFY_FORMATTED	notify.h	/^	PURPLE_NOTIFY_FORMATTED,     \/**< Formatted text.               *\/$/;"	e	enum:__anon112
PURPLE_NOTIFY_MESSAGE	notify.h	/^	PURPLE_NOTIFY_MESSAGE = 0,   \/**< Message notification.         *\/$/;"	e	enum:__anon112
PURPLE_NOTIFY_MSG_ERROR	notify.h	/^	PURPLE_NOTIFY_MSG_ERROR   = 0, \/**< Error notification.       *\/$/;"	e	enum:__anon113
PURPLE_NOTIFY_MSG_INFO	notify.h	/^	PURPLE_NOTIFY_MSG_INFO         \/**< Information notification. *\/$/;"	e	enum:__anon113
PURPLE_NOTIFY_MSG_WARNING	notify.h	/^	PURPLE_NOTIFY_MSG_WARNING,     \/**< Warning notification.     *\/$/;"	e	enum:__anon113
PURPLE_NOTIFY_SEARCHRESULTS	notify.h	/^	PURPLE_NOTIFY_SEARCHRESULTS, \/**< Buddy search results.         *\/$/;"	e	enum:__anon112
PURPLE_NOTIFY_URI	notify.h	/^	PURPLE_NOTIFY_URI            \/**< URI notification or display.  *\/$/;"	e	enum:__anon112
PURPLE_NOTIFY_USERINFO	notify.h	/^	PURPLE_NOTIFY_USERINFO,      \/**< Formatted userinfo text.      *\/$/;"	e	enum:__anon112
PURPLE_NOTIFY_USER_INFO_ENTRY_PAIR	notify.h	/^	PURPLE_NOTIFY_USER_INFO_ENTRY_PAIR = 0,$/;"	e	enum:__anon116
PURPLE_NOTIFY_USER_INFO_ENTRY_SECTION_BREAK	notify.h	/^	PURPLE_NOTIFY_USER_INFO_ENTRY_SECTION_BREAK,$/;"	e	enum:__anon116
PURPLE_NOTIFY_USER_INFO_ENTRY_SECTION_HEADER	notify.h	/^	PURPLE_NOTIFY_USER_INFO_ENTRY_SECTION_HEADER$/;"	e	enum:__anon116
PURPLE_NOT_TYPING	conversation.h	/^	PURPLE_NOT_TYPING = 0,  \/**< Not typing.                 *\/$/;"	e	enum:__anon58
PURPLE_NO_TZ_OFF	util.h	391;"	d
PURPLE_NUM_SOUNDS	sound.h	/^	PURPLE_NUM_SOUNDS              \/**< Total number of sounds.               *\/$/;"	e	enum:_PurpleSoundEventID
PURPLE_PLUGINS	config.h	426;"	d
PURPLE_PLUGINS	gaim-compat.h	1184;"	d
PURPLE_PLUGINS	purple.h	46;"	d
PURPLE_PLUGIN_ACTIONS	plugin.h	212;"	d
PURPLE_PLUGIN_FLAG_INVISIBLE	plugin.h	69;"	d
PURPLE_PLUGIN_HAS_ACTIONS	plugin.h	209;"	d
PURPLE_PLUGIN_HAS_PREF_FRAME	plugin.h	185;"	d
PURPLE_PLUGIN_LOADER	plugin.h	/^	PURPLE_PLUGIN_LOADER,         \/**< Loader plugin.   *\/$/;"	e	enum:__anon82
PURPLE_PLUGIN_LOADER_INFO	plugin.h	170;"	d
PURPLE_PLUGIN_MAGIC	plugin.h	71;"	d
PURPLE_PLUGIN_PREF_CHOICE	pluginpref.h	/^	PURPLE_PLUGIN_PREF_CHOICE,$/;"	e	enum:__anon94
PURPLE_PLUGIN_PREF_INFO	pluginpref.h	/^	PURPLE_PLUGIN_PREF_INFO,              \/**< no-value label *\/$/;"	e	enum:__anon94
PURPLE_PLUGIN_PREF_NONE	pluginpref.h	/^	PURPLE_PLUGIN_PREF_NONE,$/;"	e	enum:__anon94
PURPLE_PLUGIN_PREF_STRING_FORMAT	pluginpref.h	/^	PURPLE_PLUGIN_PREF_STRING_FORMAT      \/**< The preference has a string value. *\/$/;"	e	enum:__anon94
PURPLE_PLUGIN_PROTOCOL	plugin.h	/^	PURPLE_PLUGIN_PROTOCOL        \/**< Protocol plugin. *\/$/;"	e	enum:__anon82
PURPLE_PLUGIN_PROTOCOL_INFO	prpl.h	661;"	d
PURPLE_PLUGIN_STANDARD	plugin.h	/^	PURPLE_PLUGIN_STANDARD = 0,   \/**< Standard plugin. *\/$/;"	e	enum:__anon82
PURPLE_PLUGIN_UI_INFO	plugin.h	188;"	d
PURPLE_PLUGIN_UNKNOWN	plugin.h	/^	PURPLE_PLUGIN_UNKNOWN  = -1,  \/**< Unknown type.    *\/$/;"	e	enum:__anon82
PURPLE_PMP_LIFETIME	nat-pmp.h	37;"	d
PURPLE_PMP_STATUS_DISCOVERED	nat-pmp.c	/^	PURPLE_PMP_STATUS_DISCOVERED$/;"	e	enum:__anon41	file:
PURPLE_PMP_STATUS_DISCOVERING	nat-pmp.c	/^	PURPLE_PMP_STATUS_DISCOVERING,$/;"	e	enum:__anon41	file:
PURPLE_PMP_STATUS_UNABLE_TO_DISCOVER	nat-pmp.c	/^	PURPLE_PMP_STATUS_UNABLE_TO_DISCOVER,$/;"	e	enum:__anon41	file:
PURPLE_PMP_STATUS_UNDISCOVERED	nat-pmp.c	/^	PURPLE_PMP_STATUS_UNDISCOVERED = -1,$/;"	e	enum:__anon41	file:
PURPLE_PMP_TYPE_TCP	nat-pmp.h	/^	PURPLE_PMP_TYPE_TCP$/;"	e	enum:__anon97
PURPLE_PMP_TYPE_UDP	nat-pmp.h	/^	PURPLE_PMP_TYPE_UDP,$/;"	e	enum:__anon97
PURPLE_POUNCE_AWAY	pounce.h	/^	PURPLE_POUNCE_AWAY             = 0x004, \/**< The buddy went away.          *\/$/;"	e	enum:__anon45
PURPLE_POUNCE_AWAY_RETURN	pounce.h	/^	PURPLE_POUNCE_AWAY_RETURN      = 0x008, \/**< The buddy returned from away. *\/$/;"	e	enum:__anon45
PURPLE_POUNCE_IDLE	pounce.h	/^	PURPLE_POUNCE_IDLE             = 0x010, \/**< The buddy became idle.        *\/$/;"	e	enum:__anon45
PURPLE_POUNCE_IDLE_RETURN	pounce.h	/^	PURPLE_POUNCE_IDLE_RETURN      = 0x020, \/**< The buddy is no longer idle.  *\/$/;"	e	enum:__anon45
PURPLE_POUNCE_MESSAGE_RECEIVED	pounce.h	/^	PURPLE_POUNCE_MESSAGE_RECEIVED = 0x200  \/**< The buddy sent a message      *\/$/;"	e	enum:__anon45
PURPLE_POUNCE_NONE	pounce.h	/^	PURPLE_POUNCE_NONE             = 0x000, \/**< No events.                    *\/$/;"	e	enum:__anon45
PURPLE_POUNCE_OPTION_AWAY	pounce.h	/^	PURPLE_POUNCE_OPTION_AWAY		= 0x01  \/**< Pounce only when away    *\/$/;"	e	enum:__anon46
PURPLE_POUNCE_OPTION_NONE	pounce.h	/^	PURPLE_POUNCE_OPTION_NONE		= 0x00, \/**< No Option                *\/$/;"	e	enum:__anon46
PURPLE_POUNCE_SIGNOFF	pounce.h	/^	PURPLE_POUNCE_SIGNOFF          = 0x002, \/**< The buddy signed off.         *\/$/;"	e	enum:__anon45
PURPLE_POUNCE_SIGNON	pounce.h	/^	PURPLE_POUNCE_SIGNON           = 0x001, \/**< The buddy signed on.          *\/$/;"	e	enum:__anon45
PURPLE_POUNCE_TYPED	pounce.h	/^	PURPLE_POUNCE_TYPED            = 0x080, \/**< The buddy has entered text.   *\/$/;"	e	enum:__anon45
PURPLE_POUNCE_TYPING	pounce.h	/^	PURPLE_POUNCE_TYPING           = 0x040, \/**< The buddy started typing.     *\/$/;"	e	enum:__anon45
PURPLE_POUNCE_TYPING_STOPPED	pounce.h	/^	PURPLE_POUNCE_TYPING_STOPPED   = 0x100, \/**< The buddy stopped typing.     *\/$/;"	e	enum:__anon45
PURPLE_PREF_BOOLEAN	prefs.h	/^	PURPLE_PREF_BOOLEAN,     \/**< Boolean.         *\/$/;"	e	enum:_PurplePrefType
PURPLE_PREF_INT	prefs.h	/^	PURPLE_PREF_INT,         \/**< Integer.         *\/$/;"	e	enum:_PurplePrefType
PURPLE_PREF_NONE	prefs.h	/^	PURPLE_PREF_NONE,        \/**< No type.         *\/$/;"	e	enum:_PurplePrefType
PURPLE_PREF_PATH	prefs.h	/^	PURPLE_PREF_PATH,        \/**< Path.            *\/$/;"	e	enum:_PurplePrefType
PURPLE_PREF_PATH_LIST	prefs.h	/^	PURPLE_PREF_PATH_LIST    \/**< List of paths.   *\/$/;"	e	enum:_PurplePrefType
PURPLE_PREF_STRING	prefs.h	/^	PURPLE_PREF_STRING,      \/**< String.          *\/$/;"	e	enum:_PurplePrefType
PURPLE_PREF_STRING_LIST	prefs.h	/^	PURPLE_PREF_STRING_LIST, \/**< List of strings. *\/$/;"	e	enum:_PurplePrefType
PURPLE_PRESENCE_CONTEXT_ACCOUNT	status.h	/^	PURPLE_PRESENCE_CONTEXT_ACCOUNT,$/;"	e	enum:__anon32
PURPLE_PRESENCE_CONTEXT_BUDDY	status.h	/^	PURPLE_PRESENCE_CONTEXT_BUDDY$/;"	e	enum:__anon32
PURPLE_PRESENCE_CONTEXT_CONV	status.h	/^	PURPLE_PRESENCE_CONTEXT_CONV,$/;"	e	enum:__anon32
PURPLE_PRESENCE_CONTEXT_UNSET	status.h	/^	PURPLE_PRESENCE_CONTEXT_UNSET   = 0,$/;"	e	enum:__anon32
PURPLE_PRIORITY_DEFAULT	plugin.h	65;"	d
PURPLE_PRIORITY_HIGHEST	plugin.h	66;"	d
PURPLE_PRIORITY_LOWEST	plugin.h	67;"	d
PURPLE_PRIVACY_ALLOW_ALL	privacy.h	/^	PURPLE_PRIVACY_ALLOW_ALL = 1,$/;"	e	enum:_PurplePrivacyType
PURPLE_PRIVACY_ALLOW_BUDDYLIST	privacy.h	/^	PURPLE_PRIVACY_ALLOW_BUDDYLIST$/;"	e	enum:_PurplePrivacyType
PURPLE_PRIVACY_ALLOW_USERS	privacy.h	/^	PURPLE_PRIVACY_ALLOW_USERS,$/;"	e	enum:_PurplePrivacyType
PURPLE_PRIVACY_DENY_ALL	privacy.h	/^	PURPLE_PRIVACY_DENY_ALL,$/;"	e	enum:_PurplePrivacyType
PURPLE_PRIVACY_DENY_USERS	privacy.h	/^	PURPLE_PRIVACY_DENY_USERS,$/;"	e	enum:_PurplePrivacyType
PURPLE_PROTOCOL_PLUGIN_HAS_FUNC	prpl.h	652;"	d
PURPLE_PROXY_CONNECT_DATA_IS_VALID	proxy.c	100;"	d	file:
PURPLE_PROXY_HTTP	proxy.h	/^	PURPLE_PROXY_HTTP,             \/**< HTTP proxy.                       *\/$/;"	e	enum:__anon28
PURPLE_PROXY_NONE	proxy.h	/^	PURPLE_PROXY_NONE = 0,         \/**< No proxy.                         *\/$/;"	e	enum:__anon28
PURPLE_PROXY_SOCKS4	proxy.h	/^	PURPLE_PROXY_SOCKS4,           \/**< SOCKS 4 proxy.                    *\/$/;"	e	enum:__anon28
PURPLE_PROXY_SOCKS5	proxy.h	/^	PURPLE_PROXY_SOCKS5,           \/**< SOCKS 5 proxy.                    *\/$/;"	e	enum:__anon28
PURPLE_PROXY_TOR	proxy.h	/^	PURPLE_PROXY_TOR               \/**< Use a Tor proxy (SOCKS 5 really)  *\/$/;"	e	enum:__anon28
PURPLE_PROXY_USE_ENVVAR	proxy.h	/^	PURPLE_PROXY_USE_ENVVAR,       \/**< Use environmental settings.       *\/$/;"	e	enum:__anon28
PURPLE_PROXY_USE_GLOBAL	proxy.h	/^	PURPLE_PROXY_USE_GLOBAL = -1,  \/**< Use the global proxy information. *\/$/;"	e	enum:__anon28
PURPLE_REQUEST_ACTION	request.h	/^	PURPLE_REQUEST_ACTION,     \/**< Action request.            *\/$/;"	e	enum:__anon136
PURPLE_REQUEST_CHOICE	request.h	/^	PURPLE_REQUEST_CHOICE,     \/**< Multiple-choice request.   *\/$/;"	e	enum:__anon136
PURPLE_REQUEST_FIELDS	request.h	/^	PURPLE_REQUEST_FIELDS,     \/**< Multiple fields request.   *\/$/;"	e	enum:__anon136
PURPLE_REQUEST_FIELD_ACCOUNT	request.h	/^	PURPLE_REQUEST_FIELD_ACCOUNT$/;"	e	enum:__anon137
PURPLE_REQUEST_FIELD_BOOLEAN	request.h	/^	PURPLE_REQUEST_FIELD_BOOLEAN,$/;"	e	enum:__anon137
PURPLE_REQUEST_FIELD_CHOICE	request.h	/^	PURPLE_REQUEST_FIELD_CHOICE,$/;"	e	enum:__anon137
PURPLE_REQUEST_FIELD_IMAGE	request.h	/^	PURPLE_REQUEST_FIELD_IMAGE,$/;"	e	enum:__anon137
PURPLE_REQUEST_FIELD_INTEGER	request.h	/^	PURPLE_REQUEST_FIELD_INTEGER,$/;"	e	enum:__anon137
PURPLE_REQUEST_FIELD_LABEL	request.h	/^	PURPLE_REQUEST_FIELD_LABEL,$/;"	e	enum:__anon137
PURPLE_REQUEST_FIELD_LIST	request.h	/^	PURPLE_REQUEST_FIELD_LIST,$/;"	e	enum:__anon137
PURPLE_REQUEST_FIELD_NONE	request.h	/^	PURPLE_REQUEST_FIELD_NONE,$/;"	e	enum:__anon137
PURPLE_REQUEST_FIELD_STRING	request.h	/^	PURPLE_REQUEST_FIELD_STRING,$/;"	e	enum:__anon137
PURPLE_REQUEST_FILE	request.h	/^	PURPLE_REQUEST_FILE,       \/**< File open or save request. *\/$/;"	e	enum:__anon136
PURPLE_REQUEST_FOLDER	request.h	/^	PURPLE_REQUEST_FOLDER      \/**< Folder selection request.  *\/$/;"	e	enum:__anon136
PURPLE_REQUEST_INPUT	request.h	/^	PURPLE_REQUEST_INPUT = 0,  \/**< Text input request.        *\/$/;"	e	enum:__anon136
PURPLE_ROOMLIST_FIELD_BOOL	roomlist.h	/^	PURPLE_ROOMLIST_FIELD_BOOL,$/;"	e	enum:__anon121
PURPLE_ROOMLIST_FIELD_INT	roomlist.h	/^	PURPLE_ROOMLIST_FIELD_INT,$/;"	e	enum:__anon121
PURPLE_ROOMLIST_FIELD_STRING	roomlist.h	/^	PURPLE_ROOMLIST_FIELD_STRING \/**< We do a g_strdup on the passed value if it's this type. *\/$/;"	e	enum:__anon121
PURPLE_ROOMLIST_ROOMTYPE_CATEGORY	roomlist.h	/^	PURPLE_ROOMLIST_ROOMTYPE_CATEGORY = 0x01, \/**< It's a category, but not a room you can join. *\/$/;"	e	enum:__anon120
PURPLE_ROOMLIST_ROOMTYPE_ROOM	roomlist.h	/^	PURPLE_ROOMLIST_ROOMTYPE_ROOM = 0x02      \/**< It's a room, like the kind you can join. *\/$/;"	e	enum:__anon120
PURPLE_SIGNAL_PRIORITY_DEFAULT	signals.h	51;"	d
PURPLE_SIGNAL_PRIORITY_HIGHEST	signals.h	58;"	d
PURPLE_SIGNAL_PRIORITY_LOWEST	signals.h	65;"	d
PURPLE_SMILEY	smiley.h	48;"	d
PURPLE_SMILEY_CLASS	smiley.h	49;"	d
PURPLE_SMILEY_GET_CLASS	smiley.h	52;"	d
PURPLE_SOUND_BUDDY_ARRIVE	sound.h	/^	PURPLE_SOUND_BUDDY_ARRIVE = 0, \/**< Buddy signs on.                       *\/$/;"	e	enum:_PurpleSoundEventID
PURPLE_SOUND_BUDDY_LEAVE	sound.h	/^	PURPLE_SOUND_BUDDY_LEAVE,      \/**< Buddy signs off.                      *\/$/;"	e	enum:_PurpleSoundEventID
PURPLE_SOUND_CHAT_JOIN	sound.h	/^	PURPLE_SOUND_CHAT_JOIN,        \/**< Someone joins a chat.                 *\/$/;"	e	enum:_PurpleSoundEventID
PURPLE_SOUND_CHAT_LEAVE	sound.h	/^	PURPLE_SOUND_CHAT_LEAVE,       \/**< Someone leaves a chat.                *\/$/;"	e	enum:_PurpleSoundEventID
PURPLE_SOUND_CHAT_NICK	sound.h	/^	PURPLE_SOUND_CHAT_NICK,        \/**< Someone says your name in a chat.     *\/$/;"	e	enum:_PurpleSoundEventID
PURPLE_SOUND_CHAT_SAY	sound.h	/^	PURPLE_SOUND_CHAT_SAY,         \/**< Someone else says somthing in a chat. *\/$/;"	e	enum:_PurpleSoundEventID
PURPLE_SOUND_CHAT_YOU_SAY	sound.h	/^	PURPLE_SOUND_CHAT_YOU_SAY,     \/**< You say something in a chat.          *\/$/;"	e	enum:_PurpleSoundEventID
PURPLE_SOUND_FIRST_RECEIVE	sound.h	/^	PURPLE_SOUND_FIRST_RECEIVE,    \/**< Receive an IM that starts a conv.     *\/$/;"	e	enum:_PurpleSoundEventID
PURPLE_SOUND_GOT_ATTENTION	sound.h	/^	PURPLE_SOUND_GOT_ATTENTION,	   \/**< Got an attention					  *\/$/;"	e	enum:_PurpleSoundEventID
PURPLE_SOUND_POUNCE_DEFAULT	sound.h	/^	PURPLE_SOUND_POUNCE_DEFAULT,   \/**< Default sound for a buddy pounce.     *\/$/;"	e	enum:_PurpleSoundEventID
PURPLE_SOUND_RECEIVE	sound.h	/^	PURPLE_SOUND_RECEIVE,          \/**< Receive an IM.                        *\/$/;"	e	enum:_PurpleSoundEventID
PURPLE_SOUND_SEND	sound.h	/^	PURPLE_SOUND_SEND,             \/**< Send an IM.                           *\/$/;"	e	enum:_PurpleSoundEventID
PURPLE_SOUND_THEME	sound-theme.h	45;"	d
PURPLE_SOUND_THEME_CLASS	sound-theme.h	46;"	d
PURPLE_SOUND_THEME_GET_CLASS	sound-theme.h	49;"	d
PURPLE_SOUND_THEME_GET_PRIVATE	sound-theme.c	26;"	d	file:
PURPLE_SOUND_THEME_H	sound-theme.h	27;"	d
PURPLE_SOUND_THEME_LOADER	sound-theme-loader.h	43;"	d
PURPLE_SOUND_THEME_LOADER_CLASS	sound-theme-loader.h	44;"	d
PURPLE_SOUND_THEME_LOADER_GET_CLASS	sound-theme-loader.h	47;"	d
PURPLE_SOUND_THEME_LOADER_H	sound-theme-loader.h	27;"	d
PURPLE_SSL_CERTIFICATE_INVALID	sslconn.h	/^	PURPLE_SSL_CERTIFICATE_INVALID = 3$/;"	e	enum:__anon98
PURPLE_SSL_CONNECT_FAILED	sslconn.h	/^	PURPLE_SSL_CONNECT_FAILED = 2,$/;"	e	enum:__anon98
PURPLE_SSL_DEFAULT_PORT	sslconn.h	40;"	d
PURPLE_SSL_HANDSHAKE_FAILED	sslconn.h	/^	PURPLE_SSL_HANDSHAKE_FAILED = 1,$/;"	e	enum:__anon98
PURPLE_STATUS_AVAILABLE	status.h	/^	PURPLE_STATUS_AVAILABLE,$/;"	e	enum:__anon33
PURPLE_STATUS_AWAY	status.h	/^	PURPLE_STATUS_AWAY,$/;"	e	enum:__anon33
PURPLE_STATUS_EXTENDED_AWAY	status.h	/^	PURPLE_STATUS_EXTENDED_AWAY,$/;"	e	enum:__anon33
PURPLE_STATUS_INVISIBLE	status.h	/^	PURPLE_STATUS_INVISIBLE,$/;"	e	enum:__anon33
PURPLE_STATUS_MOBILE	status.h	/^	PURPLE_STATUS_MOBILE,$/;"	e	enum:__anon33
PURPLE_STATUS_MOOD	status.h	/^	PURPLE_STATUS_MOOD,$/;"	e	enum:__anon33
PURPLE_STATUS_NUM_PRIMITIVES	status.h	/^	PURPLE_STATUS_NUM_PRIMITIVES$/;"	e	enum:__anon33
PURPLE_STATUS_OFFLINE	status.h	/^	PURPLE_STATUS_OFFLINE,$/;"	e	enum:__anon33
PURPLE_STATUS_TUNE	status.h	/^	PURPLE_STATUS_TUNE,$/;"	e	enum:__anon33
PURPLE_STATUS_UNAVAILABLE	status.h	/^	PURPLE_STATUS_UNAVAILABLE,$/;"	e	enum:__anon33
PURPLE_STATUS_UNSET	status.h	/^	PURPLE_STATUS_UNSET = 0,$/;"	e	enum:__anon33
PURPLE_STRING_FORMAT_TYPE_HTML	pluginpref.h	/^	PURPLE_STRING_FORMAT_TYPE_HTML      = 1 << 1      \/**< The string can be in HTML. *\/$/;"	e	enum:__anon93
PURPLE_STRING_FORMAT_TYPE_MULTILINE	pluginpref.h	/^	PURPLE_STRING_FORMAT_TYPE_MULTILINE = 1 << 0,     \/**< The string can have newlines. *\/$/;"	e	enum:__anon93
PURPLE_STRING_FORMAT_TYPE_NONE	pluginpref.h	/^	PURPLE_STRING_FORMAT_TYPE_NONE      = 0,          \/**< The string is plain text. *\/$/;"	e	enum:__anon93
PURPLE_STUN_NAT_TYPE_FULL_CONE	stun.h	/^	PURPLE_STUN_NAT_TYPE_FULL_CONE,$/;"	e	enum:__anon92
PURPLE_STUN_NAT_TYPE_PORT_RESTRICTED_CONE	stun.h	/^	PURPLE_STUN_NAT_TYPE_PORT_RESTRICTED_CONE,$/;"	e	enum:__anon92
PURPLE_STUN_NAT_TYPE_PUBLIC_IP	stun.h	/^	PURPLE_STUN_NAT_TYPE_PUBLIC_IP,$/;"	e	enum:__anon92
PURPLE_STUN_NAT_TYPE_RESTRICTED_CONE	stun.h	/^	PURPLE_STUN_NAT_TYPE_RESTRICTED_CONE,$/;"	e	enum:__anon92
PURPLE_STUN_NAT_TYPE_SYMMETRIC	stun.h	/^	PURPLE_STUN_NAT_TYPE_SYMMETRIC$/;"	e	enum:__anon92
PURPLE_STUN_NAT_TYPE_UNKNOWN_NAT	stun.h	/^	PURPLE_STUN_NAT_TYPE_UNKNOWN_NAT,$/;"	e	enum:__anon92
PURPLE_STUN_STATUS_DISCOVERED	stun.h	/^	PURPLE_STUN_STATUS_DISCOVERED$/;"	e	enum:__anon91
PURPLE_STUN_STATUS_DISCOVERING	stun.h	/^	PURPLE_STUN_STATUS_DISCOVERING,$/;"	e	enum:__anon91
PURPLE_STUN_STATUS_UNDISCOVERED	stun.h	/^	PURPLE_STUN_STATUS_UNDISCOVERED = -1,$/;"	e	enum:__anon91
PURPLE_STUN_STATUS_UNKNOWN	stun.h	/^	PURPLE_STUN_STATUS_UNKNOWN, \/* no STUN server reachable *\/$/;"	e	enum:__anon91
PURPLE_SUBTYPE_ACCOUNT	value.h	/^	PURPLE_SUBTYPE_ACCOUNT,$/;"	e	enum:__anon17
PURPLE_SUBTYPE_BLIST	value.h	/^	PURPLE_SUBTYPE_BLIST,$/;"	e	enum:__anon17
PURPLE_SUBTYPE_BLIST_BUDDY	value.h	/^	PURPLE_SUBTYPE_BLIST_BUDDY,$/;"	e	enum:__anon17
PURPLE_SUBTYPE_BLIST_CHAT	value.h	/^	PURPLE_SUBTYPE_BLIST_CHAT,$/;"	e	enum:__anon17
PURPLE_SUBTYPE_BLIST_GROUP	value.h	/^	PURPLE_SUBTYPE_BLIST_GROUP,$/;"	e	enum:__anon17
PURPLE_SUBTYPE_BLIST_NODE	value.h	/^	PURPLE_SUBTYPE_BLIST_NODE,$/;"	e	enum:__anon17
PURPLE_SUBTYPE_BUDDY_ICON	value.h	/^	PURPLE_SUBTYPE_BUDDY_ICON,$/;"	e	enum:__anon17
PURPLE_SUBTYPE_CERTIFICATEPOOL	value.h	/^	PURPLE_SUBTYPE_CERTIFICATEPOOL,$/;"	e	enum:__anon17
PURPLE_SUBTYPE_CHATBUDDY	value.h	/^	PURPLE_SUBTYPE_CHATBUDDY$/;"	e	enum:__anon17
PURPLE_SUBTYPE_CIPHER	value.h	/^	PURPLE_SUBTYPE_CIPHER,$/;"	e	enum:__anon17
PURPLE_SUBTYPE_CONNECTION	value.h	/^	PURPLE_SUBTYPE_CONNECTION,$/;"	e	enum:__anon17
PURPLE_SUBTYPE_CONVERSATION	value.h	/^	PURPLE_SUBTYPE_CONVERSATION,$/;"	e	enum:__anon17
PURPLE_SUBTYPE_LOG	value.h	/^	PURPLE_SUBTYPE_LOG,$/;"	e	enum:__anon17
PURPLE_SUBTYPE_PLUGIN	value.h	/^	PURPLE_SUBTYPE_PLUGIN,$/;"	e	enum:__anon17
PURPLE_SUBTYPE_SAVEDSTATUS	value.h	/^	PURPLE_SUBTYPE_SAVEDSTATUS,$/;"	e	enum:__anon17
PURPLE_SUBTYPE_STATUS	value.h	/^	PURPLE_SUBTYPE_STATUS,$/;"	e	enum:__anon17
PURPLE_SUBTYPE_STORED_IMAGE	value.h	/^	PURPLE_SUBTYPE_STORED_IMAGE,$/;"	e	enum:__anon17
PURPLE_SUBTYPE_UNKNOWN	value.h	/^	PURPLE_SUBTYPE_UNKNOWN = 0,$/;"	e	enum:__anon17
PURPLE_SUBTYPE_USERINFO	value.h	/^	PURPLE_SUBTYPE_USERINFO,$/;"	e	enum:__anon17
PURPLE_SUBTYPE_XFER	value.h	/^	PURPLE_SUBTYPE_XFER,$/;"	e	enum:__anon17
PURPLE_SUBTYPE_XMLNODE	value.h	/^	PURPLE_SUBTYPE_XMLNODE,$/;"	e	enum:__anon17
PURPLE_THEME	theme.h	43;"	d
PURPLE_THEME_CLASS	theme.h	44;"	d
PURPLE_THEME_GET_CLASS	theme.h	47;"	d
PURPLE_THEME_GET_PRIVATE	theme.c	27;"	d	file:
PURPLE_THEME_H	theme.h	27;"	d
PURPLE_THEME_LOADER	theme-loader.h	44;"	d
PURPLE_THEME_LOADER_CLASS	theme-loader.h	45;"	d
PURPLE_THEME_LOADER_GET_CLASS	theme-loader.h	48;"	d
PURPLE_THEME_LOADER_GET_PRIVATE	theme-loader.c	26;"	d	file:
PURPLE_THEME_LOADER_H	theme-loader.h	27;"	d
PURPLE_THEME_MANAGER	theme-manager.h	41;"	d
PURPLE_THEME_MANAGER_CLASS	theme-manager.h	42;"	d
PURPLE_THEME_MANAGER_H	theme-manager.h	28;"	d
PURPLE_TIME_T_MODIFIER	internal.h	144;"	d
PURPLE_TIME_T_MODIFIER	internal.h	146;"	d
PURPLE_TUNE_ALBUM	status.h	139;"	d
PURPLE_TUNE_ARTIST	status.h	137;"	d
PURPLE_TUNE_COMMENT	status.h	141;"	d
PURPLE_TUNE_FULL	status.h	146;"	d
PURPLE_TUNE_GENRE	status.h	140;"	d
PURPLE_TUNE_TIME	status.h	143;"	d
PURPLE_TUNE_TITLE	status.h	138;"	d
PURPLE_TUNE_TRACK	status.h	142;"	d
PURPLE_TUNE_URL	status.h	145;"	d
PURPLE_TUNE_YEAR	status.h	144;"	d
PURPLE_TYPED	conversation.h	/^	PURPLE_TYPED            \/**< Stopped typing momentarily. *\/$/;"	e	enum:__anon58
PURPLE_TYPE_BOOLEAN	value.h	/^	PURPLE_TYPE_BOOLEAN,      \/**< Boolean.                          *\/$/;"	e	enum:__anon16
PURPLE_TYPE_BOXED	value.h	/^	PURPLE_TYPE_BOXED         \/**< Boxed pointer with specific type. *\/$/;"	e	enum:__anon16
PURPLE_TYPE_CHAR	value.h	/^	PURPLE_TYPE_CHAR,         \/**< Character.                        *\/$/;"	e	enum:__anon16
PURPLE_TYPE_DESKTOP_ITEM	desktopitem.h	83;"	d
PURPLE_TYPE_ENUM	value.h	/^	PURPLE_TYPE_ENUM,         \/**< Enum.                             *\/$/;"	e	enum:__anon16
PURPLE_TYPE_INT	value.h	/^	PURPLE_TYPE_INT,          \/**< Integer.                          *\/$/;"	e	enum:__anon16
PURPLE_TYPE_INT64	value.h	/^	PURPLE_TYPE_INT64,        \/**< 64-bit integer.                   *\/$/;"	e	enum:__anon16
PURPLE_TYPE_LONG	value.h	/^	PURPLE_TYPE_LONG,         \/**< Long integer.                     *\/$/;"	e	enum:__anon16
PURPLE_TYPE_MEDIA	media.h	39;"	d
PURPLE_TYPE_MEDIA_BACKEND	media/backend-iface.h	37;"	d
PURPLE_TYPE_MEDIA_BACKEND_FS2	media/backend-fs2.h	39;"	d
PURPLE_TYPE_MEDIA_CANDIDATE	media/candidate.h	36;"	d
PURPLE_TYPE_MEDIA_CANDIDATE_TYPE	media/enum-types.h	34;"	d
PURPLE_TYPE_MEDIA_CODEC	media/codec.h	41;"	d
PURPLE_TYPE_MEDIA_ELEMENT_INFO	media-gst.h	38;"	d
PURPLE_TYPE_MEDIA_ELEMENT_TYPE	media-gst.h	37;"	d
PURPLE_TYPE_MEDIA_MANAGER	mediamanager.h	43;"	d
PURPLE_TYPE_MEDIA_NETWORK_PROTOCOL	media/enum-types.h	37;"	d
PURPLE_TYPE_MEDIA_SESSION_TYPE	media/enum-types.h	38;"	d
PURPLE_TYPE_OBJECT	value.h	/^	PURPLE_TYPE_OBJECT,       \/**< Object pointer.                   *\/$/;"	e	enum:__anon16
PURPLE_TYPE_POINTER	value.h	/^	PURPLE_TYPE_POINTER,      \/**< Generic pointer.                  *\/$/;"	e	enum:__anon16
PURPLE_TYPE_SHORT	value.h	/^	PURPLE_TYPE_SHORT,        \/**< Short integer.                    *\/$/;"	e	enum:__anon16
PURPLE_TYPE_SMILEY	smiley.h	47;"	d
PURPLE_TYPE_SOUND_THEME	sound-theme.h	44;"	d
PURPLE_TYPE_SOUND_THEME_LOADER	sound-theme-loader.h	42;"	d
PURPLE_TYPE_STRING	value.h	/^	PURPLE_TYPE_STRING,       \/**< String.                           *\/$/;"	e	enum:__anon16
PURPLE_TYPE_SUBTYPE	value.h	/^	PURPLE_TYPE_SUBTYPE,      \/**< Subtype.                          *\/$/;"	e	enum:__anon16
PURPLE_TYPE_THEME	theme.h	42;"	d
PURPLE_TYPE_THEME_LOADER	theme-loader.h	43;"	d
PURPLE_TYPE_THEME_MANAGER	theme-manager.h	40;"	d
PURPLE_TYPE_UCHAR	value.h	/^	PURPLE_TYPE_UCHAR,        \/**< Unsigned character.               *\/$/;"	e	enum:__anon16
PURPLE_TYPE_UINT	value.h	/^	PURPLE_TYPE_UINT,         \/**< Unsigned integer.                 *\/$/;"	e	enum:__anon16
PURPLE_TYPE_UINT64	value.h	/^	PURPLE_TYPE_UINT64,       \/**< 64-bit unsigned integer.          *\/$/;"	e	enum:__anon16
PURPLE_TYPE_ULONG	value.h	/^	PURPLE_TYPE_ULONG,        \/**< Unsigned long integer.            *\/$/;"	e	enum:__anon16
PURPLE_TYPE_UNKNOWN	value.h	/^	PURPLE_TYPE_UNKNOWN = 0,  \/**< Unknown type.                     *\/$/;"	e	enum:__anon16
PURPLE_TYPE_USHORT	value.h	/^	PURPLE_TYPE_USHORT,       \/**< Unsigned short integer.           *\/$/;"	e	enum:__anon16
PURPLE_TYPING	conversation.h	/^	PURPLE_TYPING,          \/**< Currently typing.           *\/$/;"	e	enum:__anon58
PURPLE_UPNP_STATUS_DISCOVERED	upnp.c	/^	PURPLE_UPNP_STATUS_DISCOVERED$/;"	e	enum:__anon62	file:
PURPLE_UPNP_STATUS_DISCOVERING	upnp.c	/^	PURPLE_UPNP_STATUS_DISCOVERING,$/;"	e	enum:__anon62	file:
PURPLE_UPNP_STATUS_UNABLE_TO_DISCOVER	upnp.c	/^	PURPLE_UPNP_STATUS_UNABLE_TO_DISCOVER,$/;"	e	enum:__anon62	file:
PURPLE_UPNP_STATUS_UNDISCOVERED	upnp.c	/^	PURPLE_UPNP_STATUS_UNDISCOVERED = -1,$/;"	e	enum:__anon62	file:
PURPLE_VERSION_CHECK	version.h	34;"	d
PURPLE_WEBSITE	internal.h	160;"	d
PURPLE_XFER_READY_NONE	ft.c	/^		PURPLE_XFER_READY_NONE = 0x0,$/;"	e	enum:_PurpleXferPrivData::__anon52	file:
PURPLE_XFER_READY_PRPL	ft.c	/^		PURPLE_XFER_READY_PRPL = 0x2,$/;"	e	enum:_PurpleXferPrivData::__anon52	file:
PURPLE_XFER_READY_UI	ft.c	/^		PURPLE_XFER_READY_UI   = 0x1,$/;"	e	enum:_PurpleXferPrivData::__anon52	file:
PURPLE_XFER_RECEIVE	ft.h	/^	PURPLE_XFER_RECEIVE       \/**< File receiving.             *\/$/;"	e	enum:__anon22
PURPLE_XFER_SEND	ft.h	/^	PURPLE_XFER_SEND,         \/**< File sending.               *\/$/;"	e	enum:__anon22
PURPLE_XFER_STATUS_ACCEPTED	ft.h	/^	PURPLE_XFER_STATUS_ACCEPTED,      \/**< Receive accepted, but destination file not selected yet *\/$/;"	e	enum:__anon23
PURPLE_XFER_STATUS_CANCEL_LOCAL	ft.h	/^	PURPLE_XFER_STATUS_CANCEL_LOCAL,  \/**< The xfer was cancelled by us. *\/$/;"	e	enum:__anon23
PURPLE_XFER_STATUS_CANCEL_REMOTE	ft.h	/^	PURPLE_XFER_STATUS_CANCEL_REMOTE  \/**< The xfer was cancelled by the other end, or we couldn't connect. *\/$/;"	e	enum:__anon23
PURPLE_XFER_STATUS_DONE	ft.h	/^	PURPLE_XFER_STATUS_DONE,          \/**< The xfer completed successfully. *\/$/;"	e	enum:__anon23
PURPLE_XFER_STATUS_NOT_STARTED	ft.h	/^	PURPLE_XFER_STATUS_NOT_STARTED,   \/**< It hasn't started yet. *\/$/;"	e	enum:__anon23
PURPLE_XFER_STATUS_STARTED	ft.h	/^	PURPLE_XFER_STATUS_STARTED,       \/**< purple_xfer_start has been called. *\/$/;"	e	enum:__anon23
PURPLE_XFER_STATUS_UNKNOWN	ft.h	/^	PURPLE_XFER_STATUS_UNKNOWN = 0,   \/**< Unknown, the xfer may be null. *\/$/;"	e	enum:__anon23
PURPLE_XFER_UNKNOWN	ft.h	/^	PURPLE_XFER_UNKNOWN = 0,  \/**< Unknown file transfer type. *\/$/;"	e	enum:__anon22
PounceParserData	pounce.c	/^} PounceParserData;$/;"	t	typeref:struct:__anon7	file:
PurpleAccount	account.h	/^typedef struct _PurpleAccount      PurpleAccount;$/;"	t	typeref:struct:_PurpleAccount
PurpleAccountOption	accountopt.h	/^} PurpleAccountOption;$/;"	t	typeref:struct:__anon65
PurpleAccountPrivate	account.c	/^} PurpleAccountPrivate;$/;"	t	typeref:struct:__anon1	file:
PurpleAccountRegistrationCb	account.h	/^typedef void (*PurpleAccountRegistrationCb)(PurpleAccount *account, gboolean succeeded, void *user_data);$/;"	t
PurpleAccountRequestAuthorizationCb	account.h	/^typedef void (*PurpleAccountRequestAuthorizationCb)(void *);$/;"	t
PurpleAccountRequestInfo	account.c	/^} PurpleAccountRequestInfo;$/;"	t	typeref:struct:__anon4	file:
PurpleAccountRequestResponse	account.h	/^} PurpleAccountRequestResponse;$/;"	t	typeref:enum:__anon86
PurpleAccountRequestType	account.h	/^} PurpleAccountRequestType;$/;"	t	typeref:enum:__anon85
PurpleAccountSetting	account.c	/^} PurpleAccountSetting;$/;"	t	typeref:struct:__anon2	file:
PurpleAccountUiOps	account.h	/^typedef struct _PurpleAccountUiOps PurpleAccountUiOps;$/;"	t	typeref:struct:_PurpleAccountUiOps
PurpleAccountUnregistrationCb	account.h	/^typedef void (*PurpleAccountUnregistrationCb)(PurpleAccount *account, gboolean succeeded, void *user_data);$/;"	t
PurpleAccountUserSplit	accountopt.h	/^} PurpleAccountUserSplit;$/;"	t	typeref:struct:__anon67
PurpleAttentionType	prpl.h	/^typedef struct _PurpleAttentionType PurpleAttentionType;$/;"	t	typeref:struct:_PurpleAttentionType
PurpleAutoAwayState	idle.c	/^} PurpleAutoAwayState;$/;"	t	typeref:enum:__anon50	file:
PurpleBlistNode	blist.h	/^typedef struct _PurpleBlistNode PurpleBlistNode;$/;"	t	typeref:struct:_PurpleBlistNode
PurpleBlistNodeFlags	blist.h	/^} PurpleBlistNodeFlags;$/;"	t	typeref:enum:__anon104
PurpleBlistNodeType	blist.h	/^} PurpleBlistNodeType;$/;"	t	typeref:enum:__anon103
PurpleBlistUiOps	blist.h	/^typedef struct _PurpleBlistUiOps PurpleBlistUiOps;$/;"	t	typeref:struct:_PurpleBlistUiOps
PurpleBuddy	blist.h	/^typedef struct _PurpleBuddy PurpleBuddy;$/;"	t	typeref:struct:_PurpleBuddy
PurpleBuddyIcon	buddyicon.h	/^typedef struct _PurpleBuddyIcon PurpleBuddyIcon;$/;"	t	typeref:struct:_PurpleBuddyIcon
PurpleBuddyIconSpec	prpl.h	/^typedef struct _PurpleBuddyIconSpec PurpleBuddyIconSpec;$/;"	t	typeref:struct:_PurpleBuddyIconSpec
PurpleBuddyList	blist.h	/^typedef struct _PurpleBuddyList PurpleBuddyList;$/;"	t	typeref:struct:_PurpleBuddyList
PurpleCallback	signals.h	/^typedef void (*PurpleCallback)(void);$/;"	t
PurpleCertificate	certificate.h	/^typedef struct _PurpleCertificate PurpleCertificate;$/;"	t	typeref:struct:_PurpleCertificate
PurpleCertificateInvalidityFlags	certificate.c	/^} PurpleCertificateInvalidityFlags;$/;"	t	typeref:enum:__anon12	file:
PurpleCertificatePool	certificate.h	/^typedef struct _PurpleCertificatePool PurpleCertificatePool;$/;"	t	typeref:struct:_PurpleCertificatePool
PurpleCertificateScheme	certificate.h	/^typedef struct _PurpleCertificateScheme PurpleCertificateScheme;$/;"	t	typeref:struct:_PurpleCertificateScheme
PurpleCertificateVerificationRequest	certificate.h	/^typedef struct _PurpleCertificateVerificationRequest PurpleCertificateVerificationRequest;$/;"	t	typeref:struct:_PurpleCertificateVerificationRequest
PurpleCertificateVerificationStatus	certificate.h	/^} PurpleCertificateVerificationStatus;$/;"	t	typeref:enum:__anon55
PurpleCertificateVerifiedCallback	certificate.h	/^typedef void (*PurpleCertificateVerifiedCallback)$/;"	t
PurpleCertificateVerifier	certificate.h	/^typedef struct _PurpleCertificateVerifier PurpleCertificateVerifier;$/;"	t	typeref:struct:_PurpleCertificateVerifier
PurpleChat	blist.h	/^typedef struct _PurpleChat PurpleChat;$/;"	t	typeref:struct:_PurpleChat
PurpleCipher	cipher.h	/^typedef struct _PurpleCipher			PurpleCipher;			\/**< A handle to a PurpleCipher	*\/$/;"	t	typeref:struct:_PurpleCipher
PurpleCipherBatchMode	cipher.h	/^} PurpleCipherBatchMode;$/;"	t	typeref:enum:_PurpleCipherBatchMode
PurpleCipherCaps	cipher.h	/^} PurpleCipherCaps;$/;"	t	typeref:enum:_PurpleCipherCaps
PurpleCipherContext	cipher.h	/^typedef struct _PurpleCipherContext	PurpleCipherContext;	\/**< A context for a PurpleCipher	*\/$/;"	t	typeref:struct:_PurpleCipherContext
PurpleCipherOps	cipher.h	/^typedef struct _PurpleCipherOps		PurpleCipherOps;		\/**< Ops for a PurpleCipher		*\/$/;"	t	typeref:struct:_PurpleCipherOps
PurpleCircBuffer	circbuffer.h	/^} PurpleCircBuffer;$/;"	t	typeref:struct:_PurpleCircBuffer
PurpleCmd	cmds.c	/^} PurpleCmd;$/;"	t	typeref:struct:_PurpleCmd	file:
PurpleCmdFlag	cmds.h	/^} PurpleCmdFlag;$/;"	t	typeref:enum:_PurpleCmdFlag
PurpleCmdFunc	cmds.h	/^typedef PurpleCmdRet (*PurpleCmdFunc)(PurpleConversation *, const gchar *cmd,$/;"	t
PurpleCmdId	cmds.h	/^typedef guint PurpleCmdId;$/;"	t
PurpleCmdPriority	cmds.h	/^} PurpleCmdPriority;$/;"	t	typeref:enum:_PurpleCmdPriority
PurpleCmdRet	cmds.h	/^} PurpleCmdRet;$/;"	t	typeref:enum:_PurpleCmdRet
PurpleCmdStatus	cmds.h	/^} PurpleCmdStatus;$/;"	t	typeref:enum:_PurpleCmdStatus
PurpleConnection	connection.h	/^typedef struct _PurpleConnection PurpleConnection;$/;"	t	typeref:struct:_PurpleConnection
PurpleConnectionError	connection.h	/^} PurpleConnectionError;$/;"	t	typeref:enum:__anon73
PurpleConnectionErrorInfo	connection.h	/^} PurpleConnectionErrorInfo;$/;"	t	typeref:struct:__anon74
PurpleConnectionFlags	connection.h	/^} PurpleConnectionFlags;$/;"	t	typeref:enum:__anon71
PurpleConnectionState	connection.h	/^} PurpleConnectionState;$/;"	t	typeref:enum:__anon72
PurpleConnectionUiOps	connection.h	/^} PurpleConnectionUiOps;$/;"	t	typeref:struct:__anon75
PurpleContact	blist.h	/^typedef struct _PurpleContact PurpleContact;$/;"	t	typeref:struct:_PurpleContact
PurpleConvChat	conversation.h	/^typedef struct _PurpleConvChat          PurpleConvChat;$/;"	t	typeref:struct:_PurpleConvChat
PurpleConvChatBuddy	conversation.h	/^typedef struct _PurpleConvChatBuddy     PurpleConvChatBuddy;$/;"	t	typeref:struct:_PurpleConvChatBuddy
PurpleConvChatBuddyFlags	conversation.h	/^} PurpleConvChatBuddyFlags;$/;"	t	typeref:enum:__anon60
PurpleConvIm	conversation.h	/^typedef struct _PurpleConvIm            PurpleConvIm;$/;"	t	typeref:struct:_PurpleConvIm
PurpleConvMessage	conversation.h	/^typedef struct _PurpleConvMessage       PurpleConvMessage;$/;"	t	typeref:struct:_PurpleConvMessage
PurpleConvUpdateType	conversation.h	/^} PurpleConvUpdateType;$/;"	t	typeref:enum:__anon57
PurpleConversation	conversation.h	/^typedef struct _PurpleConversation      PurpleConversation;$/;"	t	typeref:struct:_PurpleConversation
PurpleConversationType	conversation.h	/^} PurpleConversationType;$/;"	t	typeref:enum:__anon56
PurpleConversationUiOps	conversation.h	/^typedef struct _PurpleConversationUiOps PurpleConversationUiOps;$/;"	t	typeref:struct:_PurpleConversationUiOps
PurpleCore	core.c	/^struct PurpleCore$/;"	s	file:
PurpleCore	core.h	/^typedef struct PurpleCore PurpleCore;$/;"	t	typeref:struct:PurpleCore
PurpleCore::reserved	core.c	/^	void *reserved;$/;"	m	struct:PurpleCore	file:	access:public
PurpleCore::ui	core.c	/^	char *ui;$/;"	m	struct:PurpleCore	file:	access:public
PurpleCoreUiOps	core.h	/^} PurpleCoreUiOps;$/;"	t	typeref:struct:__anon21
PurpleDBusBinding	dbus-bindings.h	/^} PurpleDBusBinding;$/;"	t	typeref:struct:__anon134
PurpleDBusType	dbus-server.h	/^typedef struct _PurpleDBusType PurpleDBusType;$/;"	t	typeref:struct:_PurpleDBusType
PurpleDebugLevel	debug.h	/^} PurpleDebugLevel;$/;"	t	typeref:enum:__anon30
PurpleDebugUiOps	debug.h	/^} PurpleDebugUiOps;$/;"	t	typeref:struct:__anon31
PurpleDesktopItem	desktopitem.h	/^typedef struct _PurpleDesktopItem PurpleDesktopItem;$/;"	t	typeref:struct:_PurpleDesktopItem
PurpleDesktopItemType	desktopitem.h	/^} PurpleDesktopItemType;$/;"	t	typeref:enum:__anon51
PurpleDnsQueryConnectFunction	dnsquery.h	/^typedef void (*PurpleDnsQueryConnectFunction)(GSList *hosts, gpointer data, const char *error_message);$/;"	t
PurpleDnsQueryData	dnsquery.h	/^typedef struct _PurpleDnsQueryData PurpleDnsQueryData;$/;"	t	typeref:struct:_PurpleDnsQueryData
PurpleDnsQueryFailedCallback	dnsquery.h	/^typedef void  (*PurpleDnsQueryFailedCallback) (PurpleDnsQueryData *query_data, const gchar *error_message);$/;"	t
PurpleDnsQueryResolvedCallback	dnsquery.h	/^typedef void  (*PurpleDnsQueryResolvedCallback) (PurpleDnsQueryData *query_data, GSList *hosts);$/;"	t
PurpleDnsQueryResolverProcess	dnsquery.c	/^typedef struct _PurpleDnsQueryResolverProcess PurpleDnsQueryResolverProcess;$/;"	t	typeref:struct:_PurpleDnsQueryResolverProcess	file:
PurpleDnsQueryUiOps	dnsquery.h	/^} PurpleDnsQueryUiOps;$/;"	t	typeref:struct:__anon78
PurpleDnsType	dnssrv.h	/^enum PurpleDnsType {$/;"	g
PurpleDnsTypeSrv	dnssrv.h	/^	PurpleDnsTypeSrv = 33$/;"	e	enum:PurpleDnsType
PurpleDnsTypeTxt	dnssrv.h	/^	PurpleDnsTypeTxt = 16,$/;"	e	enum:PurpleDnsType
PurpleEventLoopUiOps	eventloop.h	/^typedef struct _PurpleEventLoopUiOps PurpleEventLoopUiOps;$/;"	t	typeref:struct:_PurpleEventLoopUiOps
PurpleFilterAccountFunc	account.h	/^typedef gboolean (*PurpleFilterAccountFunc)(PurpleAccount *account);$/;"	t
PurpleGetPublicAliasFailureCallback	account.h	/^typedef void (*PurpleGetPublicAliasFailureCallback)(PurpleAccount *account, const char *error);$/;"	t
PurpleGetPublicAliasSuccessCallback	account.h	/^typedef void (*PurpleGetPublicAliasSuccessCallback)(PurpleAccount *account, const char *alias);$/;"	t
PurpleGroup	blist.h	/^typedef struct _PurpleGroup PurpleGroup;$/;"	t	typeref:struct:_PurpleGroup
PurpleIconScaleRules	prpl.h	/^} PurpleIconScaleRules;$/;"	t	typeref:enum:__anon95
PurpleIdleUiOps	idle.h	/^} PurpleIdleUiOps;$/;"	t	typeref:struct:__anon70
PurpleInfoFieldFormatCallback	util.h	/^typedef char *(*PurpleInfoFieldFormatCallback)(const char *field, size_t len);$/;"	t
PurpleInputCondition	eventloop.h	/^} PurpleInputCondition;$/;"	t	typeref:enum:__anon53
PurpleInputFunction	eventloop.h	/^typedef void (*PurpleInputFunction)(gpointer, gint, PurpleInputCondition);$/;"	t
PurpleInstanceData	signals.c	/^} PurpleInstanceData;$/;"	t	typeref:struct:__anon100	file:
PurpleKeyValuePair	util.h	/^typedef struct _PurpleKeyValuePair PurpleKeyValuePair;$/;"	t	typeref:struct:_PurpleKeyValuePair
PurpleLog	log.h	/^typedef struct _PurpleLog PurpleLog;$/;"	t	typeref:struct:_PurpleLog
PurpleLogCommonLoggerData	log.h	/^typedef struct _PurpleLogCommonLoggerData PurpleLogCommonLoggerData;$/;"	t	typeref:struct:_PurpleLogCommonLoggerData
PurpleLogLogger	log.h	/^typedef struct _PurpleLogLogger PurpleLogLogger;$/;"	t	typeref:struct:_PurpleLogLogger
PurpleLogReadFlags	log.h	/^} PurpleLogReadFlags;$/;"	t	typeref:enum:__anon80
PurpleLogSet	log.h	/^typedef struct _PurpleLogSet PurpleLogSet;$/;"	t	typeref:struct:_PurpleLogSet
PurpleLogSetCallback	log.h	/^typedef void (*PurpleLogSetCallback) (GHashTable *sets, PurpleLogSet *set);$/;"	t
PurpleLogType	log.h	/^} PurpleLogType;$/;"	t	typeref:enum:__anon79
PurpleMedia	media.h	/^typedef struct _PurpleMedia PurpleMedia;$/;"	t	typeref:struct:_PurpleMedia
PurpleMediaBackend	media/backend-iface.h	/^typedef struct _PurpleMediaBackend PurpleMediaBackend;$/;"	t	typeref:struct:_PurpleMediaBackend
PurpleMediaBackendFs2	media/backend-fs2.h	/^typedef struct _PurpleMediaBackendFs2 PurpleMediaBackendFs2;$/;"	t	typeref:struct:_PurpleMediaBackendFs2
PurpleMediaBackendFs2Class	media/backend-fs2.c	/^typedef struct _PurpleMediaBackendFs2Class PurpleMediaBackendFs2Class;$/;"	t	typeref:struct:_PurpleMediaBackendFs2Class	file:
PurpleMediaBackendFs2Private	media/backend-fs2.c	/^typedef struct _PurpleMediaBackendFs2Private PurpleMediaBackendFs2Private;$/;"	t	typeref:struct:_PurpleMediaBackendFs2Private	file:
PurpleMediaBackendFs2Session	media/backend-fs2.c	/^typedef struct _PurpleMediaBackendFs2Session PurpleMediaBackendFs2Session;$/;"	t	typeref:struct:_PurpleMediaBackendFs2Session	file:
PurpleMediaBackendFs2Stream	media/backend-fs2.c	/^typedef struct _PurpleMediaBackendFs2Stream PurpleMediaBackendFs2Stream;$/;"	t	typeref:struct:_PurpleMediaBackendFs2Stream	file:
PurpleMediaBackendIface	media/backend-iface.h	/^typedef struct _PurpleMediaBackendIface PurpleMediaBackendIface;$/;"	t	typeref:struct:_PurpleMediaBackendIface
PurpleMediaCandidate	media/candidate.h	/^typedef struct _PurpleMediaCandidate PurpleMediaCandidate;$/;"	t	typeref:struct:_PurpleMediaCandidate
PurpleMediaCandidateClass	media/candidate.c	/^typedef struct _PurpleMediaCandidateClass PurpleMediaCandidateClass;$/;"	t	typeref:struct:_PurpleMediaCandidateClass	file:
PurpleMediaCandidatePrivate	media/candidate.c	/^typedef struct _PurpleMediaCandidatePrivate PurpleMediaCandidatePrivate;$/;"	t	typeref:struct:_PurpleMediaCandidatePrivate	file:
PurpleMediaCandidateType	media/enum-types.h	/^} PurpleMediaCandidateType;$/;"	t	typeref:enum:__anon126
PurpleMediaCaps	media/enum-types.h	/^} PurpleMediaCaps;$/;"	t	typeref:enum:__anon127
PurpleMediaClass	media.c	/^typedef struct _PurpleMediaClass PurpleMediaClass;$/;"	t	typeref:struct:_PurpleMediaClass	file:
PurpleMediaCodec	media/codec.h	/^typedef struct _PurpleMediaCodec PurpleMediaCodec;$/;"	t	typeref:struct:_PurpleMediaCodec
PurpleMediaCodecClass	media/codec.c	/^typedef struct _PurpleMediaCodecClass PurpleMediaCodecClass;$/;"	t	typeref:struct:_PurpleMediaCodecClass	file:
PurpleMediaCodecPrivate	media/codec.c	/^typedef struct _PurpleMediaCodecPrivate PurpleMediaCodecPrivate;$/;"	t	typeref:struct:_PurpleMediaCodecPrivate	file:
PurpleMediaComponentType	media/enum-types.h	/^} PurpleMediaComponentType;$/;"	t	typeref:enum:__anon128
PurpleMediaElementCreateCallback	media-gst.h	/^typedef GstElement *(*PurpleMediaElementCreateCallback)(PurpleMedia *media,$/;"	t
PurpleMediaElementInfo	media-gst.h	/^typedef struct _PurpleMediaElementInfo PurpleMediaElementInfo;$/;"	t	typeref:struct:_PurpleMediaElementInfo
PurpleMediaElementInfoClass	media-gst.h	/^typedef struct _PurpleMediaElementInfoClass PurpleMediaElementInfoClass;$/;"	t	typeref:struct:_PurpleMediaElementInfoClass
PurpleMediaElementInfoPrivate	mediamanager.c	/^typedef struct _PurpleMediaElementInfoPrivate PurpleMediaElementInfoPrivate;$/;"	t	typeref:struct:_PurpleMediaElementInfoPrivate	file:
PurpleMediaElementType	media-gst.h	/^} PurpleMediaElementType;$/;"	t	typeref:enum:__anon88
PurpleMediaInfoType	media/enum-types.h	/^} PurpleMediaInfoType;$/;"	t	typeref:enum:__anon129
PurpleMediaManager	mediamanager.h	/^typedef struct _PurpleMediaManager PurpleMediaManager;$/;"	t	typeref:struct:_PurpleMediaManager
PurpleMediaManagerClass	mediamanager.h	/^typedef struct _PurpleMediaManagerClass PurpleMediaManagerClass;$/;"	t	typeref:struct:_PurpleMediaManagerClass
PurpleMediaManagerPrivate	mediamanager.c	/^typedef struct _PurpleMediaManagerPrivate PurpleMediaManagerPrivate;$/;"	t	typeref:struct:_PurpleMediaManagerPrivate	file:
PurpleMediaNetworkProtocol	media/enum-types.h	/^} PurpleMediaNetworkProtocol;$/;"	t	typeref:enum:__anon130
PurpleMediaOutputWindow	mediamanager.c	/^typedef struct _PurpleMediaOutputWindow PurpleMediaOutputWindow;$/;"	t	typeref:struct:_PurpleMediaOutputWindow	file:
PurpleMediaPrivate	media.c	/^typedef struct _PurpleMediaPrivate PurpleMediaPrivate;$/;"	t	typeref:struct:_PurpleMediaPrivate	file:
PurpleMediaSession	media.c	/^typedef struct _PurpleMediaSession PurpleMediaSession;$/;"	t	typeref:struct:_PurpleMediaSession	file:
PurpleMediaSessionType	media/enum-types.h	/^} PurpleMediaSessionType;$/;"	t	typeref:enum:__anon131
PurpleMediaState	media/enum-types.h	/^} PurpleMediaState;$/;"	t	typeref:enum:__anon132
PurpleMediaStream	media.c	/^typedef struct _PurpleMediaStream PurpleMediaStream;$/;"	t	typeref:struct:_PurpleMediaStream	file:
PurpleMenuAction	util.h	/^typedef struct _PurpleMenuAction PurpleMenuAction;$/;"	t	typeref:struct:_PurpleMenuAction
PurpleMessageFlags	conversation.h	/^} PurpleMessageFlags;$/;"	t	typeref:enum:__anon59
PurpleMimeDocument	mime.h	/^typedef struct _PurpleMimeDocument PurpleMimeDocument;$/;"	t	typeref:struct:_PurpleMimeDocument
PurpleMimePart	mime.h	/^typedef struct _PurpleMimePart PurpleMimePart;$/;"	t	typeref:struct:_PurpleMimePart
PurpleMood	status.h	/^} PurpleMood;$/;"	t	typeref:struct:_PurpleMood
PurpleNetworkListenCallback	network.h	/^typedef void (*PurpleNetworkListenCallback) (int listenfd, gpointer data);$/;"	t
PurpleNetworkListenData	network.h	/^typedef struct _PurpleNetworkListenData PurpleNetworkListenData;$/;"	t	typeref:struct:_PurpleNetworkListenData
PurpleNotifyCloseCallback	notify.h	/^typedef void  (*PurpleNotifyCloseCallback) (gpointer user_data);$/;"	t
PurpleNotifyInfo	notify.c	/^} PurpleNotifyInfo;$/;"	t	typeref:struct:__anon135	file:
PurpleNotifyMsgType	notify.h	/^} PurpleNotifyMsgType;$/;"	t	typeref:enum:__anon113
PurpleNotifySearchButton	notify.h	/^} PurpleNotifySearchButton;$/;"	t	typeref:struct:__anon118
PurpleNotifySearchButtonType	notify.h	/^} PurpleNotifySearchButtonType;$/;"	t	typeref:enum:__anon114
PurpleNotifySearchColumn	notify.h	/^} PurpleNotifySearchColumn;$/;"	t	typeref:struct:__anon117
PurpleNotifySearchResults	notify.h	/^} PurpleNotifySearchResults;$/;"	t	typeref:struct:__anon115
PurpleNotifySearchResultsCallback	notify.h	/^typedef void (*PurpleNotifySearchResultsCallback)(PurpleConnection *c, GList *row,$/;"	t
PurpleNotifyType	notify.h	/^} PurpleNotifyType;$/;"	t	typeref:enum:__anon112
PurpleNotifyUiOps	notify.h	/^} PurpleNotifyUiOps;$/;"	t	typeref:struct:__anon119
PurpleNotifyUserInfo	notify.h	/^typedef struct _PurpleNotifyUserInfo	PurpleNotifyUserInfo;$/;"	t	typeref:struct:_PurpleNotifyUserInfo
PurpleNotifyUserInfoEntry	notify.h	/^typedef struct _PurpleNotifyUserInfoEntry	PurpleNotifyUserInfoEntry;$/;"	t	typeref:struct:_PurpleNotifyUserInfoEntry
PurpleNotifyUserInfoEntryType	notify.h	/^} PurpleNotifyUserInfoEntryType;$/;"	t	typeref:enum:__anon116
PurplePlugin	plugin.h	/^typedef struct _PurplePlugin           PurplePlugin;$/;"	t	typeref:struct:_PurplePlugin
PurplePluginAction	plugin.h	/^typedef struct _PurplePluginAction     PurplePluginAction;$/;"	t	typeref:struct:_PurplePluginAction
PurplePluginInfo	plugin.h	/^typedef struct _PurplePluginInfo       PurplePluginInfo;$/;"	t	typeref:struct:_PurplePluginInfo
PurplePluginIpcCommand	plugin.c	/^} PurplePluginIpcCommand;$/;"	t	typeref:struct:__anon11	file:
PurplePluginIpcInfo	plugin.c	/^} PurplePluginIpcInfo;$/;"	t	typeref:struct:__anon10	file:
PurplePluginLoaderInfo	plugin.h	/^typedef struct _PurplePluginLoaderInfo PurplePluginLoaderInfo;$/;"	t	typeref:struct:_PurplePluginLoaderInfo
PurplePluginPref	pluginpref.h	/^typedef struct _PurplePluginPref			PurplePluginPref;$/;"	t	typeref:struct:_PurplePluginPref
PurplePluginPrefFrame	pluginpref.h	/^typedef struct _PurplePluginPrefFrame		PurplePluginPrefFrame;$/;"	t	typeref:struct:_PurplePluginPrefFrame
PurplePluginPrefType	pluginpref.h	/^} PurplePluginPrefType;$/;"	t	typeref:enum:__anon94
PurplePluginPriority	plugin.h	/^typedef int PurplePluginPriority; \/**< Plugin priority. *\/$/;"	t
PurplePluginProtocolInfo	prpl.h	/^typedef struct _PurplePluginProtocolInfo PurplePluginProtocolInfo;$/;"	t	typeref:struct:_PurplePluginProtocolInfo
PurplePluginType	plugin.h	/^} PurplePluginType;$/;"	t	typeref:enum:__anon82
PurplePluginUiInfo	plugin.h	/^typedef struct _PurplePluginUiInfo     PurplePluginUiInfo;$/;"	t	typeref:struct:_PurplePluginUiInfo
PurplePmpInfo	nat-pmp.c	/^} PurplePmpInfo;$/;"	t	typeref:struct:__anon42	file:
PurplePmpIpRequest	nat-pmp.c	/^} PurplePmpIpRequest;$/;"	t	typeref:struct:__anon38	file:
PurplePmpIpResponse	nat-pmp.c	/^} PurplePmpIpResponse;$/;"	t	typeref:struct:__anon39	file:
PurplePmpMapRequest	nat-pmp.c	/^} PurplePmpMapRequest;$/;"	t	typeref:struct:__anon40	file:
PurplePmpMapResponse	nat-pmp.c	/^typedef struct _PurplePmpMapResponse PurplePmpMapResponse;$/;"	t	typeref:struct:_PurplePmpMapResponse	file:
PurplePmpType	nat-pmp.h	/^} PurplePmpType;$/;"	t	typeref:enum:__anon97
PurplePounce	pounce.h	/^typedef struct _PurplePounce PurplePounce;$/;"	t	typeref:struct:_PurplePounce
PurplePounceActionData	pounce.c	/^} PurplePounceActionData;$/;"	t	typeref:struct:__anon8	file:
PurplePounceCb	pounce.h	/^typedef void (*PurplePounceCb)(PurplePounce *, PurplePounceEvent, void *);$/;"	t
PurplePounceEvent	pounce.h	/^} PurplePounceEvent;$/;"	t	typeref:enum:__anon45
PurplePounceHandler	pounce.c	/^} PurplePounceHandler;$/;"	t	typeref:struct:__anon9	file:
PurplePounceOption	pounce.h	/^} PurplePounceOption;$/;"	t	typeref:enum:__anon46
PurplePrefCallback	prefs.h	/^typedef void (*PurplePrefCallback) (const char *name, PurplePrefType type,$/;"	t
PurplePrefType	prefs.h	/^} PurplePrefType;$/;"	t	typeref:enum:_PurplePrefType
PurplePresence	status.h	/^typedef struct _PurplePresence        PurplePresence;$/;"	t	typeref:struct:_PurplePresence
PurplePresenceContext	status.h	/^} PurplePresenceContext;$/;"	t	typeref:enum:__anon32
PurplePrivacyType	privacy.h	/^} PurplePrivacyType;$/;"	t	typeref:enum:_PurplePrivacyType
PurplePrivacyUiOps	privacy.h	/^} PurplePrivacyUiOps;$/;"	t	typeref:struct:__anon5
PurpleProtocolOptions	prpl.h	/^} PurpleProtocolOptions;$/;"	t	typeref:enum:__anon96
PurpleProxyConnectData	proxy.h	/^typedef struct _PurpleProxyConnectData PurpleProxyConnectData;$/;"	t	typeref:struct:_PurpleProxyConnectData
PurpleProxyConnectFunction	proxy.h	/^typedef void (*PurpleProxyConnectFunction)(gpointer data, gint source, const gchar *error_message);$/;"	t
PurpleProxyInfo	proxy.h	/^} PurpleProxyInfo;$/;"	t	typeref:struct:__anon29
PurpleProxyType	proxy.h	/^} PurpleProxyType;$/;"	t	typeref:enum:__anon28
PurpleRequestActionCb	request.h	/^typedef void (*PurpleRequestActionCb)(void *, int);$/;"	t
PurpleRequestChoiceCb	request.h	/^typedef void (*PurpleRequestChoiceCb)(void *, int);$/;"	t
PurpleRequestField	request.h	/^typedef struct _PurpleRequestField PurpleRequestField;$/;"	t	typeref:struct:_PurpleRequestField
PurpleRequestFieldGroup	request.h	/^} PurpleRequestFieldGroup;$/;"	t	typeref:struct:__anon139
PurpleRequestFieldType	request.h	/^} PurpleRequestFieldType;$/;"	t	typeref:enum:__anon137
PurpleRequestFields	request.h	/^} PurpleRequestFields;$/;"	t	typeref:struct:__anon138
PurpleRequestFieldsCb	request.h	/^typedef void (*PurpleRequestFieldsCb)(void *, PurpleRequestFields *fields);$/;"	t
PurpleRequestFileCb	request.h	/^typedef void (*PurpleRequestFileCb)(void *, const char *filename);$/;"	t
PurpleRequestInfo	request.c	/^} PurpleRequestInfo;$/;"	t	typeref:struct:__anon122	file:
PurpleRequestInputCb	request.h	/^typedef void (*PurpleRequestInputCb)(void *, const char *);$/;"	t
PurpleRequestType	request.h	/^} PurpleRequestType;$/;"	t	typeref:enum:__anon136
PurpleRequestUiOps	request.h	/^} PurpleRequestUiOps;$/;"	t	typeref:struct:__anon148
PurpleRoomlist	roomlist.h	/^typedef struct _PurpleRoomlist PurpleRoomlist;$/;"	t	typeref:struct:_PurpleRoomlist
PurpleRoomlistField	roomlist.h	/^typedef struct _PurpleRoomlistField PurpleRoomlistField;$/;"	t	typeref:struct:_PurpleRoomlistField
PurpleRoomlistFieldType	roomlist.h	/^} PurpleRoomlistFieldType;$/;"	t	typeref:enum:__anon121
PurpleRoomlistRoom	roomlist.h	/^typedef struct _PurpleRoomlistRoom PurpleRoomlistRoom;$/;"	t	typeref:struct:_PurpleRoomlistRoom
PurpleRoomlistRoomType	roomlist.h	/^} PurpleRoomlistRoomType;$/;"	t	typeref:enum:__anon120
PurpleRoomlistUiOps	roomlist.h	/^typedef struct _PurpleRoomlistUiOps PurpleRoomlistUiOps;$/;"	t	typeref:struct:_PurpleRoomlistUiOps
PurpleSavedStatus	savedstatuses.h	/^typedef struct _PurpleSavedStatus     PurpleSavedStatus;$/;"	t	typeref:struct:_PurpleSavedStatus
PurpleSavedStatusSub	savedstatuses.h	/^typedef struct _PurpleSavedStatusSub  PurpleSavedStatusSub;$/;"	t	typeref:struct:_PurpleSavedStatusSub
PurpleSetPublicAliasFailureCallback	account.h	/^typedef void (*PurpleSetPublicAliasFailureCallback)(PurpleAccount *account, const char *error);$/;"	t
PurpleSetPublicAliasSuccessCallback	account.h	/^typedef void (*PurpleSetPublicAliasSuccessCallback)(PurpleAccount *account, const char *new_alias);$/;"	t
PurpleSignalData	signals.c	/^} PurpleSignalData;$/;"	t	typeref:struct:__anon101	file:
PurpleSignalHandlerData	signals.c	/^} PurpleSignalHandlerData;$/;"	t	typeref:struct:__anon102	file:
PurpleSignalMarshalFunc	signals.h	/^typedef void (*PurpleSignalMarshalFunc)(PurpleCallback cb, va_list args,$/;"	t
PurpleSmiley	smiley.h	/^typedef struct _PurpleSmiley        PurpleSmiley;$/;"	t	typeref:struct:_PurpleSmiley
PurpleSmileyClass	smiley.h	/^typedef struct _PurpleSmileyClass   PurpleSmileyClass;$/;"	t	typeref:struct:_PurpleSmileyClass
PurpleSockaddr	util.c	/^} PurpleSockaddr;$/;"	t	typeref:union:purple_sockaddr	file:
PurpleSoundEventID	sound.h	/^} PurpleSoundEventID;$/;"	t	typeref:enum:_PurpleSoundEventID
PurpleSoundTheme	sound-theme.h	/^typedef struct _PurpleSoundTheme        PurpleSoundTheme;$/;"	t	typeref:struct:_PurpleSoundTheme
PurpleSoundThemeClass	sound-theme.h	/^typedef struct _PurpleSoundThemeClass   PurpleSoundThemeClass;$/;"	t	typeref:struct:_PurpleSoundThemeClass
PurpleSoundThemeLoader	sound-theme-loader.h	/^typedef struct _PurpleSoundThemeLoader        PurpleSoundThemeLoader;$/;"	t	typeref:struct:_PurpleSoundThemeLoader
PurpleSoundThemeLoaderClass	sound-theme-loader.h	/^typedef struct _PurpleSoundThemeLoaderClass   PurpleSoundThemeLoaderClass;$/;"	t	typeref:struct:_PurpleSoundThemeLoaderClass
PurpleSoundThemePrivate	sound-theme.c	/^} PurpleSoundThemePrivate;$/;"	t	typeref:struct:__anon87	file:
PurpleSoundUiOps	sound.h	/^} PurpleSoundUiOps;$/;"	t	typeref:struct:_PurpleSoundUiOps
PurpleSrvCallback	dnssrv.h	/^typedef void (*PurpleSrvCallback)(PurpleSrvResponse *resp, int results, gpointer data);$/;"	t
PurpleSrvInternalQuery	dnssrv.c	/^} PurpleSrvInternalQuery;$/;"	t	typeref:struct:_PurpleSrvInternalQuery	file:
PurpleSrvQueryData	dnssrv.h	/^typedef struct _PurpleSrvTxtQueryData PurpleSrvQueryData;$/;"	t	typeref:struct:_PurpleSrvTxtQueryData
PurpleSrvResponse	dnssrv.h	/^typedef struct _PurpleSrvResponse PurpleSrvResponse;$/;"	t	typeref:struct:_PurpleSrvResponse
PurpleSrvResponseContainer	dnssrv.c	/^} PurpleSrvResponseContainer;$/;"	t	typeref:struct:_PurpleSrvResponseContainer	file:
PurpleSrvTxtQueryData	dnssrv.h	/^typedef struct _PurpleSrvTxtQueryData PurpleSrvTxtQueryData;$/;"	t	typeref:struct:_PurpleSrvTxtQueryData
PurpleSrvTxtQueryFailedCallback	dnssrv.h	/^typedef void  (*PurpleSrvTxtQueryFailedCallback) (PurpleSrvTxtQueryData *query_data, const gchar *error_message);$/;"	t
PurpleSrvTxtQueryResolvedCallback	dnssrv.h	/^typedef void  (*PurpleSrvTxtQueryResolvedCallback) (PurpleSrvTxtQueryData *query_data, GList *records);$/;"	t
PurpleSrvTxtQueryUiOps	dnssrv.h	/^} PurpleSrvTxtQueryUiOps;$/;"	t	typeref:struct:__anon81
PurpleSslConnection	sslconn.h	/^typedef struct _PurpleSslConnection PurpleSslConnection;$/;"	t	typeref:struct:_PurpleSslConnection
PurpleSslErrorFunction	sslconn.h	/^typedef void (*PurpleSslErrorFunction)(PurpleSslConnection *, PurpleSslErrorType,$/;"	t
PurpleSslErrorType	sslconn.h	/^} PurpleSslErrorType;$/;"	t	typeref:enum:__anon98
PurpleSslInputFunction	sslconn.h	/^typedef void (*PurpleSslInputFunction)(gpointer, PurpleSslConnection *,$/;"	t
PurpleSslOps	sslconn.h	/^} PurpleSslOps;$/;"	t	typeref:struct:__anon99
PurpleStatus	status.h	/^typedef struct _PurpleStatus          PurpleStatus;$/;"	t	typeref:struct:_PurpleStatus
PurpleStatusAttr	status.h	/^typedef struct _PurpleStatusAttr      PurpleStatusAttr;$/;"	t	typeref:struct:_PurpleStatusAttr
PurpleStatusBuddyKey	status.c	/^} PurpleStatusBuddyKey;$/;"	t	typeref:struct:__anon37	file:
PurpleStatusPrimitive	status.h	/^} PurpleStatusPrimitive;$/;"	t	typeref:enum:__anon33
PurpleStatusPrimitiveMap	status.c	/^static struct PurpleStatusPrimitiveMap$/;"	s	file:
PurpleStatusPrimitiveMap::id	status.c	/^	const char *id;$/;"	m	struct:PurpleStatusPrimitiveMap	file:	access:public
PurpleStatusPrimitiveMap::name	status.c	/^	const char *name;$/;"	m	struct:PurpleStatusPrimitiveMap	file:	access:public
PurpleStatusPrimitiveMap::type	status.c	/^	PurpleStatusPrimitive type;$/;"	m	struct:PurpleStatusPrimitiveMap	file:	access:public
PurpleStatusType	status.h	/^typedef struct _PurpleStatusType      PurpleStatusType;$/;"	t	typeref:struct:_PurpleStatusType
PurpleStoredImage	imgstore.h	/^typedef struct _PurpleStoredImage PurpleStoredImage;$/;"	t	typeref:struct:_PurpleStoredImage
PurpleStringFormatType	pluginpref.h	/^} PurpleStringFormatType;$/;"	t	typeref:enum:__anon93
PurpleStringref	stringref.h	/^typedef struct _PurpleStringref PurpleStringref;$/;"	t	typeref:struct:_PurpleStringref
PurpleStunNatDiscovery	stun.h	/^typedef struct _PurpleStunNatDiscovery PurpleStunNatDiscovery;$/;"	t	typeref:struct:_PurpleStunNatDiscovery
PurpleStunNatType	stun.h	/^} PurpleStunNatType;$/;"	t	typeref:enum:__anon92
PurpleStunStatus	stun.h	/^} PurpleStunStatus;$/;"	t	typeref:enum:__anon91
PurpleSubType	value.h	/^} PurpleSubType;$/;"	t	typeref:enum:__anon17
PurpleTheme	theme-loader.h	/^	PurpleTheme *((*purple_theme_loader_build)(const gchar*));$/;"	p	struct:_PurpleThemeLoaderClass	access:public	signature:(*purple_theme_loader_build)(const gchar*)
PurpleTheme	theme.h	/^typedef struct _PurpleTheme        PurpleTheme;$/;"	t	typeref:struct:_PurpleTheme
PurpleThemeClass	theme.h	/^typedef struct _PurpleThemeClass   PurpleThemeClass;$/;"	t	typeref:struct:_PurpleThemeClass
PurpleThemeLoader	theme-loader.h	/^typedef struct _PurpleThemeLoader        PurpleThemeLoader;$/;"	t	typeref:struct:_PurpleThemeLoader
PurpleThemeLoaderClass	theme-loader.h	/^typedef struct _PurpleThemeLoaderClass   PurpleThemeLoaderClass;$/;"	t	typeref:struct:_PurpleThemeLoaderClass
PurpleThemeLoaderPrivate	theme-loader.c	/^} PurpleThemeLoaderPrivate;$/;"	t	typeref:struct:__anon43	file:
PurpleThemeManager	theme-manager.h	/^typedef struct _PurpleThemeManager PurpleThemeManager;$/;"	t	typeref:struct:_PurpleThemeManager
PurpleThemeManagerClass	theme-manager.h	/^typedef struct _PurpleThemeManagerClass PurpleThemeManagerClass;$/;"	t	typeref:struct:_PurpleThemeManagerClass
PurpleThemePrivate	theme.c	/^} PurpleThemePrivate;$/;"	t	typeref:struct:__anon26	file:
PurpleThumbnailSpec	prpl.h	/^typedef struct _PurpleThumbnailSpec PurpleThumbnailSpec;$/;"	t	typeref:struct:_PurpleThumbnailSpec
PurpleTxtCallback	dnssrv.h	/^typedef void (*PurpleTxtCallback)(GList *responses, gpointer data);$/;"	t
PurpleTxtResponse	dnssrv.h	/^typedef struct _PurpleTxtResponse PurpleTxtResponse;$/;"	t	typeref:struct:_PurpleTxtResponse
PurpleType	value.h	/^} PurpleType;$/;"	t	typeref:enum:__anon16
PurpleTypingState	conversation.h	/^} PurpleTypingState;$/;"	t	typeref:enum:__anon58
PurpleUPnPCallback	upnp.h	/^typedef void (*PurpleUPnPCallback) (gboolean success, gpointer data);$/;"	t
PurpleUPnPControlInfo	upnp.c	/^} PurpleUPnPControlInfo;$/;"	t	typeref:struct:__anon63	file:
PurpleUPnPStatus	nat-pmp.c	/^} PurpleUPnPStatus;$/;"	t	typeref:enum:__anon41	file:
PurpleUPnPStatus	upnp.c	/^} PurpleUPnPStatus;$/;"	t	typeref:enum:__anon62	file:
PurpleUtilFetchUrlCallback	util.h	/^typedef void (*PurpleUtilFetchUrlCallback)(PurpleUtilFetchUrlData *url_data, gpointer user_data, const gchar *url_text, gsize len, const gchar *error_message);$/;"	t
PurpleUtilFetchUrlData	util.h	/^typedef struct _PurpleUtilFetchUrlData PurpleUtilFetchUrlData;$/;"	t	typeref:struct:_PurpleUtilFetchUrlData
PurpleValue	value.h	/^} PurpleValue;$/;"	t	typeref:struct:__anon18
PurpleWhiteboard	whiteboard.h	/^} PurpleWhiteboard;$/;"	t	typeref:struct:_PurpleWhiteboard
PurpleWhiteboardPrplOps	whiteboard.h	/^typedef struct _PurpleWhiteboardPrplOps PurpleWhiteboardPrplOps;$/;"	t	typeref:struct:_PurpleWhiteboardPrplOps
PurpleWhiteboardUiOps	whiteboard.h	/^} PurpleWhiteboardUiOps;$/;"	t	typeref:struct:_PurpleWhiteboardUiOps
PurpleXfer	ft.h	/^typedef struct _PurpleXfer PurpleXfer;$/;"	t	typeref:struct:_PurpleXfer
PurpleXferPrivData	ft.c	/^} PurpleXferPrivData;$/;"	t	typeref:struct:_PurpleXferPrivData	file:
PurpleXferStatusType	ft.h	/^} PurpleXferStatusType;$/;"	t	typeref:enum:__anon23
PurpleXferType	ft.h	/^} PurpleXferType;$/;"	t	typeref:enum:__anon22
PurpleXferUiOps	ft.h	/^} PurpleXferUiOps;$/;"	t	typeref:struct:__anon24
REFCOUNT	stringref.c	58;"	d	file:
RETSIGTYPE	config.h	429;"	d
ROUNDUP	nat-pmp.c	119;"	d	file:
RUNNING_ON_VALGRIND	valgrind.h	3639;"	d
SCORE_IDLE	status.c	146;"	d	file:
SCORE_IDLE_TIME	status.c	147;"	d	file:
SCORE_OFFLINE_MESSAGE	status.c	148;"	d	file:
SEARCH_REQUEST_DEVICE	upnp.c	56;"	d	file:
SEARCH_REQUEST_STRING	upnp.c	58;"	d	file:
SECS_BEFORE_RESENDING_AUTORESPONSE	server.c	41;"	d	file:
SEND_TYPED_TIMEOUT_SECONDS	conversation.c	36;"	d	file:
SEX_BEFORE_RESENDING_AUTORESPONSE	server.c	42;"	d	file:
SIG_DESTROY	smiley.c	/^	SIG_DESTROY,$/;"	e	enum:__anon84	file:
SIG_LAST	smiley.c	/^	SIG_LAST$/;"	e	enum:__anon84	file:
SIZEOF_TIME_T	config.h	432;"	d
SMILEYS_DEFAULT_FOLDER	smiley.c	62;"	d	file:
SMILEYS_LOG_ID	smiley.c	63;"	d	file:
SOAP_ACTION	upnp.c	79;"	d	file:
STATE_CHANGED	media.c	/^	STATE_CHANGED,$/;"	e	enum:__anon76	file:
STATIC_PROTO_INIT	config.h	443;"	d
STATUS_AVAILABLE	sound.c	33;"	d	file:
STATUS_AWAY	sound.c	34;"	d	file:
STDC_HEADERS	config.h	446;"	d
STREAM_INFO	media.c	/^	STREAM_INFO,$/;"	e	enum:__anon76	file:
S_ERROR	media.c	/^	S_ERROR,$/;"	e	enum:__anon76	file:
S_ERROR	media/backend-iface.c	/^	S_ERROR,$/;"	e	enum:__anon125	file:
Section	desktopitem.c	/^} Section;$/;"	t	typeref:struct:__anon47	file:
StunCallback	gaim-compat.h	2046;"	d
StunCallback	stun.h	/^typedef void (*StunCallback) (PurpleStunNatDiscovery *);$/;"	t
TYPE_IS_CONTAINER	dbus-server.c	224;"	d	file:
T_SRV	dnssrv.c	46;"	d	file:
T_TXT	dnssrv.c	49;"	d	file:
UI_CAPS_CHANGED	mediamanager.c	/^	UI_CAPS_CHANGED,$/;"	e	enum:__anon68	file:
UPnPDiscoveryData	upnp.c	/^} UPnPDiscoveryData;$/;"	t	typeref:struct:__anon64	file:
UPnPMappingAddRemove	gaim-compat.h	2054;"	d
UPnPMappingAddRemove	upnp.h	/^typedef struct _UPnPMappingAddRemove UPnPMappingAddRemove;$/;"	t	typeref:struct:_UPnPMappingAddRemove
USER_CTRL	util.c	3477;"	d	file:
USER_CTRL	util.c	3551;"	d	file:
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R11	valgrind.h	337;"	d
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R11	valgrind.h	402;"	d
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R11	valgrind.h	474;"	d
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R11	valgrind.h	546;"	d
VALGRIND_CALL_NOREDIR_EAX	valgrind.h	223;"	d
VALGRIND_CALL_NOREDIR_RAX	valgrind.h	277;"	d
VALGRIND_COUNT_ERRORS	valgrind.h	3773;"	d
VALGRIND_CREATE_MEMPOOL	valgrind.h	3826;"	d
VALGRIND_DESTROY_MEMPOOL	valgrind.h	3834;"	d
VALGRIND_DISCARD_TRANSLATIONS	valgrind.h	3652;"	d
VALGRIND_DO_CLIENT_REQUEST	valgrind.h	131;"	d
VALGRIND_DO_CLIENT_REQUEST	valgrind.h	189;"	d
VALGRIND_DO_CLIENT_REQUEST	valgrind.h	243;"	d
VALGRIND_DO_CLIENT_REQUEST	valgrind.h	297;"	d
VALGRIND_DO_CLIENT_REQUEST	valgrind.h	358;"	d
VALGRIND_DO_CLIENT_REQUEST	valgrind.h	424;"	d
VALGRIND_DO_CLIENT_REQUEST	valgrind.h	496;"	d
VALGRIND_FREELIKE_BLOCK	valgrind.h	3818;"	d
VALGRIND_GET_NR_CONTEXT	valgrind.h	210;"	d
VALGRIND_GET_NR_CONTEXT	valgrind.h	264;"	d
VALGRIND_GET_NR_CONTEXT	valgrind.h	323;"	d
VALGRIND_GET_NR_CONTEXT	valgrind.h	381;"	d
VALGRIND_GET_NR_CONTEXT	valgrind.h	451;"	d
VALGRIND_GET_NR_CONTEXT	valgrind.h	523;"	d
VALGRIND_GET_ORIG_FN	valgrind.h	594;"	d
VALGRIND_MALLOCLIKE_BLOCK	valgrind.h	3807;"	d
VALGRIND_MEMPOOL_ALLOC	valgrind.h	3842;"	d
VALGRIND_MEMPOOL_CHANGE	valgrind.h	3874;"	d
VALGRIND_MEMPOOL_EXISTS	valgrind.h	3882;"	d
VALGRIND_MEMPOOL_FREE	valgrind.h	3850;"	d
VALGRIND_MEMPOOL_TRIM	valgrind.h	3858;"	d
VALGRIND_MOVE_MEMPOOL	valgrind.h	3866;"	d
VALGRIND_NON_SIMD_CALL0	valgrind.h	3728;"	d
VALGRIND_NON_SIMD_CALL1	valgrind.h	3738;"	d
VALGRIND_NON_SIMD_CALL2	valgrind.h	3748;"	d
VALGRIND_NON_SIMD_CALL3	valgrind.h	3758;"	d
VALGRIND_PRINTF	valgrind.h	/^VALGRIND_PRINTF(const char *format, ...)$/;"	f	signature:(const char *format, ...)
VALGRIND_PRINTF	valgrind.h	/^static int VALGRIND_PRINTF(const char *format, ...)$/;"	p	signature:(const char *format, ...)
VALGRIND_PRINTF	valgrind.h	3665;"	d
VALGRIND_PRINTF_BACKTRACE	valgrind.h	/^VALGRIND_PRINTF_BACKTRACE(const char *format, ...)$/;"	f	signature:(const char *format, ...)
VALGRIND_PRINTF_BACKTRACE	valgrind.h	/^static int VALGRIND_PRINTF_BACKTRACE(const char *format, ...)$/;"	p	signature:(const char *format, ...)
VALGRIND_PRINTF_BACKTRACE	valgrind.h	3666;"	d
VALGRIND_STACK_CHANGE	valgrind.h	3909;"	d
VALGRIND_STACK_DEREGISTER	valgrind.h	3901;"	d
VALGRIND_STACK_REGISTER	valgrind.h	3891;"	d
VALID_CHAR	util.c	1440;"	d	file:
VALID_CHAR	util.c	1865;"	d	file:
VERSION	config.h	479;"	d
VG_CONTRACT_FRAME_BY	valgrind.h	2462;"	d
VG_CONTRACT_FRAME_BY	valgrind.h	3023;"	d
VG_EXPAND_FRAME_BY_trashes_r3	valgrind.h	2457;"	d
VG_EXPAND_FRAME_BY_trashes_r3	valgrind.h	3018;"	d
VG_IS_TOOL_USERREQ	valgrind.h	3581;"	d
VG_USERREQ_TOOL_BASE	valgrind.h	3579;"	d
VG_USERREQ__CLIENT_CALL0	valgrind.h	/^          VG_USERREQ__CLIENT_CALL0 = 0x1101,$/;"	e	enum:__anon111
VG_USERREQ__CLIENT_CALL1	valgrind.h	/^          VG_USERREQ__CLIENT_CALL1 = 0x1102,$/;"	e	enum:__anon111
VG_USERREQ__CLIENT_CALL2	valgrind.h	/^          VG_USERREQ__CLIENT_CALL2 = 0x1103,$/;"	e	enum:__anon111
VG_USERREQ__CLIENT_CALL3	valgrind.h	/^          VG_USERREQ__CLIENT_CALL3 = 0x1104,$/;"	e	enum:__anon111
VG_USERREQ__COUNT_ERRORS	valgrind.h	/^          VG_USERREQ__COUNT_ERRORS = 0x1201,$/;"	e	enum:__anon111
VG_USERREQ__CREATE_MEMPOOL	valgrind.h	/^          VG_USERREQ__CREATE_MEMPOOL   = 0x1303,$/;"	e	enum:__anon111
VG_USERREQ__DESTROY_MEMPOOL	valgrind.h	/^          VG_USERREQ__DESTROY_MEMPOOL  = 0x1304,$/;"	e	enum:__anon111
VG_USERREQ__DISCARD_TRANSLATIONS	valgrind.h	/^          VG_USERREQ__DISCARD_TRANSLATIONS = 0x1002,$/;"	e	enum:__anon111
VG_USERREQ__FREELIKE_BLOCK	valgrind.h	/^          VG_USERREQ__FREELIKE_BLOCK   = 0x1302,$/;"	e	enum:__anon111
VG_USERREQ__MALLOCLIKE_BLOCK	valgrind.h	/^          VG_USERREQ__MALLOCLIKE_BLOCK = 0x1301,$/;"	e	enum:__anon111
VG_USERREQ__MEMPOOL_ALLOC	valgrind.h	/^          VG_USERREQ__MEMPOOL_ALLOC    = 0x1305,$/;"	e	enum:__anon111
VG_USERREQ__MEMPOOL_CHANGE	valgrind.h	/^          VG_USERREQ__MEMPOOL_CHANGE   = 0x1309,$/;"	e	enum:__anon111
VG_USERREQ__MEMPOOL_EXISTS	valgrind.h	/^          VG_USERREQ__MEMPOOL_EXISTS   = 0x130a,$/;"	e	enum:__anon111
VG_USERREQ__MEMPOOL_FREE	valgrind.h	/^          VG_USERREQ__MEMPOOL_FREE     = 0x1306,$/;"	e	enum:__anon111
VG_USERREQ__MEMPOOL_TRIM	valgrind.h	/^          VG_USERREQ__MEMPOOL_TRIM     = 0x1307,$/;"	e	enum:__anon111
VG_USERREQ__MOVE_MEMPOOL	valgrind.h	/^          VG_USERREQ__MOVE_MEMPOOL     = 0x1308,$/;"	e	enum:__anon111
VG_USERREQ__PRINTF	valgrind.h	/^          VG_USERREQ__PRINTF           = 0x1401,$/;"	e	enum:__anon111
VG_USERREQ__PRINTF_BACKTRACE	valgrind.h	/^          VG_USERREQ__PRINTF_BACKTRACE = 0x1402,$/;"	e	enum:__anon111
VG_USERREQ__RUNNING_ON_VALGRIND	valgrind.h	/^   enum { VG_USERREQ__RUNNING_ON_VALGRIND  = 0x1001,$/;"	e	enum:__anon111
VG_USERREQ__STACK_CHANGE	valgrind.h	/^          VG_USERREQ__STACK_CHANGE     = 0x1503$/;"	e	enum:__anon111
VG_USERREQ__STACK_DEREGISTER	valgrind.h	/^          VG_USERREQ__STACK_DEREGISTER = 0x1502,$/;"	e	enum:__anon111
VG_USERREQ__STACK_REGISTER	valgrind.h	/^          VG_USERREQ__STACK_REGISTER   = 0x1501,$/;"	e	enum:__anon111
Vg_ClientRequest	valgrind.h	/^   } Vg_ClientRequest;$/;"	t	typeref:enum:__anon111
WAN_IP_CONN_SERVICE	upnp.c	66;"	d	file:
WAN_PPP_CONN_SERVICE	upnp.c	67;"	d	file:
WORDS_BIGENDIAN	config.h	485;"	d
XMLNODE_TYPE_ATTRIB	xmlnode.h	/^	XMLNODE_TYPE_ATTRIB,		\/**< Has attributes *\/$/;"	e	enum:_XMLNodeType
XMLNODE_TYPE_DATA	xmlnode.h	/^	XMLNODE_TYPE_DATA		\/**< Has data *\/$/;"	e	enum:_XMLNodeType
XMLNODE_TYPE_TAG	xmlnode.h	/^	XMLNODE_TYPE_TAG,		\/**< Just a tag *\/$/;"	e	enum:_XMLNodeType
XMLNodeType	xmlnode.h	/^} XMLNodeType;$/;"	t	typeref:enum:_XMLNodeType
XML_ACCOUNT_TAG	smiley.c	70;"	d	file:
XML_ACCOUNT_USERID_ATTRIB_TAG	smiley.c	71;"	d	file:
XML_CHECKSUM_ATRIB_TAG	smiley.c	75;"	d	file:
XML_FILENAME_ATRIB_TAG	smiley.c	76;"	d	file:
XML_FILE_NAME	smiley.c	65;"	d	file:
XML_PROFILE_NAME_ATTRIB_TAG	smiley.c	69;"	d	file:
XML_PROFILE_TAG	smiley.c	68;"	d	file:
XML_ROOT_TAG	smiley.c	67;"	d	file:
XML_SHORTCUT_ATTRIB_TAG	smiley.c	74;"	d	file:
XML_SMILEY_SET_TAG	smiley.c	72;"	d	file:
XML_SMILEY_TAG	smiley.c	73;"	d	file:
ZEPHYR_INT32	config.h	497;"	d
_	internal.h	51;"	d
_	internal.h	61;"	d
_CIRCBUFFER_H	circbuffer.h	25;"	d
_DARWIN_USE_64_BIT_INODE	config.h	504;"	d
_DBUS_PURPLE_H_	dbus-purple.h	25;"	d
_FILE_OFFSET_BITS	config.h	508;"	d
_FUNC_NAME	plugin.h	221;"	d
_GAIM_COMPAT_H_	gaim-compat.h	27;"	d
_MEDIA_BACKEND_FS2_H_	media/backend-fs2.h	33;"	d
_MEDIA_BACKEND_IFACE_H_	media/backend-iface.h	28;"	d
_PURPLE_ACCOUNTOPT_H_	accountopt.h	27;"	d
_PURPLE_ACCOUNT_H_	account.h	28;"	d
_PURPLE_BLIST_C_	blist.c	23;"	d	file:
_PURPLE_BLIST_H_	blist.h	28;"	d
_PURPLE_BUDDYICON_C_	buddyicon.c	26;"	d	file:
_PURPLE_BUDDYICON_H_	buddyicon.h	27;"	d
_PURPLE_CERTIFICATE_H	certificate.h	32;"	d
_PURPLE_CLIENT_H_INCLUDED_	purple-client.h	2;"	d
_PURPLE_CMDS_H_	cmds.h	25;"	d
_PURPLE_CONNECTION_C_	connection.c	26;"	d	file:
_PURPLE_CONNECTION_H_	connection.h	28;"	d
_PURPLE_CONVERSATION_H_	conversation.h	28;"	d
_PURPLE_CORE_H_	core.h	38;"	d
_PURPLE_DBUS_BINDINGS_H_	dbus-bindings.h	29;"	d
_PURPLE_DBUS_MAYBE_H_	dbus-maybe.h	7;"	d
_PURPLE_DBUS_SERVER_H_	dbus-server.h	29;"	d
_PURPLE_DEBUG_H_	debug.h	27;"	d
_PURPLE_DESKTOP_ITEM_H_	desktopitem.h	57;"	d
_PURPLE_DNSQUERY_C_	dnsquery.c	27;"	d	file:
_PURPLE_DNSQUERY_H_	dnsquery.h	27;"	d
_PURPLE_DNSSRV_C_	dnssrv.c	23;"	d	file:
_PURPLE_DNSSRV_H	dnssrv.h	25;"	d
_PURPLE_EVENTLOOP_H_	eventloop.h	27;"	d
_PURPLE_FT_H_	ft.h	28;"	d
_PURPLE_IDLE_H_	idle.h	27;"	d
_PURPLE_IMGSTORE_H_	imgstore.h	28;"	d
_PURPLE_INTERNAL_H_	internal.h	27;"	d
_PURPLE_LOG_H_	log.h	28;"	d
_PURPLE_MEDIA_CANDIDATE_H_	media/candidate.h	28;"	d
_PURPLE_MEDIA_CODEC_H_	media/codec.h	28;"	d
_PURPLE_MEDIA_ENUM_TYPES_H_	media/enum-types.h	28;"	d
_PURPLE_MEDIA_GST_H_	media-gst.h	28;"	d
_PURPLE_MEDIA_H_	media.h	28;"	d
_PURPLE_MEDIA_MANAGER_H_	mediamanager.h	28;"	d
_PURPLE_MIME_H	mime.h	25;"	d
_PURPLE_NAT_PMP_H	nat-pmp.h	33;"	d
_PURPLE_NETWORK_H_	network.h	27;"	d
_PURPLE_NOTIFY_C_	notify.c	26;"	d	file:
_PURPLE_NOTIFY_H_	notify.h	28;"	d
_PURPLE_NTLM_H	ntlm.h	28;"	d
_PURPLE_PLUGINPREF_H_	pluginpref.h	28;"	d
_PURPLE_PLUGIN_C_	plugin.c	22;"	d	file:
_PURPLE_PLUGIN_H_	plugin.h	30;"	d
_PURPLE_POUNCE_H_	pounce.h	27;"	d
_PURPLE_PREFS_H_	prefs.h	28;"	d
_PURPLE_PRIVACY_H_	privacy.h	27;"	d
_PURPLE_PROXY_C_	proxy.c	32;"	d	file:
_PURPLE_PROXY_H_	proxy.h	27;"	d
_PURPLE_PRPL_H_	prpl.h	31;"	d
_PURPLE_PURPLE_H_	purple.h	34;"	d
_PURPLE_REQUEST_C_	request.c	26;"	d	file:
_PURPLE_REQUEST_H_	request.h	27;"	d
_PURPLE_ROOMLIST_H_	roomlist.h	28;"	d
_PURPLE_SAVEDSTATUSES_H_	savedstatuses.h	28;"	d
_PURPLE_SERVER_H_	server.h	27;"	d
_PURPLE_SIGNALS_H_	signals.h	27;"	d
_PURPLE_SMILEY_H_	smiley.h	30;"	d
_PURPLE_SOUND_H_	sound.h	28;"	d
_PURPLE_SSLCONN_C_	sslconn.c	26;"	d	file:
_PURPLE_SSLCONN_H_	sslconn.h	27;"	d
_PURPLE_STATUS_C_	status.c	26;"	d	file:
_PURPLE_STATUS_H_	status.h	23;"	d
_PURPLE_STRINGREF_H_	stringref.h	30;"	d
_PURPLE_STUN_H_	stun.h	27;"	d
_PURPLE_UPNP_H_	upnp.h	28;"	d
_PURPLE_UTIL_H_	util.h	30;"	d
_PURPLE_VALUE_H_	value.h	27;"	d
_PURPLE_VERSION_H_	version.h	25;"	d
_PURPLE_WHITEBOARD_H_	whiteboard.h	27;"	d
_PURPLE_XMLNODE_C_	xmlnode.c	30;"	d	file:
_PURPLE_XMLNODE_H_	xmlnode.h	27;"	d
_PurpleAccount	account.h	/^struct _PurpleAccount$/;"	s
_PurpleAccount::alias	account.h	/^	char *alias;                \/**< How you appear to yourself.            *\/$/;"	m	struct:_PurpleAccount	access:public
_PurpleAccount::buddy_icon_path	account.h	/^	char *buddy_icon_path;      \/**< The buddy icon's non-cached path.      *\/$/;"	m	struct:_PurpleAccount	access:public
_PurpleAccount::deny	account.h	/^	GSList *deny;               \/**< Deny list.                             *\/$/;"	m	struct:_PurpleAccount	access:public
_PurpleAccount::disconnecting	account.h	/^	gboolean disconnecting;     \/**< The account is currently disconnecting *\/$/;"	m	struct:_PurpleAccount	access:public
_PurpleAccount::gc	account.h	/^	PurpleConnection *gc;         \/**< The connection handle.                 *\/$/;"	m	struct:_PurpleAccount	access:public
_PurpleAccount::password	account.h	/^	char *password;             \/**< The account password.                  *\/$/;"	m	struct:_PurpleAccount	access:public
_PurpleAccount::perm_deny	account.h	/^	PurplePrivacyType perm_deny;  \/**< The permit\/deny setting.               *\/$/;"	m	struct:_PurpleAccount	access:public
_PurpleAccount::permit	account.h	/^	GSList *permit;             \/**< Permit list.                           *\/$/;"	m	struct:_PurpleAccount	access:public
_PurpleAccount::presence	account.h	/^	PurplePresence *presence;     \/**< Presence.                              *\/$/;"	m	struct:_PurpleAccount	access:public
_PurpleAccount::priv	account.h	/^	gpointer priv;              \/**< Pointer to opaque private data. *\/$/;"	m	struct:_PurpleAccount	access:public
_PurpleAccount::protocol_id	account.h	/^	char *protocol_id;          \/**< The ID of the protocol.                *\/$/;"	m	struct:_PurpleAccount	access:public
_PurpleAccount::proxy_info	account.h	/^	PurpleProxyInfo *proxy_info;  \/**< Proxy information.  This will be set   *\/$/;"	m	struct:_PurpleAccount	access:public
_PurpleAccount::registration_cb	account.h	/^	PurpleAccountRegistrationCb registration_cb;$/;"	m	struct:_PurpleAccount	access:public
_PurpleAccount::registration_cb_user_data	account.h	/^	void *registration_cb_user_data;$/;"	m	struct:_PurpleAccount	access:public
_PurpleAccount::remember_pass	account.h	/^	gboolean remember_pass;     \/**< Remember the password.                 *\/$/;"	m	struct:_PurpleAccount	access:public
_PurpleAccount::settings	account.h	/^	GHashTable *settings;       \/**< Protocol-specific settings.            *\/$/;"	m	struct:_PurpleAccount	access:public
_PurpleAccount::status_types	account.h	/^	GList *status_types;        \/**< Status types.                          *\/$/;"	m	struct:_PurpleAccount	access:public
_PurpleAccount::system_log	account.h	/^	PurpleLog *system_log;        \/**< The system log                         *\/$/;"	m	struct:_PurpleAccount	access:public
_PurpleAccount::ui_data	account.h	/^	void *ui_data;              \/**< The UI can put data here.              *\/$/;"	m	struct:_PurpleAccount	access:public
_PurpleAccount::ui_settings	account.h	/^	GHashTable *ui_settings;    \/**< UI-specific settings.                  *\/$/;"	m	struct:_PurpleAccount	access:public
_PurpleAccount::user_info	account.h	/^	char *user_info;            \/**< User information.                      *\/$/;"	m	struct:_PurpleAccount	access:public
_PurpleAccount::username	account.h	/^	char *username;             \/**< The username.                          *\/$/;"	m	struct:_PurpleAccount	access:public
_PurpleAccountUiOps	account.h	/^struct _PurpleAccountUiOps$/;"	s
_PurpleAccountUiOps::_purple_reserved1	account.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:_PurpleAccountUiOps	access:public
_PurpleAccountUiOps::_purple_reserved2	account.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:_PurpleAccountUiOps	access:public
_PurpleAccountUiOps::_purple_reserved3	account.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:_PurpleAccountUiOps	access:public
_PurpleAccountUiOps::_purple_reserved4	account.h	/^	void (*_purple_reserved4)(void);$/;"	m	struct:_PurpleAccountUiOps	access:public
_PurpleAccountUiOps::close_account_request	account.h	/^	void (*close_account_request)(void *ui_handle);$/;"	m	struct:_PurpleAccountUiOps	access:public
_PurpleAccountUiOps::notify_added	account.h	/^	void (*notify_added)(PurpleAccount *account,$/;"	m	struct:_PurpleAccountUiOps	access:public
_PurpleAccountUiOps::request_add	account.h	/^	void (*request_add)(PurpleAccount *account,$/;"	m	struct:_PurpleAccountUiOps	access:public
_PurpleAccountUiOps::request_authorize	account.h	/^	void *(*request_authorize)(PurpleAccount *account,$/;"	m	struct:_PurpleAccountUiOps	access:public
_PurpleAccountUiOps::status_changed	account.h	/^	void (*status_changed)(PurpleAccount *account,$/;"	m	struct:_PurpleAccountUiOps	access:public
_PurpleAttentionType	prpl.h	/^struct _PurpleAttentionType$/;"	s
_PurpleAttentionType::_reserved2	prpl.h	/^	gpointer _reserved2;$/;"	m	struct:_PurpleAttentionType	access:public
_PurpleAttentionType::_reserved3	prpl.h	/^	gpointer _reserved3;$/;"	m	struct:_PurpleAttentionType	access:public
_PurpleAttentionType::_reserved4	prpl.h	/^	gpointer _reserved4;$/;"	m	struct:_PurpleAttentionType	access:public
_PurpleAttentionType::icon_name	prpl.h	/^	const char *icon_name;             \/**< Icon to display (optional) *\/$/;"	m	struct:_PurpleAttentionType	access:public
_PurpleAttentionType::incoming_description	prpl.h	/^	const char *incoming_description;  \/**< Shown when sent *\/$/;"	m	struct:_PurpleAttentionType	access:public
_PurpleAttentionType::name	prpl.h	/^	const char *name;                  \/**< Shown in GUI elements *\/$/;"	m	struct:_PurpleAttentionType	access:public
_PurpleAttentionType::outgoing_description	prpl.h	/^	const char *outgoing_description;  \/**< Shown when receied *\/$/;"	m	struct:_PurpleAttentionType	access:public
_PurpleAttentionType::unlocalized_name	prpl.h	/^	const char *unlocalized_name;      \/**< Unlocalized name for UIs needing it *\/$/;"	m	struct:_PurpleAttentionType	access:public
_PurpleBlistNode	blist.h	/^struct _PurpleBlistNode {$/;"	s
_PurpleBlistNode::child	blist.h	/^	PurpleBlistNode *child;               \/**< The child of this node         *\/$/;"	m	struct:_PurpleBlistNode	access:public
_PurpleBlistNode::flags	blist.h	/^	PurpleBlistNodeFlags flags;           \/**< The buddy flags                *\/$/;"	m	struct:_PurpleBlistNode	access:public
_PurpleBlistNode::next	blist.h	/^	PurpleBlistNode *next;                \/**< The sibling after this buddy.  *\/$/;"	m	struct:_PurpleBlistNode	access:public
_PurpleBlistNode::parent	blist.h	/^	PurpleBlistNode *parent;              \/**< The parent of this node        *\/$/;"	m	struct:_PurpleBlistNode	access:public
_PurpleBlistNode::prev	blist.h	/^	PurpleBlistNode *prev;                \/**< The sibling before this buddy. *\/$/;"	m	struct:_PurpleBlistNode	access:public
_PurpleBlistNode::settings	blist.h	/^	GHashTable *settings;               \/**< per-node settings              *\/$/;"	m	struct:_PurpleBlistNode	access:public
_PurpleBlistNode::type	blist.h	/^	PurpleBlistNodeType type;             \/**< The type of node this is       *\/$/;"	m	struct:_PurpleBlistNode	access:public
_PurpleBlistNode::ui_data	blist.h	/^	void          *ui_data;             \/**< The UI can put data here.      *\/$/;"	m	struct:_PurpleBlistNode	access:public
_PurpleBlistUiOps	blist.h	/^struct _PurpleBlistUiOps$/;"	s
_PurpleBlistUiOps::_purple_reserved1	blist.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:_PurpleBlistUiOps	access:public
_PurpleBlistUiOps::destroy	blist.h	/^	void (*destroy)(PurpleBuddyList *list);  \/**< When the list is destroyed, this is called to destroy the UI. *\/$/;"	m	struct:_PurpleBlistUiOps	access:public
_PurpleBlistUiOps::new_list	blist.h	/^	void (*new_list)(PurpleBuddyList *list); \/**< Sets UI-specific data on a buddy list. *\/$/;"	m	struct:_PurpleBlistUiOps	access:public
_PurpleBlistUiOps::new_node	blist.h	/^	void (*new_node)(PurpleBlistNode *node); \/**< Sets UI-specific data on a node. *\/$/;"	m	struct:_PurpleBlistUiOps	access:public
_PurpleBlistUiOps::remove	blist.h	/^	void (*remove)(PurpleBuddyList *list,$/;"	m	struct:_PurpleBlistUiOps	access:public
_PurpleBlistUiOps::remove_node	blist.h	/^	void (*remove_node)(PurpleBlistNode *node);$/;"	m	struct:_PurpleBlistUiOps	access:public
_PurpleBlistUiOps::request_add_buddy	blist.h	/^	void (*request_add_buddy)(PurpleAccount *account, const char *username,$/;"	m	struct:_PurpleBlistUiOps	access:public
_PurpleBlistUiOps::request_add_chat	blist.h	/^	void (*request_add_chat)(PurpleAccount *account, PurpleGroup *group,$/;"	m	struct:_PurpleBlistUiOps	access:public
_PurpleBlistUiOps::request_add_group	blist.h	/^	void (*request_add_group)(void);$/;"	m	struct:_PurpleBlistUiOps	access:public
_PurpleBlistUiOps::save_account	blist.h	/^	void (*save_account)(PurpleAccount *account);$/;"	m	struct:_PurpleBlistUiOps	access:public
_PurpleBlistUiOps::save_node	blist.h	/^	void (*save_node)(PurpleBlistNode *node);$/;"	m	struct:_PurpleBlistUiOps	access:public
_PurpleBlistUiOps::set_visible	blist.h	/^	void (*set_visible)(PurpleBuddyList *list,$/;"	m	struct:_PurpleBlistUiOps	access:public
_PurpleBlistUiOps::show	blist.h	/^	void (*show)(PurpleBuddyList *list);     \/**< The core will call this when it's finished doing its core stuff *\/$/;"	m	struct:_PurpleBlistUiOps	access:public
_PurpleBlistUiOps::update	blist.h	/^	void (*update)(PurpleBuddyList *list,$/;"	m	struct:_PurpleBlistUiOps	access:public
_PurpleBuddy	blist.h	/^struct _PurpleBuddy {$/;"	s
_PurpleBuddy::account	blist.h	/^	PurpleAccount *account;					\/**< the account this buddy belongs to *\/$/;"	m	struct:_PurpleBuddy	access:public
_PurpleBuddy::alias	blist.h	/^	char *alias;                            \/**< The user-set alias of the buddy *\/$/;"	m	struct:_PurpleBuddy	access:public
_PurpleBuddy::icon	blist.h	/^	PurpleBuddyIcon *icon;                    \/**< The buddy icon. *\/$/;"	m	struct:_PurpleBuddy	access:public
_PurpleBuddy::media_caps	blist.h	/^	PurpleMediaCaps media_caps;		\/**< The media capabilities of the buddy. *\/$/;"	m	struct:_PurpleBuddy	access:public
_PurpleBuddy::name	blist.h	/^	char *name;                             \/**< The name of the buddy. *\/$/;"	m	struct:_PurpleBuddy	access:public
_PurpleBuddy::node	blist.h	/^	PurpleBlistNode node;                     \/**< The node that this buddy inherits from *\/$/;"	m	struct:_PurpleBuddy	access:public
_PurpleBuddy::presence	blist.h	/^	PurplePresence *presence;$/;"	m	struct:_PurpleBuddy	access:public
_PurpleBuddy::proto_data	blist.h	/^	void *proto_data;                       \/**< This allows the prpl to associate whatever data it wants with a buddy *\/$/;"	m	struct:_PurpleBuddy	access:public
_PurpleBuddy::server_alias	blist.h	/^	char *server_alias;                     \/**< The server-specified alias of the buddy.  (i.e. MSN "Friendly Names") *\/$/;"	m	struct:_PurpleBuddy	access:public
_PurpleBuddyIcon	buddyicon.c	/^struct _PurpleBuddyIcon$/;"	s	file:
_PurpleBuddyIcon::account	buddyicon.c	/^	PurpleAccount *account;    \/**< The account the user is on.          *\/$/;"	m	struct:_PurpleBuddyIcon	file:	access:public
_PurpleBuddyIcon::checksum	buddyicon.c	/^	char *checksum;            \/**< The protocol checksum.               *\/$/;"	m	struct:_PurpleBuddyIcon	file:	access:public
_PurpleBuddyIcon::img	buddyicon.c	/^	PurpleStoredImage *img;    \/**< The stored image containing$/;"	m	struct:_PurpleBuddyIcon	file:	access:public
_PurpleBuddyIcon::ref_count	buddyicon.c	/^	int ref_count;             \/**< The buddy icon reference count.      *\/$/;"	m	struct:_PurpleBuddyIcon	file:	access:public
_PurpleBuddyIcon::username	buddyicon.c	/^	char *username;            \/**< The username the icon belongs to.    *\/$/;"	m	struct:_PurpleBuddyIcon	file:	access:public
_PurpleBuddyIconSpec	prpl.h	/^struct _PurpleBuddyIconSpec {$/;"	s
_PurpleBuddyIconSpec::format	prpl.h	/^	char *format;$/;"	m	struct:_PurpleBuddyIconSpec	access:public
_PurpleBuddyIconSpec::max_filesize	prpl.h	/^	size_t max_filesize;               \/**< Maximum size in bytes *\/$/;"	m	struct:_PurpleBuddyIconSpec	access:public
_PurpleBuddyIconSpec::max_height	prpl.h	/^	int max_height;                    \/**< Maximum height of this icon *\/$/;"	m	struct:_PurpleBuddyIconSpec	access:public
_PurpleBuddyIconSpec::max_width	prpl.h	/^	int max_width;                     \/**< Maximum width of this icon  *\/$/;"	m	struct:_PurpleBuddyIconSpec	access:public
_PurpleBuddyIconSpec::min_height	prpl.h	/^	int min_height;                    \/**< Minimum height of this icon *\/$/;"	m	struct:_PurpleBuddyIconSpec	access:public
_PurpleBuddyIconSpec::min_width	prpl.h	/^	int min_width;                     \/**< Minimum width of this icon  *\/$/;"	m	struct:_PurpleBuddyIconSpec	access:public
_PurpleBuddyIconSpec::scale_rules	prpl.h	/^	PurpleIconScaleRules scale_rules;  \/**< How to stretch this icon *\/$/;"	m	struct:_PurpleBuddyIconSpec	access:public
_PurpleBuddyList	blist.h	/^struct _PurpleBuddyList {$/;"	s
_PurpleBuddyList::buddies	blist.h	/^	GHashTable *buddies;          \/**< Every buddy in this list *\/$/;"	m	struct:_PurpleBuddyList	access:public
_PurpleBuddyList::root	blist.h	/^	PurpleBlistNode *root;          \/**< The first node in the buddy list *\/$/;"	m	struct:_PurpleBuddyList	access:public
_PurpleBuddyList::ui_data	blist.h	/^	void *ui_data;                \/**< UI-specific data. *\/$/;"	m	struct:_PurpleBuddyList	access:public
_PurpleCertificate	certificate.h	/^struct _PurpleCertificate$/;"	s
_PurpleCertificate::data	certificate.h	/^	gpointer data;$/;"	m	struct:_PurpleCertificate	access:public
_PurpleCertificate::scheme	certificate.h	/^	PurpleCertificateScheme * scheme;$/;"	m	struct:_PurpleCertificate	access:public
_PurpleCertificatePool	certificate.h	/^struct _PurpleCertificatePool$/;"	s
_PurpleCertificatePool::_purple_reserved1	certificate.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:_PurpleCertificatePool	access:public
_PurpleCertificatePool::_purple_reserved2	certificate.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:_PurpleCertificatePool	access:public
_PurpleCertificatePool::_purple_reserved3	certificate.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:_PurpleCertificatePool	access:public
_PurpleCertificatePool::_purple_reserved4	certificate.h	/^	void (*_purple_reserved4)(void);$/;"	m	struct:_PurpleCertificatePool	access:public
_PurpleCertificatePool::cert_in_pool	certificate.h	/^	gboolean (* cert_in_pool)(const gchar *id);$/;"	m	struct:_PurpleCertificatePool	access:public
_PurpleCertificatePool::data	certificate.h	/^	gpointer data;$/;"	m	struct:_PurpleCertificatePool	access:public
_PurpleCertificatePool::delete_cert	certificate.h	/^	gboolean (* delete_cert)(const gchar *id);$/;"	m	struct:_PurpleCertificatePool	access:public
_PurpleCertificatePool::fullname	certificate.h	/^	gchar *fullname;$/;"	m	struct:_PurpleCertificatePool	access:public
_PurpleCertificatePool::get_cert	certificate.h	/^	PurpleCertificate * (* get_cert)(const gchar *id);$/;"	m	struct:_PurpleCertificatePool	access:public
_PurpleCertificatePool::get_idlist	certificate.h	/^	GList * (* get_idlist)(void);$/;"	m	struct:_PurpleCertificatePool	access:public
_PurpleCertificatePool::init	certificate.h	/^	gboolean (* init)(void);$/;"	m	struct:_PurpleCertificatePool	access:public
_PurpleCertificatePool::name	certificate.h	/^	gchar *name;$/;"	m	struct:_PurpleCertificatePool	access:public
_PurpleCertificatePool::put_cert	certificate.h	/^	gboolean (* put_cert)(const gchar *id, PurpleCertificate *crt);$/;"	m	struct:_PurpleCertificatePool	access:public
_PurpleCertificatePool::scheme_name	certificate.h	/^	gchar *scheme_name;$/;"	m	struct:_PurpleCertificatePool	access:public
_PurpleCertificatePool::uninit	certificate.h	/^	void (* uninit)(void);$/;"	m	struct:_PurpleCertificatePool	access:public
_PurpleCertificateScheme	certificate.h	/^struct _PurpleCertificateScheme$/;"	s
_PurpleCertificateScheme::_purple_reserved1	certificate.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:_PurpleCertificateScheme	access:public
_PurpleCertificateScheme::_purple_reserved2	certificate.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:_PurpleCertificateScheme	access:public
_PurpleCertificateScheme::_purple_reserved3	certificate.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:_PurpleCertificateScheme	access:public
_PurpleCertificateScheme::check_subject_name	certificate.h	/^	gboolean (* check_subject_name)(PurpleCertificate *crt, const gchar *name);$/;"	m	struct:_PurpleCertificateScheme	access:public
_PurpleCertificateScheme::copy_certificate	certificate.h	/^	PurpleCertificate * (* copy_certificate)(PurpleCertificate *crt);$/;"	m	struct:_PurpleCertificateScheme	access:public
_PurpleCertificateScheme::destroy_certificate	certificate.h	/^	void (* destroy_certificate)(PurpleCertificate * crt);$/;"	m	struct:_PurpleCertificateScheme	access:public
_PurpleCertificateScheme::export_certificate	certificate.h	/^	gboolean (* export_certificate)(const gchar *filename, PurpleCertificate *crt);$/;"	m	struct:_PurpleCertificateScheme	access:public
_PurpleCertificateScheme::fullname	certificate.h	/^	gchar * fullname;$/;"	m	struct:_PurpleCertificateScheme	access:public
_PurpleCertificateScheme::get_fingerprint_sha1	certificate.h	/^	GByteArray * (* get_fingerprint_sha1)(PurpleCertificate *crt);$/;"	m	struct:_PurpleCertificateScheme	access:public
_PurpleCertificateScheme::get_issuer_unique_id	certificate.h	/^	gchar * (* get_issuer_unique_id)(PurpleCertificate *crt);$/;"	m	struct:_PurpleCertificateScheme	access:public
_PurpleCertificateScheme::get_subject_name	certificate.h	/^	gchar * (* get_subject_name)(PurpleCertificate *crt);$/;"	m	struct:_PurpleCertificateScheme	access:public
_PurpleCertificateScheme::get_times	certificate.h	/^	gboolean (* get_times)(PurpleCertificate *crt, time_t *activation, time_t *expiration);$/;"	m	struct:_PurpleCertificateScheme	access:public
_PurpleCertificateScheme::get_unique_id	certificate.h	/^	gchar * (* get_unique_id)(PurpleCertificate *crt);$/;"	m	struct:_PurpleCertificateScheme	access:public
_PurpleCertificateScheme::import_certificate	certificate.h	/^	PurpleCertificate * (* import_certificate)(const gchar * filename);$/;"	m	struct:_PurpleCertificateScheme	access:public
_PurpleCertificateScheme::import_certificates	certificate.h	/^	GSList * (* import_certificates)(const gchar * filename);$/;"	m	struct:_PurpleCertificateScheme	access:public
_PurpleCertificateScheme::name	certificate.h	/^	gchar * name;$/;"	m	struct:_PurpleCertificateScheme	access:public
_PurpleCertificateScheme::signed_by	certificate.h	/^	gboolean (*signed_by)(PurpleCertificate *crt, PurpleCertificate *issuer);$/;"	m	struct:_PurpleCertificateScheme	access:public
_PurpleCertificateVerificationRequest	certificate.h	/^struct _PurpleCertificateVerificationRequest$/;"	s
_PurpleCertificateVerificationRequest::cb	certificate.h	/^	PurpleCertificateVerifiedCallback cb;$/;"	m	struct:_PurpleCertificateVerificationRequest	access:public
_PurpleCertificateVerificationRequest::cb_data	certificate.h	/^	gpointer cb_data;$/;"	m	struct:_PurpleCertificateVerificationRequest	access:public
_PurpleCertificateVerificationRequest::cert_chain	certificate.h	/^	GList *cert_chain;$/;"	m	struct:_PurpleCertificateVerificationRequest	access:public
_PurpleCertificateVerificationRequest::data	certificate.h	/^	gpointer data;$/;"	m	struct:_PurpleCertificateVerificationRequest	access:public
_PurpleCertificateVerificationRequest::scheme	certificate.h	/^	PurpleCertificateScheme *scheme;$/;"	m	struct:_PurpleCertificateVerificationRequest	access:public
_PurpleCertificateVerificationRequest::subject_name	certificate.h	/^	gchar *subject_name;$/;"	m	struct:_PurpleCertificateVerificationRequest	access:public
_PurpleCertificateVerificationRequest::verifier	certificate.h	/^	PurpleCertificateVerifier *verifier;$/;"	m	struct:_PurpleCertificateVerificationRequest	access:public
_PurpleCertificateVerifier	certificate.h	/^struct _PurpleCertificateVerifier$/;"	s
_PurpleCertificateVerifier::_purple_reserved1	certificate.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:_PurpleCertificateVerifier	access:public
_PurpleCertificateVerifier::_purple_reserved2	certificate.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:_PurpleCertificateVerifier	access:public
_PurpleCertificateVerifier::_purple_reserved3	certificate.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:_PurpleCertificateVerifier	access:public
_PurpleCertificateVerifier::_purple_reserved4	certificate.h	/^	void (*_purple_reserved4)(void);$/;"	m	struct:_PurpleCertificateVerifier	access:public
_PurpleCertificateVerifier::destroy_request	certificate.h	/^	void (* destroy_request)(PurpleCertificateVerificationRequest *vrq);$/;"	m	struct:_PurpleCertificateVerifier	access:public
_PurpleCertificateVerifier::name	certificate.h	/^	gchar *name;$/;"	m	struct:_PurpleCertificateVerifier	access:public
_PurpleCertificateVerifier::scheme_name	certificate.h	/^	gchar *scheme_name;$/;"	m	struct:_PurpleCertificateVerifier	access:public
_PurpleCertificateVerifier::start_verification	certificate.h	/^	void (* start_verification)(PurpleCertificateVerificationRequest *vrq);$/;"	m	struct:_PurpleCertificateVerifier	access:public
_PurpleChat	blist.h	/^struct _PurpleChat {$/;"	s
_PurpleChat::account	blist.h	/^	PurpleAccount *account; \/**< The account this chat is attached to *\/$/;"	m	struct:_PurpleChat	access:public
_PurpleChat::alias	blist.h	/^	char *alias;             \/**< The display name of this chat. *\/$/;"	m	struct:_PurpleChat	access:public
_PurpleChat::components	blist.h	/^	GHashTable *components;  \/**< the stuff the protocol needs to know to join the chat *\/$/;"	m	struct:_PurpleChat	access:public
_PurpleChat::node	blist.h	/^	PurpleBlistNode node;      \/**< The node that this chat inherits from *\/$/;"	m	struct:_PurpleChat	access:public
_PurpleCipher	cipher.c	/^struct _PurpleCipher {$/;"	s	file:
_PurpleCipher::name	cipher.c	/^	gchar *name;          \/**< Internal name - used for searching *\/$/;"	m	struct:_PurpleCipher	file:	access:public
_PurpleCipher::ops	cipher.c	/^	PurpleCipherOps *ops; \/**< Operations supported by this cipher *\/$/;"	m	struct:_PurpleCipher	file:	access:public
_PurpleCipher::ref	cipher.c	/^	guint ref;            \/**< Reference count *\/$/;"	m	struct:_PurpleCipher	file:	access:public
_PurpleCipherBatchMode	cipher.h	/^typedef enum _PurpleCipherBatchMode {$/;"	g
_PurpleCipherCaps	cipher.h	/^typedef enum _PurpleCipherCaps {$/;"	g
_PurpleCipherContext	cipher.c	/^struct _PurpleCipherContext {$/;"	s	file:
_PurpleCipherContext::cipher	cipher.c	/^	PurpleCipher *cipher; \/**< Cipher this context is under *\/$/;"	m	struct:_PurpleCipherContext	file:	access:public
_PurpleCipherContext::data	cipher.c	/^	gpointer data;        \/**< Internal cipher state data *\/$/;"	m	struct:_PurpleCipherContext	file:	access:public
_PurpleCipherOps	cipher.h	/^struct _PurpleCipherOps {$/;"	s
_PurpleCipherOps::append	cipher.h	/^	void (*append)(PurpleCipherContext *context, const guchar *data, size_t len);$/;"	m	struct:_PurpleCipherOps	access:public
_PurpleCipherOps::decrypt	cipher.h	/^	int (*decrypt)(PurpleCipherContext *context, const guchar data[], size_t len, guchar output[], size_t *outlen);$/;"	m	struct:_PurpleCipherOps	access:public
_PurpleCipherOps::digest	cipher.h	/^	gboolean (*digest)(PurpleCipherContext *context, size_t in_len, guchar digest[], size_t *out_len);$/;"	m	struct:_PurpleCipherOps	access:public
_PurpleCipherOps::encrypt	cipher.h	/^	int (*encrypt)(PurpleCipherContext *context, const guchar data[], size_t len, guchar output[], size_t *outlen);$/;"	m	struct:_PurpleCipherOps	access:public
_PurpleCipherOps::get_batch_mode	cipher.h	/^	PurpleCipherBatchMode (*get_batch_mode)(PurpleCipherContext *context);$/;"	m	struct:_PurpleCipherOps	access:public
_PurpleCipherOps::get_block_size	cipher.h	/^	size_t (*get_block_size)(PurpleCipherContext *context);$/;"	m	struct:_PurpleCipherOps	access:public
_PurpleCipherOps::get_key_size	cipher.h	/^	size_t (*get_key_size)(PurpleCipherContext *context);$/;"	m	struct:_PurpleCipherOps	access:public
_PurpleCipherOps::get_option	cipher.h	/^	void *(*get_option)(PurpleCipherContext *context, const gchar *name);$/;"	m	struct:_PurpleCipherOps	access:public
_PurpleCipherOps::get_salt_size	cipher.h	/^	size_t (*get_salt_size)(PurpleCipherContext *context);$/;"	m	struct:_PurpleCipherOps	access:public
_PurpleCipherOps::init	cipher.h	/^	void (*init)(PurpleCipherContext *context, void *extra);$/;"	m	struct:_PurpleCipherOps	access:public
_PurpleCipherOps::reset	cipher.h	/^	void (*reset)(PurpleCipherContext *context, void *extra);$/;"	m	struct:_PurpleCipherOps	access:public
_PurpleCipherOps::set_batch_mode	cipher.h	/^	void (*set_batch_mode)(PurpleCipherContext *context, PurpleCipherBatchMode mode);$/;"	m	struct:_PurpleCipherOps	access:public
_PurpleCipherOps::set_iv	cipher.h	/^	void (*set_iv)(PurpleCipherContext *context, guchar *iv, size_t len);$/;"	m	struct:_PurpleCipherOps	access:public
_PurpleCipherOps::set_key	cipher.h	/^	void (*set_key)(PurpleCipherContext *context, const guchar *key);$/;"	m	struct:_PurpleCipherOps	access:public
_PurpleCipherOps::set_key_with_len	cipher.h	/^	void (*set_key_with_len)(PurpleCipherContext *context, const guchar *key, size_t len);$/;"	m	struct:_PurpleCipherOps	access:public
_PurpleCipherOps::set_option	cipher.h	/^	void (*set_option)(PurpleCipherContext *context, const gchar *name, void *value);$/;"	m	struct:_PurpleCipherOps	access:public
_PurpleCipherOps::set_salt	cipher.h	/^	void (*set_salt)(PurpleCipherContext *context, guchar *salt);$/;"	m	struct:_PurpleCipherOps	access:public
_PurpleCipherOps::uninit	cipher.h	/^	void (*uninit)(PurpleCipherContext *context);$/;"	m	struct:_PurpleCipherOps	access:public
_PurpleCircBuffer	circbuffer.h	/^typedef struct _PurpleCircBuffer {$/;"	s
_PurpleCircBuffer::buffer	circbuffer.h	/^	gchar *buffer;$/;"	m	struct:_PurpleCircBuffer	access:public
_PurpleCircBuffer::buflen	circbuffer.h	/^	gsize buflen;$/;"	m	struct:_PurpleCircBuffer	access:public
_PurpleCircBuffer::bufused	circbuffer.h	/^	gsize bufused;$/;"	m	struct:_PurpleCircBuffer	access:public
_PurpleCircBuffer::growsize	circbuffer.h	/^	gsize growsize;$/;"	m	struct:_PurpleCircBuffer	access:public
_PurpleCircBuffer::inptr	circbuffer.h	/^	gchar *inptr;$/;"	m	struct:_PurpleCircBuffer	access:public
_PurpleCircBuffer::outptr	circbuffer.h	/^	gchar *outptr;$/;"	m	struct:_PurpleCircBuffer	access:public
_PurpleCmd	cmds.c	/^typedef struct _PurpleCmd {$/;"	s	file:
_PurpleCmd::args	cmds.c	/^	gchar *args;$/;"	m	struct:_PurpleCmd	file:	access:public
_PurpleCmd::cmd	cmds.c	/^	gchar *cmd;$/;"	m	struct:_PurpleCmd	file:	access:public
_PurpleCmd::data	cmds.c	/^	void *data;$/;"	m	struct:_PurpleCmd	file:	access:public
_PurpleCmd::flags	cmds.c	/^	PurpleCmdFlag flags;$/;"	m	struct:_PurpleCmd	file:	access:public
_PurpleCmd::func	cmds.c	/^	PurpleCmdFunc func;$/;"	m	struct:_PurpleCmd	file:	access:public
_PurpleCmd::help	cmds.c	/^	gchar *help;$/;"	m	struct:_PurpleCmd	file:	access:public
_PurpleCmd::id	cmds.c	/^	PurpleCmdId id;$/;"	m	struct:_PurpleCmd	file:	access:public
_PurpleCmd::priority	cmds.c	/^	PurpleCmdPriority priority;$/;"	m	struct:_PurpleCmd	file:	access:public
_PurpleCmd::prpl_id	cmds.c	/^	gchar *prpl_id;$/;"	m	struct:_PurpleCmd	file:	access:public
_PurpleCmdFlag	cmds.h	/^typedef enum _PurpleCmdFlag {$/;"	g
_PurpleCmdPriority	cmds.h	/^typedef enum _PurpleCmdPriority {$/;"	g
_PurpleCmdRet	cmds.h	/^typedef enum _PurpleCmdRet {$/;"	g
_PurpleCmdStatus	cmds.h	/^typedef enum _PurpleCmdStatus {$/;"	g
_PurpleConnection	connection.h	/^struct _PurpleConnection$/;"	s
_PurpleConnection::account	connection.h	/^	PurpleAccount *account;        \/**< The account being connected to.    *\/$/;"	m	struct:_PurpleConnection	access:public
_PurpleConnection::buddy_chats	connection.h	/^	GSList *buddy_chats;         \/**< A list of active chats$/;"	m	struct:_PurpleConnection	access:public
_PurpleConnection::disconnect_timeout	connection.h	/^	guint disconnect_timeout;    \/**< Timer used for nasty stack tricks  *\/$/;"	m	struct:_PurpleConnection	access:public
_PurpleConnection::display_name	connection.h	/^	char *display_name;          \/**< How you appear to other people.    *\/$/;"	m	struct:_PurpleConnection	access:public
_PurpleConnection::flags	connection.h	/^	PurpleConnectionFlags flags;   \/**< Connection flags.                  *\/$/;"	m	struct:_PurpleConnection	access:public
_PurpleConnection::inpa	connection.h	/^	int inpa;                    \/**< The input watcher.                 *\/$/;"	m	struct:_PurpleConnection	access:public
_PurpleConnection::keepalive	connection.h	/^	guint keepalive;             \/**< Keep-alive.                        *\/$/;"	m	struct:_PurpleConnection	access:public
_PurpleConnection::last_received	connection.h	/^	time_t last_received;        \/**< When we last received a packet. Set by the$/;"	m	struct:_PurpleConnection	access:public
_PurpleConnection::password	connection.h	/^	char *password;              \/**< The password used.                 *\/$/;"	m	struct:_PurpleConnection	access:public
_PurpleConnection::proto_data	connection.h	/^	void *proto_data;            \/**< Protocol-specific data.            *\/$/;"	m	struct:_PurpleConnection	access:public
_PurpleConnection::prpl	connection.h	/^	PurplePlugin *prpl;            \/**< The protocol plugin.               *\/$/;"	m	struct:_PurpleConnection	access:public
_PurpleConnection::state	connection.h	/^	PurpleConnectionState state;   \/**< The connection state.              *\/$/;"	m	struct:_PurpleConnection	access:public
_PurpleConnection::wants_to_die	connection.h	/^	gboolean wants_to_die;$/;"	m	struct:_PurpleConnection	access:public
_PurpleContact	blist.h	/^struct _PurpleContact {$/;"	s
_PurpleContact::alias	blist.h	/^	char *alias;            \/**< The user-set alias of the contact *\/$/;"	m	struct:_PurpleContact	access:public
_PurpleContact::currentsize	blist.h	/^	int currentsize;	    \/**< The number of buddies in this contact corresponding to online accounts *\/$/;"	m	struct:_PurpleContact	access:public
_PurpleContact::node	blist.h	/^	PurpleBlistNode node;		\/**< The node that this contact inherits from. *\/$/;"	m	struct:_PurpleContact	access:public
_PurpleContact::online	blist.h	/^	int online;			    \/**< The number of buddies in this contact who are currently online *\/$/;"	m	struct:_PurpleContact	access:public
_PurpleContact::priority	blist.h	/^	PurpleBuddy *priority;    \/**< The "top" buddy for this contact *\/$/;"	m	struct:_PurpleContact	access:public
_PurpleContact::priority_valid	blist.h	/^	gboolean priority_valid; \/**< Is priority valid? *\/$/;"	m	struct:_PurpleContact	access:public
_PurpleContact::totalsize	blist.h	/^	int totalsize;		    \/**< The number of buddies in this contact *\/$/;"	m	struct:_PurpleContact	access:public
_PurpleConvChat	conversation.h	/^struct _PurpleConvChat$/;"	s
_PurpleConvChat::conv	conversation.h	/^	PurpleConversation *conv;          \/**< The parent conversation.      *\/$/;"	m	struct:_PurpleConvChat	access:public
_PurpleConvChat::id	conversation.h	/^	int    id;                       \/**< The chat ID.                  *\/$/;"	m	struct:_PurpleConvChat	access:public
_PurpleConvChat::ignored	conversation.h	/^	GList *ignored;                  \/**< Ignored users.                *\/$/;"	m	struct:_PurpleConvChat	access:public
_PurpleConvChat::in_room	conversation.h	/^	GList *in_room;                  \/**< The users in the room.$/;"	m	struct:_PurpleConvChat	access:public
_PurpleConvChat::left	conversation.h	/^	gboolean left;                   \/**< We left the chat and kept the window open *\/$/;"	m	struct:_PurpleConvChat	access:public
_PurpleConvChat::nick	conversation.h	/^	char *nick;                      \/**< Your nick in this chat.       *\/$/;"	m	struct:_PurpleConvChat	access:public
_PurpleConvChat::topic	conversation.h	/^	char  *topic;                    \/**< The topic.                    *\/$/;"	m	struct:_PurpleConvChat	access:public
_PurpleConvChat::users	conversation.h	/^	GHashTable *users;               \/**< Hash table of the users in the room.$/;"	m	struct:_PurpleConvChat	access:public
_PurpleConvChat::who	conversation.h	/^	char  *who;                      \/**< The person who set the topic. *\/$/;"	m	struct:_PurpleConvChat	access:public
_PurpleConvChatBuddy	conversation.h	/^struct _PurpleConvChatBuddy$/;"	s
_PurpleConvChatBuddy::alias	conversation.h	/^	char *alias;                     \/**< The chat participant's alias, if known;$/;"	m	struct:_PurpleConvChatBuddy	access:public
_PurpleConvChatBuddy::alias_key	conversation.h	/^	char *alias_key;                 \/**< A string by which this buddy will be sorted,$/;"	m	struct:_PurpleConvChatBuddy	access:public
_PurpleConvChatBuddy::attributes	conversation.h	/^	GHashTable *attributes;          \/**< A hash table of attributes about the user, such as$/;"	m	struct:_PurpleConvChatBuddy	access:public
_PurpleConvChatBuddy::buddy	conversation.h	/^	gboolean buddy;                  \/**< @a TRUE if this chat participant is on the$/;"	m	struct:_PurpleConvChatBuddy	access:public
_PurpleConvChatBuddy::flags	conversation.h	/^	PurpleConvChatBuddyFlags flags;  \/**< A bitwise OR of flags for this participant,$/;"	m	struct:_PurpleConvChatBuddy	access:public
_PurpleConvChatBuddy::name	conversation.h	/^	char *name;                      \/**< The chat participant's name in the chat. *\/$/;"	m	struct:_PurpleConvChatBuddy	access:public
_PurpleConvChatBuddy::ui_data	conversation.h	/^	gpointer ui_data;                \/** < The UI can put whatever it wants here. *\/$/;"	m	struct:_PurpleConvChatBuddy	access:public
_PurpleConvIm	conversation.h	/^struct _PurpleConvIm$/;"	s
_PurpleConvIm::conv	conversation.h	/^	PurpleConversation *conv;            \/**< The parent conversation.     *\/$/;"	m	struct:_PurpleConvIm	access:public
_PurpleConvIm::icon	conversation.h	/^	PurpleBuddyIcon *icon;               \/**< The buddy icon.              *\/$/;"	m	struct:_PurpleConvIm	access:public
_PurpleConvIm::send_typed_timeout	conversation.h	/^	guint  send_typed_timeout;         \/**< The type again timer handle. *\/$/;"	m	struct:_PurpleConvIm	access:public
_PurpleConvIm::type_again	conversation.h	/^	time_t type_again;                 \/**< The type again time.         *\/$/;"	m	struct:_PurpleConvIm	access:public
_PurpleConvIm::typing_state	conversation.h	/^	PurpleTypingState typing_state;      \/**< The current typing state.    *\/$/;"	m	struct:_PurpleConvIm	access:public
_PurpleConvIm::typing_timeout	conversation.h	/^	guint  typing_timeout;             \/**< The typing timer handle.     *\/$/;"	m	struct:_PurpleConvIm	access:public
_PurpleConvMessage	conversation.h	/^struct _PurpleConvMessage$/;"	s
_PurpleConvMessage::alias	conversation.h	/^	char *alias;               \/**< @since 2.3.0 *\/$/;"	m	struct:_PurpleConvMessage	access:public
_PurpleConvMessage::conv	conversation.h	/^	PurpleConversation *conv;  \/**< @since 2.3.0 *\/$/;"	m	struct:_PurpleConvMessage	access:public
_PurpleConvMessage::flags	conversation.h	/^	PurpleMessageFlags flags;$/;"	m	struct:_PurpleConvMessage	access:public
_PurpleConvMessage::what	conversation.h	/^	char *what;$/;"	m	struct:_PurpleConvMessage	access:public
_PurpleConvMessage::when	conversation.h	/^	time_t when;$/;"	m	struct:_PurpleConvMessage	access:public
_PurpleConvMessage::who	conversation.h	/^	char *who;$/;"	m	struct:_PurpleConvMessage	access:public
_PurpleConversation	conversation.h	/^struct _PurpleConversation$/;"	s
_PurpleConversation::__anon61::chat	conversation.h	/^		PurpleConvChat *chat;     \/**< Chat-specific data.                *\/$/;"	m	union:_PurpleConversation::__anon61	access:public
_PurpleConversation::__anon61::im	conversation.h	/^		PurpleConvIm   *im;       \/**< IM-specific data.                  *\/$/;"	m	union:_PurpleConversation::__anon61	access:public
_PurpleConversation::__anon61::misc	conversation.h	/^		void *misc;             \/**< Misc. data.                        *\/$/;"	m	union:_PurpleConversation::__anon61	access:public
_PurpleConversation::account	conversation.h	/^	PurpleAccount *account;       \/**< The user using this conversation.  *\/$/;"	m	struct:_PurpleConversation	access:public
_PurpleConversation::data	conversation.h	/^	GHashTable *data;                        \/**< Plugin-specific data.   *\/$/;"	m	struct:_PurpleConversation	access:public
_PurpleConversation::features	conversation.h	/^	PurpleConnectionFlags features; \/**< The supported features *\/$/;"	m	struct:_PurpleConversation	access:public
_PurpleConversation::logging	conversation.h	/^	gboolean logging;           \/**< The status of logging.             *\/$/;"	m	struct:_PurpleConversation	access:public
_PurpleConversation::logs	conversation.h	/^	GList *logs;                \/**< This conversation's logs           *\/$/;"	m	struct:_PurpleConversation	access:public
_PurpleConversation::message_history	conversation.h	/^	GList *message_history;         \/**< Message history, as a GList of PurpleConvMessage's *\/$/;"	m	struct:_PurpleConversation	access:public
_PurpleConversation::name	conversation.h	/^	char *name;                 \/**< The name of the conversation.      *\/$/;"	m	struct:_PurpleConversation	access:public
_PurpleConversation::title	conversation.h	/^	char *title;                \/**< The window title.                  *\/$/;"	m	struct:_PurpleConversation	access:public
_PurpleConversation::type	conversation.h	/^	PurpleConversationType type;  \/**< The type of conversation.          *\/$/;"	m	struct:_PurpleConversation	access:public
_PurpleConversation::u	conversation.h	/^	} u;$/;"	m	struct:_PurpleConversation	typeref:union:_PurpleConversation::__anon61	access:public
_PurpleConversation::ui_data	conversation.h	/^	void *ui_data;                           \/**< UI-specific data.       *\/$/;"	m	struct:_PurpleConversation	access:public
_PurpleConversation::ui_ops	conversation.h	/^	PurpleConversationUiOps *ui_ops;           \/**< UI-specific operations. *\/$/;"	m	struct:_PurpleConversation	access:public
_PurpleConversationUiOps	conversation.h	/^struct _PurpleConversationUiOps$/;"	s
_PurpleConversationUiOps::_purple_reserved1	conversation.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:_PurpleConversationUiOps	access:public
_PurpleConversationUiOps::_purple_reserved2	conversation.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:_PurpleConversationUiOps	access:public
_PurpleConversationUiOps::_purple_reserved3	conversation.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:_PurpleConversationUiOps	access:public
_PurpleConversationUiOps::_purple_reserved4	conversation.h	/^	void (*_purple_reserved4)(void);$/;"	m	struct:_PurpleConversationUiOps	access:public
_PurpleConversationUiOps::chat_add_users	conversation.h	/^	void (*chat_add_users)(PurpleConversation *conv,$/;"	m	struct:_PurpleConversationUiOps	access:public
_PurpleConversationUiOps::chat_remove_users	conversation.h	/^	void (*chat_remove_users)(PurpleConversation *conv, GList *users);$/;"	m	struct:_PurpleConversationUiOps	access:public
_PurpleConversationUiOps::chat_rename_user	conversation.h	/^	void (*chat_rename_user)(PurpleConversation *conv, const char *old_name,$/;"	m	struct:_PurpleConversationUiOps	access:public
_PurpleConversationUiOps::chat_update_user	conversation.h	/^	void (*chat_update_user)(PurpleConversation *conv, const char *user);$/;"	m	struct:_PurpleConversationUiOps	access:public
_PurpleConversationUiOps::create_conversation	conversation.h	/^	void (*create_conversation)(PurpleConversation *conv);$/;"	m	struct:_PurpleConversationUiOps	access:public
_PurpleConversationUiOps::custom_smiley_add	conversation.h	/^	gboolean (*custom_smiley_add)(PurpleConversation *conv, const char *smile, gboolean remote);$/;"	m	struct:_PurpleConversationUiOps	access:public
_PurpleConversationUiOps::custom_smiley_close	conversation.h	/^	void (*custom_smiley_close)(PurpleConversation *conv, const char *smile);$/;"	m	struct:_PurpleConversationUiOps	access:public
_PurpleConversationUiOps::custom_smiley_write	conversation.h	/^	void (*custom_smiley_write)(PurpleConversation *conv, const char *smile,$/;"	m	struct:_PurpleConversationUiOps	access:public
_PurpleConversationUiOps::destroy_conversation	conversation.h	/^	void (*destroy_conversation)(PurpleConversation *conv);$/;"	m	struct:_PurpleConversationUiOps	access:public
_PurpleConversationUiOps::has_focus	conversation.h	/^	gboolean (*has_focus)(PurpleConversation *conv);$/;"	m	struct:_PurpleConversationUiOps	access:public
_PurpleConversationUiOps::present	conversation.h	/^	void (*present)(PurpleConversation *conv);$/;"	m	struct:_PurpleConversationUiOps	access:public
_PurpleConversationUiOps::send_confirm	conversation.h	/^	void (*send_confirm)(PurpleConversation *conv, const char *message);$/;"	m	struct:_PurpleConversationUiOps	access:public
_PurpleConversationUiOps::write_chat	conversation.h	/^	void (*write_chat)(PurpleConversation *conv, const char *who,$/;"	m	struct:_PurpleConversationUiOps	access:public
_PurpleConversationUiOps::write_conv	conversation.h	/^	void (*write_conv)(PurpleConversation *conv,$/;"	m	struct:_PurpleConversationUiOps	access:public
_PurpleConversationUiOps::write_im	conversation.h	/^	void (*write_im)(PurpleConversation *conv, const char *who,$/;"	m	struct:_PurpleConversationUiOps	access:public
_PurpleDBusType	dbus-server.h	/^struct _PurpleDBusType {$/;"	s
_PurpleDBusType::parent	dbus-server.h	/^    PurpleDBusType *parent;$/;"	m	struct:_PurpleDBusType	access:public
_PurpleDesktopItem	desktopitem.c	/^struct _PurpleDesktopItem {$/;"	s	file:
_PurpleDesktopItem::keys	desktopitem.c	/^	GList *keys;$/;"	m	struct:_PurpleDesktopItem	file:	access:public
_PurpleDesktopItem::languages	desktopitem.c	/^	GList *languages;$/;"	m	struct:_PurpleDesktopItem	file:	access:public
_PurpleDesktopItem::location	desktopitem.c	/^	char *location;$/;"	m	struct:_PurpleDesktopItem	file:	access:public
_PurpleDesktopItem::main_hash	desktopitem.c	/^	GHashTable *main_hash;$/;"	m	struct:_PurpleDesktopItem	file:	access:public
_PurpleDesktopItem::modified	desktopitem.c	/^	gboolean modified;$/;"	m	struct:_PurpleDesktopItem	file:	access:public
_PurpleDesktopItem::mtime	desktopitem.c	/^	time_t mtime;$/;"	m	struct:_PurpleDesktopItem	file:	access:public
_PurpleDesktopItem::refcount	desktopitem.c	/^	int refcount;$/;"	m	struct:_PurpleDesktopItem	file:	access:public
_PurpleDesktopItem::sections	desktopitem.c	/^	GList *sections;$/;"	m	struct:_PurpleDesktopItem	file:	access:public
_PurpleDesktopItem::type	desktopitem.c	/^	PurpleDesktopItemType type;$/;"	m	struct:_PurpleDesktopItem	file:	access:public
_PurpleDnsQueryData	dnsquery.c	/^struct _PurpleDnsQueryData {$/;"	s	file:
_PurpleDnsQueryData::account	dnsquery.c	/^	PurpleAccount *account;$/;"	m	struct:_PurpleDnsQueryData	file:	access:public
_PurpleDnsQueryData::callback	dnsquery.c	/^	PurpleDnsQueryConnectFunction callback;$/;"	m	struct:_PurpleDnsQueryData	file:	access:public
_PurpleDnsQueryData::data	dnsquery.c	/^	gpointer data;$/;"	m	struct:_PurpleDnsQueryData	file:	access:public
_PurpleDnsQueryData::error_message	dnsquery.c	/^	gchar *error_message;$/;"	m	struct:_PurpleDnsQueryData	file:	access:public
_PurpleDnsQueryData::hostname	dnsquery.c	/^	char *hostname;$/;"	m	struct:_PurpleDnsQueryData	file:	access:public
_PurpleDnsQueryData::hosts	dnsquery.c	/^	GSList *hosts;$/;"	m	struct:_PurpleDnsQueryData	file:	access:public
_PurpleDnsQueryData::port	dnsquery.c	/^	int port;$/;"	m	struct:_PurpleDnsQueryData	file:	access:public
_PurpleDnsQueryData::resolver	dnsquery.c	/^	GThread *resolver;$/;"	m	struct:_PurpleDnsQueryData	file:	access:public
_PurpleDnsQueryData::resolver	dnsquery.c	/^	PurpleDnsQueryResolverProcess *resolver;$/;"	m	struct:_PurpleDnsQueryData	file:	access:public
_PurpleDnsQueryData::timeout	dnsquery.c	/^	guint timeout;$/;"	m	struct:_PurpleDnsQueryData	file:	access:public
_PurpleDnsQueryResolverProcess	dnsquery.c	/^struct _PurpleDnsQueryResolverProcess {$/;"	s	file:
_PurpleDnsQueryResolverProcess::dns_pid	dnsquery.c	/^	pid_t dns_pid;$/;"	m	struct:_PurpleDnsQueryResolverProcess	file:	access:public
_PurpleDnsQueryResolverProcess::fd_in	dnsquery.c	/^	int fd_in, fd_out;$/;"	m	struct:_PurpleDnsQueryResolverProcess	file:	access:public
_PurpleDnsQueryResolverProcess::fd_out	dnsquery.c	/^	int fd_in, fd_out;$/;"	m	struct:_PurpleDnsQueryResolverProcess	file:	access:public
_PurpleDnsQueryResolverProcess::inpa	dnsquery.c	/^	guint inpa;$/;"	m	struct:_PurpleDnsQueryResolverProcess	file:	access:public
_PurpleEventLoopUiOps	eventloop.h	/^struct _PurpleEventLoopUiOps$/;"	s
_PurpleEventLoopUiOps::_purple_reserved2	eventloop.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:_PurpleEventLoopUiOps	access:public
_PurpleEventLoopUiOps::_purple_reserved3	eventloop.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:_PurpleEventLoopUiOps	access:public
_PurpleEventLoopUiOps::_purple_reserved4	eventloop.h	/^	void (*_purple_reserved4)(void);$/;"	m	struct:_PurpleEventLoopUiOps	access:public
_PurpleEventLoopUiOps::input_add	eventloop.h	/^	guint (*input_add)(int fd, PurpleInputCondition cond,$/;"	m	struct:_PurpleEventLoopUiOps	access:public
_PurpleEventLoopUiOps::input_get_error	eventloop.h	/^	int (*input_get_error)(int fd, int *error);$/;"	m	struct:_PurpleEventLoopUiOps	access:public
_PurpleEventLoopUiOps::input_remove	eventloop.h	/^	gboolean (*input_remove)(guint handle);$/;"	m	struct:_PurpleEventLoopUiOps	access:public
_PurpleEventLoopUiOps::timeout_add	eventloop.h	/^	guint (*timeout_add)(guint interval, GSourceFunc function, gpointer data);$/;"	m	struct:_PurpleEventLoopUiOps	access:public
_PurpleEventLoopUiOps::timeout_add_seconds	eventloop.h	/^	guint (*timeout_add_seconds)(guint interval, GSourceFunc function,$/;"	m	struct:_PurpleEventLoopUiOps	access:public
_PurpleEventLoopUiOps::timeout_remove	eventloop.h	/^	gboolean (*timeout_remove)(guint handle);$/;"	m	struct:_PurpleEventLoopUiOps	access:public
_PurpleGroup	blist.h	/^struct _PurpleGroup {$/;"	s
_PurpleGroup::currentsize	blist.h	/^	int currentsize;		       \/**< The number of chats and contacts in this group corresponding to online accounts *\/$/;"	m	struct:_PurpleGroup	access:public
_PurpleGroup::name	blist.h	/^	char *name;                            \/**< The name of this group. *\/$/;"	m	struct:_PurpleGroup	access:public
_PurpleGroup::node	blist.h	/^	PurpleBlistNode node;                    \/**< The node that this group inherits from *\/$/;"	m	struct:_PurpleGroup	access:public
_PurpleGroup::online	blist.h	/^	int online;			       \/**< The number of chats and contacts in this group who are currently online *\/$/;"	m	struct:_PurpleGroup	access:public
_PurpleGroup::totalsize	blist.h	/^	int totalsize;			       \/**< The number of chats and contacts in this group *\/$/;"	m	struct:_PurpleGroup	access:public
_PurpleKeyValuePair	util.h	/^struct _PurpleKeyValuePair$/;"	s
_PurpleKeyValuePair::key	util.h	/^	gchar *key;$/;"	m	struct:_PurpleKeyValuePair	access:public
_PurpleKeyValuePair::value	util.h	/^	void *value;$/;"	m	struct:_PurpleKeyValuePair	access:public
_PurpleLog	log.h	/^struct _PurpleLog {$/;"	s
_PurpleLog::account	log.h	/^	PurpleAccount *account;                 \/**< The account this log is taking$/;"	m	struct:_PurpleLog	access:public
_PurpleLog::conv	log.h	/^	PurpleConversation *conv;               \/**< The conversation being logged *\/$/;"	m	struct:_PurpleLog	access:public
_PurpleLog::logger	log.h	/^	PurpleLogLogger *logger;                \/**< The logging mechanism this log$/;"	m	struct:_PurpleLog	access:public
_PurpleLog::logger_data	log.h	/^	void *logger_data;                    \/**< Data used by the log logger *\/$/;"	m	struct:_PurpleLog	access:public
_PurpleLog::name	log.h	/^	char *name;                           \/**< The name of this log *\/$/;"	m	struct:_PurpleLog	access:public
_PurpleLog::time	log.h	/^	time_t time;                          \/**< The time this conversation$/;"	m	struct:_PurpleLog	access:public
_PurpleLog::tm	log.h	/^	struct tm *tm;                        \/**< The time this conversation$/;"	m	struct:_PurpleLog	typeref:struct:_PurpleLog::tm	access:public
_PurpleLog::type	log.h	/^	PurpleLogType type;                     \/**< The type of log this is *\/$/;"	m	struct:_PurpleLog	access:public
_PurpleLogCommonLoggerData	log.h	/^struct _PurpleLogCommonLoggerData {$/;"	s
_PurpleLogCommonLoggerData::extra_data	log.h	/^	void *extra_data;$/;"	m	struct:_PurpleLogCommonLoggerData	access:public
_PurpleLogCommonLoggerData::file	log.h	/^	FILE *file;$/;"	m	struct:_PurpleLogCommonLoggerData	access:public
_PurpleLogCommonLoggerData::path	log.h	/^	char *path;$/;"	m	struct:_PurpleLogCommonLoggerData	access:public
_PurpleLogLogger	log.h	/^struct _PurpleLogLogger {$/;"	s
_PurpleLogLogger::_purple_reserved1	log.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:_PurpleLogLogger	access:public
_PurpleLogLogger::_purple_reserved2	log.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:_PurpleLogLogger	access:public
_PurpleLogLogger::_purple_reserved3	log.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:_PurpleLogLogger	access:public
_PurpleLogLogger::_purple_reserved4	log.h	/^	void (*_purple_reserved4)(void);$/;"	m	struct:_PurpleLogLogger	access:public
_PurpleLogLogger::create	log.h	/^	void (*create)(PurpleLog *log);$/;"	m	struct:_PurpleLogLogger	access:public
_PurpleLogLogger::finalize	log.h	/^	void (*finalize)(PurpleLog *log);$/;"	m	struct:_PurpleLogLogger	access:public
_PurpleLogLogger::get_log_sets	log.h	/^	void (*get_log_sets)(PurpleLogSetCallback cb, GHashTable *sets);$/;"	m	struct:_PurpleLogLogger	access:public
_PurpleLogLogger::id	log.h	/^	char *id;                 \/**< an identifier to refer to this logger *\/$/;"	m	struct:_PurpleLogLogger	access:public
_PurpleLogLogger::is_deletable	log.h	/^	gboolean (*is_deletable)(PurpleLog *log);$/;"	m	struct:_PurpleLogLogger	access:public
_PurpleLogLogger::list	log.h	/^	GList *(*list)(PurpleLogType type, const char *name, PurpleAccount *account);$/;"	m	struct:_PurpleLogLogger	access:public
_PurpleLogLogger::list_syslog	log.h	/^	GList *(*list_syslog)(PurpleAccount *account);$/;"	m	struct:_PurpleLogLogger	access:public
_PurpleLogLogger::name	log.h	/^	char *name;               \/**< The logger's name *\/$/;"	m	struct:_PurpleLogLogger	access:public
_PurpleLogLogger::read	log.h	/^	char *(*read)(PurpleLog *log, PurpleLogReadFlags *flags);$/;"	m	struct:_PurpleLogLogger	access:public
_PurpleLogLogger::remove	log.h	/^	gboolean (*remove)(PurpleLog *log);$/;"	m	struct:_PurpleLogLogger	access:public
_PurpleLogLogger::size	log.h	/^	int (*size)(PurpleLog *log);$/;"	m	struct:_PurpleLogLogger	access:public
_PurpleLogLogger::total_size	log.h	/^	int (*total_size)(PurpleLogType type, const char *name, PurpleAccount *account);$/;"	m	struct:_PurpleLogLogger	access:public
_PurpleLogLogger::write	log.h	/^	gsize (*write)(PurpleLog *log,$/;"	m	struct:_PurpleLogLogger	access:public
_PurpleLogSet	log.h	/^struct _PurpleLogSet {$/;"	s
_PurpleLogSet::account	log.h	/^	PurpleAccount *account;                 \/**< The account the available logs$/;"	m	struct:_PurpleLogSet	access:public
_PurpleLogSet::buddy	log.h	/^	gboolean buddy;                       \/**< Is this (account, name) a buddy$/;"	m	struct:_PurpleLogSet	access:public
_PurpleLogSet::name	log.h	/^	char *name;                           \/**< The name of the logs available *\/$/;"	m	struct:_PurpleLogSet	access:public
_PurpleLogSet::normalized_name	log.h	/^	char *normalized_name;                \/**< The normalized version of$/;"	m	struct:_PurpleLogSet	access:public
_PurpleLogSet::type	log.h	/^	PurpleLogType type;                     \/**< The type of logs available *\/$/;"	m	struct:_PurpleLogSet	access:public
_PurpleMedia	media.c	/^struct _PurpleMedia$/;"	s	file:
_PurpleMedia::parent	media.c	/^	GObject parent;                \/**< The parent of this object. *\/$/;"	m	struct:_PurpleMedia	file:	access:public
_PurpleMedia::priv	media.c	/^	PurpleMediaPrivate *priv;      \/**< The private data of this object. *\/$/;"	m	struct:_PurpleMedia	file:	access:public
_PurpleMediaBackendFs2	media/backend-fs2.c	/^struct _PurpleMediaBackendFs2$/;"	s	file:
_PurpleMediaBackendFs2::parent	media/backend-fs2.c	/^	GObject parent;$/;"	m	struct:_PurpleMediaBackendFs2	file:	access:public
_PurpleMediaBackendFs2Class	media/backend-fs2.c	/^struct _PurpleMediaBackendFs2Class$/;"	s	file:
_PurpleMediaBackendFs2Class::parent_class	media/backend-fs2.c	/^	GObjectClass parent_class;$/;"	m	struct:_PurpleMediaBackendFs2Class	file:	access:public
_PurpleMediaBackendFs2Private	media/backend-fs2.c	/^struct _PurpleMediaBackendFs2Private$/;"	s	file:
_PurpleMediaBackendFs2Private::confbin	media/backend-fs2.c	/^	GstElement *confbin;$/;"	m	struct:_PurpleMediaBackendFs2Private	file:	access:public
_PurpleMediaBackendFs2Private::conference	media/backend-fs2.c	/^	FsConference *conference;$/;"	m	struct:_PurpleMediaBackendFs2Private	file:	access:public
_PurpleMediaBackendFs2Private::conference_type	media/backend-fs2.c	/^	gchar *conference_type;$/;"	m	struct:_PurpleMediaBackendFs2Private	file:	access:public
_PurpleMediaBackendFs2Private::media	media/backend-fs2.c	/^	PurpleMedia *media;$/;"	m	struct:_PurpleMediaBackendFs2Private	file:	access:public
_PurpleMediaBackendFs2Private::notifier	media/backend-fs2.c	/^	FsElementAddedNotifier *notifier;$/;"	m	struct:_PurpleMediaBackendFs2Private	file:	access:public
_PurpleMediaBackendFs2Private::participants	media/backend-fs2.c	/^	GHashTable *participants;$/;"	m	struct:_PurpleMediaBackendFs2Private	file:	access:public
_PurpleMediaBackendFs2Private::sessions	media/backend-fs2.c	/^	GHashTable *sessions;$/;"	m	struct:_PurpleMediaBackendFs2Private	file:	access:public
_PurpleMediaBackendFs2Private::silence_threshold	media/backend-fs2.c	/^	gdouble silence_threshold;$/;"	m	struct:_PurpleMediaBackendFs2Private	file:	access:public
_PurpleMediaBackendFs2Private::streams	media/backend-fs2.c	/^	GList *streams;$/;"	m	struct:_PurpleMediaBackendFs2Private	file:	access:public
_PurpleMediaBackendFs2Session	media/backend-fs2.c	/^struct _PurpleMediaBackendFs2Session$/;"	s	file:
_PurpleMediaBackendFs2Session::backend	media/backend-fs2.c	/^	PurpleMediaBackendFs2 *backend;$/;"	m	struct:_PurpleMediaBackendFs2Session	file:	access:public
_PurpleMediaBackendFs2Session::id	media/backend-fs2.c	/^	gchar *id;$/;"	m	struct:_PurpleMediaBackendFs2Session	file:	access:public
_PurpleMediaBackendFs2Session::session	media/backend-fs2.c	/^	FsSession *session;$/;"	m	struct:_PurpleMediaBackendFs2Session	file:	access:public
_PurpleMediaBackendFs2Session::src	media/backend-fs2.c	/^	GstElement *src;$/;"	m	struct:_PurpleMediaBackendFs2Session	file:	access:public
_PurpleMediaBackendFs2Session::srcpad	media/backend-fs2.c	/^	GstPad *srcpad;$/;"	m	struct:_PurpleMediaBackendFs2Session	file:	access:public
_PurpleMediaBackendFs2Session::srcvalve	media/backend-fs2.c	/^	GstElement *srcvalve;$/;"	m	struct:_PurpleMediaBackendFs2Session	file:	access:public
_PurpleMediaBackendFs2Session::tee	media/backend-fs2.c	/^	GstElement *tee;$/;"	m	struct:_PurpleMediaBackendFs2Session	file:	access:public
_PurpleMediaBackendFs2Session::type	media/backend-fs2.c	/^	PurpleMediaSessionType type;$/;"	m	struct:_PurpleMediaBackendFs2Session	file:	access:public
_PurpleMediaBackendFs2Stream	media/backend-fs2.c	/^struct _PurpleMediaBackendFs2Stream$/;"	s	file:
_PurpleMediaBackendFs2Stream::connected_cb_id	media/backend-fs2.c	/^	guint connected_cb_id;$/;"	m	struct:_PurpleMediaBackendFs2Stream	file:	access:public
_PurpleMediaBackendFs2Stream::fakesink	media/backend-fs2.c	/^	GstElement *fakesink;$/;"	m	struct:_PurpleMediaBackendFs2Stream	file:	access:public
_PurpleMediaBackendFs2Stream::level	media/backend-fs2.c	/^	GstElement *level;$/;"	m	struct:_PurpleMediaBackendFs2Stream	file:	access:public
_PurpleMediaBackendFs2Stream::local_candidates	media/backend-fs2.c	/^	GList *local_candidates;$/;"	m	struct:_PurpleMediaBackendFs2Stream	file:	access:public
_PurpleMediaBackendFs2Stream::participant	media/backend-fs2.c	/^	gchar *participant;$/;"	m	struct:_PurpleMediaBackendFs2Stream	file:	access:public
_PurpleMediaBackendFs2Stream::queue	media/backend-fs2.c	/^	GstElement *queue;$/;"	m	struct:_PurpleMediaBackendFs2Stream	file:	access:public
_PurpleMediaBackendFs2Stream::remote_candidates	media/backend-fs2.c	/^	GList *remote_candidates;$/;"	m	struct:_PurpleMediaBackendFs2Stream	file:	access:public
_PurpleMediaBackendFs2Stream::session	media/backend-fs2.c	/^	PurpleMediaBackendFs2Session *session;$/;"	m	struct:_PurpleMediaBackendFs2Stream	file:	access:public
_PurpleMediaBackendFs2Stream::src	media/backend-fs2.c	/^	GstElement *src;$/;"	m	struct:_PurpleMediaBackendFs2Stream	file:	access:public
_PurpleMediaBackendFs2Stream::stream	media/backend-fs2.c	/^	FsStream *stream;$/;"	m	struct:_PurpleMediaBackendFs2Stream	file:	access:public
_PurpleMediaBackendFs2Stream::supports_add	media/backend-fs2.c	/^	gboolean supports_add;$/;"	m	struct:_PurpleMediaBackendFs2Stream	file:	access:public
_PurpleMediaBackendFs2Stream::tee	media/backend-fs2.c	/^	GstElement *tee;$/;"	m	struct:_PurpleMediaBackendFs2Stream	file:	access:public
_PurpleMediaBackendFs2Stream::volume	media/backend-fs2.c	/^	GstElement *volume;$/;"	m	struct:_PurpleMediaBackendFs2Stream	file:	access:public
_PurpleMediaBackendIface	media/backend-iface.h	/^struct _PurpleMediaBackendIface$/;"	s
_PurpleMediaBackendIface::add_remote_candidates	media/backend-iface.h	/^	void (*add_remote_candidates) (PurpleMediaBackend *self,$/;"	m	struct:_PurpleMediaBackendIface	access:public
_PurpleMediaBackendIface::add_stream	media/backend-iface.h	/^	gboolean (*add_stream) (PurpleMediaBackend *self,$/;"	m	struct:_PurpleMediaBackendIface	access:public
_PurpleMediaBackendIface::codecs_ready	media/backend-iface.h	/^	gboolean (*codecs_ready) (PurpleMediaBackend *self,$/;"	m	struct:_PurpleMediaBackendIface	access:public
_PurpleMediaBackendIface::get_available_params	media/backend-iface.h	/^	const gchar **(*get_available_params) (void);$/;"	m	struct:_PurpleMediaBackendIface	access:public
_PurpleMediaBackendIface::get_codecs	media/backend-iface.h	/^	GList *(*get_codecs) (PurpleMediaBackend *self,$/;"	m	struct:_PurpleMediaBackendIface	access:public
_PurpleMediaBackendIface::get_local_candidates	media/backend-iface.h	/^	GList *(*get_local_candidates) (PurpleMediaBackend *self,$/;"	m	struct:_PurpleMediaBackendIface	access:public
_PurpleMediaBackendIface::parent_iface	media/backend-iface.h	/^	GTypeInterface parent_iface; \/**< The parent iface class *\/$/;"	m	struct:_PurpleMediaBackendIface	access:public
_PurpleMediaBackendIface::set_params	media/backend-iface.h	/^	void (*set_params) (PurpleMediaBackend *self,$/;"	m	struct:_PurpleMediaBackendIface	access:public
_PurpleMediaBackendIface::set_remote_codecs	media/backend-iface.h	/^	gboolean (*set_remote_codecs) (PurpleMediaBackend *self,$/;"	m	struct:_PurpleMediaBackendIface	access:public
_PurpleMediaBackendIface::set_send_codec	media/backend-iface.h	/^	gboolean (*set_send_codec) (PurpleMediaBackend *self,$/;"	m	struct:_PurpleMediaBackendIface	access:public
_PurpleMediaCandidate	media/candidate.c	/^struct _PurpleMediaCandidate$/;"	s	file:
_PurpleMediaCandidate::parent	media/candidate.c	/^	GObject parent;$/;"	m	struct:_PurpleMediaCandidate	file:	access:public
_PurpleMediaCandidateClass	media/candidate.c	/^struct _PurpleMediaCandidateClass$/;"	s	file:
_PurpleMediaCandidateClass::parent_class	media/candidate.c	/^	GObjectClass parent_class;$/;"	m	struct:_PurpleMediaCandidateClass	file:	access:public
_PurpleMediaCandidatePrivate	media/candidate.c	/^struct _PurpleMediaCandidatePrivate$/;"	s	file:
_PurpleMediaCandidatePrivate::base_ip	media/candidate.c	/^	gchar *base_ip;$/;"	m	struct:_PurpleMediaCandidatePrivate	file:	access:public
_PurpleMediaCandidatePrivate::base_port	media/candidate.c	/^	guint16 base_port;$/;"	m	struct:_PurpleMediaCandidatePrivate	file:	access:public
_PurpleMediaCandidatePrivate::component_id	media/candidate.c	/^	guint component_id;$/;"	m	struct:_PurpleMediaCandidatePrivate	file:	access:public
_PurpleMediaCandidatePrivate::foundation	media/candidate.c	/^	gchar *foundation;$/;"	m	struct:_PurpleMediaCandidatePrivate	file:	access:public
_PurpleMediaCandidatePrivate::ip	media/candidate.c	/^	gchar *ip;$/;"	m	struct:_PurpleMediaCandidatePrivate	file:	access:public
_PurpleMediaCandidatePrivate::password	media/candidate.c	/^	gchar *password;$/;"	m	struct:_PurpleMediaCandidatePrivate	file:	access:public
_PurpleMediaCandidatePrivate::port	media/candidate.c	/^	guint16 port;$/;"	m	struct:_PurpleMediaCandidatePrivate	file:	access:public
_PurpleMediaCandidatePrivate::priority	media/candidate.c	/^	guint32 priority;$/;"	m	struct:_PurpleMediaCandidatePrivate	file:	access:public
_PurpleMediaCandidatePrivate::proto	media/candidate.c	/^	PurpleMediaNetworkProtocol proto;$/;"	m	struct:_PurpleMediaCandidatePrivate	file:	access:public
_PurpleMediaCandidatePrivate::ttl	media/candidate.c	/^	guint ttl;$/;"	m	struct:_PurpleMediaCandidatePrivate	file:	access:public
_PurpleMediaCandidatePrivate::type	media/candidate.c	/^	PurpleMediaCandidateType type;$/;"	m	struct:_PurpleMediaCandidatePrivate	file:	access:public
_PurpleMediaCandidatePrivate::username	media/candidate.c	/^	gchar *username;$/;"	m	struct:_PurpleMediaCandidatePrivate	file:	access:public
_PurpleMediaClass	media.c	/^struct _PurpleMediaClass$/;"	s	file:
_PurpleMediaClass::parent_class	media.c	/^	GObjectClass parent_class;     \/**< The parent class. *\/$/;"	m	struct:_PurpleMediaClass	file:	access:public
_PurpleMediaCodec	media/codec.c	/^struct _PurpleMediaCodec$/;"	s	file:
_PurpleMediaCodec::parent	media/codec.c	/^	GObject parent;$/;"	m	struct:_PurpleMediaCodec	file:	access:public
_PurpleMediaCodecClass	media/codec.c	/^struct _PurpleMediaCodecClass$/;"	s	file:
_PurpleMediaCodecClass::parent_class	media/codec.c	/^	GObjectClass parent_class;$/;"	m	struct:_PurpleMediaCodecClass	file:	access:public
_PurpleMediaCodecPrivate	media/codec.c	/^struct _PurpleMediaCodecPrivate$/;"	s	file:
_PurpleMediaCodecPrivate::channels	media/codec.c	/^	guint channels;$/;"	m	struct:_PurpleMediaCodecPrivate	file:	access:public
_PurpleMediaCodecPrivate::clock_rate	media/codec.c	/^	guint clock_rate;$/;"	m	struct:_PurpleMediaCodecPrivate	file:	access:public
_PurpleMediaCodecPrivate::encoding_name	media/codec.c	/^	char *encoding_name;$/;"	m	struct:_PurpleMediaCodecPrivate	file:	access:public
_PurpleMediaCodecPrivate::id	media/codec.c	/^	gint id;$/;"	m	struct:_PurpleMediaCodecPrivate	file:	access:public
_PurpleMediaCodecPrivate::media_type	media/codec.c	/^	PurpleMediaSessionType media_type;$/;"	m	struct:_PurpleMediaCodecPrivate	file:	access:public
_PurpleMediaCodecPrivate::optional_params	media/codec.c	/^	GList *optional_params;$/;"	m	struct:_PurpleMediaCodecPrivate	file:	access:public
_PurpleMediaElementInfo	mediamanager.c	/^struct _PurpleMediaElementInfo$/;"	s	file:
_PurpleMediaElementInfo::parent	mediamanager.c	/^	GObject parent;$/;"	m	struct:_PurpleMediaElementInfo	file:	access:public
_PurpleMediaElementInfoClass	mediamanager.c	/^struct _PurpleMediaElementInfoClass$/;"	s	file:
_PurpleMediaElementInfoClass::parent_class	mediamanager.c	/^	GObjectClass parent_class;$/;"	m	struct:_PurpleMediaElementInfoClass	file:	access:public
_PurpleMediaElementInfoPrivate	mediamanager.c	/^struct _PurpleMediaElementInfoPrivate$/;"	s	file:
_PurpleMediaElementInfoPrivate::create	mediamanager.c	/^	PurpleMediaElementCreateCallback create;$/;"	m	struct:_PurpleMediaElementInfoPrivate	file:	access:public
_PurpleMediaElementInfoPrivate::id	mediamanager.c	/^	gchar *id;$/;"	m	struct:_PurpleMediaElementInfoPrivate	file:	access:public
_PurpleMediaElementInfoPrivate::name	mediamanager.c	/^	gchar *name;$/;"	m	struct:_PurpleMediaElementInfoPrivate	file:	access:public
_PurpleMediaElementInfoPrivate::type	mediamanager.c	/^	PurpleMediaElementType type;$/;"	m	struct:_PurpleMediaElementInfoPrivate	file:	access:public
_PurpleMediaManager	mediamanager.c	/^struct _PurpleMediaManager$/;"	s	file:
_PurpleMediaManager::parent	mediamanager.c	/^	GObject parent;                  \/**< The parent of this manager. *\/$/;"	m	struct:_PurpleMediaManager	file:	access:public
_PurpleMediaManager::priv	mediamanager.c	/^	PurpleMediaManagerPrivate *priv; \/**< Private data for the manager. *\/$/;"	m	struct:_PurpleMediaManager	file:	access:public
_PurpleMediaManagerClass	mediamanager.c	/^struct _PurpleMediaManagerClass$/;"	s	file:
_PurpleMediaManagerClass::parent_class	mediamanager.c	/^	GObjectClass parent_class;       \/**< The parent class. *\/$/;"	m	struct:_PurpleMediaManagerClass	file:	access:public
_PurpleMediaManagerPrivate	mediamanager.c	/^struct _PurpleMediaManagerPrivate$/;"	s	file:
_PurpleMediaManagerPrivate::audio_sink	mediamanager.c	/^	PurpleMediaElementInfo *audio_sink;$/;"	m	struct:_PurpleMediaManagerPrivate	file:	access:public
_PurpleMediaManagerPrivate::audio_src	mediamanager.c	/^	PurpleMediaElementInfo *audio_src;$/;"	m	struct:_PurpleMediaManagerPrivate	file:	access:public
_PurpleMediaManagerPrivate::backend_type	mediamanager.c	/^	GType backend_type;$/;"	m	struct:_PurpleMediaManagerPrivate	file:	access:public
_PurpleMediaManagerPrivate::elements	mediamanager.c	/^	GList *elements;$/;"	m	struct:_PurpleMediaManagerPrivate	file:	access:public
_PurpleMediaManagerPrivate::medias	mediamanager.c	/^	GList *medias;$/;"	m	struct:_PurpleMediaManagerPrivate	file:	access:public
_PurpleMediaManagerPrivate::next_output_window_id	mediamanager.c	/^	gulong next_output_window_id;$/;"	m	struct:_PurpleMediaManagerPrivate	file:	access:public
_PurpleMediaManagerPrivate::output_windows	mediamanager.c	/^	GList *output_windows;$/;"	m	struct:_PurpleMediaManagerPrivate	file:	access:public
_PurpleMediaManagerPrivate::pipeline	mediamanager.c	/^	GstElement *pipeline;$/;"	m	struct:_PurpleMediaManagerPrivate	file:	access:public
_PurpleMediaManagerPrivate::ui_caps	mediamanager.c	/^	PurpleMediaCaps ui_caps;$/;"	m	struct:_PurpleMediaManagerPrivate	file:	access:public
_PurpleMediaManagerPrivate::video_caps	mediamanager.c	/^	GstCaps *video_caps;$/;"	m	struct:_PurpleMediaManagerPrivate	file:	access:public
_PurpleMediaManagerPrivate::video_sink	mediamanager.c	/^	PurpleMediaElementInfo *video_sink;$/;"	m	struct:_PurpleMediaManagerPrivate	file:	access:public
_PurpleMediaManagerPrivate::video_src	mediamanager.c	/^	PurpleMediaElementInfo *video_src;$/;"	m	struct:_PurpleMediaManagerPrivate	file:	access:public
_PurpleMediaOutputWindow	mediamanager.c	/^struct _PurpleMediaOutputWindow$/;"	s	file:
_PurpleMediaOutputWindow::id	mediamanager.c	/^	gulong id;$/;"	m	struct:_PurpleMediaOutputWindow	file:	access:public
_PurpleMediaOutputWindow::media	mediamanager.c	/^	PurpleMedia *media;$/;"	m	struct:_PurpleMediaOutputWindow	file:	access:public
_PurpleMediaOutputWindow::participant	mediamanager.c	/^	gchar *participant;$/;"	m	struct:_PurpleMediaOutputWindow	file:	access:public
_PurpleMediaOutputWindow::session_id	mediamanager.c	/^	gchar *session_id;$/;"	m	struct:_PurpleMediaOutputWindow	file:	access:public
_PurpleMediaOutputWindow::sink	mediamanager.c	/^	GstElement *sink;$/;"	m	struct:_PurpleMediaOutputWindow	file:	access:public
_PurpleMediaOutputWindow::window_id	mediamanager.c	/^	gulong window_id;$/;"	m	struct:_PurpleMediaOutputWindow	file:	access:public
_PurpleMediaPrivate	media.c	/^struct _PurpleMediaPrivate$/;"	s	file:
_PurpleMediaPrivate::account	media.c	/^	PurpleAccount *account;$/;"	m	struct:_PurpleMediaPrivate	file:	access:public
_PurpleMediaPrivate::backend	media.c	/^	PurpleMediaBackend *backend;$/;"	m	struct:_PurpleMediaPrivate	file:	access:public
_PurpleMediaPrivate::conference_type	media.c	/^	gchar *conference_type;$/;"	m	struct:_PurpleMediaPrivate	file:	access:public
_PurpleMediaPrivate::initiator	media.c	/^	gboolean initiator;$/;"	m	struct:_PurpleMediaPrivate	file:	access:public
_PurpleMediaPrivate::manager	media.c	/^	PurpleMediaManager *manager;$/;"	m	struct:_PurpleMediaPrivate	file:	access:public
_PurpleMediaPrivate::participants	media.c	/^	GList *participants;$/;"	m	struct:_PurpleMediaPrivate	file:	access:public
_PurpleMediaPrivate::prpl_data	media.c	/^	gpointer prpl_data;$/;"	m	struct:_PurpleMediaPrivate	file:	access:public
_PurpleMediaPrivate::sessions	media.c	/^	GHashTable *sessions;	\/* PurpleMediaSession table *\/$/;"	m	struct:_PurpleMediaPrivate	file:	access:public
_PurpleMediaPrivate::streams	media.c	/^	GList *streams;		\/* PurpleMediaStream table *\/$/;"	m	struct:_PurpleMediaPrivate	file:	access:public
_PurpleMediaSession	media.c	/^struct _PurpleMediaSession$/;"	s	file:
_PurpleMediaSession::id	media.c	/^	gchar *id;$/;"	m	struct:_PurpleMediaSession	file:	access:public
_PurpleMediaSession::initiator	media.c	/^	gboolean initiator;$/;"	m	struct:_PurpleMediaSession	file:	access:public
_PurpleMediaSession::media	media.c	/^	PurpleMedia *media;$/;"	m	struct:_PurpleMediaSession	file:	access:public
_PurpleMediaSession::type	media.c	/^	PurpleMediaSessionType type;$/;"	m	struct:_PurpleMediaSession	file:	access:public
_PurpleMediaStream	media.c	/^struct _PurpleMediaStream$/;"	s	file:
_PurpleMediaStream::accepted	media.c	/^	gboolean accepted;$/;"	m	struct:_PurpleMediaStream	file:	access:public
_PurpleMediaStream::active_local_candidates	media.c	/^	GList *active_local_candidates;$/;"	m	struct:_PurpleMediaStream	file:	access:public
_PurpleMediaStream::active_remote_candidates	media.c	/^	GList *active_remote_candidates;$/;"	m	struct:_PurpleMediaStream	file:	access:public
_PurpleMediaStream::candidates_prepared	media.c	/^	gboolean candidates_prepared;$/;"	m	struct:_PurpleMediaStream	file:	access:public
_PurpleMediaStream::initiator	media.c	/^	gboolean initiator;$/;"	m	struct:_PurpleMediaStream	file:	access:public
_PurpleMediaStream::local_candidates	media.c	/^	GList *local_candidates;$/;"	m	struct:_PurpleMediaStream	file:	access:public
_PurpleMediaStream::participant	media.c	/^	gchar *participant;$/;"	m	struct:_PurpleMediaStream	file:	access:public
_PurpleMediaStream::remote_candidates	media.c	/^	GList *remote_candidates;$/;"	m	struct:_PurpleMediaStream	file:	access:public
_PurpleMediaStream::session	media.c	/^	PurpleMediaSession *session;$/;"	m	struct:_PurpleMediaStream	file:	access:public
_PurpleMenuAction	util.h	/^struct _PurpleMenuAction$/;"	s
_PurpleMenuAction::callback	util.h	/^	PurpleCallback callback;$/;"	m	struct:_PurpleMenuAction	access:public
_PurpleMenuAction::children	util.h	/^	GList *children;$/;"	m	struct:_PurpleMenuAction	access:public
_PurpleMenuAction::data	util.h	/^	gpointer data;$/;"	m	struct:_PurpleMenuAction	access:public
_PurpleMenuAction::label	util.h	/^	char *label;$/;"	m	struct:_PurpleMenuAction	access:public
_PurpleMimeDocument	mime.c	/^struct _PurpleMimeDocument {$/;"	s	file:
_PurpleMimeDocument::fields	mime.c	/^	struct mime_fields fields;$/;"	m	struct:_PurpleMimeDocument	typeref:struct:_PurpleMimeDocument::mime_fields	file:	access:public
_PurpleMimeDocument::parts	mime.c	/^	GList *parts;$/;"	m	struct:_PurpleMimeDocument	file:	access:public
_PurpleMimePart	mime.c	/^struct _PurpleMimePart {$/;"	s	file:
_PurpleMimePart::data	mime.c	/^	GString *data;$/;"	m	struct:_PurpleMimePart	file:	access:public
_PurpleMimePart::doc	mime.c	/^	struct _PurpleMimeDocument *doc;$/;"	m	struct:_PurpleMimePart	typeref:struct:_PurpleMimePart::_PurpleMimeDocument	file:	access:public
_PurpleMimePart::fields	mime.c	/^	struct mime_fields fields;$/;"	m	struct:_PurpleMimePart	typeref:struct:_PurpleMimePart::mime_fields	file:	access:public
_PurpleMood	status.h	/^typedef struct _PurpleMood {$/;"	s
_PurpleMood::description	status.h	/^	const char *description;$/;"	m	struct:_PurpleMood	access:public
_PurpleMood::mood	status.h	/^	const char *mood;$/;"	m	struct:_PurpleMood	access:public
_PurpleMood::padding	status.h	/^	gpointer *padding;$/;"	m	struct:_PurpleMood	access:public
_PurpleNetworkListenData	network.c	/^struct _PurpleNetworkListenData {$/;"	s	file:
_PurpleNetworkListenData::adding	network.c	/^	gboolean adding;$/;"	m	struct:_PurpleNetworkListenData	file:	access:public
_PurpleNetworkListenData::cb	network.c	/^	PurpleNetworkListenCallback cb;$/;"	m	struct:_PurpleNetworkListenData	file:	access:public
_PurpleNetworkListenData::cb_data	network.c	/^	gpointer cb_data;$/;"	m	struct:_PurpleNetworkListenData	file:	access:public
_PurpleNetworkListenData::listenfd	network.c	/^	int listenfd;$/;"	m	struct:_PurpleNetworkListenData	file:	access:public
_PurpleNetworkListenData::mapping_data	network.c	/^	UPnPMappingAddRemove *mapping_data;$/;"	m	struct:_PurpleNetworkListenData	file:	access:public
_PurpleNetworkListenData::retry	network.c	/^	gboolean retry;$/;"	m	struct:_PurpleNetworkListenData	file:	access:public
_PurpleNetworkListenData::socket_type	network.c	/^	int socket_type;$/;"	m	struct:_PurpleNetworkListenData	file:	access:public
_PurpleNetworkListenData::timer	network.c	/^	int timer;$/;"	m	struct:_PurpleNetworkListenData	file:	access:public
_PurpleNotifyUserInfo	notify.c	/^struct _PurpleNotifyUserInfo$/;"	s	file:
_PurpleNotifyUserInfo::user_info_entries	notify.c	/^	GList *user_info_entries;$/;"	m	struct:_PurpleNotifyUserInfo	file:	access:public
_PurpleNotifyUserInfoEntry	notify.c	/^struct _PurpleNotifyUserInfoEntry$/;"	s	file:
_PurpleNotifyUserInfoEntry::label	notify.c	/^	char *label;$/;"	m	struct:_PurpleNotifyUserInfoEntry	file:	access:public
_PurpleNotifyUserInfoEntry::type	notify.c	/^	PurpleNotifyUserInfoEntryType type;$/;"	m	struct:_PurpleNotifyUserInfoEntry	file:	access:public
_PurpleNotifyUserInfoEntry::value	notify.c	/^	char *value;$/;"	m	struct:_PurpleNotifyUserInfoEntry	file:	access:public
_PurplePlugin	plugin.h	/^struct _PurplePlugin$/;"	s
_PurplePlugin::_purple_reserved1	plugin.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:_PurplePlugin	access:public
_PurplePlugin::_purple_reserved2	plugin.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:_PurplePlugin	access:public
_PurplePlugin::_purple_reserved3	plugin.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:_PurplePlugin	access:public
_PurplePlugin::_purple_reserved4	plugin.h	/^	void (*_purple_reserved4)(void);$/;"	m	struct:_PurplePlugin	access:public
_PurplePlugin::dependent_plugins	plugin.h	/^	GList *dependent_plugins;              \/**< Plugins depending on this *\/$/;"	m	struct:_PurplePlugin	access:public
_PurplePlugin::error	plugin.h	/^	char *error;$/;"	m	struct:_PurplePlugin	access:public
_PurplePlugin::extra	plugin.h	/^	void *extra;                           \/**< Plugin-specific data.     *\/$/;"	m	struct:_PurplePlugin	access:public
_PurplePlugin::handle	plugin.h	/^	void *handle;                          \/**< The module handle.        *\/$/;"	m	struct:_PurplePlugin	access:public
_PurplePlugin::info	plugin.h	/^	PurplePluginInfo *info;                  \/**< The plugin information.   *\/$/;"	m	struct:_PurplePlugin	access:public
_PurplePlugin::ipc_data	plugin.h	/^	void *ipc_data;                        \/**< IPC data.                 *\/$/;"	m	struct:_PurplePlugin	access:public
_PurplePlugin::loaded	plugin.h	/^	gboolean loaded;                       \/**< The loaded state.         *\/$/;"	m	struct:_PurplePlugin	access:public
_PurplePlugin::native_plugin	plugin.h	/^	gboolean native_plugin;                \/**< Native C plugin.          *\/$/;"	m	struct:_PurplePlugin	access:public
_PurplePlugin::path	plugin.h	/^	char *path;                            \/**< The path to the plugin.   *\/$/;"	m	struct:_PurplePlugin	access:public
_PurplePlugin::unloadable	plugin.h	/^	gboolean unloadable;                   \/**< Unloadable                *\/$/;"	m	struct:_PurplePlugin	access:public
_PurplePluginAction	plugin.h	/^struct _PurplePluginAction {$/;"	s
_PurplePluginAction::callback	plugin.h	/^	void (*callback)(PurplePluginAction *);$/;"	m	struct:_PurplePluginAction	access:public
_PurplePluginAction::context	plugin.h	/^	gpointer context;$/;"	m	struct:_PurplePluginAction	access:public
_PurplePluginAction::label	plugin.h	/^	char *label;$/;"	m	struct:_PurplePluginAction	access:public
_PurplePluginAction::plugin	plugin.h	/^	PurplePlugin *plugin;$/;"	m	struct:_PurplePluginAction	access:public
_PurplePluginAction::user_data	plugin.h	/^	gpointer user_data;$/;"	m	struct:_PurplePluginAction	access:public
_PurplePluginInfo	plugin.h	/^struct _PurplePluginInfo$/;"	s
_PurplePluginInfo::_purple_reserved1	plugin.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:_PurplePluginInfo	access:public
_PurplePluginInfo::_purple_reserved2	plugin.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:_PurplePluginInfo	access:public
_PurplePluginInfo::_purple_reserved3	plugin.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:_PurplePluginInfo	access:public
_PurplePluginInfo::_purple_reserved4	plugin.h	/^	void (*_purple_reserved4)(void);$/;"	m	struct:_PurplePluginInfo	access:public
_PurplePluginInfo::actions	plugin.h	/^	GList *(*actions)(PurplePlugin *plugin, gpointer context);$/;"	m	struct:_PurplePluginInfo	access:public
_PurplePluginInfo::author	plugin.h	/^	char *author;$/;"	m	struct:_PurplePluginInfo	access:public
_PurplePluginInfo::dependencies	plugin.h	/^	GList *dependencies;$/;"	m	struct:_PurplePluginInfo	access:public
_PurplePluginInfo::description	plugin.h	/^	char *description;$/;"	m	struct:_PurplePluginInfo	access:public
_PurplePluginInfo::destroy	plugin.h	/^	void (*destroy)(PurplePlugin *plugin);$/;"	m	struct:_PurplePluginInfo	access:public
_PurplePluginInfo::extra_info	plugin.h	/^	void *extra_info;$/;"	m	struct:_PurplePluginInfo	access:public
_PurplePluginInfo::flags	plugin.h	/^	unsigned long flags;$/;"	m	struct:_PurplePluginInfo	access:public
_PurplePluginInfo::homepage	plugin.h	/^	char *homepage;$/;"	m	struct:_PurplePluginInfo	access:public
_PurplePluginInfo::id	plugin.h	/^	char *id;$/;"	m	struct:_PurplePluginInfo	access:public
_PurplePluginInfo::load	plugin.h	/^	gboolean (*load)(PurplePlugin *plugin);$/;"	m	struct:_PurplePluginInfo	access:public
_PurplePluginInfo::magic	plugin.h	/^	unsigned int magic;$/;"	m	struct:_PurplePluginInfo	access:public
_PurplePluginInfo::major_version	plugin.h	/^	unsigned int major_version;$/;"	m	struct:_PurplePluginInfo	access:public
_PurplePluginInfo::minor_version	plugin.h	/^	unsigned int minor_version;$/;"	m	struct:_PurplePluginInfo	access:public
_PurplePluginInfo::name	plugin.h	/^	char *name;$/;"	m	struct:_PurplePluginInfo	access:public
_PurplePluginInfo::prefs_info	plugin.h	/^	PurplePluginUiInfo *prefs_info; \/**< Used by any plugin to display preferences.  If #ui_info has been specified, this will be ignored. *\/$/;"	m	struct:_PurplePluginInfo	access:public
_PurplePluginInfo::priority	plugin.h	/^	PurplePluginPriority priority;$/;"	m	struct:_PurplePluginInfo	access:public
_PurplePluginInfo::summary	plugin.h	/^	char *summary;$/;"	m	struct:_PurplePluginInfo	access:public
_PurplePluginInfo::type	plugin.h	/^	PurplePluginType type;$/;"	m	struct:_PurplePluginInfo	access:public
_PurplePluginInfo::ui_info	plugin.h	/^	void *ui_info; \/**< Used only by UI-specific plugins to build a preference screen with a custom UI *\/$/;"	m	struct:_PurplePluginInfo	access:public
_PurplePluginInfo::ui_requirement	plugin.h	/^	char *ui_requirement;$/;"	m	struct:_PurplePluginInfo	access:public
_PurplePluginInfo::unload	plugin.h	/^	gboolean (*unload)(PurplePlugin *plugin);$/;"	m	struct:_PurplePluginInfo	access:public
_PurplePluginInfo::version	plugin.h	/^	char *version;$/;"	m	struct:_PurplePluginInfo	access:public
_PurplePluginLoaderInfo	plugin.h	/^struct _PurplePluginLoaderInfo$/;"	s
_PurplePluginLoaderInfo::_purple_reserved1	plugin.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:_PurplePluginLoaderInfo	access:public
_PurplePluginLoaderInfo::_purple_reserved2	plugin.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:_PurplePluginLoaderInfo	access:public
_PurplePluginLoaderInfo::_purple_reserved3	plugin.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:_PurplePluginLoaderInfo	access:public
_PurplePluginLoaderInfo::_purple_reserved4	plugin.h	/^	void (*_purple_reserved4)(void);$/;"	m	struct:_PurplePluginLoaderInfo	access:public
_PurplePluginLoaderInfo::destroy	plugin.h	/^	void     (*destroy)(PurplePlugin *plugin);$/;"	m	struct:_PurplePluginLoaderInfo	access:public
_PurplePluginLoaderInfo::exts	plugin.h	/^	GList *exts;$/;"	m	struct:_PurplePluginLoaderInfo	access:public
_PurplePluginLoaderInfo::load	plugin.h	/^	gboolean (*load)(PurplePlugin *plugin);$/;"	m	struct:_PurplePluginLoaderInfo	access:public
_PurplePluginLoaderInfo::probe	plugin.h	/^	gboolean (*probe)(PurplePlugin *plugin);$/;"	m	struct:_PurplePluginLoaderInfo	access:public
_PurplePluginLoaderInfo::unload	plugin.h	/^	gboolean (*unload)(PurplePlugin *plugin);$/;"	m	struct:_PurplePluginLoaderInfo	access:public
_PurplePluginPref	pluginpref.c	/^struct _PurplePluginPref$/;"	s	file:
_PurplePluginPref::choices	pluginpref.c	/^	GList *choices;$/;"	m	struct:_PurplePluginPref	file:	access:public
_PurplePluginPref::format	pluginpref.c	/^	PurpleStringFormatType format;$/;"	m	struct:_PurplePluginPref	file:	access:public
_PurplePluginPref::label	pluginpref.c	/^	char *label;$/;"	m	struct:_PurplePluginPref	file:	access:public
_PurplePluginPref::masked	pluginpref.c	/^	gboolean masked;$/;"	m	struct:_PurplePluginPref	file:	access:public
_PurplePluginPref::max	pluginpref.c	/^	int max;$/;"	m	struct:_PurplePluginPref	file:	access:public
_PurplePluginPref::max_length	pluginpref.c	/^	unsigned int max_length;$/;"	m	struct:_PurplePluginPref	file:	access:public
_PurplePluginPref::min	pluginpref.c	/^	int min;$/;"	m	struct:_PurplePluginPref	file:	access:public
_PurplePluginPref::name	pluginpref.c	/^	char *name;$/;"	m	struct:_PurplePluginPref	file:	access:public
_PurplePluginPref::type	pluginpref.c	/^	PurplePluginPrefType type;$/;"	m	struct:_PurplePluginPref	file:	access:public
_PurplePluginPrefFrame	pluginpref.c	/^struct _PurplePluginPrefFrame$/;"	s	file:
_PurplePluginPrefFrame::prefs	pluginpref.c	/^	GList *prefs;$/;"	m	struct:_PurplePluginPrefFrame	file:	access:public
_PurplePluginProtocolInfo	prpl.h	/^struct _PurplePluginProtocolInfo$/;"	s
_PurplePluginProtocolInfo::add_buddies	prpl.h	/^	void (*add_buddies)(PurpleConnection *, GList *buddies, GList *groups);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::add_buddies_with_invite	prpl.h	/^	void (*add_buddies_with_invite)(PurpleConnection *pc, GList *buddies, GList *groups, const char *message);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::add_buddy	prpl.h	/^	void (*add_buddy)(PurpleConnection *, PurpleBuddy *buddy, PurpleGroup *group);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::add_buddy_with_invite	prpl.h	/^	void (*add_buddy_with_invite)(PurpleConnection *pc, PurpleBuddy *buddy, PurpleGroup *group, const char *message);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::add_deny	prpl.h	/^	void (*add_deny)(PurpleConnection *, const char *name);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::add_permit	prpl.h	/^	void (*add_permit)(PurpleConnection *, const char *name);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::alias_buddy	prpl.h	/^	void (*alias_buddy)(PurpleConnection *, const char *who,$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::blist_node_menu	prpl.h	/^	GList *(*blist_node_menu)(PurpleBlistNode *node);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::buddy_free	prpl.h	/^	void (*buddy_free)(PurpleBuddy *);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::can_receive_file	prpl.h	/^	gboolean (*can_receive_file)(PurpleConnection *, const char *who);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::change_passwd	prpl.h	/^	void (*change_passwd)(PurpleConnection *, const char *old_pass,$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::chat_info	prpl.h	/^	GList *(*chat_info)(PurpleConnection *);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::chat_info_defaults	prpl.h	/^	GHashTable *(*chat_info_defaults)(PurpleConnection *, const char *chat_name);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::chat_invite	prpl.h	/^	void (*chat_invite)(PurpleConnection *, int id,$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::chat_leave	prpl.h	/^	void (*chat_leave)(PurpleConnection *, int id);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::chat_send	prpl.h	/^	int  (*chat_send)(PurpleConnection *, int id, const char *message, PurpleMessageFlags flags);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::chat_whisper	prpl.h	/^	void (*chat_whisper)(PurpleConnection *, int id,$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::close	prpl.h	/^	void (*close)(PurpleConnection *);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::convo_closed	prpl.h	/^	void (*convo_closed)(PurpleConnection *, const char *who);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::find_blist_chat	prpl.h	/^	PurpleChat *(*find_blist_chat)(PurpleAccount *account, const char *name);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::get_account_text_table	prpl.h	/^	GHashTable *(*get_account_text_table)(PurpleAccount *account);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::get_attention_types	prpl.h	/^	GList *(*get_attention_types)(PurpleAccount *acct);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::get_cb_away	prpl.h	/^	void (*get_cb_away)(PurpleConnection *, int, const char *who);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::get_cb_info	prpl.h	/^	void (*get_cb_info)(PurpleConnection *, int, const char *who);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::get_cb_real_name	prpl.h	/^	char *(*get_cb_real_name)(PurpleConnection *gc, int id, const char *who);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::get_chat_name	prpl.h	/^	char *(*get_chat_name)(GHashTable *components);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::get_info	prpl.h	/^	void (*get_info)(PurpleConnection *, const char *who);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::get_media_caps	prpl.h	/^	PurpleMediaCaps (*get_media_caps)(PurpleAccount *account,$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::get_moods	prpl.h	/^	PurpleMood *(*get_moods)(PurpleAccount *account);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::get_public_alias	prpl.h	/^	void (*get_public_alias)(PurpleConnection *gc,$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::group_buddy	prpl.h	/^	void (*group_buddy)(PurpleConnection *, const char *who,$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::icon_spec	prpl.h	/^	PurpleBuddyIconSpec icon_spec; \/**< The icon spec. *\/$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::initiate_media	prpl.h	/^	gboolean (*initiate_media)(PurpleAccount *account, const char *who,$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::join_chat	prpl.h	/^	void (*join_chat)(PurpleConnection *, GHashTable *components);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::keepalive	prpl.h	/^	void (*keepalive)(PurpleConnection *);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::list_emblem	prpl.h	/^	const char *(*list_emblem)(PurpleBuddy *buddy);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::list_icon	prpl.h	/^	const char *(*list_icon)(PurpleAccount *account, PurpleBuddy *buddy);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::login	prpl.h	/^	void (*login)(PurpleAccount *);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::new_xfer	prpl.h	/^	PurpleXfer *(*new_xfer)(PurpleConnection *, const char *who);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::normalize	prpl.h	/^	const char *(*normalize)(const PurpleAccount *, const char *who);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::offline_message	prpl.h	/^	gboolean (*offline_message)(const PurpleBuddy *buddy);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::options	prpl.h	/^	PurpleProtocolOptions options;  \/**< Protocol options.          *\/$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::protocol_options	prpl.h	/^	GList *protocol_options; \/**< A GList of PurpleAccountOption    *\/$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::register_user	prpl.h	/^	void (*register_user)(PurpleAccount *);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::reject_chat	prpl.h	/^	void (*reject_chat)(PurpleConnection *, GHashTable *components);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::rem_deny	prpl.h	/^	void (*rem_deny)(PurpleConnection *, const char *name);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::rem_permit	prpl.h	/^	void (*rem_permit)(PurpleConnection *, const char *name);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::remove_buddies	prpl.h	/^	void (*remove_buddies)(PurpleConnection *, GList *buddies, GList *groups);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::remove_buddy	prpl.h	/^	void (*remove_buddy)(PurpleConnection *, PurpleBuddy *buddy, PurpleGroup *group);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::remove_group	prpl.h	/^	void (*remove_group)(PurpleConnection *gc, PurpleGroup *group);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::rename_group	prpl.h	/^	void (*rename_group)(PurpleConnection *, const char *old_name,$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::roomlist_cancel	prpl.h	/^	void (*roomlist_cancel)(PurpleRoomlist *list);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::roomlist_expand_category	prpl.h	/^	void (*roomlist_expand_category)(PurpleRoomlist *list, PurpleRoomlistRoom *category);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::roomlist_get_list	prpl.h	/^	PurpleRoomlist *(*roomlist_get_list)(PurpleConnection *gc);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::roomlist_room_serialize	prpl.h	/^	char *(*roomlist_room_serialize)(PurpleRoomlistRoom *room);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::send_attention	prpl.h	/^	gboolean (*send_attention)(PurpleConnection *gc, const char *username, guint type);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::send_file	prpl.h	/^	void (*send_file)(PurpleConnection *, const char *who, const char *filename);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::send_im	prpl.h	/^	int  (*send_im)(PurpleConnection *, const char *who,$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::send_raw	prpl.h	/^	int (*send_raw)(PurpleConnection *gc, const char *buf, int len);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::send_typing	prpl.h	/^	unsigned int (*send_typing)(PurpleConnection *, const char *name, PurpleTypingState state);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::set_buddy_icon	prpl.h	/^	void (*set_buddy_icon)(PurpleConnection *, PurpleStoredImage *img);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::set_chat_topic	prpl.h	/^	void (*set_chat_topic)(PurpleConnection *gc, int id, const char *topic);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::set_idle	prpl.h	/^	void (*set_idle)(PurpleConnection *, int idletime);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::set_info	prpl.h	/^	void (*set_info)(PurpleConnection *, const char *info);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::set_permit_deny	prpl.h	/^	void (*set_permit_deny)(PurpleConnection *);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::set_public_alias	prpl.h	/^	void (*set_public_alias)(PurpleConnection *gc, const char *alias,$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::set_status	prpl.h	/^	void (*set_status)(PurpleAccount *account, PurpleStatus *status);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::status_text	prpl.h	/^	char *(*status_text)(PurpleBuddy *buddy);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::status_types	prpl.h	/^	GList *(*status_types)(PurpleAccount *account);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::struct_size	prpl.h	/^	unsigned long struct_size;$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::tooltip_text	prpl.h	/^	void (*tooltip_text)(PurpleBuddy *buddy, PurpleNotifyUserInfo *user_info, gboolean full);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::unregister_user	prpl.h	/^	void (*unregister_user)(PurpleAccount *, PurpleAccountUnregistrationCb cb, void *user_data);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::user_splits	prpl.h	/^	GList *user_splits;      \/**< A GList of PurpleAccountUserSplit *\/$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginProtocolInfo::whiteboard_prpl_ops	prpl.h	/^	PurpleWhiteboardPrplOps *whiteboard_prpl_ops;$/;"	m	struct:_PurplePluginProtocolInfo	access:public
_PurplePluginUiInfo	plugin.h	/^struct _PurplePluginUiInfo {$/;"	s
_PurplePluginUiInfo::_purple_reserved1	plugin.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:_PurplePluginUiInfo	access:public
_PurplePluginUiInfo::_purple_reserved2	plugin.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:_PurplePluginUiInfo	access:public
_PurplePluginUiInfo::_purple_reserved3	plugin.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:_PurplePluginUiInfo	access:public
_PurplePluginUiInfo::_purple_reserved4	plugin.h	/^	void (*_purple_reserved4)(void);$/;"	m	struct:_PurplePluginUiInfo	access:public
_PurplePluginUiInfo::frame	plugin.h	/^	PurplePluginPrefFrame *frame;                           \/**< Reserved *\/$/;"	m	struct:_PurplePluginUiInfo	access:public
_PurplePluginUiInfo::get_plugin_pref_frame	plugin.h	/^	PurplePluginPrefFrame *(*get_plugin_pref_frame)(PurplePlugin *plugin);$/;"	m	struct:_PurplePluginUiInfo	access:public
_PurplePluginUiInfo::page_num	plugin.h	/^	int page_num;                                         \/**< Reserved *\/$/;"	m	struct:_PurplePluginUiInfo	access:public
_PurplePmpMapResponse	nat-pmp.c	/^struct _PurplePmpMapResponse {$/;"	s	file:
_PurplePmpMapResponse::epoch	nat-pmp.c	/^	guint32		epoch;$/;"	m	struct:_PurplePmpMapResponse	file:	access:public
_PurplePmpMapResponse::lifetime	nat-pmp.c	/^	guint32		lifetime;$/;"	m	struct:_PurplePmpMapResponse	file:	access:public
_PurplePmpMapResponse::opcode	nat-pmp.c	/^	guint8		opcode;$/;"	m	struct:_PurplePmpMapResponse	file:	access:public
_PurplePmpMapResponse::privateport	nat-pmp.c	/^	guint16		privateport;$/;"	m	struct:_PurplePmpMapResponse	file:	access:public
_PurplePmpMapResponse::publicport	nat-pmp.c	/^	guint16		publicport;$/;"	m	struct:_PurplePmpMapResponse	file:	access:public
_PurplePmpMapResponse::resultcode	nat-pmp.c	/^	guint16		resultcode;$/;"	m	struct:_PurplePmpMapResponse	file:	access:public
_PurplePmpMapResponse::version	nat-pmp.c	/^	guint8		version;$/;"	m	struct:_PurplePmpMapResponse	file:	access:public
_PurplePounce	pounce.h	/^struct _PurplePounce$/;"	s
_PurplePounce::actions	pounce.h	/^	GHashTable *actions;          \/**< The registered actions.    *\/$/;"	m	struct:_PurplePounce	access:public
_PurplePounce::data	pounce.h	/^	void *data;                   \/**< Pounce-specific data.      *\/$/;"	m	struct:_PurplePounce	access:public
_PurplePounce::events	pounce.h	/^	PurplePounceEvent events;       \/**< The event(s) to pounce on. *\/$/;"	m	struct:_PurplePounce	access:public
_PurplePounce::options	pounce.h	/^	PurplePounceOption options;     \/**< The pounce options         *\/$/;"	m	struct:_PurplePounce	access:public
_PurplePounce::pouncee	pounce.h	/^	char *pouncee;                \/**< The buddy to pounce on.    *\/$/;"	m	struct:_PurplePounce	access:public
_PurplePounce::pouncer	pounce.h	/^	PurpleAccount *pouncer;         \/**< The user who is pouncing.  *\/$/;"	m	struct:_PurplePounce	access:public
_PurplePounce::save	pounce.h	/^	gboolean save;                \/**< Whether or not the pounce should$/;"	m	struct:_PurplePounce	access:public
_PurplePounce::ui_type	pounce.h	/^	char *ui_type;                \/**< The type of UI.            *\/$/;"	m	struct:_PurplePounce	access:public
_PurplePrefType	prefs.h	/^typedef enum _PurplePrefType$/;"	g
_PurplePresence	status.c	/^struct _PurplePresence$/;"	s	file:
_PurplePresence::__anon34::__anon35::conv	status.c	/^			PurpleConversation *conv;$/;"	m	struct:_PurplePresence::__anon34::__anon35	file:	access:public
_PurplePresence::__anon34::__anon35::user	status.c	/^			char *user;$/;"	m	struct:_PurplePresence::__anon34::__anon35	file:	access:public
_PurplePresence::__anon34::__anon36::account	status.c	/^			PurpleAccount *account;$/;"	m	struct:_PurplePresence::__anon34::__anon36	file:	access:public
_PurplePresence::__anon34::__anon36::buddy	status.c	/^			PurpleBuddy *buddy;$/;"	m	struct:_PurplePresence::__anon34::__anon36	file:	access:public
_PurplePresence::__anon34::__anon36::name	status.c	/^			char *name;$/;"	m	struct:_PurplePresence::__anon34::__anon36	file:	access:public
_PurplePresence::__anon34::account	status.c	/^		PurpleAccount *account;$/;"	m	union:_PurplePresence::__anon34	file:	access:public
_PurplePresence::__anon34::buddy	status.c	/^		} buddy;$/;"	m	union:_PurplePresence::__anon34	typeref:struct:_PurplePresence::__anon34::__anon36	file:	access:public
_PurplePresence::__anon34::chat	status.c	/^		} chat;$/;"	m	union:_PurplePresence::__anon34	typeref:struct:_PurplePresence::__anon34::__anon35	file:	access:public
_PurplePresence::active_status	status.c	/^	PurpleStatus *active_status;$/;"	m	struct:_PurplePresence	file:	access:public
_PurplePresence::context	status.c	/^	PurplePresenceContext context;$/;"	m	struct:_PurplePresence	file:	access:public
_PurplePresence::idle	status.c	/^	gboolean idle;$/;"	m	struct:_PurplePresence	file:	access:public
_PurplePresence::idle_time	status.c	/^	time_t idle_time;$/;"	m	struct:_PurplePresence	file:	access:public
_PurplePresence::login_time	status.c	/^	time_t login_time;$/;"	m	struct:_PurplePresence	file:	access:public
_PurplePresence::status_table	status.c	/^	GHashTable *status_table;$/;"	m	struct:_PurplePresence	file:	access:public
_PurplePresence::statuses	status.c	/^	GList *statuses;$/;"	m	struct:_PurplePresence	file:	access:public
_PurplePresence::u	status.c	/^	} u;$/;"	m	struct:_PurplePresence	typeref:union:_PurplePresence::__anon34	file:	access:public
_PurplePrivacyType	privacy.h	/^typedef enum _PurplePrivacyType$/;"	g
_PurpleProxyConnectData	proxy.c	/^struct _PurpleProxyConnectData {$/;"	s	file:
_PurpleProxyConnectData::account	proxy.c	/^	PurpleAccount *account;$/;"	m	struct:_PurpleProxyConnectData	file:	access:public
_PurpleProxyConnectData::child	proxy.c	/^	PurpleProxyConnectData *child;$/;"	m	struct:_PurpleProxyConnectData	file:	access:public
_PurpleProxyConnectData::connect_cb	proxy.c	/^	PurpleProxyConnectFunction connect_cb;$/;"	m	struct:_PurpleProxyConnectData	file:	access:public
_PurpleProxyConnectData::data	proxy.c	/^	gpointer data;$/;"	m	struct:_PurpleProxyConnectData	file:	access:public
_PurpleProxyConnectData::fd	proxy.c	/^	int fd;$/;"	m	struct:_PurpleProxyConnectData	file:	access:public
_PurpleProxyConnectData::gpi	proxy.c	/^	PurpleProxyInfo *gpi;$/;"	m	struct:_PurpleProxyConnectData	file:	access:public
_PurpleProxyConnectData::handle	proxy.c	/^	void *handle;$/;"	m	struct:_PurpleProxyConnectData	file:	access:public
_PurpleProxyConnectData::host	proxy.c	/^	gchar *host;$/;"	m	struct:_PurpleProxyConnectData	file:	access:public
_PurpleProxyConnectData::hosts	proxy.c	/^	GSList *hosts;$/;"	m	struct:_PurpleProxyConnectData	file:	access:public
_PurpleProxyConnectData::inpa	proxy.c	/^	guint inpa;$/;"	m	struct:_PurpleProxyConnectData	file:	access:public
_PurpleProxyConnectData::port	proxy.c	/^	int port;$/;"	m	struct:_PurpleProxyConnectData	file:	access:public
_PurpleProxyConnectData::query_data	proxy.c	/^	PurpleDnsQueryData *query_data;$/;"	m	struct:_PurpleProxyConnectData	file:	access:public
_PurpleProxyConnectData::read_buf_len	proxy.c	/^	gsize read_buf_len;$/;"	m	struct:_PurpleProxyConnectData	file:	access:public
_PurpleProxyConnectData::read_buffer	proxy.c	/^	guchar *read_buffer;$/;"	m	struct:_PurpleProxyConnectData	file:	access:public
_PurpleProxyConnectData::read_cb	proxy.c	/^	PurpleInputFunction read_cb;$/;"	m	struct:_PurpleProxyConnectData	file:	access:public
_PurpleProxyConnectData::read_len	proxy.c	/^	gsize read_len;$/;"	m	struct:_PurpleProxyConnectData	file:	access:public
_PurpleProxyConnectData::socket_type	proxy.c	/^	int socket_type;$/;"	m	struct:_PurpleProxyConnectData	file:	access:public
_PurpleProxyConnectData::write_buf_len	proxy.c	/^	gsize write_buf_len;$/;"	m	struct:_PurpleProxyConnectData	file:	access:public
_PurpleProxyConnectData::write_buffer	proxy.c	/^	guchar *write_buffer;$/;"	m	struct:_PurpleProxyConnectData	file:	access:public
_PurpleProxyConnectData::written_len	proxy.c	/^	gsize written_len;$/;"	m	struct:_PurpleProxyConnectData	file:	access:public
_PurpleRequestField	request.h	/^struct _PurpleRequestField$/;"	s
_PurpleRequestField::__anon140::__anon141::default_value	request.h	/^			char *default_value;$/;"	m	struct:_PurpleRequestField::__anon140::__anon141	access:public
_PurpleRequestField::__anon140::__anon141::editable	request.h	/^			gboolean editable;$/;"	m	struct:_PurpleRequestField::__anon140::__anon141	access:public
_PurpleRequestField::__anon140::__anon141::masked	request.h	/^			gboolean masked;$/;"	m	struct:_PurpleRequestField::__anon140::__anon141	access:public
_PurpleRequestField::__anon140::__anon141::multiline	request.h	/^			gboolean multiline;$/;"	m	struct:_PurpleRequestField::__anon140::__anon141	access:public
_PurpleRequestField::__anon140::__anon141::value	request.h	/^			char *value;$/;"	m	struct:_PurpleRequestField::__anon140::__anon141	access:public
_PurpleRequestField::__anon140::__anon142::default_value	request.h	/^			int default_value;$/;"	m	struct:_PurpleRequestField::__anon140::__anon142	access:public
_PurpleRequestField::__anon140::__anon142::value	request.h	/^			int value;$/;"	m	struct:_PurpleRequestField::__anon140::__anon142	access:public
_PurpleRequestField::__anon140::__anon143::default_value	request.h	/^			gboolean default_value;$/;"	m	struct:_PurpleRequestField::__anon140::__anon143	access:public
_PurpleRequestField::__anon140::__anon143::value	request.h	/^			gboolean value;$/;"	m	struct:_PurpleRequestField::__anon140::__anon143	access:public
_PurpleRequestField::__anon140::__anon144::default_value	request.h	/^			int default_value;$/;"	m	struct:_PurpleRequestField::__anon140::__anon144	access:public
_PurpleRequestField::__anon140::__anon144::labels	request.h	/^			GList *labels;$/;"	m	struct:_PurpleRequestField::__anon140::__anon144	access:public
_PurpleRequestField::__anon140::__anon144::value	request.h	/^			int value;$/;"	m	struct:_PurpleRequestField::__anon140::__anon144	access:public
_PurpleRequestField::__anon140::__anon145::icons	request.h	/^			GList *icons;$/;"	m	struct:_PurpleRequestField::__anon140::__anon145	access:public
_PurpleRequestField::__anon140::__anon145::item_data	request.h	/^			GHashTable *item_data;$/;"	m	struct:_PurpleRequestField::__anon140::__anon145	access:public
_PurpleRequestField::__anon140::__anon145::items	request.h	/^			GList *items;$/;"	m	struct:_PurpleRequestField::__anon140::__anon145	access:public
_PurpleRequestField::__anon140::__anon145::multiple_selection	request.h	/^			gboolean multiple_selection;$/;"	m	struct:_PurpleRequestField::__anon140::__anon145	access:public
_PurpleRequestField::__anon140::__anon145::selected	request.h	/^			GList *selected;$/;"	m	struct:_PurpleRequestField::__anon140::__anon145	access:public
_PurpleRequestField::__anon140::__anon145::selected_table	request.h	/^			GHashTable *selected_table;$/;"	m	struct:_PurpleRequestField::__anon140::__anon145	access:public
_PurpleRequestField::__anon140::__anon146::account	request.h	/^			PurpleAccount *account;$/;"	m	struct:_PurpleRequestField::__anon140::__anon146	access:public
_PurpleRequestField::__anon140::__anon146::default_account	request.h	/^			PurpleAccount *default_account;$/;"	m	struct:_PurpleRequestField::__anon140::__anon146	access:public
_PurpleRequestField::__anon140::__anon146::filter_func	request.h	/^			PurpleFilterAccountFunc filter_func;$/;"	m	struct:_PurpleRequestField::__anon140::__anon146	access:public
_PurpleRequestField::__anon140::__anon146::show_all	request.h	/^			gboolean show_all;$/;"	m	struct:_PurpleRequestField::__anon140::__anon146	access:public
_PurpleRequestField::__anon140::__anon147::buffer	request.h	/^			const char *buffer;$/;"	m	struct:_PurpleRequestField::__anon140::__anon147	access:public
_PurpleRequestField::__anon140::__anon147::scale_x	request.h	/^			unsigned int scale_x;$/;"	m	struct:_PurpleRequestField::__anon140::__anon147	access:public
_PurpleRequestField::__anon140::__anon147::scale_y	request.h	/^			unsigned int scale_y;$/;"	m	struct:_PurpleRequestField::__anon140::__anon147	access:public
_PurpleRequestField::__anon140::__anon147::size	request.h	/^			gsize size;$/;"	m	struct:_PurpleRequestField::__anon140::__anon147	access:public
_PurpleRequestField::__anon140::account	request.h	/^		} account;$/;"	m	union:_PurpleRequestField::__anon140	typeref:struct:_PurpleRequestField::__anon140::__anon146	access:public
_PurpleRequestField::__anon140::boolean	request.h	/^		} boolean;$/;"	m	union:_PurpleRequestField::__anon140	typeref:struct:_PurpleRequestField::__anon140::__anon143	access:public
_PurpleRequestField::__anon140::choice	request.h	/^		} choice;$/;"	m	union:_PurpleRequestField::__anon140	typeref:struct:_PurpleRequestField::__anon140::__anon144	access:public
_PurpleRequestField::__anon140::image	request.h	/^		} image;$/;"	m	union:_PurpleRequestField::__anon140	typeref:struct:_PurpleRequestField::__anon140::__anon147	access:public
_PurpleRequestField::__anon140::integer	request.h	/^		} integer;$/;"	m	union:_PurpleRequestField::__anon140	typeref:struct:_PurpleRequestField::__anon140::__anon142	access:public
_PurpleRequestField::__anon140::list	request.h	/^		} list;$/;"	m	union:_PurpleRequestField::__anon140	typeref:struct:_PurpleRequestField::__anon140::__anon145	access:public
_PurpleRequestField::__anon140::string	request.h	/^		} string;$/;"	m	union:_PurpleRequestField::__anon140	typeref:struct:_PurpleRequestField::__anon140::__anon141	access:public
_PurpleRequestField::group	request.h	/^	PurpleRequestFieldGroup *group;$/;"	m	struct:_PurpleRequestField	access:public
_PurpleRequestField::id	request.h	/^	char *id;$/;"	m	struct:_PurpleRequestField	access:public
_PurpleRequestField::label	request.h	/^	char *label;$/;"	m	struct:_PurpleRequestField	access:public
_PurpleRequestField::required	request.h	/^	gboolean required;$/;"	m	struct:_PurpleRequestField	access:public
_PurpleRequestField::type	request.h	/^	PurpleRequestFieldType type;$/;"	m	struct:_PurpleRequestField	access:public
_PurpleRequestField::type_hint	request.h	/^	char *type_hint;$/;"	m	struct:_PurpleRequestField	access:public
_PurpleRequestField::u	request.h	/^	} u;$/;"	m	struct:_PurpleRequestField	typeref:union:_PurpleRequestField::__anon140	access:public
_PurpleRequestField::ui_data	request.h	/^	void *ui_data;$/;"	m	struct:_PurpleRequestField	access:public
_PurpleRequestField::visible	request.h	/^	gboolean visible;$/;"	m	struct:_PurpleRequestField	access:public
_PurpleRoomlist	roomlist.h	/^struct _PurpleRoomlist {$/;"	s
_PurpleRoomlist::account	roomlist.h	/^	PurpleAccount *account; \/**< The account this list belongs to. *\/$/;"	m	struct:_PurpleRoomlist	access:public
_PurpleRoomlist::fields	roomlist.h	/^	GList *fields; \/**< The fields. *\/$/;"	m	struct:_PurpleRoomlist	access:public
_PurpleRoomlist::in_progress	roomlist.h	/^	gboolean in_progress; \/**< The listing is in progress. *\/$/;"	m	struct:_PurpleRoomlist	access:public
_PurpleRoomlist::proto_data	roomlist.h	/^	gpointer proto_data; \/** Prpl private data. *\/$/;"	m	struct:_PurpleRoomlist	access:public
_PurpleRoomlist::ref	roomlist.h	/^	guint ref; \/**< The reference count. *\/$/;"	m	struct:_PurpleRoomlist	access:public
_PurpleRoomlist::rooms	roomlist.h	/^	GList *rooms; \/**< The list of rooms. *\/$/;"	m	struct:_PurpleRoomlist	access:public
_PurpleRoomlist::ui_data	roomlist.h	/^	gpointer ui_data; \/**< UI private data. *\/$/;"	m	struct:_PurpleRoomlist	access:public
_PurpleRoomlistField	roomlist.h	/^struct _PurpleRoomlistField {$/;"	s
_PurpleRoomlistField::hidden	roomlist.h	/^	gboolean hidden; \/**< Hidden? *\/$/;"	m	struct:_PurpleRoomlistField	access:public
_PurpleRoomlistField::label	roomlist.h	/^	gchar *label; \/**< The i18n user displayed name of the field. *\/$/;"	m	struct:_PurpleRoomlistField	access:public
_PurpleRoomlistField::name	roomlist.h	/^	gchar *name; \/**< The internal name of the field. *\/$/;"	m	struct:_PurpleRoomlistField	access:public
_PurpleRoomlistField::type	roomlist.h	/^	PurpleRoomlistFieldType type; \/**< The type of field. *\/$/;"	m	struct:_PurpleRoomlistField	access:public
_PurpleRoomlistRoom	roomlist.h	/^struct _PurpleRoomlistRoom {$/;"	s
_PurpleRoomlistRoom::expanded_once	roomlist.h	/^	gboolean expanded_once; \/**< A flag the UI uses to avoid multiple expand prpl cbs. *\/$/;"	m	struct:_PurpleRoomlistRoom	access:public
_PurpleRoomlistRoom::fields	roomlist.h	/^	GList *fields; \/**< Other fields. *\/$/;"	m	struct:_PurpleRoomlistRoom	access:public
_PurpleRoomlistRoom::name	roomlist.h	/^	gchar *name; \/**< The name of the room. *\/$/;"	m	struct:_PurpleRoomlistRoom	access:public
_PurpleRoomlistRoom::parent	roomlist.h	/^	PurpleRoomlistRoom *parent; \/**< The parent room, or NULL. *\/$/;"	m	struct:_PurpleRoomlistRoom	access:public
_PurpleRoomlistRoom::type	roomlist.h	/^	PurpleRoomlistRoomType type; \/**< The type of room. *\/$/;"	m	struct:_PurpleRoomlistRoom	access:public
_PurpleRoomlistUiOps	roomlist.h	/^struct _PurpleRoomlistUiOps {$/;"	s
_PurpleRoomlistUiOps::_purple_reserved1	roomlist.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:_PurpleRoomlistUiOps	access:public
_PurpleRoomlistUiOps::_purple_reserved2	roomlist.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:_PurpleRoomlistUiOps	access:public
_PurpleRoomlistUiOps::_purple_reserved3	roomlist.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:_PurpleRoomlistUiOps	access:public
_PurpleRoomlistUiOps::_purple_reserved4	roomlist.h	/^	void (*_purple_reserved4)(void);$/;"	m	struct:_PurpleRoomlistUiOps	access:public
_PurpleRoomlistUiOps::add_room	roomlist.h	/^	void (*add_room)(PurpleRoomlist *list, PurpleRoomlistRoom *room); \/**< Add a room to the list. *\/$/;"	m	struct:_PurpleRoomlistUiOps	access:public
_PurpleRoomlistUiOps::create	roomlist.h	/^	void (*create)(PurpleRoomlist *list); \/**< A new list was created. *\/$/;"	m	struct:_PurpleRoomlistUiOps	access:public
_PurpleRoomlistUiOps::destroy	roomlist.h	/^	void (*destroy)(PurpleRoomlist *list); \/**< We're destroying list. *\/$/;"	m	struct:_PurpleRoomlistUiOps	access:public
_PurpleRoomlistUiOps::in_progress	roomlist.h	/^	void (*in_progress)(PurpleRoomlist *list, gboolean flag); \/**< Are we fetching stuff still? *\/$/;"	m	struct:_PurpleRoomlistUiOps	access:public
_PurpleRoomlistUiOps::set_fields	roomlist.h	/^	void (*set_fields)(PurpleRoomlist *list, GList *fields); \/**< Sets the columns. *\/$/;"	m	struct:_PurpleRoomlistUiOps	access:public
_PurpleRoomlistUiOps::show_with_account	roomlist.h	/^	void (*show_with_account)(PurpleAccount *account); \/**< Force the ui to pop up a dialog and get the list *\/$/;"	m	struct:_PurpleRoomlistUiOps	access:public
_PurpleSavedStatus	savedstatuses.c	/^struct _PurpleSavedStatus$/;"	s	file:
_PurpleSavedStatus::creation_time	savedstatuses.c	/^	time_t creation_time;$/;"	m	struct:_PurpleSavedStatus	file:	access:public
_PurpleSavedStatus::lastused	savedstatuses.c	/^	time_t lastused;$/;"	m	struct:_PurpleSavedStatus	file:	access:public
_PurpleSavedStatus::message	savedstatuses.c	/^	char *message;$/;"	m	struct:_PurpleSavedStatus	file:	access:public
_PurpleSavedStatus::substatuses	savedstatuses.c	/^	GList *substatuses;      \/**< A list of PurpleSavedStatusSub's. *\/$/;"	m	struct:_PurpleSavedStatus	file:	access:public
_PurpleSavedStatus::title	savedstatuses.c	/^	char *title;$/;"	m	struct:_PurpleSavedStatus	file:	access:public
_PurpleSavedStatus::type	savedstatuses.c	/^	PurpleStatusPrimitive type;$/;"	m	struct:_PurpleSavedStatus	file:	access:public
_PurpleSavedStatus::usage_count	savedstatuses.c	/^	unsigned int usage_count;$/;"	m	struct:_PurpleSavedStatus	file:	access:public
_PurpleSavedStatusSub	savedstatuses.c	/^struct _PurpleSavedStatusSub$/;"	s	file:
_PurpleSavedStatusSub::account	savedstatuses.c	/^	PurpleAccount *account;$/;"	m	struct:_PurpleSavedStatusSub	file:	access:public
_PurpleSavedStatusSub::message	savedstatuses.c	/^	char *message;$/;"	m	struct:_PurpleSavedStatusSub	file:	access:public
_PurpleSavedStatusSub::type	savedstatuses.c	/^	const PurpleStatusType *type;$/;"	m	struct:_PurpleSavedStatusSub	file:	access:public
_PurpleSmiley	smiley.c	/^struct _PurpleSmiley$/;"	s	file:
_PurpleSmiley::checksum	smiley.c	/^	char *checksum;                \/**< The smiley checksum.        *\/$/;"	m	struct:_PurpleSmiley	file:	access:public
_PurpleSmiley::img	smiley.c	/^	PurpleStoredImage *img;        \/**< The id of the stored image with the$/;"	m	struct:_PurpleSmiley	file:	access:public
_PurpleSmiley::parent	smiley.c	/^	GObject parent;$/;"	m	struct:_PurpleSmiley	file:	access:public
_PurpleSmiley::shortcut	smiley.c	/^	char *shortcut;                \/**< Shortcut associated with the custom$/;"	m	struct:_PurpleSmiley	file:	access:public
_PurpleSmileyClass	smiley.c	/^struct _PurpleSmileyClass$/;"	s	file:
_PurpleSmileyClass::parent_class	smiley.c	/^	GObjectClass parent_class;$/;"	m	struct:_PurpleSmileyClass	file:	access:public
_PurpleSoundEventID	sound.h	/^typedef enum _PurpleSoundEventID$/;"	g
_PurpleSoundTheme	sound-theme.h	/^struct _PurpleSoundTheme$/;"	s
_PurpleSoundTheme::parent	sound-theme.h	/^	PurpleTheme parent;$/;"	m	struct:_PurpleSoundTheme	access:public
_PurpleSoundTheme::priv	sound-theme.h	/^	gpointer priv;$/;"	m	struct:_PurpleSoundTheme	access:public
_PurpleSoundThemeClass	sound-theme.h	/^struct _PurpleSoundThemeClass$/;"	s
_PurpleSoundThemeClass::parent_class	sound-theme.h	/^	PurpleThemeClass parent_class;$/;"	m	struct:_PurpleSoundThemeClass	access:public
_PurpleSoundThemeLoader	sound-theme-loader.h	/^struct _PurpleSoundThemeLoader$/;"	s
_PurpleSoundThemeLoader::parent	sound-theme-loader.h	/^	PurpleThemeLoader parent;$/;"	m	struct:_PurpleSoundThemeLoader	access:public
_PurpleSoundThemeLoaderClass	sound-theme-loader.h	/^struct _PurpleSoundThemeLoaderClass$/;"	s
_PurpleSoundThemeLoaderClass::parent_class	sound-theme-loader.h	/^	PurpleThemeLoaderClass parent_class;$/;"	m	struct:_PurpleSoundThemeLoaderClass	access:public
_PurpleSoundUiOps	sound.h	/^typedef struct _PurpleSoundUiOps$/;"	s
_PurpleSoundUiOps::_purple_reserved1	sound.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:_PurpleSoundUiOps	access:public
_PurpleSoundUiOps::_purple_reserved2	sound.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:_PurpleSoundUiOps	access:public
_PurpleSoundUiOps::_purple_reserved3	sound.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:_PurpleSoundUiOps	access:public
_PurpleSoundUiOps::_purple_reserved4	sound.h	/^	void (*_purple_reserved4)(void);$/;"	m	struct:_PurpleSoundUiOps	access:public
_PurpleSoundUiOps::init	sound.h	/^	void (*init)(void);$/;"	m	struct:_PurpleSoundUiOps	access:public
_PurpleSoundUiOps::play_event	sound.h	/^	void (*play_event)(PurpleSoundEventID event);$/;"	m	struct:_PurpleSoundUiOps	access:public
_PurpleSoundUiOps::play_file	sound.h	/^	void (*play_file)(const char *filename);$/;"	m	struct:_PurpleSoundUiOps	access:public
_PurpleSoundUiOps::uninit	sound.h	/^	void (*uninit)(void);$/;"	m	struct:_PurpleSoundUiOps	access:public
_PurpleSrvInternalQuery	dnssrv.c	/^typedef struct _PurpleSrvInternalQuery {$/;"	s	file:
_PurpleSrvInternalQuery::query	dnssrv.c	/^	char query[256];$/;"	m	struct:_PurpleSrvInternalQuery	file:	access:public
_PurpleSrvInternalQuery::type	dnssrv.c	/^	int type;$/;"	m	struct:_PurpleSrvInternalQuery	file:	access:public
_PurpleSrvResponse	dnssrv.h	/^struct _PurpleSrvResponse {$/;"	s
_PurpleSrvResponse::hostname	dnssrv.h	/^	char hostname[256];$/;"	m	struct:_PurpleSrvResponse	access:public
_PurpleSrvResponse::port	dnssrv.h	/^	int port;$/;"	m	struct:_PurpleSrvResponse	access:public
_PurpleSrvResponse::pref	dnssrv.h	/^	int pref;$/;"	m	struct:_PurpleSrvResponse	access:public
_PurpleSrvResponse::weight	dnssrv.h	/^	int weight;$/;"	m	struct:_PurpleSrvResponse	access:public
_PurpleSrvResponseContainer	dnssrv.c	/^typedef struct _PurpleSrvResponseContainer {$/;"	s	file:
_PurpleSrvResponseContainer::response	dnssrv.c	/^	PurpleSrvResponse *response;$/;"	m	struct:_PurpleSrvResponseContainer	file:	access:public
_PurpleSrvResponseContainer::sum	dnssrv.c	/^	int sum;$/;"	m	struct:_PurpleSrvResponseContainer	file:	access:public
_PurpleSrvTxtQueryData	dnssrv.c	/^struct _PurpleSrvTxtQueryData {$/;"	s	file:
_PurpleSrvTxtQueryData::__anon90::srv	dnssrv.c	/^		PurpleSrvCallback srv;$/;"	m	union:_PurpleSrvTxtQueryData::__anon90	file:	access:public
_PurpleSrvTxtQueryData::__anon90::txt	dnssrv.c	/^		PurpleTxtCallback txt;$/;"	m	union:_PurpleSrvTxtQueryData::__anon90	file:	access:public
_PurpleSrvTxtQueryData::cb	dnssrv.c	/^	} cb;$/;"	m	struct:_PurpleSrvTxtQueryData	typeref:union:_PurpleSrvTxtQueryData::__anon90	file:	access:public
_PurpleSrvTxtQueryData::error_message	dnssrv.c	/^	char *error_message;$/;"	m	struct:_PurpleSrvTxtQueryData	file:	access:public
_PurpleSrvTxtQueryData::extradata	dnssrv.c	/^	gpointer extradata;$/;"	m	struct:_PurpleSrvTxtQueryData	file:	access:public
_PurpleSrvTxtQueryData::fd_in	dnssrv.c	/^	int fd_in, fd_out;$/;"	m	struct:_PurpleSrvTxtQueryData	file:	access:public
_PurpleSrvTxtQueryData::fd_out	dnssrv.c	/^	int fd_in, fd_out;$/;"	m	struct:_PurpleSrvTxtQueryData	file:	access:public
_PurpleSrvTxtQueryData::handle	dnssrv.c	/^	guint handle;$/;"	m	struct:_PurpleSrvTxtQueryData	file:	access:public
_PurpleSrvTxtQueryData::pid	dnssrv.c	/^	pid_t pid;$/;"	m	struct:_PurpleSrvTxtQueryData	file:	access:public
_PurpleSrvTxtQueryData::query	dnssrv.c	/^	char *query;$/;"	m	struct:_PurpleSrvTxtQueryData	file:	access:public
_PurpleSrvTxtQueryData::resolver	dnssrv.c	/^	GThread *resolver;$/;"	m	struct:_PurpleSrvTxtQueryData	file:	access:public
_PurpleSrvTxtQueryData::results	dnssrv.c	/^	GList *results;$/;"	m	struct:_PurpleSrvTxtQueryData	file:	access:public
_PurpleSrvTxtQueryData::type	dnssrv.c	/^	int type;$/;"	m	struct:_PurpleSrvTxtQueryData	file:	access:public
_PurpleSslConnection	sslconn.h	/^struct _PurpleSslConnection$/;"	s
_PurpleSslConnection::connect_cb	sslconn.h	/^	PurpleSslInputFunction connect_cb;$/;"	m	struct:_PurpleSslConnection	access:public
_PurpleSslConnection::connect_cb_data	sslconn.h	/^	void *connect_cb_data;$/;"	m	struct:_PurpleSslConnection	access:public
_PurpleSslConnection::connect_data	sslconn.h	/^	PurpleProxyConnectData *connect_data;$/;"	m	struct:_PurpleSslConnection	access:public
_PurpleSslConnection::error_cb	sslconn.h	/^	PurpleSslErrorFunction error_cb;$/;"	m	struct:_PurpleSslConnection	access:public
_PurpleSslConnection::fd	sslconn.h	/^	int fd;$/;"	m	struct:_PurpleSslConnection	access:public
_PurpleSslConnection::host	sslconn.h	/^	char *host;$/;"	m	struct:_PurpleSslConnection	access:public
_PurpleSslConnection::inpa	sslconn.h	/^	guint inpa;$/;"	m	struct:_PurpleSslConnection	access:public
_PurpleSslConnection::port	sslconn.h	/^	int port;$/;"	m	struct:_PurpleSslConnection	access:public
_PurpleSslConnection::private_data	sslconn.h	/^	void *private_data;$/;"	m	struct:_PurpleSslConnection	access:public
_PurpleSslConnection::recv_cb	sslconn.h	/^	PurpleSslInputFunction recv_cb;$/;"	m	struct:_PurpleSslConnection	access:public
_PurpleSslConnection::recv_cb_data	sslconn.h	/^	void *recv_cb_data;$/;"	m	struct:_PurpleSslConnection	access:public
_PurpleSslConnection::verifier	sslconn.h	/^	PurpleCertificateVerifier *verifier;$/;"	m	struct:_PurpleSslConnection	access:public
_PurpleStatus	status.c	/^struct _PurpleStatus$/;"	s	file:
_PurpleStatus::active	status.c	/^	gboolean active;$/;"	m	struct:_PurpleStatus	file:	access:public
_PurpleStatus::attr_values	status.c	/^	GHashTable *attr_values;$/;"	m	struct:_PurpleStatus	file:	access:public
_PurpleStatus::presence	status.c	/^	PurplePresence *presence;$/;"	m	struct:_PurpleStatus	file:	access:public
_PurpleStatus::type	status.c	/^	PurpleStatusType *type;$/;"	m	struct:_PurpleStatus	file:	access:public
_PurpleStatusAttr	status.c	/^struct _PurpleStatusAttr$/;"	s	file:
_PurpleStatusAttr::id	status.c	/^	char *id;$/;"	m	struct:_PurpleStatusAttr	file:	access:public
_PurpleStatusAttr::name	status.c	/^	char *name;$/;"	m	struct:_PurpleStatusAttr	file:	access:public
_PurpleStatusAttr::value_type	status.c	/^	PurpleValue *value_type;$/;"	m	struct:_PurpleStatusAttr	file:	access:public
_PurpleStatusType	status.c	/^struct _PurpleStatusType$/;"	s	file:
_PurpleStatusType::attrs	status.c	/^	GList *attrs;$/;"	m	struct:_PurpleStatusType	file:	access:public
_PurpleStatusType::id	status.c	/^	char *id;$/;"	m	struct:_PurpleStatusType	file:	access:public
_PurpleStatusType::independent	status.c	/^	gboolean independent;$/;"	m	struct:_PurpleStatusType	file:	access:public
_PurpleStatusType::name	status.c	/^	char *name;$/;"	m	struct:_PurpleStatusType	file:	access:public
_PurpleStatusType::primary_attr_id	status.c	/^	char *primary_attr_id;$/;"	m	struct:_PurpleStatusType	file:	access:public
_PurpleStatusType::primitive	status.c	/^	PurpleStatusPrimitive primitive;$/;"	m	struct:_PurpleStatusType	file:	access:public
_PurpleStatusType::saveable	status.c	/^	gboolean saveable;$/;"	m	struct:_PurpleStatusType	file:	access:public
_PurpleStatusType::user_settable	status.c	/^	gboolean user_settable;$/;"	m	struct:_PurpleStatusType	file:	access:public
_PurpleStoredImage	imgstore.c	/^struct _PurpleStoredImage$/;"	s	file:
_PurpleStoredImage::data	imgstore.c	/^	gpointer data;   \/**< The image data. *\/$/;"	m	struct:_PurpleStoredImage	file:	access:public
_PurpleStoredImage::filename	imgstore.c	/^	char *filename;  \/**< The filename (for the UI) *\/$/;"	m	struct:_PurpleStoredImage	file:	access:public
_PurpleStoredImage::id	imgstore.c	/^	int id;$/;"	m	struct:_PurpleStoredImage	file:	access:public
_PurpleStoredImage::refcount	imgstore.c	/^	guint8 refcount;$/;"	m	struct:_PurpleStoredImage	file:	access:public
_PurpleStoredImage::size	imgstore.c	/^	size_t size;     \/**< The image data's size. *\/$/;"	m	struct:_PurpleStoredImage	file:	access:public
_PurpleStringref	stringref.c	/^struct _PurpleStringref {$/;"	s	file:
_PurpleStringref::ref	stringref.c	/^	guint32 ref;	\/**< The reference count of this string.$/;"	m	struct:_PurpleStringref	file:	access:public
_PurpleStringref::value	stringref.c	/^	char value[1];	\/**< The string contained in this ref.$/;"	m	struct:_PurpleStringref	file:	access:public
_PurpleStunNatDiscovery	stun.h	/^struct _PurpleStunNatDiscovery {$/;"	s
_PurpleStunNatDiscovery::lookup_time	stun.h	/^	time_t lookup_time;$/;"	m	struct:_PurpleStunNatDiscovery	access:public
_PurpleStunNatDiscovery::publicip	stun.h	/^	char publicip[16];$/;"	m	struct:_PurpleStunNatDiscovery	access:public
_PurpleStunNatDiscovery::servername	stun.h	/^	char *servername;$/;"	m	struct:_PurpleStunNatDiscovery	access:public
_PurpleStunNatDiscovery::status	stun.h	/^	PurpleStunStatus status;$/;"	m	struct:_PurpleStunNatDiscovery	access:public
_PurpleStunNatDiscovery::type	stun.h	/^	PurpleStunNatType type;$/;"	m	struct:_PurpleStunNatDiscovery	access:public
_PurpleTheme	theme.h	/^struct _PurpleTheme$/;"	s
_PurpleTheme::parent	theme.h	/^	GObject parent;$/;"	m	struct:_PurpleTheme	access:public
_PurpleTheme::priv	theme.h	/^	gpointer priv;$/;"	m	struct:_PurpleTheme	access:public
_PurpleThemeClass	theme.h	/^struct _PurpleThemeClass$/;"	s
_PurpleThemeClass::parent_class	theme.h	/^	GObjectClass parent_class;$/;"	m	struct:_PurpleThemeClass	access:public
_PurpleThemeLoader	theme-loader.h	/^struct _PurpleThemeLoader$/;"	s
_PurpleThemeLoader::parent	theme-loader.h	/^	GObject parent;$/;"	m	struct:_PurpleThemeLoader	access:public
_PurpleThemeLoader::priv	theme-loader.h	/^	gpointer priv;$/;"	m	struct:_PurpleThemeLoader	access:public
_PurpleThemeLoaderClass	theme-loader.h	/^struct _PurpleThemeLoaderClass$/;"	s
_PurpleThemeLoaderClass::PurpleTheme	theme-loader.h	/^	PurpleTheme *((*purple_theme_loader_build)(const gchar*));$/;"	p	struct:_PurpleThemeLoaderClass	access:public	signature:(*purple_theme_loader_build)(const gchar*)
_PurpleThemeLoaderClass::parent_class	theme-loader.h	/^	GObjectClass parent_class;$/;"	m	struct:_PurpleThemeLoaderClass	access:public
_PurpleThemeManager	theme-manager.h	/^struct _PurpleThemeManager {$/;"	s
_PurpleThemeManager::parent	theme-manager.h	/^	GObject parent;$/;"	m	struct:_PurpleThemeManager	access:public
_PurpleThemeManagerClass	theme-manager.h	/^struct _PurpleThemeManagerClass {$/;"	s
_PurpleThemeManagerClass::parent_class	theme-manager.h	/^	GObjectClass parent_class;$/;"	m	struct:_PurpleThemeManagerClass	access:public
_PurpleTxtResponse	dnssrv.h	/^struct _PurpleTxtResponse {$/;"	s
_PurpleTxtResponse::content	dnssrv.h	/^	char *content;$/;"	m	struct:_PurpleTxtResponse	access:public
_PurpleUtilFetchUrlData	util.c	/^struct _PurpleUtilFetchUrlData$/;"	s	file:
_PurpleUtilFetchUrlData::__anon54::address	util.c	/^		char *address;$/;"	m	struct:_PurpleUtilFetchUrlData::__anon54	file:	access:public
_PurpleUtilFetchUrlData::__anon54::page	util.c	/^		char *page;$/;"	m	struct:_PurpleUtilFetchUrlData::__anon54	file:	access:public
_PurpleUtilFetchUrlData::__anon54::passwd	util.c	/^		char *passwd;$/;"	m	struct:_PurpleUtilFetchUrlData::__anon54	file:	access:public
_PurpleUtilFetchUrlData::__anon54::port	util.c	/^		int port;$/;"	m	struct:_PurpleUtilFetchUrlData::__anon54	file:	access:public
_PurpleUtilFetchUrlData::__anon54::user	util.c	/^		char *user;$/;"	m	struct:_PurpleUtilFetchUrlData::__anon54	file:	access:public
_PurpleUtilFetchUrlData::account	util.c	/^	PurpleAccount *account;$/;"	m	struct:_PurpleUtilFetchUrlData	file:	access:public
_PurpleUtilFetchUrlData::callback	util.c	/^	PurpleUtilFetchUrlCallback callback;$/;"	m	struct:_PurpleUtilFetchUrlData	file:	access:public
_PurpleUtilFetchUrlData::chunked	util.c	/^	gboolean chunked;$/;"	m	struct:_PurpleUtilFetchUrlData	file:	access:public
_PurpleUtilFetchUrlData::connect_data	util.c	/^	PurpleProxyConnectData *connect_data;$/;"	m	struct:_PurpleUtilFetchUrlData	file:	access:public
_PurpleUtilFetchUrlData::data_len	util.c	/^	unsigned long data_len;$/;"	m	struct:_PurpleUtilFetchUrlData	file:	access:public
_PurpleUtilFetchUrlData::fd	util.c	/^	int fd;$/;"	m	struct:_PurpleUtilFetchUrlData	file:	access:public
_PurpleUtilFetchUrlData::full	util.c	/^	gboolean full;$/;"	m	struct:_PurpleUtilFetchUrlData	file:	access:public
_PurpleUtilFetchUrlData::got_headers	util.c	/^	gboolean got_headers;$/;"	m	struct:_PurpleUtilFetchUrlData	file:	access:public
_PurpleUtilFetchUrlData::has_explicit_data_len	util.c	/^	gboolean has_explicit_data_len;$/;"	m	struct:_PurpleUtilFetchUrlData	file:	access:public
_PurpleUtilFetchUrlData::http11	util.c	/^	gboolean http11;$/;"	m	struct:_PurpleUtilFetchUrlData	file:	access:public
_PurpleUtilFetchUrlData::include_headers	util.c	/^	gboolean include_headers;$/;"	m	struct:_PurpleUtilFetchUrlData	file:	access:public
_PurpleUtilFetchUrlData::inpa	util.c	/^	guint inpa;$/;"	m	struct:_PurpleUtilFetchUrlData	file:	access:public
_PurpleUtilFetchUrlData::is_ssl	util.c	/^	gboolean is_ssl;$/;"	m	struct:_PurpleUtilFetchUrlData	file:	access:public
_PurpleUtilFetchUrlData::len	util.c	/^	gsize len;$/;"	m	struct:_PurpleUtilFetchUrlData	file:	access:public
_PurpleUtilFetchUrlData::max_len	util.c	/^	gssize max_len;$/;"	m	struct:_PurpleUtilFetchUrlData	file:	access:public
_PurpleUtilFetchUrlData::num_times_redirected	util.c	/^	int num_times_redirected;$/;"	m	struct:_PurpleUtilFetchUrlData	file:	access:public
_PurpleUtilFetchUrlData::request	util.c	/^	char *request;$/;"	m	struct:_PurpleUtilFetchUrlData	file:	access:public
_PurpleUtilFetchUrlData::request_written	util.c	/^	gsize request_written;$/;"	m	struct:_PurpleUtilFetchUrlData	file:	access:public
_PurpleUtilFetchUrlData::ssl_connection	util.c	/^	PurpleSslConnection *ssl_connection;$/;"	m	struct:_PurpleUtilFetchUrlData	file:	access:public
_PurpleUtilFetchUrlData::url	util.c	/^	char *url;$/;"	m	struct:_PurpleUtilFetchUrlData	file:	access:public
_PurpleUtilFetchUrlData::user_agent	util.c	/^	char *user_agent;$/;"	m	struct:_PurpleUtilFetchUrlData	file:	access:public
_PurpleUtilFetchUrlData::user_data	util.c	/^	void *user_data;$/;"	m	struct:_PurpleUtilFetchUrlData	file:	access:public
_PurpleUtilFetchUrlData::webdata	util.c	/^	char *webdata;$/;"	m	struct:_PurpleUtilFetchUrlData	file:	access:public
_PurpleUtilFetchUrlData::website	util.c	/^	} website;$/;"	m	struct:_PurpleUtilFetchUrlData	typeref:struct:_PurpleUtilFetchUrlData::__anon54	file:	access:public
_PurpleWhiteboard	whiteboard.h	/^typedef struct _PurpleWhiteboard$/;"	s
_PurpleWhiteboard::account	whiteboard.h	/^	PurpleAccount *account;            \/**< Account associated with this session *\/$/;"	m	struct:_PurpleWhiteboard	access:public
_PurpleWhiteboard::draw_list	whiteboard.h	/^	GList *draw_list;                \/**< List of drawing elements\/deltas to send *\/$/;"	m	struct:_PurpleWhiteboard	access:public
_PurpleWhiteboard::proto_data	whiteboard.h	/^	void *proto_data;                \/**< Protocol specific data *\/$/;"	m	struct:_PurpleWhiteboard	access:public
_PurpleWhiteboard::prpl_ops	whiteboard.h	/^	PurpleWhiteboardPrplOps *prpl_ops; \/**< Protocol-plugin operations *\/$/;"	m	struct:_PurpleWhiteboard	access:public
_PurpleWhiteboard::state	whiteboard.h	/^	int state;                       \/**< State of whiteboard session *\/$/;"	m	struct:_PurpleWhiteboard	access:public
_PurpleWhiteboard::ui_data	whiteboard.h	/^	void *ui_data;                   \/**< Graphical user-interface data *\/$/;"	m	struct:_PurpleWhiteboard	access:public
_PurpleWhiteboard::who	whiteboard.h	/^	char *who;                       \/**< Name of the remote user *\/$/;"	m	struct:_PurpleWhiteboard	access:public
_PurpleWhiteboardPrplOps	whiteboard.h	/^struct _PurpleWhiteboardPrplOps$/;"	s
_PurpleWhiteboardPrplOps::_purple_reserved1	whiteboard.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:_PurpleWhiteboardPrplOps	access:public
_PurpleWhiteboardPrplOps::_purple_reserved2	whiteboard.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:_PurpleWhiteboardPrplOps	access:public
_PurpleWhiteboardPrplOps::_purple_reserved3	whiteboard.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:_PurpleWhiteboardPrplOps	access:public
_PurpleWhiteboardPrplOps::_purple_reserved4	whiteboard.h	/^	void (*_purple_reserved4)(void);$/;"	m	struct:_PurpleWhiteboardPrplOps	access:public
_PurpleWhiteboardPrplOps::clear	whiteboard.h	/^	void (*clear)(PurpleWhiteboard *wb);                                   \/**< clear function *\/$/;"	m	struct:_PurpleWhiteboardPrplOps	access:public
_PurpleWhiteboardPrplOps::end	whiteboard.h	/^	void (*end)(PurpleWhiteboard *wb);                                     \/**< end function *\/$/;"	m	struct:_PurpleWhiteboardPrplOps	access:public
_PurpleWhiteboardPrplOps::get_brush	whiteboard.h	/^	void (*get_brush) (const PurpleWhiteboard *wb, int *size, int *color); \/**< get the brush size and color *\/$/;"	m	struct:_PurpleWhiteboardPrplOps	access:public
_PurpleWhiteboardPrplOps::get_dimensions	whiteboard.h	/^	void (*get_dimensions)(const PurpleWhiteboard *wb, int *width, int *height); \/**< get_dimensions function *\/$/;"	m	struct:_PurpleWhiteboardPrplOps	access:public
_PurpleWhiteboardPrplOps::send_draw_list	whiteboard.h	/^	void (*send_draw_list)(PurpleWhiteboard *wb, GList *draw_list);        \/**< send_draw_list function *\/$/;"	m	struct:_PurpleWhiteboardPrplOps	access:public
_PurpleWhiteboardPrplOps::set_brush	whiteboard.h	/^	void (*set_brush) (PurpleWhiteboard *wb, int size, int color);         \/**< set the brush size and color *\/$/;"	m	struct:_PurpleWhiteboardPrplOps	access:public
_PurpleWhiteboardPrplOps::set_dimensions	whiteboard.h	/^	void (*set_dimensions)(PurpleWhiteboard *wb, int width, int height);   \/**< set_dimensions function *\/$/;"	m	struct:_PurpleWhiteboardPrplOps	access:public
_PurpleWhiteboardPrplOps::start	whiteboard.h	/^	void (*start)(PurpleWhiteboard *wb);                                   \/**< start function *\/$/;"	m	struct:_PurpleWhiteboardPrplOps	access:public
_PurpleWhiteboardUiOps	whiteboard.h	/^typedef struct _PurpleWhiteboardUiOps$/;"	s
_PurpleWhiteboardUiOps::_purple_reserved1	whiteboard.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:_PurpleWhiteboardUiOps	access:public
_PurpleWhiteboardUiOps::_purple_reserved2	whiteboard.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:_PurpleWhiteboardUiOps	access:public
_PurpleWhiteboardUiOps::_purple_reserved3	whiteboard.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:_PurpleWhiteboardUiOps	access:public
_PurpleWhiteboardUiOps::_purple_reserved4	whiteboard.h	/^	void (*_purple_reserved4)(void);$/;"	m	struct:_PurpleWhiteboardUiOps	access:public
_PurpleWhiteboardUiOps::clear	whiteboard.h	/^	void (*clear)(PurpleWhiteboard *wb);                                 \/**< clear function *\/$/;"	m	struct:_PurpleWhiteboardUiOps	access:public
_PurpleWhiteboardUiOps::create	whiteboard.h	/^	void (*create)(PurpleWhiteboard *wb);                                 \/**< create function *\/$/;"	m	struct:_PurpleWhiteboardUiOps	access:public
_PurpleWhiteboardUiOps::destroy	whiteboard.h	/^	void (*destroy)(PurpleWhiteboard *wb);                               \/**< destory function *\/$/;"	m	struct:_PurpleWhiteboardUiOps	access:public
_PurpleWhiteboardUiOps::draw_line	whiteboard.h	/^	void (*draw_line)(PurpleWhiteboard *wb, int x1, int y1,$/;"	m	struct:_PurpleWhiteboardUiOps	access:public
_PurpleWhiteboardUiOps::draw_point	whiteboard.h	/^	void (*draw_point)(PurpleWhiteboard *wb, int x, int y,$/;"	m	struct:_PurpleWhiteboardUiOps	access:public
_PurpleWhiteboardUiOps::set_brush	whiteboard.h	/^	void (*set_brush) (PurpleWhiteboard *wb, int size, int color);		\/**< set the size and color of the brush *\/$/;"	m	struct:_PurpleWhiteboardUiOps	access:public
_PurpleWhiteboardUiOps::set_dimensions	whiteboard.h	/^	void (*set_dimensions)(PurpleWhiteboard *wb, int width, int height); \/**< set_dimensions function *\/$/;"	m	struct:_PurpleWhiteboardUiOps	access:public
_PurpleXfer	ft.h	/^struct _PurpleXfer$/;"	s
_PurpleXfer::__anon25::ack	ft.h	/^		void (*ack)(PurpleXfer *xfer, const guchar *buffer, size_t size);$/;"	m	struct:_PurpleXfer::__anon25	access:public
_PurpleXfer::__anon25::cancel_recv	ft.h	/^		void (*cancel_recv)(PurpleXfer *xfer);$/;"	m	struct:_PurpleXfer::__anon25	access:public
_PurpleXfer::__anon25::cancel_send	ft.h	/^		void (*cancel_send)(PurpleXfer *xfer);$/;"	m	struct:_PurpleXfer::__anon25	access:public
_PurpleXfer::__anon25::end	ft.h	/^		void (*end)(PurpleXfer *xfer);$/;"	m	struct:_PurpleXfer::__anon25	access:public
_PurpleXfer::__anon25::init	ft.h	/^		void (*init)(PurpleXfer *xfer);$/;"	m	struct:_PurpleXfer::__anon25	access:public
_PurpleXfer::__anon25::read	ft.h	/^		gssize (*read)(guchar **buffer, PurpleXfer *xfer);$/;"	m	struct:_PurpleXfer::__anon25	access:public
_PurpleXfer::__anon25::request_denied	ft.h	/^		void (*request_denied)(PurpleXfer *xfer);$/;"	m	struct:_PurpleXfer::__anon25	access:public
_PurpleXfer::__anon25::start	ft.h	/^		void (*start)(PurpleXfer *xfer);$/;"	m	struct:_PurpleXfer::__anon25	access:public
_PurpleXfer::__anon25::write	ft.h	/^		gssize (*write)(const guchar *buffer, size_t size, PurpleXfer *xfer);$/;"	m	struct:_PurpleXfer::__anon25	access:public
_PurpleXfer::account	ft.h	/^	PurpleAccount *account;         \/**< The account.                        *\/$/;"	m	struct:_PurpleXfer	access:public
_PurpleXfer::bytes_remaining	ft.h	/^	size_t bytes_remaining;       \/**< The number of bytes remaining.      *\/$/;"	m	struct:_PurpleXfer	access:public
_PurpleXfer::bytes_sent	ft.h	/^	size_t bytes_sent;            \/**< The number of bytes sent.           *\/$/;"	m	struct:_PurpleXfer	access:public
_PurpleXfer::current_buffer_size	ft.h	/^	size_t current_buffer_size;   \/**< This gradually increases for fast$/;"	m	struct:_PurpleXfer	access:public
_PurpleXfer::data	ft.h	/^	void *data;                       \/**< prpl-specific data.     *\/$/;"	m	struct:_PurpleXfer	access:public
_PurpleXfer::dest_fp	ft.h	/^	FILE *dest_fp;                \/**< The destination file pointer.       *\/$/;"	m	struct:_PurpleXfer	access:public
_PurpleXfer::end_time	ft.h	/^	time_t end_time;              \/**< When the transfer of data ended.    *\/$/;"	m	struct:_PurpleXfer	access:public
_PurpleXfer::fd	ft.h	/^	int fd;                       \/**< The socket file descriptor.         *\/$/;"	m	struct:_PurpleXfer	access:public
_PurpleXfer::filename	ft.h	/^	char *filename;               \/**< The name sent over the network.     *\/$/;"	m	struct:_PurpleXfer	access:public
_PurpleXfer::local_filename	ft.h	/^	char *local_filename;         \/**< The name on the local hard drive.   *\/$/;"	m	struct:_PurpleXfer	access:public
_PurpleXfer::local_port	ft.h	/^	int local_port;               \/**< The local port.                     *\/$/;"	m	struct:_PurpleXfer	access:public
_PurpleXfer::message	ft.h	/^	char *message;                \/**< A message sent with the request     *\/$/;"	m	struct:_PurpleXfer	access:public
_PurpleXfer::ops	ft.h	/^	} ops;$/;"	m	struct:_PurpleXfer	typeref:struct:_PurpleXfer::__anon25	access:public
_PurpleXfer::ref	ft.h	/^	guint ref;                    \/**< The reference count.                *\/$/;"	m	struct:_PurpleXfer	access:public
_PurpleXfer::remote_ip	ft.h	/^	char *remote_ip;              \/**< The remote IP address.              *\/$/;"	m	struct:_PurpleXfer	access:public
_PurpleXfer::remote_port	ft.h	/^	int remote_port;              \/**< The remote port.                    *\/$/;"	m	struct:_PurpleXfer	access:public
_PurpleXfer::size	ft.h	/^	size_t size;                  \/**< The size of the file.               *\/$/;"	m	struct:_PurpleXfer	access:public
_PurpleXfer::start_time	ft.h	/^	time_t start_time;            \/**< When the transfer of data began.    *\/$/;"	m	struct:_PurpleXfer	access:public
_PurpleXfer::status	ft.h	/^	PurpleXferStatusType status;    \/**< File Transfer's status.             *\/$/;"	m	struct:_PurpleXfer	access:public
_PurpleXfer::type	ft.h	/^	PurpleXferType type;            \/**< The type of transfer.               *\/$/;"	m	struct:_PurpleXfer	access:public
_PurpleXfer::ui_data	ft.h	/^	void *ui_data;                    \/**< UI-specific data.       *\/$/;"	m	struct:_PurpleXfer	access:public
_PurpleXfer::ui_ops	ft.h	/^	PurpleXferUiOps *ui_ops;            \/**< UI-specific operations. *\/$/;"	m	struct:_PurpleXfer	access:public
_PurpleXfer::watcher	ft.h	/^	int watcher;                  \/**< Watcher.                            *\/$/;"	m	struct:_PurpleXfer	access:public
_PurpleXfer::who	ft.h	/^	char *who;                    \/**< The person on the other end of the$/;"	m	struct:_PurpleXfer	access:public
_PurpleXferPrivData	ft.c	/^typedef struct _PurpleXferPrivData {$/;"	s	file:
_PurpleXferPrivData::PURPLE_XFER_READY_NONE	ft.c	/^		PURPLE_XFER_READY_NONE = 0x0,$/;"	e	enum:_PurpleXferPrivData::__anon52	file:
_PurpleXferPrivData::PURPLE_XFER_READY_PRPL	ft.c	/^		PURPLE_XFER_READY_PRPL = 0x2,$/;"	e	enum:_PurpleXferPrivData::__anon52	file:
_PurpleXferPrivData::PURPLE_XFER_READY_UI	ft.c	/^		PURPLE_XFER_READY_UI   = 0x1,$/;"	e	enum:_PurpleXferPrivData::__anon52	file:
_PurpleXferPrivData::buffer	ft.c	/^	GByteArray *buffer;$/;"	m	struct:_PurpleXferPrivData	file:	access:public
_PurpleXferPrivData::ready	ft.c	/^	} ready;$/;"	m	struct:_PurpleXferPrivData	typeref:enum:_PurpleXferPrivData::__anon52	file:	access:public
_PurpleXferPrivData::thumbnail_data	ft.c	/^	gpointer thumbnail_data;		\/**< thumbnail image *\/$/;"	m	struct:_PurpleXferPrivData	file:	access:public
_PurpleXferPrivData::thumbnail_mimetype	ft.c	/^	gchar *thumbnail_mimetype;$/;"	m	struct:_PurpleXferPrivData	file:	access:public
_PurpleXferPrivData::thumbnail_size	ft.c	/^	gsize thumbnail_size;$/;"	m	struct:_PurpleXferPrivData	file:	access:public
_UPnPMappingAddRemove	upnp.c	/^struct _UPnPMappingAddRemove$/;"	s	file:
_UPnPMappingAddRemove::add	upnp.c	/^	gboolean add;$/;"	m	struct:_UPnPMappingAddRemove	file:	access:public
_UPnPMappingAddRemove::cb	upnp.c	/^	PurpleUPnPCallback cb;$/;"	m	struct:_UPnPMappingAddRemove	file:	access:public
_UPnPMappingAddRemove::cb_data	upnp.c	/^	gpointer cb_data;$/;"	m	struct:_UPnPMappingAddRemove	file:	access:public
_UPnPMappingAddRemove::gfud	upnp.c	/^	PurpleUtilFetchUrlData *gfud;$/;"	m	struct:_UPnPMappingAddRemove	file:	access:public
_UPnPMappingAddRemove::portmap	upnp.c	/^	unsigned short portmap;$/;"	m	struct:_UPnPMappingAddRemove	file:	access:public
_UPnPMappingAddRemove::protocol	upnp.c	/^	gchar protocol[4];$/;"	m	struct:_UPnPMappingAddRemove	file:	access:public
_UPnPMappingAddRemove::success	upnp.c	/^	gboolean success;$/;"	m	struct:_UPnPMappingAddRemove	file:	access:public
_UPnPMappingAddRemove::tima	upnp.c	/^	guint tima; \/* purple_timeout_add handle *\/$/;"	m	struct:_UPnPMappingAddRemove	file:	access:public
_XMLNodeType	xmlnode.h	/^typedef enum _XMLNodeType$/;"	g
__CALLER_SAVED_REGS	valgrind.h	1019;"	d
__CALLER_SAVED_REGS	valgrind.h	1478;"	d
__CALLER_SAVED_REGS	valgrind.h	1924;"	d
__CALLER_SAVED_REGS	valgrind.h	2448;"	d
__CALLER_SAVED_REGS	valgrind.h	3009;"	d
__CALLER_SAVED_REGS	valgrind.h	621;"	d
__SPECIAL_INSTRUCTION_PREAMBLE	valgrind.h	185;"	d
__SPECIAL_INSTRUCTION_PREAMBLE	valgrind.h	239;"	d
__SPECIAL_INSTRUCTION_PREAMBLE	valgrind.h	293;"	d
__SPECIAL_INSTRUCTION_PREAMBLE	valgrind.h	354;"	d
__SPECIAL_INSTRUCTION_PREAMBLE	valgrind.h	420;"	d
__SPECIAL_INSTRUCTION_PREAMBLE	valgrind.h	492;"	d
__VALGRIND_H	valgrind.h	74;"	d
__anon100::instance	signals.c	/^	void *instance;$/;"	m	struct:__anon100	file:	access:public
__anon100::next_signal_id	signals.c	/^	gulong next_signal_id;$/;"	m	struct:__anon100	file:	access:public
__anon100::signal_count	signals.c	/^	size_t signal_count;$/;"	m	struct:__anon100	file:	access:public
__anon100::signals	signals.c	/^	GHashTable *signals;$/;"	m	struct:__anon100	file:	access:public
__anon101::handler_count	signals.c	/^	size_t handler_count;$/;"	m	struct:__anon101	file:	access:public
__anon101::handlers	signals.c	/^	GList *handlers;$/;"	m	struct:__anon101	file:	access:public
__anon101::id	signals.c	/^	gulong id;$/;"	m	struct:__anon101	file:	access:public
__anon101::marshal	signals.c	/^	PurpleSignalMarshalFunc marshal;$/;"	m	struct:__anon101	file:	access:public
__anon101::next_handler_id	signals.c	/^	gulong next_handler_id;$/;"	m	struct:__anon101	file:	access:public
__anon101::num_values	signals.c	/^	int num_values;$/;"	m	struct:__anon101	file:	access:public
__anon101::ret_value	signals.c	/^	PurpleValue *ret_value;$/;"	m	struct:__anon101	file:	access:public
__anon101::values	signals.c	/^	PurpleValue **values;$/;"	m	struct:__anon101	file:	access:public
__anon102::cb	signals.c	/^	PurpleCallback cb;$/;"	m	struct:__anon102	file:	access:public
__anon102::data	signals.c	/^	void *data;$/;"	m	struct:__anon102	file:	access:public
__anon102::handle	signals.c	/^	void *handle;$/;"	m	struct:__anon102	file:	access:public
__anon102::id	signals.c	/^	gulong id;$/;"	m	struct:__anon102	file:	access:public
__anon102::priority	signals.c	/^	int priority;$/;"	m	struct:__anon102	file:	access:public
__anon102::use_vargs	signals.c	/^	gboolean use_vargs;$/;"	m	struct:__anon102	file:	access:public
__anon105::nraddr	valgrind.h	/^      unsigned int nraddr; \/* where's the code? *\/$/;"	m	struct:__anon105	access:public
__anon106::nraddr	valgrind.h	/^      unsigned long long int nraddr; \/* where's the code? *\/$/;"	m	struct:__anon106	access:public
__anon107::nraddr	valgrind.h	/^      unsigned int nraddr; \/* where's the code? *\/$/;"	m	struct:__anon107	access:public
__anon108::nraddr	valgrind.h	/^      unsigned long long int nraddr; \/* where's the code? *\/$/;"	m	struct:__anon108	access:public
__anon108::r2	valgrind.h	/^      unsigned long long int r2;  \/* what tocptr do we need? *\/$/;"	m	struct:__anon108	access:public
__anon109::nraddr	valgrind.h	/^      unsigned int nraddr; \/* where's the code? *\/$/;"	m	struct:__anon109	access:public
__anon109::r2	valgrind.h	/^      unsigned int r2;  \/* what tocptr do we need? *\/$/;"	m	struct:__anon109	access:public
__anon10::command_count	plugin.c	/^	size_t command_count;$/;"	m	struct:__anon10	file:	access:public
__anon10::commands	plugin.c	/^	GHashTable *commands;$/;"	m	struct:__anon10	file:	access:public
__anon110::nraddr	valgrind.h	/^      unsigned long long int nraddr; \/* where's the code? *\/$/;"	m	struct:__anon110	access:public
__anon110::r2	valgrind.h	/^      unsigned long long int r2;  \/* what tocptr do we need? *\/$/;"	m	struct:__anon110	access:public
__anon115::buttons	notify.h	/^	GList *buttons;        \/**< List of buttons to display. *\/$/;"	m	struct:__anon115	access:public
__anon115::columns	notify.h	/^	GList *columns;        \/**< List of the search column objects. *\/$/;"	m	struct:__anon115	access:public
__anon115::rows	notify.h	/^	GList *rows;           \/**< List of rows in the result. *\/$/;"	m	struct:__anon115	access:public
__anon117::title	notify.h	/^	char *title; \/**< Title of the column. *\/$/;"	m	struct:__anon117	access:public
__anon118::callback	notify.h	/^	PurpleNotifySearchResultsCallback callback; \/**< Function to be called when clicked. *\/$/;"	m	struct:__anon118	access:public
__anon118::label	notify.h	/^	char *label;                              \/**< only for PURPLE_NOTIFY_BUTTON_LABELED *\/$/;"	m	struct:__anon118	access:public
__anon118::type	notify.h	/^	PurpleNotifySearchButtonType type;$/;"	m	struct:__anon118	access:public
__anon119::_purple_reserved1	notify.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:__anon119	access:public
__anon119::_purple_reserved2	notify.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:__anon119	access:public
__anon119::_purple_reserved3	notify.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:__anon119	access:public
__anon119::_purple_reserved4	notify.h	/^	void (*_purple_reserved4)(void);$/;"	m	struct:__anon119	access:public
__anon119::close_notify	notify.h	/^	void (*close_notify)(PurpleNotifyType type, void *ui_handle);$/;"	m	struct:__anon119	access:public
__anon119::notify_email	notify.h	/^	void *(*notify_email)(PurpleConnection *gc,$/;"	m	struct:__anon119	access:public
__anon119::notify_emails	notify.h	/^	void *(*notify_emails)(PurpleConnection *gc,$/;"	m	struct:__anon119	access:public
__anon119::notify_formatted	notify.h	/^	void *(*notify_formatted)(const char *title, const char *primary,$/;"	m	struct:__anon119	access:public
__anon119::notify_message	notify.h	/^	void *(*notify_message)(PurpleNotifyMsgType type, const char *title,$/;"	m	struct:__anon119	access:public
__anon119::notify_searchresults	notify.h	/^	void *(*notify_searchresults)(PurpleConnection *gc, const char *title,$/;"	m	struct:__anon119	access:public
__anon119::notify_searchresults_new_rows	notify.h	/^	void (*notify_searchresults_new_rows)(PurpleConnection *gc,$/;"	m	struct:__anon119	access:public
__anon119::notify_uri	notify.h	/^	void *(*notify_uri)(const char *uri);$/;"	m	struct:__anon119	access:public
__anon119::notify_userinfo	notify.h	/^	void *(*notify_userinfo)(PurpleConnection *gc, const char *who,$/;"	m	struct:__anon119	access:public
__anon11::func	plugin.c	/^	PurpleCallback func;$/;"	m	struct:__anon11	file:	access:public
__anon11::marshal	plugin.c	/^	PurpleSignalMarshalFunc marshal;$/;"	m	struct:__anon11	file:	access:public
__anon11::num_params	plugin.c	/^	int num_params;$/;"	m	struct:__anon11	file:	access:public
__anon11::params	plugin.c	/^	PurpleValue **params;$/;"	m	struct:__anon11	file:	access:public
__anon11::ret_value	plugin.c	/^	PurpleValue *ret_value;$/;"	m	struct:__anon11	file:	access:public
__anon122::handle	request.c	/^	void *handle;$/;"	m	struct:__anon122	file:	access:public
__anon122::type	request.c	/^	PurpleRequestType type;$/;"	m	struct:__anon122	file:	access:public
__anon122::ui_handle	request.c	/^	void *ui_handle;$/;"	m	struct:__anon122	file:	access:public
__anon134::handler	dbus-bindings.h	/^    DBusMessage* (*handler)(DBusMessage *request, DBusError *error);$/;"	m	struct:__anon134	access:public
__anon134::name	dbus-bindings.h	/^    const char *name;$/;"	m	struct:__anon134	access:public
__anon134::parameters	dbus-bindings.h	/^    const char *parameters;$/;"	m	struct:__anon134	access:public
__anon135::cb	notify.c	/^	PurpleNotifyCloseCallback cb;$/;"	m	struct:__anon135	file:	access:public
__anon135::cb_user_data	notify.c	/^	gpointer cb_user_data;$/;"	m	struct:__anon135	file:	access:public
__anon135::handle	notify.c	/^	void *handle;$/;"	m	struct:__anon135	file:	access:public
__anon135::type	notify.c	/^	PurpleNotifyType type;$/;"	m	struct:__anon135	file:	access:public
__anon135::ui_handle	notify.c	/^	void *ui_handle;$/;"	m	struct:__anon135	file:	access:public
__anon138::fields	request.h	/^	GHashTable *fields;$/;"	m	struct:__anon138	access:public
__anon138::groups	request.h	/^	GList *groups;$/;"	m	struct:__anon138	access:public
__anon138::required_fields	request.h	/^	GList *required_fields;$/;"	m	struct:__anon138	access:public
__anon138::ui_data	request.h	/^	void *ui_data;$/;"	m	struct:__anon138	access:public
__anon139::fields	request.h	/^	GList *fields;$/;"	m	struct:__anon139	access:public
__anon139::fields_list	request.h	/^	PurpleRequestFields *fields_list;$/;"	m	struct:__anon139	access:public
__anon139::title	request.h	/^	char *title;$/;"	m	struct:__anon139	access:public
__anon13::crt	certificate.c	/^	PurpleCertificate *crt;$/;"	m	struct:__anon13	file:	access:public
__anon13::dn	certificate.c	/^	gchar *dn;$/;"	m	struct:__anon13	file:	access:public
__anon148::_purple_reserved1	request.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:__anon148	access:public
__anon148::_purple_reserved2	request.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:__anon148	access:public
__anon148::_purple_reserved3	request.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:__anon148	access:public
__anon148::close_request	request.h	/^	void (*close_request)(PurpleRequestType type, void *ui_handle);$/;"	m	struct:__anon148	access:public
__anon148::request_action	request.h	/^	void *(*request_action)(const char *title, const char *primary,$/;"	m	struct:__anon148	access:public
__anon148::request_action_with_icon	request.h	/^	void *(*request_action_with_icon)(const char *title, const char *primary,$/;"	m	struct:__anon148	access:public
__anon148::request_choice	request.h	/^	void *(*request_choice)(const char *title, const char *primary,$/;"	m	struct:__anon148	access:public
__anon148::request_fields	request.h	/^	void *(*request_fields)(const char *title, const char *primary,$/;"	m	struct:__anon148	access:public
__anon148::request_file	request.h	/^	void *(*request_file)(const char *title, const char *filename,$/;"	m	struct:__anon148	access:public
__anon148::request_folder	request.h	/^	void *(*request_folder)(const char *title, const char *dirname,$/;"	m	struct:__anon148	access:public
__anon148::request_input	request.h	/^	void *(*request_input)(const char *title, const char *primary,$/;"	m	struct:__anon148	access:public
__anon14::reason	certificate.c	/^	gchar *reason;$/;"	m	struct:__anon14	file:	access:public
__anon14::vrq	certificate.c	/^	PurpleCertificateVerificationRequest *vrq;$/;"	m	struct:__anon14	file:	access:public
__anon18::__anon19::boolean_data	value.h	/^		gboolean boolean_data;$/;"	m	union:__anon18::__anon19	access:public
__anon18::__anon19::boxed_data	value.h	/^		void *boxed_data;$/;"	m	union:__anon18::__anon19	access:public
__anon18::__anon19::char_data	value.h	/^		char char_data;$/;"	m	union:__anon18::__anon19	access:public
__anon18::__anon19::enum_data	value.h	/^		int enum_data;$/;"	m	union:__anon18::__anon19	access:public
__anon18::__anon19::int64_data	value.h	/^		gint64 int64_data;$/;"	m	union:__anon18::__anon19	access:public
__anon18::__anon19::int_data	value.h	/^		int int_data;$/;"	m	union:__anon18::__anon19	access:public
__anon18::__anon19::long_data	value.h	/^		long long_data;$/;"	m	union:__anon18::__anon19	access:public
__anon18::__anon19::object_data	value.h	/^		void *object_data;$/;"	m	union:__anon18::__anon19	access:public
__anon18::__anon19::pointer_data	value.h	/^		void *pointer_data;$/;"	m	union:__anon18::__anon19	access:public
__anon18::__anon19::short_data	value.h	/^		short short_data;$/;"	m	union:__anon18::__anon19	access:public
__anon18::__anon19::string_data	value.h	/^		char *string_data;$/;"	m	union:__anon18::__anon19	access:public
__anon18::__anon19::uchar_data	value.h	/^		unsigned char uchar_data;$/;"	m	union:__anon18::__anon19	access:public
__anon18::__anon19::uint64_data	value.h	/^		guint64 uint64_data;$/;"	m	union:__anon18::__anon19	access:public
__anon18::__anon19::uint_data	value.h	/^		unsigned int uint_data;$/;"	m	union:__anon18::__anon19	access:public
__anon18::__anon19::ulong_data	value.h	/^		unsigned long ulong_data;$/;"	m	union:__anon18::__anon19	access:public
__anon18::__anon19::ushort_data	value.h	/^		unsigned short ushort_data;$/;"	m	union:__anon18::__anon19	access:public
__anon18::__anon20::specific_type	value.h	/^		char *specific_type;$/;"	m	union:__anon18::__anon20	access:public
__anon18::__anon20::subtype	value.h	/^		unsigned int subtype;$/;"	m	union:__anon18::__anon20	access:public
__anon18::data	value.h	/^	} data;$/;"	m	struct:__anon18	typeref:union:__anon18::__anon19	access:public
__anon18::flags	value.h	/^	unsigned short flags;$/;"	m	struct:__anon18	access:public
__anon18::type	value.h	/^	PurpleType type;$/;"	m	struct:__anon18	access:public
__anon18::u	value.h	/^	} u;$/;"	m	struct:__anon18	typeref:union:__anon18::__anon20	access:public
__anon1::current_error	account.c	/^	PurpleConnectionErrorInfo *current_error;$/;"	m	struct:__anon1	file:	access:public
__anon21::_purple_reserved1	core.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:__anon21	access:public
__anon21::_purple_reserved2	core.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:__anon21	access:public
__anon21::_purple_reserved3	core.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:__anon21	access:public
__anon21::debug_ui_init	core.h	/^	void (*debug_ui_init)(void);$/;"	m	struct:__anon21	access:public
__anon21::get_ui_info	core.h	/^	GHashTable* (*get_ui_info)(void);$/;"	m	struct:__anon21	access:public
__anon21::quit	core.h	/^	void (*quit)(void);$/;"	m	struct:__anon21	access:public
__anon21::ui_init	core.h	/^	void (*ui_init)(void);$/;"	m	struct:__anon21	access:public
__anon21::ui_prefs_init	core.h	/^	void (*ui_prefs_init)(void);$/;"	m	struct:__anon21	access:public
__anon24::add_thumbnail	ft.h	/^	void (*add_thumbnail)(PurpleXfer *xfer, const gchar *formats);$/;"	m	struct:__anon24	access:public
__anon24::add_xfer	ft.h	/^	void (*add_xfer)(PurpleXfer *xfer);$/;"	m	struct:__anon24	access:public
__anon24::cancel_local	ft.h	/^	void (*cancel_local)(PurpleXfer *xfer);$/;"	m	struct:__anon24	access:public
__anon24::cancel_remote	ft.h	/^	void (*cancel_remote)(PurpleXfer *xfer);$/;"	m	struct:__anon24	access:public
__anon24::data_not_sent	ft.h	/^	void (*data_not_sent)(PurpleXfer *xfer, const guchar *buffer, gsize size);$/;"	m	struct:__anon24	access:public
__anon24::destroy	ft.h	/^	void (*destroy)(PurpleXfer *xfer);$/;"	m	struct:__anon24	access:public
__anon24::new_xfer	ft.h	/^	void (*new_xfer)(PurpleXfer *xfer);$/;"	m	struct:__anon24	access:public
__anon24::ui_read	ft.h	/^	gssize (*ui_read)(PurpleXfer *xfer, guchar **buffer, gssize size);$/;"	m	struct:__anon24	access:public
__anon24::ui_write	ft.h	/^	gssize (*ui_write)(PurpleXfer *xfer, const guchar *buffer, gssize size);$/;"	m	struct:__anon24	access:public
__anon24::update_progress	ft.h	/^	void (*update_progress)(PurpleXfer *xfer, double percent);$/;"	m	struct:__anon24	access:public
__anon26::author	theme.c	/^	gchar *author;$/;"	m	struct:__anon26	file:	access:public
__anon26::description	theme.c	/^	gchar *description;$/;"	m	struct:__anon26	file:	access:public
__anon26::dir	theme.c	/^	gchar *dir;$/;"	m	struct:__anon26	file:	access:public
__anon26::img	theme.c	/^	gchar *img;$/;"	m	struct:__anon26	file:	access:public
__anon26::name	theme.c	/^	gchar *name;$/;"	m	struct:__anon26	file:	access:public
__anon26::type	theme.c	/^	gchar *type;$/;"	m	struct:__anon26	file:	access:public
__anon29::host	proxy.h	/^	char *host;           \/**< The host.        *\/$/;"	m	struct:__anon29	access:public
__anon29::password	proxy.h	/^	char *password;       \/**< The password.    *\/$/;"	m	struct:__anon29	access:public
__anon29::port	proxy.h	/^	int   port;           \/**< The port number. *\/$/;"	m	struct:__anon29	access:public
__anon29::type	proxy.h	/^	PurpleProxyType type;   \/**< The proxy type.  *\/$/;"	m	struct:__anon29	access:public
__anon29::username	proxy.h	/^	char *username;       \/**< The username.    *\/$/;"	m	struct:__anon29	access:public
__anon2::__anon3::boolean	account.c	/^		gboolean boolean;$/;"	m	union:__anon2::__anon3	file:	access:public
__anon2::__anon3::integer	account.c	/^		int integer;$/;"	m	union:__anon2::__anon3	file:	access:public
__anon2::__anon3::string	account.c	/^		char *string;$/;"	m	union:__anon2::__anon3	file:	access:public
__anon2::type	account.c	/^	PurplePrefType type;$/;"	m	struct:__anon2	file:	access:public
__anon2::ui	account.c	/^	char *ui;$/;"	m	struct:__anon2	file:	access:public
__anon2::value	account.c	/^	} value;$/;"	m	struct:__anon2	typeref:union:__anon2::__anon3	file:	access:public
__anon31::_purple_reserved1	debug.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:__anon31	access:public
__anon31::_purple_reserved2	debug.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:__anon31	access:public
__anon31::_purple_reserved3	debug.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:__anon31	access:public
__anon31::_purple_reserved4	debug.h	/^	void (*_purple_reserved4)(void);$/;"	m	struct:__anon31	access:public
__anon31::is_enabled	debug.h	/^	gboolean (*is_enabled)(PurpleDebugLevel level,$/;"	m	struct:__anon31	access:public
__anon31::print	debug.h	/^	void (*print)(PurpleDebugLevel level, const char *category,$/;"	m	struct:__anon31	access:public
__anon37::account	status.c	/^	PurpleAccount *account;$/;"	m	struct:__anon37	file:	access:public
__anon37::name	status.c	/^	char *name;$/;"	m	struct:__anon37	file:	access:public
__anon38::opcode	nat-pmp.c	/^	guint8 opcode;$/;"	m	struct:__anon38	file:	access:public
__anon38::version	nat-pmp.c	/^	guint8	version;$/;"	m	struct:__anon38	file:	access:public
__anon39::address	nat-pmp.c	/^	guint32		address;$/;"	m	struct:__anon39	file:	access:public
__anon39::epoch	nat-pmp.c	/^	guint32		epoch;$/;"	m	struct:__anon39	file:	access:public
__anon39::opcode	nat-pmp.c	/^	guint8		opcode; \/* 128 + n *\/$/;"	m	struct:__anon39	file:	access:public
__anon39::resultcode	nat-pmp.c	/^	guint16		resultcode;$/;"	m	struct:__anon39	file:	access:public
__anon39::version	nat-pmp.c	/^	guint8		version;$/;"	m	struct:__anon39	file:	access:public
__anon40::lifetime	nat-pmp.c	/^	guint32		lifetime;$/;"	m	struct:__anon40	file:	access:public
__anon40::opcode	nat-pmp.c	/^	guint8		opcode;$/;"	m	struct:__anon40	file:	access:public
__anon40::privateport	nat-pmp.c	/^	guint16		privateport;$/;"	m	struct:__anon40	file:	access:public
__anon40::publicport	nat-pmp.c	/^	guint16		publicport;$/;"	m	struct:__anon40	file:	access:public
__anon40::reserved	nat-pmp.c	/^	char		reserved[2];$/;"	m	struct:__anon40	file:	access:public
__anon40::version	nat-pmp.c	/^	guint8		version;$/;"	m	struct:__anon40	file:	access:public
__anon42::publicip	nat-pmp.c	/^	gchar *publicip;$/;"	m	struct:__anon42	file:	access:public
__anon42::status	nat-pmp.c	/^	PurpleUPnPStatus status;$/;"	m	struct:__anon42	file:	access:public
__anon43::type	theme-loader.c	/^	gchar *type;$/;"	m	struct:__anon43	file:	access:public
__anon47::keys	desktopitem.c	/^	GList *keys;$/;"	m	struct:__anon47	file:	access:public
__anon47::name	desktopitem.c	/^	char *name;$/;"	m	struct:__anon47	file:	access:public
__anon4::account	account.c	/^	PurpleAccount *account;$/;"	m	struct:__anon4	file:	access:public
__anon4::auth_cb	account.c	/^	PurpleAccountRequestAuthorizationCb auth_cb;$/;"	m	struct:__anon4	file:	access:public
__anon4::deny_cb	account.c	/^	PurpleAccountRequestAuthorizationCb deny_cb;$/;"	m	struct:__anon4	file:	access:public
__anon4::ref	account.c	/^	guint ref;$/;"	m	struct:__anon4	file:	access:public
__anon4::type	account.c	/^	PurpleAccountRequestType type;$/;"	m	struct:__anon4	file:	access:public
__anon4::ui_handle	account.c	/^	void *ui_handle;$/;"	m	struct:__anon4	file:	access:public
__anon4::user	account.c	/^	char *user;$/;"	m	struct:__anon4	file:	access:public
__anon4::userdata	account.c	/^	gpointer userdata;$/;"	m	struct:__anon4	file:	access:public
__anon5::_purple_reserved1	privacy.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:__anon5	access:public
__anon5::_purple_reserved2	privacy.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:__anon5	access:public
__anon5::_purple_reserved3	privacy.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:__anon5	access:public
__anon5::_purple_reserved4	privacy.h	/^	void (*_purple_reserved4)(void);$/;"	m	struct:__anon5	access:public
__anon5::deny_added	privacy.h	/^	void (*deny_added)(PurpleAccount *account, const char *name);$/;"	m	struct:__anon5	access:public
__anon5::deny_removed	privacy.h	/^	void (*deny_removed)(PurpleAccount *account, const char *name);$/;"	m	struct:__anon5	access:public
__anon5::permit_added	privacy.h	/^	void (*permit_added)(PurpleAccount *account, const char *name);$/;"	m	struct:__anon5	access:public
__anon5::permit_removed	privacy.h	/^	void (*permit_removed)(PurpleAccount *account, const char *name);$/;"	m	struct:__anon5	access:public
__anon63::control_url	upnp.c	/^	gchar* control_url;$/;"	m	struct:__anon63	file:	access:public
__anon63::internalip	upnp.c	/^	char internalip[16];$/;"	m	struct:__anon63	file:	access:public
__anon63::lookup_time	upnp.c	/^	time_t lookup_time;$/;"	m	struct:__anon63	file:	access:public
__anon63::publicip	upnp.c	/^	char publicip[16];$/;"	m	struct:__anon63	file:	access:public
__anon63::service_type	upnp.c	/^	gchar service_type[20];$/;"	m	struct:__anon63	file:	access:public
__anon63::status	upnp.c	/^	PurpleUPnPStatus status;$/;"	m	struct:__anon63	file:	access:public
__anon64::fd	upnp.c	/^	int fd;$/;"	m	struct:__anon64	file:	access:public
__anon64::full_url	upnp.c	/^	gchar *full_url;$/;"	m	struct:__anon64	file:	access:public
__anon64::inpa	upnp.c	/^	guint inpa;	\/* purple_input_add handle *\/$/;"	m	struct:__anon64	file:	access:public
__anon64::retry_count	upnp.c	/^	int retry_count;$/;"	m	struct:__anon64	file:	access:public
__anon64::server	upnp.c	/^	struct sockaddr_in server;$/;"	m	struct:__anon64	typeref:struct:__anon64::sockaddr_in	file:	access:public
__anon64::service_type	upnp.c	/^	gchar service_type[20];$/;"	m	struct:__anon64	file:	access:public
__anon64::tima	upnp.c	/^	guint tima;	\/* purple_timeout_add handle *\/$/;"	m	struct:__anon64	file:	access:public
__anon65::__anon66::boolean	accountopt.h	/^		gboolean boolean;   \/**< The default boolean value.             *\/$/;"	m	union:__anon65::__anon66	access:public
__anon65::__anon66::integer	accountopt.h	/^		int integer;        \/**< The default integer value.             *\/$/;"	m	union:__anon65::__anon66	access:public
__anon65::__anon66::list	accountopt.h	/^		GList *list;        \/**< The default list value.                *\/$/;"	m	union:__anon65::__anon66	access:public
__anon65::__anon66::string	accountopt.h	/^		char *string;       \/**< The default string value.              *\/$/;"	m	union:__anon65::__anon66	access:public
__anon65::default_value	accountopt.h	/^	} default_value;$/;"	m	struct:__anon65	typeref:union:__anon65::__anon66	access:public
__anon65::masked	accountopt.h	/^	gboolean masked;        \/**< Whether the value entered should be$/;"	m	struct:__anon65	access:public
__anon65::pref_name	accountopt.h	/^	char *pref_name;        \/**< The name of the associated preference. *\/$/;"	m	struct:__anon65	access:public
__anon65::text	accountopt.h	/^	char *text;             \/**< The text that will appear to the user. *\/$/;"	m	struct:__anon65	access:public
__anon65::type	accountopt.h	/^	PurplePrefType type;      \/**< The type of value.                     *\/$/;"	m	struct:__anon65	access:public
__anon67::default_value	accountopt.h	/^	char *default_value;    \/**< The default value.                     *\/$/;"	m	struct:__anon67	access:public
__anon67::field_sep	accountopt.h	/^	char  field_sep;        \/**< The field separator.                   *\/$/;"	m	struct:__anon67	access:public
__anon67::reverse	accountopt.h	/^	gboolean reverse;       \/**< TRUE if the separator should be found$/;"	m	struct:__anon67	access:public
__anon67::text	accountopt.h	/^	char *text;             \/**< The text that will appear to the user. *\/$/;"	m	struct:__anon67	access:public
__anon6::hostname	dnsquery.c	/^	char hostname[512];$/;"	m	struct:__anon6	file:	access:public
__anon6::port	dnsquery.c	/^	int port;$/;"	m	struct:__anon6	file:	access:public
__anon70::_purple_reserved1	idle.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:__anon70	access:public
__anon70::_purple_reserved2	idle.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:__anon70	access:public
__anon70::_purple_reserved3	idle.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:__anon70	access:public
__anon70::_purple_reserved4	idle.h	/^	void (*_purple_reserved4)(void);$/;"	m	struct:__anon70	access:public
__anon70::get_time_idle	idle.h	/^	time_t (*get_time_idle)(void);$/;"	m	struct:__anon70	access:public
__anon74::description	connection.h	/^	char *description;$/;"	m	struct:__anon74	access:public
__anon74::type	connection.h	/^	PurpleConnectionError type;$/;"	m	struct:__anon74	access:public
__anon75::_purple_reserved1	connection.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:__anon75	access:public
__anon75::_purple_reserved2	connection.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:__anon75	access:public
__anon75::_purple_reserved3	connection.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:__anon75	access:public
__anon75::connect_progress	connection.h	/^	void (*connect_progress)(PurpleConnection *gc,$/;"	m	struct:__anon75	access:public
__anon75::connected	connection.h	/^	void (*connected)(PurpleConnection *gc);$/;"	m	struct:__anon75	access:public
__anon75::disconnected	connection.h	/^	void (*disconnected)(PurpleConnection *gc);$/;"	m	struct:__anon75	access:public
__anon75::network_connected	connection.h	/^	void (*network_connected)(void);$/;"	m	struct:__anon75	access:public
__anon75::network_disconnected	connection.h	/^	void (*network_disconnected)(void);$/;"	m	struct:__anon75	access:public
__anon75::notice	connection.h	/^	void (*notice)(PurpleConnection *gc, const char *text);$/;"	m	struct:__anon75	access:public
__anon75::report_disconnect	connection.h	/^	void (*report_disconnect)(PurpleConnection *gc, const char *text);$/;"	m	struct:__anon75	access:public
__anon75::report_disconnect_reason	connection.h	/^	void (*report_disconnect_reason)(PurpleConnection *gc,$/;"	m	struct:__anon75	access:public
__anon78::_purple_reserved1	dnsquery.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:__anon78	access:public
__anon78::_purple_reserved2	dnsquery.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:__anon78	access:public
__anon78::_purple_reserved3	dnsquery.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:__anon78	access:public
__anon78::_purple_reserved4	dnsquery.h	/^	void (*_purple_reserved4)(void);$/;"	m	struct:__anon78	access:public
__anon78::destroy	dnsquery.h	/^	void (*destroy)(PurpleDnsQueryData *query_data);$/;"	m	struct:__anon78	access:public
__anon78::resolve_host	dnsquery.h	/^	gboolean (*resolve_host)(PurpleDnsQueryData *query_data,$/;"	m	struct:__anon78	access:public
__anon7::account_name	pounce.c	/^	char *account_name;$/;"	m	struct:__anon7	file:	access:public
__anon7::action_name	pounce.c	/^	char *action_name;$/;"	m	struct:__anon7	file:	access:public
__anon7::buffer	pounce.c	/^	GString *buffer;$/;"	m	struct:__anon7	file:	access:public
__anon7::event_type	pounce.c	/^	char *event_type;$/;"	m	struct:__anon7	file:	access:public
__anon7::events	pounce.c	/^	PurplePounceEvent events;$/;"	m	struct:__anon7	file:	access:public
__anon7::option_type	pounce.c	/^	char *option_type;$/;"	m	struct:__anon7	file:	access:public
__anon7::options	pounce.c	/^	PurplePounceOption options;$/;"	m	struct:__anon7	file:	access:public
__anon7::param_name	pounce.c	/^	char *param_name;$/;"	m	struct:__anon7	file:	access:public
__anon7::pounce	pounce.c	/^	PurplePounce *pounce;$/;"	m	struct:__anon7	file:	access:public
__anon7::pouncee	pounce.c	/^	char *pouncee;$/;"	m	struct:__anon7	file:	access:public
__anon7::protocol_id	pounce.c	/^	char *protocol_id;$/;"	m	struct:__anon7	file:	access:public
__anon7::ui_name	pounce.c	/^	char *ui_name;$/;"	m	struct:__anon7	file:	access:public
__anon81::_purple_reserved1	dnssrv.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:__anon81	access:public
__anon81::_purple_reserved2	dnssrv.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:__anon81	access:public
__anon81::_purple_reserved3	dnssrv.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:__anon81	access:public
__anon81::_purple_reserved4	dnssrv.h	/^	void (*_purple_reserved4)(void);$/;"	m	struct:__anon81	access:public
__anon81::destroy	dnssrv.h	/^	void (*destroy)(PurpleSrvTxtQueryData *query_data);$/;"	m	struct:__anon81	access:public
__anon81::resolve	dnssrv.h	/^	gboolean (*resolve)(PurpleSrvTxtQueryData *query_data,$/;"	m	struct:__anon81	access:public
__anon87::sound_files	sound-theme.c	/^	GHashTable *sound_files;$/;"	m	struct:__anon87	file:	access:public
__anon89::buf	dnssrv.c	/^	u_char buf[1024];$/;"	m	union:__anon89	file:	access:public
__anon89::hdr	dnssrv.c	/^	HEADER hdr;$/;"	m	union:__anon89	file:	access:public
__anon8::atts	pounce.c	/^	GHashTable *atts;$/;"	m	struct:__anon8	file:	access:public
__anon8::enabled	pounce.c	/^	gboolean enabled;$/;"	m	struct:__anon8	file:	access:public
__anon8::name	pounce.c	/^	char *name;$/;"	m	struct:__anon8	file:	access:public
__anon99::_purple_reserved2	sslconn.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:__anon99	access:public
__anon99::_purple_reserved3	sslconn.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:__anon99	access:public
__anon99::_purple_reserved4	sslconn.h	/^	void (*_purple_reserved4)(void);$/;"	m	struct:__anon99	access:public
__anon99::close	sslconn.h	/^	void (*close)(PurpleSslConnection *gsc);$/;"	m	struct:__anon99	access:public
__anon99::connectfunc	sslconn.h	/^	void (*connectfunc)(PurpleSslConnection *gsc);$/;"	m	struct:__anon99	access:public
__anon99::get_peer_certificates	sslconn.h	/^	GList * (* get_peer_certificates)(PurpleSslConnection * gsc);$/;"	m	struct:__anon99	access:public
__anon99::init	sslconn.h	/^	gboolean (*init)(void);$/;"	m	struct:__anon99	access:public
__anon99::read	sslconn.h	/^	size_t (*read)(PurpleSslConnection *gsc, void *data, size_t len);$/;"	m	struct:__anon99	access:public
__anon99::uninit	sslconn.h	/^	void (*uninit)(void);$/;"	m	struct:__anon99	access:public
__anon99::write	sslconn.h	/^	size_t (*write)(PurpleSslConnection *gsc, const void *data, size_t len);$/;"	m	struct:__anon99	access:public
__anon9::cb	pounce.c	/^	PurplePounceCb cb;$/;"	m	struct:__anon9	file:	access:public
__anon9::free_pounce	pounce.c	/^	void (*free_pounce)(PurplePounce *);$/;"	m	struct:__anon9	file:	access:public
__anon9::new_pounce	pounce.c	/^	void (*new_pounce)(PurplePounce *);$/;"	m	struct:__anon9	file:	access:public
__anon9::ui	pounce.c	/^	char *ui;$/;"	m	struct:__anon9	file:	access:public
__extension__	valgrind.h	3632;"	d
__purple_smarshal_MARSHAL_H__	marshallers.h	3;"	d
_core	core.c	/^static PurpleCore      *_core = NULL;$/;"	v	file:
_do_purple_idle_touch_cb	idle.c	/^static gboolean _do_purple_idle_touch_cb(gpointer data)$/;"	f	file:	signature:(gpointer data)
_list_account_buddies	blist.c	/^struct _list_account_buddies {$/;"	s	file:
_list_account_buddies::account	blist.c	/^	PurpleAccount *account;$/;"	m	struct:_list_account_buddies	file:	access:public
_list_account_buddies::list	blist.c	/^	GSList *list;$/;"	m	struct:_list_account_buddies	file:	access:public
_ops	core.c	/^static PurpleCoreUiOps *_ops  = NULL;$/;"	v	file:
_print_debug_msg	network.c	/^static gboolean _print_debug_msg(gpointer data) {$/;"	f	file:	signature:(gpointer data)
_proxy_fill_hostinfo	proxy.c	/^_proxy_fill_hostinfo(PurpleProxyInfo *info, char *host, int default_port)$/;"	f	file:	signature:(PurpleProxyInfo *info, char *host, int default_port)
_purple_blist_hbuddy_equal	blist.c	/^static guint _purple_blist_hbuddy_equal(struct _purple_hbuddy *hb1, struct _purple_hbuddy *hb2)$/;"	f	file:	signature:(struct _purple_hbuddy *hb1, struct _purple_hbuddy *hb2)
_purple_blist_hbuddy_free_key	blist.c	/^static void _purple_blist_hbuddy_free_key(struct _purple_hbuddy *hb)$/;"	f	file:	signature:(struct _purple_hbuddy *hb)
_purple_blist_hbuddy_hash	blist.c	/^static guint _purple_blist_hbuddy_hash(struct _purple_hbuddy *hb)$/;"	f	file:	signature:(struct _purple_hbuddy *hb)
_purple_blist_schedule_save	blist.c	/^_purple_blist_schedule_save()$/;"	f	file:
_purple_buddy_icon_set_old_icons_dir	buddyicon.c	/^_purple_buddy_icon_set_old_icons_dir(const char *dirname)$/;"	f	signature:(const char *dirname)
_purple_buddy_icon_set_old_icons_dir	internal.h	/^_purple_buddy_icon_set_old_icons_dir(const char *dirname);$/;"	p	signature:(const char *dirname)
_purple_buddy_icons_account_loaded_cb	buddyicon.c	/^_purple_buddy_icons_account_loaded_cb()$/;"	f
_purple_buddy_icons_account_loaded_cb	internal.h	/^_purple_buddy_icons_account_loaded_cb(void);$/;"	p	signature:(void)
_purple_buddy_icons_blist_loaded_cb	buddyicon.c	/^_purple_buddy_icons_blist_loaded_cb()$/;"	f
_purple_buddy_icons_blist_loaded_cb	internal.h	/^_purple_buddy_icons_blist_loaded_cb(void);$/;"	p	signature:(void)
_purple_connection_destroy	connection.c	/^_purple_connection_destroy(PurpleConnection *gc)$/;"	f	signature:(PurpleConnection *gc)
_purple_connection_destroy	internal.h	/^void _purple_connection_destroy(PurpleConnection *gc);$/;"	p	signature:(PurpleConnection *gc)
_purple_connection_new	connection.c	/^_purple_connection_new(PurpleAccount *account, gboolean regist, const char *password)$/;"	f	signature:(PurpleAccount *account, gboolean regist, const char *password)
_purple_connection_new	internal.h	/^void _purple_connection_new(PurpleAccount *account, gboolean regist,$/;"	p	signature:(PurpleAccount *account, gboolean regist, const char *password)
_purple_connection_new_unregister	connection.c	/^_purple_connection_new_unregister(PurpleAccount *account, const char *password, PurpleAccountUnregistrationCb cb, void *user_data)$/;"	f	signature:(PurpleAccount *account, const char *password, PurpleAccountUnregistrationCb cb, void *user_data)
_purple_connection_new_unregister	internal.h	/^void _purple_connection_new_unregister(PurpleAccount *account, const char *password,$/;"	p	signature:(PurpleAccount *account, const char *password, PurpleAccountUnregistrationCb cb, void *user_data)
_purple_conversation_user_equal	conversation.c	/^static gboolean _purple_conversation_user_equal(gconstpointer a, gconstpointer b)$/;"	f	file:	signature:(gconstpointer a, gconstpointer b)
_purple_conversation_user_hash	conversation.c	/^static guint _purple_conversation_user_hash(gconstpointer data)$/;"	f	file:	signature:(gconstpointer data)
_purple_conversations_hconv_equal	conversation.c	/^static guint _purple_conversations_hconv_equal(struct _purple_hconv *hc1, struct _purple_hconv *hc2)$/;"	f	file:	signature:(struct _purple_hconv *hc1, struct _purple_hconv *hc2)
_purple_conversations_hconv_free_key	conversation.c	/^static void _purple_conversations_hconv_free_key(struct _purple_hconv *hc)$/;"	f	file:	signature:(struct _purple_hconv *hc)
_purple_conversations_hconv_hash	conversation.c	/^static guint _purple_conversations_hconv_hash(struct _purple_hconv *hc)$/;"	f	file:	signature:(struct _purple_hconv *hc)
_purple_desktop_item_copy	desktopitem.c	/^_purple_desktop_item_copy (gpointer boxed)$/;"	f	file:	signature:(gpointer boxed)
_purple_desktop_item_free	desktopitem.c	/^_purple_desktop_item_free (gpointer boxed)$/;"	f	file:	signature:(gpointer boxed)
_purple_desktop_item_new	desktopitem.c	/^_purple_desktop_item_new (void)$/;"	f	file:	signature:(void)
_purple_desktop_item_set_string	desktopitem.c	/^_purple_desktop_item_set_string (PurpleDesktopItem *item,$/;"	f	file:	signature:(PurpleDesktopItem *item, const char *attr, const char *value)
_purple_hbuddy	blist.c	/^struct _purple_hbuddy {$/;"	s	file:
_purple_hbuddy::account	blist.c	/^	PurpleAccount *account;$/;"	m	struct:_purple_hbuddy	file:	access:public
_purple_hbuddy::group	blist.c	/^	PurpleBlistNode *group;$/;"	m	struct:_purple_hbuddy	file:	access:public
_purple_hbuddy::name	blist.c	/^	char *name;$/;"	m	struct:_purple_hbuddy	file:	access:public
_purple_hconv	conversation.c	/^struct _purple_hconv {$/;"	s	file:
_purple_hconv::account	conversation.c	/^	const PurpleAccount *account;$/;"	m	struct:_purple_hconv	file:	access:public
_purple_hconv::name	conversation.c	/^	char *name;$/;"	m	struct:_purple_hconv	file:	access:public
_purple_hconv::type	conversation.c	/^	PurpleConversationType type;$/;"	m	struct:_purple_hconv	file:	access:public
_purple_logsize_user	log.c	/^struct _purple_logsize_user {$/;"	s	file:
_purple_logsize_user::account	log.c	/^	PurpleAccount *account;$/;"	m	struct:_purple_logsize_user	file:	access:public
_purple_logsize_user::name	log.c	/^	char *name;$/;"	m	struct:_purple_logsize_user	file:	access:public
_purple_logsize_user_equal	log.c	/^static guint _purple_logsize_user_equal(struct _purple_logsize_user *lu1,$/;"	f	file:	signature:(struct _purple_logsize_user *lu1, struct _purple_logsize_user *lu2)
_purple_logsize_user_free_key	log.c	/^static void _purple_logsize_user_free_key(struct _purple_logsize_user *lu)$/;"	f	file:	signature:(struct _purple_logsize_user *lu)
_purple_logsize_user_hash	log.c	/^static guint _purple_logsize_user_hash(struct _purple_logsize_user *lu)$/;"	f	file:	signature:(struct _purple_logsize_user *lu)
_purple_oscar_convert	util.c	/^const char *_purple_oscar_convert(const char *act, const char *protocol)$/;"	f	signature:(const char *act, const char *protocol)
_purple_oscar_convert	util.h	/^const char *_purple_oscar_convert(const char *act, const char *protocol);$/;"	p	signature:(const char *act, const char *protocol)
_purple_reserved1	account.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:_PurpleAccountUiOps	access:public
_purple_reserved1	blist.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:_PurpleBlistUiOps	access:public
_purple_reserved1	certificate.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:_PurpleCertificatePool	access:public
_purple_reserved1	certificate.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:_PurpleCertificateScheme	access:public
_purple_reserved1	certificate.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:_PurpleCertificateVerifier	access:public
_purple_reserved1	connection.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:__anon75	access:public
_purple_reserved1	conversation.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:_PurpleConversationUiOps	access:public
_purple_reserved1	core.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:__anon21	access:public
_purple_reserved1	debug.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:__anon31	access:public
_purple_reserved1	dnsquery.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:__anon78	access:public
_purple_reserved1	dnssrv.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:__anon81	access:public
_purple_reserved1	idle.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:__anon70	access:public
_purple_reserved1	log.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:_PurpleLogLogger	access:public
_purple_reserved1	notify.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:__anon119	access:public
_purple_reserved1	plugin.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:_PurplePlugin	access:public
_purple_reserved1	plugin.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:_PurplePluginInfo	access:public
_purple_reserved1	plugin.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:_PurplePluginLoaderInfo	access:public
_purple_reserved1	plugin.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:_PurplePluginUiInfo	access:public
_purple_reserved1	privacy.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:__anon5	access:public
_purple_reserved1	request.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:__anon148	access:public
_purple_reserved1	roomlist.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:_PurpleRoomlistUiOps	access:public
_purple_reserved1	sound.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:_PurpleSoundUiOps	access:public
_purple_reserved1	whiteboard.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:_PurpleWhiteboardPrplOps	access:public
_purple_reserved1	whiteboard.h	/^	void (*_purple_reserved1)(void);$/;"	m	struct:_PurpleWhiteboardUiOps	access:public
_purple_reserved2	account.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:_PurpleAccountUiOps	access:public
_purple_reserved2	certificate.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:_PurpleCertificatePool	access:public
_purple_reserved2	certificate.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:_PurpleCertificateScheme	access:public
_purple_reserved2	certificate.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:_PurpleCertificateVerifier	access:public
_purple_reserved2	connection.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:__anon75	access:public
_purple_reserved2	conversation.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:_PurpleConversationUiOps	access:public
_purple_reserved2	core.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:__anon21	access:public
_purple_reserved2	debug.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:__anon31	access:public
_purple_reserved2	dnsquery.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:__anon78	access:public
_purple_reserved2	dnssrv.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:__anon81	access:public
_purple_reserved2	eventloop.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:_PurpleEventLoopUiOps	access:public
_purple_reserved2	idle.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:__anon70	access:public
_purple_reserved2	log.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:_PurpleLogLogger	access:public
_purple_reserved2	notify.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:__anon119	access:public
_purple_reserved2	plugin.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:_PurplePlugin	access:public
_purple_reserved2	plugin.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:_PurplePluginInfo	access:public
_purple_reserved2	plugin.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:_PurplePluginLoaderInfo	access:public
_purple_reserved2	plugin.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:_PurplePluginUiInfo	access:public
_purple_reserved2	privacy.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:__anon5	access:public
_purple_reserved2	request.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:__anon148	access:public
_purple_reserved2	roomlist.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:_PurpleRoomlistUiOps	access:public
_purple_reserved2	sound.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:_PurpleSoundUiOps	access:public
_purple_reserved2	sslconn.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:__anon99	access:public
_purple_reserved2	whiteboard.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:_PurpleWhiteboardPrplOps	access:public
_purple_reserved2	whiteboard.h	/^	void (*_purple_reserved2)(void);$/;"	m	struct:_PurpleWhiteboardUiOps	access:public
_purple_reserved3	account.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:_PurpleAccountUiOps	access:public
_purple_reserved3	certificate.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:_PurpleCertificatePool	access:public
_purple_reserved3	certificate.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:_PurpleCertificateScheme	access:public
_purple_reserved3	certificate.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:_PurpleCertificateVerifier	access:public
_purple_reserved3	connection.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:__anon75	access:public
_purple_reserved3	conversation.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:_PurpleConversationUiOps	access:public
_purple_reserved3	core.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:__anon21	access:public
_purple_reserved3	debug.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:__anon31	access:public
_purple_reserved3	dnsquery.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:__anon78	access:public
_purple_reserved3	dnssrv.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:__anon81	access:public
_purple_reserved3	eventloop.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:_PurpleEventLoopUiOps	access:public
_purple_reserved3	idle.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:__anon70	access:public
_purple_reserved3	log.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:_PurpleLogLogger	access:public
_purple_reserved3	notify.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:__anon119	access:public
_purple_reserved3	plugin.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:_PurplePlugin	access:public
_purple_reserved3	plugin.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:_PurplePluginInfo	access:public
_purple_reserved3	plugin.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:_PurplePluginLoaderInfo	access:public
_purple_reserved3	plugin.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:_PurplePluginUiInfo	access:public
_purple_reserved3	privacy.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:__anon5	access:public
_purple_reserved3	request.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:__anon148	access:public
_purple_reserved3	roomlist.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:_PurpleRoomlistUiOps	access:public
_purple_reserved3	sound.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:_PurpleSoundUiOps	access:public
_purple_reserved3	sslconn.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:__anon99	access:public
_purple_reserved3	whiteboard.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:_PurpleWhiteboardPrplOps	access:public
_purple_reserved3	whiteboard.h	/^	void (*_purple_reserved3)(void);$/;"	m	struct:_PurpleWhiteboardUiOps	access:public
_purple_reserved4	account.h	/^	void (*_purple_reserved4)(void);$/;"	m	struct:_PurpleAccountUiOps	access:public
_purple_reserved4	certificate.h	/^	void (*_purple_reserved4)(void);$/;"	m	struct:_PurpleCertificatePool	access:public
_purple_reserved4	certificate.h	/^	void (*_purple_reserved4)(void);$/;"	m	struct:_PurpleCertificateVerifier	access:public
_purple_reserved4	conversation.h	/^	void (*_purple_reserved4)(void);$/;"	m	struct:_PurpleConversationUiOps	access:public
_purple_reserved4	debug.h	/^	void (*_purple_reserved4)(void);$/;"	m	struct:__anon31	access:public
_purple_reserved4	dnsquery.h	/^	void (*_purple_reserved4)(void);$/;"	m	struct:__anon78	access:public
_purple_reserved4	dnssrv.h	/^	void (*_purple_reserved4)(void);$/;"	m	struct:__anon81	access:public
_purple_reserved4	eventloop.h	/^	void (*_purple_reserved4)(void);$/;"	m	struct:_PurpleEventLoopUiOps	access:public
_purple_reserved4	idle.h	/^	void (*_purple_reserved4)(void);$/;"	m	struct:__anon70	access:public
_purple_reserved4	log.h	/^	void (*_purple_reserved4)(void);$/;"	m	struct:_PurpleLogLogger	access:public
_purple_reserved4	notify.h	/^	void (*_purple_reserved4)(void);$/;"	m	struct:__anon119	access:public
_purple_reserved4	plugin.h	/^	void (*_purple_reserved4)(void);$/;"	m	struct:_PurplePlugin	access:public
_purple_reserved4	plugin.h	/^	void (*_purple_reserved4)(void);$/;"	m	struct:_PurplePluginInfo	access:public
_purple_reserved4	plugin.h	/^	void (*_purple_reserved4)(void);$/;"	m	struct:_PurplePluginLoaderInfo	access:public
_purple_reserved4	plugin.h	/^	void (*_purple_reserved4)(void);$/;"	m	struct:_PurplePluginUiInfo	access:public
_purple_reserved4	privacy.h	/^	void (*_purple_reserved4)(void);$/;"	m	struct:__anon5	access:public
_purple_reserved4	roomlist.h	/^	void (*_purple_reserved4)(void);$/;"	m	struct:_PurpleRoomlistUiOps	access:public
_purple_reserved4	sound.h	/^	void (*_purple_reserved4)(void);$/;"	m	struct:_PurpleSoundUiOps	access:public
_purple_reserved4	sslconn.h	/^	void (*_purple_reserved4)(void);$/;"	m	struct:__anon99	access:public
_purple_reserved4	whiteboard.h	/^	void (*_purple_reserved4)(void);$/;"	m	struct:_PurpleWhiteboardPrplOps	access:public
_purple_reserved4	whiteboard.h	/^	void (*_purple_reserved4)(void);$/;"	m	struct:_PurpleWhiteboardUiOps	access:public
_reserved2	prpl.h	/^	gpointer _reserved2;$/;"	m	struct:_PurpleAttentionType	access:public
_reserved3	prpl.h	/^	gpointer _reserved3;$/;"	m	struct:_PurpleAttentionType	access:public
_reserved4	prpl.h	/^	gpointer _reserved4;$/;"	m	struct:_PurpleAttentionType	access:public
_ssl_initialized	sslconn.c	/^static gboolean _ssl_initialized = FALSE;$/;"	v	file:
_ssl_ops	sslconn.c	/^static PurpleSslOps *_ssl_ops = NULL;$/;"	v	file:
_xmlnode	xmlnode.h	/^struct _xmlnode$/;"	s
_xmlnode::child	xmlnode.h	/^	xmlnode *child;             \/**< The child node or @c NULL.*\/$/;"	m	struct:_xmlnode	access:public
_xmlnode::data	xmlnode.h	/^	char *data;			\/**< The data for the node. *\/$/;"	m	struct:_xmlnode	access:public
_xmlnode::data_sz	xmlnode.h	/^	size_t data_sz;			\/**< The size of the data. *\/$/;"	m	struct:_xmlnode	access:public
_xmlnode::lastchild	xmlnode.h	/^	xmlnode *lastchild;         \/**< The last child node or @c NULL.*\/$/;"	m	struct:_xmlnode	access:public
_xmlnode::name	xmlnode.h	/^	char *name;			\/**< The name of the node. *\/$/;"	m	struct:_xmlnode	access:public
_xmlnode::namespace_map	xmlnode.h	/^	GHashTable *namespace_map;  \/**< The namespace map. *\/$/;"	m	struct:_xmlnode	access:public
_xmlnode::next	xmlnode.h	/^	xmlnode *next;              \/**< The next node or @c NULL. *\/$/;"	m	struct:_xmlnode	access:public
_xmlnode::parent	xmlnode.h	/^	xmlnode *parent;            \/**< The parent node or @c NULL.*\/$/;"	m	struct:_xmlnode	access:public
_xmlnode::prefix	xmlnode.h	/^	char *prefix;               \/**< The namespace prefix if any. *\/$/;"	m	struct:_xmlnode	access:public
_xmlnode::type	xmlnode.h	/^	XMLNodeType type;		\/**< The type of the node. *\/$/;"	m	struct:_xmlnode	access:public
_xmlnode::xmlns	xmlnode.h	/^	char *xmlns;		\/**< The namespace of the node *\/$/;"	m	struct:_xmlnode	access:public
_xmlnode_parser_data	xmlnode.c	/^struct _xmlnode_parser_data {$/;"	s	file:
_xmlnode_parser_data::current	xmlnode.c	/^	xmlnode *current;$/;"	m	struct:_xmlnode_parser_data	file:	access:public
_xmlnode_parser_data::error	xmlnode.c	/^	gboolean error;$/;"	m	struct:_xmlnode_parser_data	file:	access:public
accepted	media.c	/^	gboolean accepted;$/;"	m	struct:_PurpleMediaStream	file:	access:public
account	account.c	/^	PurpleAccount *account;$/;"	m	struct:__anon4	file:	access:public
account	account.c	/^	PurpleAccount *account;$/;"	m	struct:public_alias_closure	file:	access:public
account	blist.c	/^	PurpleAccount *account;$/;"	m	struct:_list_account_buddies	file:	access:public
account	blist.c	/^	PurpleAccount *account;$/;"	m	struct:_purple_hbuddy	file:	access:public
account	blist.h	/^	PurpleAccount *account;					\/**< the account this buddy belongs to *\/$/;"	m	struct:_PurpleBuddy	access:public
account	blist.h	/^	PurpleAccount *account; \/**< The account this chat is attached to *\/$/;"	m	struct:_PurpleChat	access:public
account	buddyicon.c	/^	PurpleAccount *account;    \/**< The account the user is on.          *\/$/;"	m	struct:_PurpleBuddyIcon	file:	access:public
account	connection.h	/^	PurpleAccount *account;        \/**< The account being connected to.    *\/$/;"	m	struct:_PurpleConnection	access:public
account	conversation.c	/^	const PurpleAccount *account;$/;"	m	struct:_purple_hconv	file:	access:public
account	conversation.h	/^	PurpleAccount *account;       \/**< The user using this conversation.  *\/$/;"	m	struct:_PurpleConversation	access:public
account	dnsquery.c	/^	PurpleAccount *account;$/;"	m	struct:_PurpleDnsQueryData	file:	access:public
account	ft.h	/^	PurpleAccount *account;         \/**< The account.                        *\/$/;"	m	struct:_PurpleXfer	access:public
account	log.c	/^	PurpleAccount *account;$/;"	m	struct:_purple_logsize_user	file:	access:public
account	log.h	/^	PurpleAccount *account;                 \/**< The account the available logs$/;"	m	struct:_PurpleLogSet	access:public
account	log.h	/^	PurpleAccount *account;                 \/**< The account this log is taking$/;"	m	struct:_PurpleLog	access:public
account	media.c	/^	PurpleAccount *account;$/;"	m	struct:_PurpleMediaPrivate	file:	access:public
account	proxy.c	/^	PurpleAccount *account;$/;"	m	struct:_PurpleProxyConnectData	file:	access:public
account	request.h	/^			PurpleAccount *account;$/;"	m	struct:_PurpleRequestField::__anon140::__anon146	access:public
account	request.h	/^		} account;$/;"	m	union:_PurpleRequestField::__anon140	typeref:struct:_PurpleRequestField::__anon140::__anon146	access:public
account	roomlist.h	/^	PurpleAccount *account; \/**< The account this list belongs to. *\/$/;"	m	struct:_PurpleRoomlist	access:public
account	savedstatuses.c	/^	PurpleAccount *account;$/;"	m	struct:_PurpleSavedStatusSub	file:	access:public
account	status.c	/^			PurpleAccount *account;$/;"	m	struct:_PurplePresence::__anon34::__anon36	file:	access:public
account	status.c	/^		PurpleAccount *account;$/;"	m	union:_PurplePresence::__anon34	file:	access:public
account	status.c	/^	PurpleAccount *account;$/;"	m	struct:__anon37	file:	access:public
account	util.c	/^	PurpleAccount *account;$/;"	m	struct:_PurpleUtilFetchUrlData	file:	access:public
account	whiteboard.h	/^	PurpleAccount *account;            \/**< Account associated with this session *\/$/;"	m	struct:_PurpleWhiteboard	access:public
account_cache	buddyicon.c	/^static GHashTable *account_cache = NULL;$/;"	v	file:
account_name	pounce.c	/^	char *account_name;$/;"	m	struct:__anon7	file:	access:public
account_to_xmlnode	account.c	/^account_to_xmlnode(PurpleAccount *account)$/;"	f	file:	signature:(PurpleAccount *account)
account_ui_ops	account.c	/^static PurpleAccountUiOps *account_ui_ops = NULL;$/;"	v	file:
accountprivacy_to_xmlnode	blist.c	/^accountprivacy_to_xmlnode(PurpleAccount *account)$/;"	f	file:	signature:(PurpleAccount *account)
accounts	account.c	/^static GList   *accounts = NULL;$/;"	v	file:
accounts_loaded	account.c	/^static gboolean accounts_loaded = FALSE;$/;"	v	file:
accounts_to_xmlnode	account.c	/^accounts_to_xmlnode(void)$/;"	f	file:	signature:(void)
ack	ft.h	/^		void (*ack)(PurpleXfer *xfer, const guchar *buffer, size_t size);$/;"	m	struct:_PurpleXfer::__anon25	access:public
action_name	pounce.c	/^	char *action_name;$/;"	m	struct:__anon7	file:	access:public
action_parameter_list_to_xmlnode	pounce.c	/^action_parameter_list_to_xmlnode(gpointer key, gpointer value, gpointer user_data)$/;"	f	file:	signature:(gpointer key, gpointer value, gpointer user_data)
action_parameter_to_xmlnode	pounce.c	/^action_parameter_to_xmlnode(gpointer key, gpointer value, gpointer user_data)$/;"	f	file:	signature:(gpointer key, gpointer value, gpointer user_data)
actions	plugin.h	/^	GList *(*actions)(PurplePlugin *plugin, gpointer context);$/;"	m	struct:_PurplePluginInfo	access:public
actions	pounce.h	/^	GHashTable *actions;          \/**< The registered actions.    *\/$/;"	m	struct:_PurplePounce	access:public
active	status.c	/^	gboolean active;$/;"	m	struct:_PurpleStatus	file:	access:public
active_local_candidates	media.c	/^	GList *active_local_candidates;$/;"	m	struct:_PurpleMediaStream	file:	access:public
active_remote_candidates	media.c	/^	GList *active_remote_candidates;$/;"	m	struct:_PurpleMediaStream	file:	access:public
active_status	status.c	/^	PurpleStatus *active_status;$/;"	m	struct:_PurplePresence	file:	access:public
add	upnp.c	/^	gboolean add;$/;"	m	struct:_UPnPMappingAddRemove	file:	access:public
add_all_buddies_to_permit_list	privacy.c	/^add_all_buddies_to_permit_list(PurpleAccount *account, gboolean local)$/;"	f	file:	signature:(PurpleAccount *account, gboolean local)
add_buddies	prpl.h	/^	void (*add_buddies)(PurpleConnection *, GList *buddies, GList *groups);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
add_buddies_with_invite	prpl.h	/^	void (*add_buddies_with_invite)(PurpleConnection *pc, GList *buddies, GList *groups, const char *message);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
add_buddy	prpl.h	/^	void (*add_buddy)(PurpleConnection *, PurpleBuddy *buddy, PurpleGroup *group);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
add_buddy_with_invite	prpl.h	/^	void (*add_buddy_with_invite)(PurpleConnection *pc, PurpleBuddy *buddy, PurpleGroup *group, const char *message);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
add_deny	prpl.h	/^	void (*add_deny)(PurpleConnection *, const char *name);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
add_event_to_xmlnode	pounce.c	/^add_event_to_xmlnode(xmlnode *node, const char *type)$/;"	f	file:	signature:(xmlnode *node, const char *type)
add_message_to_history	conversation.c	/^add_message_to_history(PurpleConversation *conv, const char *who, const char *alias,$/;"	f	file:	signature:(PurpleConversation *conv, const char *who, const char *alias, const char *message, PurpleMessageFlags flags, time_t when)
add_option_to_xmlnode	pounce.c	/^add_option_to_xmlnode(xmlnode *node, const char *type)$/;"	f	file:	signature:(xmlnode *node, const char *type)
add_permit	prpl.h	/^	void (*add_permit)(PurpleConnection *, const char *name);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
add_pref	prefs.c	/^add_pref(PurplePrefType type, const char *name)$/;"	f	file:	signature:(PurplePrefType type, const char *name)
add_remote_candidates	media/backend-iface.h	/^	void (*add_remote_candidates) (PurpleMediaBackend *self,$/;"	m	struct:_PurpleMediaBackendIface	access:public
add_room	roomlist.h	/^	void (*add_room)(PurpleRoomlist *list, PurpleRoomlistRoom *room); \/**< Add a room to the list. *\/$/;"	m	struct:_PurpleRoomlistUiOps	access:public
add_smiley_to_list	smiley.c	/^static void add_smiley_to_list(gpointer key, gpointer value, gpointer user_data)$/;"	f	file:	signature:(gpointer key, gpointer value, gpointer user_data)
add_smiley_to_main_node	smiley.c	/^add_smiley_to_main_node(gpointer key, gpointer value, gpointer user_data)$/;"	f	file:	signature:(gpointer key, gpointer value, gpointer user_data)
add_stream	media/backend-iface.h	/^	gboolean (*add_stream) (PurpleMediaBackend *self,$/;"	m	struct:_PurpleMediaBackendIface	access:public
add_thumbnail	ft.h	/^	void (*add_thumbnail)(PurpleXfer *xfer, const gchar *formats);$/;"	m	struct:__anon24	access:public
add_xfer	ft.h	/^	void (*add_xfer)(PurpleXfer *xfer);$/;"	m	struct:__anon24	access:public
adding	network.c	/^	gboolean adding;$/;"	m	struct:_PurpleNetworkListenData	file:	access:public
addr	stun.c	/^	struct sockaddr_in addr;$/;"	m	struct:stun_conn	typeref:struct:stun_conn::sockaddr_in	file:	access:public
address	nat-pmp.c	/^	guint32		address;$/;"	m	struct:__anon39	file:	access:public
address	util.c	/^		char *address;$/;"	m	struct:_PurpleUtilFetchUrlData::__anon54	file:	access:public
alias	account.h	/^	char *alias;                \/**< How you appear to yourself.            *\/$/;"	m	struct:_PurpleAccount	access:public
alias	blist.h	/^	char *alias;                            \/**< The user-set alias of the buddy *\/$/;"	m	struct:_PurpleBuddy	access:public
alias	blist.h	/^	char *alias;             \/**< The display name of this chat. *\/$/;"	m	struct:_PurpleChat	access:public
alias	blist.h	/^	char *alias;            \/**< The user-set alias of the contact *\/$/;"	m	struct:_PurpleContact	access:public
alias	conversation.h	/^	char *alias;                     \/**< The chat participant's alias, if known;$/;"	m	struct:_PurpleConvChatBuddy	access:public
alias	conversation.h	/^	char *alias;               \/**< @since 2.3.0 *\/$/;"	m	struct:_PurpleConvMessage	access:public
alias_buddy	prpl.h	/^	void (*alias_buddy)(PurpleConnection *, const char *who,$/;"	m	struct:_PurplePluginProtocolInfo	access:public
alias_key	conversation.h	/^	char *alias_key;                 \/**< A string by which this buddy will be sorted,$/;"	m	struct:_PurpleConvChatBuddy	access:public
alphabet	util.c	/^static const char alphabet[] =$/;"	v	file:
append	cipher.h	/^	void (*append)(PurpleCipherContext *context, const guchar *data, size_t len);$/;"	m	struct:_PurpleCipherOps	access:public
append_attribute_key	conversation.c	/^append_attribute_key(gpointer key, gpointer value, gpointer user_data)$/;"	f	file:	signature:(gpointer key, gpointer value, gpointer user_data)
append_buddy	blist.c	/^append_buddy(gpointer key, gpointer value, gpointer user_data)$/;"	f	file:	signature:(gpointer key, gpointer value, gpointer user_data)
append_escaped_text	util.c	/^static void append_escaped_text(GString *str,$/;"	f	file:	signature:(GString *str, const gchar *text, gssize length)
append_relay_info	media/backend-fs2.c	/^append_relay_info(GValueArray *relay_info, const gchar *ip, gint port,$/;"	f	file:	signature:(GValueArray *relay_info, const gchar *ip, gint port, const gchar *username, const gchar *password, const gchar *type)
args	cmds.c	/^	gchar *args;$/;"	m	struct:_PurpleCmd	file:	access:public
ask_accept_cancel	ft.c	/^ask_accept_cancel(PurpleXfer *xfer)$/;"	f	file:	signature:(PurpleXfer *xfer)
ask_accept_ok	ft.c	/^ask_accept_ok(PurpleXfer *xfer)$/;"	f	file:	signature:(PurpleXfer *xfer)
attr_values	status.c	/^	GHashTable *attr_values;$/;"	m	struct:_PurpleStatus	file:	access:public
attrib	stun.c	/^	struct stun_attrib attrib;$/;"	m	struct:stun_change	typeref:struct:stun_change::stun_attrib	file:	access:public
attributes	conversation.h	/^	GHashTable *attributes;          \/**< A hash table of attributes about the user, such as$/;"	m	struct:_PurpleConvChatBuddy	access:public
attrs	status.c	/^	GList *attrs;$/;"	m	struct:_PurpleStatusType	file:	access:public
atts	pounce.c	/^	GHashTable *atts;$/;"	m	struct:__anon8	file:	access:public
audio_sink	mediamanager.c	/^	PurpleMediaElementInfo *audio_sink;$/;"	m	struct:_PurpleMediaManagerPrivate	file:	access:public
audio_src	mediamanager.c	/^	PurpleMediaElementInfo *audio_src;$/;"	m	struct:_PurpleMediaManagerPrivate	file:	access:public
auth_cb	account.c	/^	PurpleAccountRequestAuthorizationCb auth_cb;$/;"	m	struct:__anon4	file:	access:public
author	plugin.h	/^	char *author;$/;"	m	struct:_PurplePluginInfo	access:public
author	theme.c	/^	gchar *author;$/;"	m	struct:__anon26	file:	access:public
backend	media.c	/^	PurpleMediaBackend *backend;$/;"	m	struct:_PurpleMediaPrivate	file:	access:public
backend	media/backend-fs2.c	/^	PurpleMediaBackendFs2 *backend;$/;"	m	struct:_PurpleMediaBackendFs2Session	file:	access:public
backend_type	mediamanager.c	/^	GType backend_type;$/;"	m	struct:_PurpleMediaManagerPrivate	file:	access:public
badchar	util.c	/^badchar(char c)$/;"	f	file:	signature:(char c)
badentity	util.c	/^badentity(const char *c)$/;"	f	file:	signature:(const char *c)
base_ip	media/candidate.c	/^	gchar *base_ip;$/;"	m	struct:_PurpleMediaCandidatePrivate	file:	access:public
base_port	media/candidate.c	/^	guint16 base_port;$/;"	m	struct:_PurpleMediaCandidatePrivate	file:	access:public
begin_transfer	ft.c	/^begin_transfer(PurpleXfer *xfer, PurpleInputCondition cond)$/;"	f	file:	signature:(PurpleXfer *xfer, PurpleInputCondition cond)
blist_loaded	blist.c	/^static gboolean       blist_loaded = FALSE;$/;"	v	file:
blist_node_menu	prpl.h	/^	GList *(*blist_node_menu)(PurpleBlistNode *node);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
blist_to_xmlnode	blist.c	/^blist_to_xmlnode(void)$/;"	f	file:	signature:(void)
blist_ui_ops	blist.c	/^static PurpleBlistUiOps *blist_ui_ops = NULL;$/;"	v	file:
boolean	account.c	/^		gboolean boolean;$/;"	m	union:__anon2::__anon3	file:	access:public
boolean	accountopt.h	/^		gboolean boolean;   \/**< The default boolean value.             *\/$/;"	m	union:__anon65::__anon66	access:public
boolean	prefs.c	/^		gboolean boolean;$/;"	m	union:purple_pref::__anon15	file:	access:public
boolean	request.h	/^		} boolean;$/;"	m	union:_PurpleRequestField::__anon140	typeref:struct:_PurpleRequestField::__anon140::__anon143	access:public
boolean_data	value.h	/^		gboolean boolean_data;$/;"	m	union:__anon18::__anon19	access:public
boxed_data	value.h	/^		void *boxed_data;$/;"	m	union:__anon18::__anon19	access:public
buddies	blist.h	/^	GHashTable *buddies;          \/**< Every buddy in this list *\/$/;"	m	struct:_PurpleBuddyList	access:public
buddies_cache	blist.c	/^static GHashTable *buddies_cache = NULL;$/;"	v	file:
buddy	conversation.h	/^	gboolean buddy;                  \/**< @a TRUE if this chat participant is on the$/;"	m	struct:_PurpleConvChatBuddy	access:public
buddy	log.h	/^	gboolean buddy;                       \/**< Is this (account, name) a buddy$/;"	m	struct:_PurpleLogSet	access:public
buddy	status.c	/^			PurpleBuddy *buddy;$/;"	m	struct:_PurplePresence::__anon34::__anon36	file:	access:public
buddy	status.c	/^		} buddy;$/;"	m	union:_PurplePresence::__anon34	typeref:struct:_PurplePresence::__anon34::__anon36	file:	access:public
buddy_chats	connection.h	/^	GSList *buddy_chats;         \/**< A list of active chats$/;"	m	struct:_PurpleConnection	access:public
buddy_free	prpl.h	/^	void (*buddy_free)(PurpleBuddy *);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
buddy_icon_path	account.h	/^	char *buddy_icon_path;      \/**< The buddy icon's non-cached path.      *\/$/;"	m	struct:_PurpleAccount	access:public
buddy_idle_changed_cb	pounce.c	/^buddy_idle_changed_cb(PurpleBuddy *buddy, gboolean old_idle, gboolean idle)$/;"	f	file:	signature:(PurpleBuddy *buddy, gboolean old_idle, gboolean idle)
buddy_state_cb	pounce.c	/^buddy_state_cb(PurpleBuddy *buddy, PurplePounceEvent event)$/;"	f	file:	signature:(PurpleBuddy *buddy, PurplePounceEvent event)
buddy_status_changed_cb	pounce.c	/^buddy_status_changed_cb(PurpleBuddy *buddy, PurpleStatus *old_status,$/;"	f	file:	signature:(PurpleBuddy *buddy, PurpleStatus *old_status, PurpleStatus *status)
buddy_to_xmlnode	blist.c	/^buddy_to_xmlnode(PurpleBlistNode *bnode)$/;"	f	file:	signature:(PurpleBlistNode *bnode)
buddy_typing_cb	pounce.c	/^buddy_typing_cb(PurpleAccount *account, const char *name, void *data)$/;"	f	file:	signature:(PurpleAccount *account, const char *name, void *data)
buf	dnssrv.c	/^	u_char buf[1024];$/;"	m	union:__anon89	file:	access:public
buffer	circbuffer.h	/^	gchar *buffer;$/;"	m	struct:_PurpleCircBuffer	access:public
buffer	ft.c	/^	GByteArray *buffer;$/;"	m	struct:_PurpleXferPrivData	file:	access:public
buffer	pounce.c	/^	GString *buffer;$/;"	m	struct:__anon7	file:	access:public
buffer	request.h	/^			const char *buffer;$/;"	m	struct:_PurpleRequestField::__anon140::__anon147	access:public
buflen	circbuffer.h	/^	gsize buflen;$/;"	m	struct:_PurpleCircBuffer	access:public
bufused	circbuffer.h	/^	gsize bufused;$/;"	m	struct:_PurpleCircBuffer	access:public
bus	purple-client.c	/^static DBusGConnection *bus;$/;"	v	file:
buttons	notify.h	/^	GList *buttons;        \/**< List of buttons to display. *\/$/;"	m	struct:__anon115	access:public
byte_arrays_equal	certificate.c	/^byte_arrays_equal(const GByteArray *array1, const GByteArray *array2)$/;"	f	file:	signature:(const GByteArray *array1, const GByteArray *array2)
bytes_remaining	ft.h	/^	size_t bytes_remaining;       \/**< The number of bytes remaining.      *\/$/;"	m	struct:_PurpleXfer	access:public
bytes_sent	ft.h	/^	size_t bytes_sent;            \/**< The number of bytes sent.           *\/$/;"	m	struct:_PurpleXfer	access:public
cache_dir	buddyicon.c	/^static char       *cache_dir     = NULL;$/;"	v	file:
calc_resp	ntlm.c	/^calc_resp(guint8 *keys, const guint8 *plaintext, unsigned char *results)$/;"	f	file:	signature:(guint8 *keys, const guint8 *plaintext, unsigned char *results)
call_callback	stun.c	/^static gboolean call_callback(gpointer data) {$/;"	f	file:	signature:(gpointer data)
callback	dnsquery.c	/^	PurpleDnsQueryConnectFunction callback;$/;"	m	struct:_PurpleDnsQueryData	file:	access:public
callback	notify.h	/^	PurpleNotifySearchResultsCallback callback; \/**< Function to be called when clicked. *\/$/;"	m	struct:__anon118	access:public
callback	plugin.h	/^	void (*callback)(PurplePluginAction *);$/;"	m	struct:_PurplePluginAction	access:public
callback	util.c	/^	PurpleUtilFetchUrlCallback callback;$/;"	m	struct:_PurpleUtilFetchUrlData	file:	access:public
callback	util.h	/^	PurpleCallback callback;$/;"	m	struct:_PurpleMenuAction	access:public
callbacks	prefs.c	/^	GSList *callbacks;$/;"	m	struct:purple_pref	file:	access:public
callbacks	stun.c	/^static GSList *callbacks = NULL;$/;"	v	file:
can_receive_file	prpl.h	/^	gboolean (*can_receive_file)(PurpleConnection *, const char *who);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
cancel_local	ft.h	/^	void (*cancel_local)(PurpleXfer *xfer);$/;"	m	struct:__anon24	access:public
cancel_recv	ft.h	/^		void (*cancel_recv)(PurpleXfer *xfer);$/;"	m	struct:_PurpleXfer::__anon25	access:public
cancel_recv_cb	ft.c	/^cancel_recv_cb(PurpleXfer *xfer)$/;"	f	file:	signature:(PurpleXfer *xfer)
cancel_remote	ft.h	/^	void (*cancel_remote)(PurpleXfer *xfer);$/;"	m	struct:__anon24	access:public
cancel_send	ft.h	/^		void (*cancel_send)(PurpleXfer *xfer);$/;"	m	struct:_PurpleXfer::__anon25	access:public
candidate_from_fs	media/backend-fs2.c	/^candidate_from_fs(FsCandidate *fscandidate)$/;"	f	file:	signature:(FsCandidate *fscandidate)
candidate_list_from_fs	media/backend-fs2.c	/^candidate_list_from_fs(GList *candidates)$/;"	f	file:	signature:(GList *candidates)
candidate_list_to_fs	media/backend-fs2.c	/^candidate_list_to_fs(GList *candidates)$/;"	f	file:	signature:(GList *candidates)
candidate_to_fs	media/backend-fs2.c	/^candidate_to_fs(PurpleMediaCandidate *candidate)$/;"	f	file:	signature:(PurpleMediaCandidate *candidate)
candidates_prepared	media.c	/^	gboolean candidates_prepared;$/;"	m	struct:_PurpleMediaStream	file:	access:public
cannonize	desktopitem.c	/^cannonize (const char *key, const char *value)$/;"	f	file:	signature:(const char *key, const char *value)
cb	certificate.h	/^	PurpleCertificateVerifiedCallback cb;$/;"	m	struct:_PurpleCertificateVerificationRequest	access:public
cb	dnssrv.c	/^	} cb;$/;"	m	struct:_PurpleSrvTxtQueryData	typeref:union:_PurpleSrvTxtQueryData::__anon90	file:	access:public
cb	network.c	/^	PurpleNetworkListenCallback cb;$/;"	m	struct:_PurpleNetworkListenData	file:	access:public
cb	notify.c	/^	PurpleNotifyCloseCallback cb;$/;"	m	struct:__anon135	file:	access:public
cb	pounce.c	/^	PurplePounceCb cb;$/;"	m	struct:__anon9	file:	access:public
cb	signals.c	/^	PurpleCallback cb;$/;"	m	struct:__anon102	file:	access:public
cb	upnp.c	/^	PurpleUPnPCallback cb;$/;"	m	struct:_UPnPMappingAddRemove	file:	access:public
cb_data	certificate.h	/^	gpointer cb_data;$/;"	m	struct:_PurpleCertificateVerificationRequest	access:public
cb_data	network.c	/^	gpointer cb_data;$/;"	m	struct:_PurpleNetworkListenData	file:	access:public
cb_data	upnp.c	/^	gpointer cb_data;$/;"	m	struct:_UPnPMappingAddRemove	file:	access:public
cb_user_data	notify.c	/^	gpointer cb_user_data;$/;"	m	struct:__anon135	file:	access:public
cert_chain	certificate.h	/^	GList *cert_chain;$/;"	m	struct:_PurpleCertificateVerificationRequest	access:public
cert_in_pool	certificate.h	/^	gboolean (* cert_in_pool)(const gchar *id);$/;"	m	struct:_PurpleCertificatePool	access:public
cert_pools	certificate.c	/^static GList *cert_pools = NULL;$/;"	v	file:
cert_schemes	certificate.c	/^static GList *cert_schemes = NULL;$/;"	v	file:
cert_verifiers	certificate.c	/^static GList *cert_verifiers = NULL;$/;"	v	file:
change_passwd	prpl.h	/^	void (*change_passwd)(PurpleConnection *, const char *old_pass,$/;"	m	struct:_PurplePluginProtocolInfo	access:public
change_password_cb	account.c	/^change_password_cb(PurpleAccount *account, PurpleRequestFields *fields)$/;"	f	file:	signature:(PurpleAccount *account, PurpleRequestFields *fields)
channels	media/codec.c	/^	guint channels;$/;"	m	struct:_PurpleMediaCodecPrivate	file:	access:public
char_data	value.h	/^		char char_data;$/;"	m	union:__anon18::__anon19	access:public
chat	conversation.h	/^		PurpleConvChat *chat;     \/**< Chat-specific data.                *\/$/;"	m	union:_PurpleConversation::__anon61	access:public
chat	status.c	/^		} chat;$/;"	m	union:_PurplePresence::__anon34	typeref:struct:_PurplePresence::__anon34::__anon35	file:	access:public
chat_add_users	conversation.h	/^	void (*chat_add_users)(PurpleConversation *conv,$/;"	m	struct:_PurpleConversationUiOps	access:public
chat_component_to_xmlnode	blist.c	/^chat_component_to_xmlnode(gpointer key, gpointer value, gpointer user_data)$/;"	f	file:	signature:(gpointer key, gpointer value, gpointer user_data)
chat_info	prpl.h	/^	GList *(*chat_info)(PurpleConnection *);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
chat_info_defaults	prpl.h	/^	GHashTable *(*chat_info_defaults)(PurpleConnection *, const char *chat_name);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
chat_invite	prpl.h	/^	void (*chat_invite)(PurpleConnection *, int id,$/;"	m	struct:_PurplePluginProtocolInfo	access:public
chat_invite_accept	server.c	/^static void chat_invite_accept(struct chat_invite_data *cid)$/;"	f	file:	signature:(struct chat_invite_data *cid)
chat_invite_data	server.c	/^struct chat_invite_data {$/;"	s	file:
chat_invite_data::components	server.c	/^	GHashTable *components;$/;"	m	struct:chat_invite_data	file:	access:public
chat_invite_data::gc	server.c	/^	PurpleConnection *gc;$/;"	m	struct:chat_invite_data	file:	access:public
chat_invite_data_free	server.c	/^static void chat_invite_data_free(struct chat_invite_data *cid)$/;"	f	file:	signature:(struct chat_invite_data *cid)
chat_invite_reject	server.c	/^static void chat_invite_reject(struct chat_invite_data *cid)$/;"	f	file:	signature:(struct chat_invite_data *cid)
chat_leave	prpl.h	/^	void (*chat_leave)(PurpleConnection *, int id);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
chat_remove_users	conversation.h	/^	void (*chat_remove_users)(PurpleConversation *conv, GList *users);$/;"	m	struct:_PurpleConversationUiOps	access:public
chat_rename_user	conversation.h	/^	void (*chat_rename_user)(PurpleConversation *conv, const char *old_name,$/;"	m	struct:_PurpleConversationUiOps	access:public
chat_send	prpl.h	/^	int  (*chat_send)(PurpleConnection *, int id, const char *message, PurpleMessageFlags flags);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
chat_to_xmlnode	blist.c	/^chat_to_xmlnode(PurpleBlistNode *cnode)$/;"	f	file:	signature:(PurpleBlistNode *cnode)
chat_update_user	conversation.h	/^	void (*chat_update_user)(PurpleConversation *conv, const char *user);$/;"	m	struct:_PurpleConversationUiOps	access:public
chat_whisper	prpl.h	/^	void (*chat_whisper)(PurpleConnection *, int id,$/;"	m	struct:_PurplePluginProtocolInfo	access:public
chats	conversation.c	/^static GList *chats = NULL;$/;"	v	file:
check_idleness	idle.c	/^check_idleness(void)$/;"	f	file:	signature:(void)
check_idleness_timer	idle.c	/^check_idleness_timer(void)$/;"	f	file:	signature:(void)
check_locale	desktopitem.c	/^check_locale (const char *locale)$/;"	f	file:	signature:(const char *locale)
check_subject_name	certificate.h	/^	gboolean (* check_subject_name)(PurpleCertificate *crt, const gchar *name);$/;"	m	struct:_PurpleCertificateScheme	access:public
checksum	buddyicon.c	/^	char *checksum;            \/**< The protocol checksum.               *\/$/;"	m	struct:_PurpleBuddyIcon	file:	access:public
checksum	smiley.c	/^	char *checksum;                \/**< The smiley checksum.        *\/$/;"	m	struct:_PurpleSmiley	file:	access:public
child	blist.h	/^	PurpleBlistNode *child;               \/**< The child of this node         *\/$/;"	m	struct:_PurpleBlistNode	access:public
child	proxy.c	/^	PurpleProxyConnectData *child;$/;"	m	struct:_PurpleProxyConnectData	file:	access:public
child	xmlnode.h	/^	xmlnode *child;             \/**< The child node or @c NULL.*\/$/;"	m	struct:_xmlnode	access:public
children	util.h	/^	GList *children;$/;"	m	struct:_PurpleMenuAction	access:public
choice	request.h	/^		} choice;$/;"	m	union:_PurpleRequestField::__anon140	typeref:struct:_PurpleRequestField::__anon140::__anon144	access:public
choices	pluginpref.c	/^	GList *choices;$/;"	m	struct:_PurplePluginPref	file:	access:public
chunked	util.c	/^	gboolean chunked;$/;"	m	struct:_PurpleUtilFetchUrlData	file:	access:public
cipher	cipher.c	/^	PurpleCipher *cipher; \/**< Cipher this context is under *\/$/;"	m	struct:_PurpleCipherContext	file:	access:public
ciphers	cipher.c	/^static GList *ciphers = NULL;$/;"	v	file:
clean_connect	proxy.c	/^clean_connect(gpointer data)$/;"	f	file:	signature:(gpointer data)
clear	whiteboard.h	/^	void (*clear)(PurpleWhiteboard *wb);                                   \/**< clear function *\/$/;"	m	struct:_PurpleWhiteboardPrplOps	access:public
clear	whiteboard.h	/^	void (*clear)(PurpleWhiteboard *wb);                                 \/**< clear function *\/$/;"	m	struct:_PurpleWhiteboardUiOps	access:public
clock_rate	media/codec.c	/^	guint clock_rate;$/;"	m	struct:_PurpleMediaCodecPrivate	file:	access:public
close	prpl.h	/^	void (*close)(PurpleConnection *);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
close	sslconn.h	/^	void (*close)(PurpleSslConnection *gsc);$/;"	m	struct:__anon99	access:public
close_account_request	account.h	/^	void (*close_account_request)(void *ui_handle);$/;"	m	struct:_PurpleAccountUiOps	access:public
close_notify	notify.h	/^	void (*close_notify)(PurpleNotifyType type, void *ui_handle);$/;"	m	struct:__anon119	access:public
close_request	request.h	/^	void (*close_request)(PurpleRequestType type, void *ui_handle);$/;"	m	struct:__anon148	access:public
close_stun_conn	stun.c	/^static void close_stun_conn(struct stun_conn *sc) {$/;"	f	file:	signature:(struct stun_conn *sc)
cmd	cmds.c	/^	gchar *cmd;$/;"	m	struct:_PurpleCmd	file:	access:public
cmds	cmds.c	/^static GList *cmds = NULL;$/;"	v	file:
cmds_compare_func	cmds.c	/^static gint cmds_compare_func(const PurpleCmd *a, const PurpleCmd *b)$/;"	f	file:	signature:(const PurpleCmd *a, const PurpleCmd *b)
codec_from_fs	media/backend-fs2.c	/^codec_from_fs(const FsCodec *codec)$/;"	f	file:	signature:(const FsCodec *codec)
codec_list_from_fs	media/backend-fs2.c	/^codec_list_from_fs(GList *codecs)$/;"	f	file:	signature:(GList *codecs)
codec_list_to_fs	media/backend-fs2.c	/^codec_list_to_fs(GList *codecs)$/;"	f	file:	signature:(GList *codecs)
codec_to_fs	media/backend-fs2.c	/^codec_to_fs(const PurpleMediaCodec *codec)$/;"	f	file:	signature:(const PurpleMediaCodec *codec)
codecs_ready	media/backend-iface.h	/^	gboolean (*codecs_ready) (PurpleMediaBackend *self,$/;"	m	struct:_PurpleMediaBackendIface	access:public
columns	notify.h	/^	GList *columns;        \/**< List of the search column objects. *\/$/;"	m	struct:__anon115	access:public
command_count	plugin.c	/^	size_t command_count;$/;"	m	struct:__anon10	file:	access:public
commands	plugin.c	/^	GHashTable *commands;$/;"	m	struct:__anon10	file:	access:public
common_send	conversation.c	/^common_send(PurpleConversation *conv, const char *message, PurpleMessageFlags msgflags)$/;"	f	file:	signature:(PurpleConversation *conv, const char *message, PurpleMessageFlags msgflags)
compare_plugins	plugin.c	/^compare_plugins(gconstpointer a, gconstpointer b)$/;"	f	file:	signature:(gconstpointer a, gconstpointer b)
compare_prpl	plugin.c	/^compare_prpl(PurplePlugin *a, PurplePlugin *b)$/;"	f	file:	signature:(PurplePlugin *a, PurplePlugin *b)
component_id	media/candidate.c	/^	guint component_id;$/;"	m	struct:_PurpleMediaCandidatePrivate	file:	access:public
components	blist.h	/^	GHashTable *components;  \/**< the stuff the protocol needs to know to join the chat *\/$/;"	m	struct:_PurpleChat	access:public
components	server.c	/^	GHashTable *components;$/;"	m	struct:chat_invite_data	file:	access:public
confbin	media/backend-fs2.c	/^	GstElement *confbin;$/;"	m	struct:_PurpleMediaBackendFs2Private	file:	access:public
conference	media/backend-fs2.c	/^	FsConference *conference;$/;"	m	struct:_PurpleMediaBackendFs2Private	file:	access:public
conference_type	media.c	/^	gchar *conference_type;$/;"	m	struct:_PurpleMediaPrivate	file:	access:public
conference_type	media/backend-fs2.c	/^	gchar *conference_type;$/;"	m	struct:_PurpleMediaBackendFs2Private	file:	access:public
connect_cb	ft.c	/^connect_cb(gpointer data, gint source, const gchar *error_message)$/;"	f	file:	signature:(gpointer data, gint source, const gchar *error_message)
connect_cb	proxy.c	/^	PurpleProxyConnectFunction connect_cb;$/;"	m	struct:_PurpleProxyConnectData	file:	access:public
connect_cb	sslconn.h	/^	PurpleSslInputFunction connect_cb;$/;"	m	struct:_PurpleSslConnection	access:public
connect_cb_data	sslconn.h	/^	void *connect_cb_data;$/;"	m	struct:_PurpleSslConnection	access:public
connect_data	sslconn.h	/^	PurpleProxyConnectData *connect_data;$/;"	m	struct:_PurpleSslConnection	access:public
connect_data	util.c	/^	PurpleProxyConnectData *connect_data;$/;"	m	struct:_PurpleUtilFetchUrlData	file:	access:public
connect_progress	connection.h	/^	void (*connect_progress)(PurpleConnection *gc,$/;"	m	struct:__anon75	access:public
connected	connection.h	/^	void (*connected)(PurpleConnection *gc);$/;"	m	struct:__anon75	access:public
connected_cb_id	media/backend-fs2.c	/^	guint connected_cb_id;$/;"	m	struct:_PurpleMediaBackendFs2Stream	file:	access:public
connectfunc	sslconn.h	/^	void (*connectfunc)(PurpleSslConnection *gsc);$/;"	m	struct:__anon99	access:public
connection_error_cb	account.c	/^connection_error_cb(PurpleConnection *gc,$/;"	f	file:	signature:(PurpleConnection *gc, PurpleConnectionError type, const gchar *description, gpointer unused)
connection_host_resolved	proxy.c	/^connection_host_resolved(GSList *hosts, gpointer data,$/;"	f	file:	signature:(GSList *hosts, gpointer data, const char *error_message)
connection_ui_ops	connection.c	/^static PurpleConnectionUiOps *connection_ui_ops = NULL;$/;"	v	file:
connections	connection.c	/^static GList *connections = NULL;$/;"	v	file:
connections_connecting	connection.c	/^static GList *connections_connecting = NULL;$/;"	v	file:
connections_handle	connection.c	/^static int connections_handle;$/;"	v	file:
contact_to_xmlnode	blist.c	/^contact_to_xmlnode(PurpleBlistNode *cnode)$/;"	f	file:	signature:(PurpleBlistNode *cnode)
content	dnssrv.h	/^	char *content;$/;"	m	struct:_PurpleTxtResponse	access:public
content_is_chunked	util.c	/^content_is_chunked(const char *data, size_t data_len)$/;"	f	file:	signature:(const char *data, size_t data_len)
context	ntlm.c	/^	guint8  context[8];$/;"	m	struct:type2_message	file:	access:public
context	plugin.h	/^	gpointer context;$/;"	m	struct:_PurplePluginAction	access:public
context	status.c	/^	PurplePresenceContext context;$/;"	m	struct:_PurplePresence	file:	access:public
control_info	upnp.c	/^static PurpleUPnPControlInfo control_info = {$/;"	v	file:
control_url	upnp.c	/^	gchar* control_url;$/;"	m	struct:__anon63	file:	access:public
conv	conversation.h	/^	PurpleConversation *conv;            \/**< The parent conversation.     *\/$/;"	m	struct:_PurpleConvIm	access:public
conv	conversation.h	/^	PurpleConversation *conv;          \/**< The parent conversation.      *\/$/;"	m	struct:_PurpleConvChat	access:public
conv	conversation.h	/^	PurpleConversation *conv;  \/**< @since 2.3.0 *\/$/;"	m	struct:_PurpleConvMessage	access:public
conv	log.h	/^	PurpleConversation *conv;               \/**< The conversation being logged *\/$/;"	m	struct:_PurpleLog	access:public
conv	status.c	/^			PurpleConversation *conv;$/;"	m	struct:_PurplePresence::__anon34::__anon35	file:	access:public
conversation_cache	conversation.c	/^static GHashTable *conversation_cache = NULL;$/;"	v	file:
conversations	conversation.c	/^static GList *conversations = NULL;$/;"	v	file:
convert_image_tags	log.c	/^convert_image_tags(const PurpleLog *log, const char *msg)$/;"	f	file:	signature:(const PurpleLog *log, const char *msg)
convo_closed	prpl.h	/^	void (*convo_closed)(PurpleConnection *, const char *who);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
cope_with_gdb_brokenness	dnsquery.c	/^cope_with_gdb_brokenness(void)$/;"	f	file:	signature:(void)
copy_certificate	certificate.h	/^	PurpleCertificate * (* copy_certificate)(PurpleCertificate *crt);$/;"	m	struct:_PurpleCertificateScheme	access:public
copy_string_hash	desktopitem.c	/^copy_string_hash (gpointer key, gpointer value, gpointer user_data)$/;"	f	file:	signature:(gpointer key, gpointer value, gpointer user_data)
create	log.h	/^	void (*create)(PurpleLog *log);$/;"	m	struct:_PurpleLogLogger	access:public
create	mediamanager.c	/^	PurpleMediaElementCreateCallback create;$/;"	m	struct:_PurpleMediaElementInfoPrivate	file:	access:public
create	roomlist.h	/^	void (*create)(PurpleRoomlist *list); \/**< A new list was created. *\/$/;"	m	struct:_PurpleRoomlistUiOps	access:public
create	whiteboard.h	/^	void (*create)(PurpleWhiteboard *wb);                                 \/**< create function *\/$/;"	m	struct:_PurpleWhiteboardUiOps	access:public
create_conversation	conversation.h	/^	void (*create_conversation)(PurpleConversation *conv);$/;"	m	struct:_PurpleConversationUiOps	access:public
create_participant	media/backend-fs2.c	/^create_participant(PurpleMediaBackendFs2 *self, const gchar *name)$/;"	f	file:	signature:(PurpleMediaBackendFs2 *self, const gchar *name)
create_session	media/backend-fs2.c	/^create_session(PurpleMediaBackendFs2 *self, const gchar *sess_id,$/;"	f	file:	signature:(PurpleMediaBackendFs2 *self, const gchar *sess_id, PurpleMediaSessionType type, gboolean initiator, const gchar *transmitter)
create_src	media/backend-fs2.c	/^create_src(PurpleMediaBackendFs2 *self, const gchar *sess_id,$/;"	f	file:	signature:(PurpleMediaBackendFs2 *self, const gchar *sess_id, PurpleMediaSessionType type)
create_stream	media/backend-fs2.c	/^create_stream(PurpleMediaBackendFs2 *self,$/;"	f	file:	signature:(PurpleMediaBackendFs2 *self, const gchar *sess_id, const gchar *who, PurpleMediaSessionType type, gboolean initiator, const gchar *transmitter, guint num_params, GParameter *params)
creation_time	savedstatuses.c	/^	time_t creation_time;$/;"	m	struct:_PurpleSavedStatus	file:	access:public
creation_times	savedstatuses.c	/^static GHashTable *creation_times;$/;"	v	file:
crt	certificate.c	/^	PurpleCertificate *crt;$/;"	m	struct:__anon13	file:	access:public
current	xmlnode.c	/^	xmlnode *current;$/;"	m	struct:_xmlnode_parser_data	file:	access:public
current_buffer_size	ft.h	/^	size_t current_buffer_size;   \/**< This gradually increases for fast$/;"	m	struct:_PurpleXfer	access:public
current_error	account.c	/^	PurpleConnectionErrorInfo *current_error;$/;"	m	struct:__anon1	file:	access:public
current_error_to_xmlnode	account.c	/^current_error_to_xmlnode(PurpleConnectionErrorInfo *err)$/;"	f	file:	signature:(PurpleConnectionErrorInfo *err)
current_logger	log.c	/^static PurpleLogLogger *current_logger = NULL;$/;"	v	file:
current_network_count	network.c	/^static int current_network_count;$/;"	v	file:
currentsize	blist.h	/^	int currentsize;		       \/**< The number of chats and contacts in this group corresponding to online accounts *\/$/;"	m	struct:_PurpleGroup	access:public
currentsize	blist.h	/^	int currentsize;	    \/**< The number of buddies in this contact corresponding to online accounts *\/$/;"	m	struct:_PurpleContact	access:public
custom_smiley_add	conversation.h	/^	gboolean (*custom_smiley_add)(PurpleConversation *conv, const char *smile, gboolean remote);$/;"	m	struct:_PurpleConversationUiOps	access:public
custom_smiley_close	conversation.h	/^	void (*custom_smiley_close)(PurpleConversation *conv, const char *smile);$/;"	m	struct:_PurpleConversationUiOps	access:public
custom_smiley_write	conversation.h	/^	void (*custom_smiley_write)(PurpleConversation *conv, const char *smile,$/;"	m	struct:_PurpleConversationUiOps	access:public
custom_user_dir	util.c	/^static char *custom_user_dir = NULL;$/;"	v	file:
data	certificate.h	/^	gpointer data;$/;"	m	struct:_PurpleCertificate	access:public
data	certificate.h	/^	gpointer data;$/;"	m	struct:_PurpleCertificatePool	access:public
data	certificate.h	/^	gpointer data;$/;"	m	struct:_PurpleCertificateVerificationRequest	access:public
data	cipher.c	/^	gpointer data;        \/**< Internal cipher state data *\/$/;"	m	struct:_PurpleCipherContext	file:	access:public
data	cmds.c	/^	void *data;$/;"	m	struct:_PurpleCmd	file:	access:public
data	conversation.h	/^	GHashTable *data;                        \/**< Plugin-specific data.   *\/$/;"	m	struct:_PurpleConversation	access:public
data	dnsquery.c	/^	gpointer data;$/;"	m	struct:_PurpleDnsQueryData	file:	access:public
data	ft.h	/^	void *data;                       \/**< prpl-specific data.     *\/$/;"	m	struct:_PurpleXfer	access:public
data	imgstore.c	/^	gpointer data;   \/**< The image data. *\/$/;"	m	struct:_PurpleStoredImage	file:	access:public
data	mime.c	/^	GString *data;$/;"	m	struct:_PurpleMimePart	file:	access:public
data	pounce.h	/^	void *data;                   \/**< Pounce-specific data.      *\/$/;"	m	struct:_PurplePounce	access:public
data	prefs.c	/^	gpointer data;$/;"	m	struct:pref_cb	file:	access:public
data	proxy.c	/^	gpointer data;$/;"	m	struct:_PurpleProxyConnectData	file:	access:public
data	signals.c	/^	void *data;$/;"	m	struct:__anon102	file:	access:public
data	util.h	/^	gpointer data;$/;"	m	struct:_PurpleMenuAction	access:public
data	value.h	/^	} data;$/;"	m	struct:__anon18	typeref:union:__anon18::__anon19	access:public
data	xmlnode.h	/^	char *data;			\/**< The data for the node. *\/$/;"	m	struct:_xmlnode	access:public
data_len	util.c	/^	unsigned long data_len;$/;"	m	struct:_PurpleUtilFetchUrlData	file:	access:public
data_not_sent	ft.h	/^	void (*data_not_sent)(PurpleXfer *xfer, const guchar *buffer, gsize size);$/;"	m	struct:__anon24	access:public
data_sz	xmlnode.h	/^	size_t data_sz;			\/**< The size of the data. *\/$/;"	m	struct:_xmlnode	access:public
dbus_gettext	dbus-server.c	/^dbus_gettext(const char **ptr)$/;"	f	file:	signature:(const char **ptr)
dbus_proxy	network.c	/^static DBusGProxy *dbus_proxy = NULL;$/;"	v	file:
dbus_request_name_reply	dbus-server.c	/^static int dbus_request_name_reply = DBUS_REQUEST_NAME_REPLY_PRIMARY_OWNER;$/;"	v	file:
debug_enabled	debug.c	/^static gboolean debug_enabled = FALSE;$/;"	v	file:
debug_ui_init	core.h	/^	void (*debug_ui_init)(void);$/;"	m	struct:__anon21	access:public
debug_ui_ops	debug.c	/^static PurpleDebugUiOps *debug_ui_ops = NULL;$/;"	v	file:
debug_unsafe	debug.c	/^static gboolean debug_unsafe = FALSE;$/;"	v	file:
debug_verbose	debug.c	/^static gboolean debug_verbose = FALSE;$/;"	v	file:
decode_string	desktopitem.c	/^decode_string (const char *value, Encoding encoding, const char *locale)$/;"	f	file:	signature:(const char *value, Encoding encoding, const char *locale)
decode_string_and_dup	desktopitem.c	/^decode_string_and_dup (const char *s)$/;"	f	file:	signature:(const char *s)
decrypt	cipher.h	/^	int (*decrypt)(PurpleCipherContext *context, const guchar data[], size_t len, guchar output[], size_t *outlen);$/;"	m	struct:_PurpleCipherOps	access:public
default_account	request.h	/^			PurpleAccount *default_account;$/;"	m	struct:_PurpleRequestField::__anon140::__anon146	access:public
default_gw	nat-pmp.c	/^default_gw()$/;"	f	file:
default_ops	conversation.c	/^static PurpleConversationUiOps *default_ops = NULL;$/;"	v	file:
default_value	accountopt.h	/^	char *default_value;    \/**< The default value.                     *\/$/;"	m	struct:__anon67	access:public
default_value	accountopt.h	/^	} default_value;$/;"	m	struct:__anon65	typeref:union:__anon65::__anon66	access:public
default_value	request.h	/^			char *default_value;$/;"	m	struct:_PurpleRequestField::__anon140::__anon141	access:public
default_value	request.h	/^			gboolean default_value;$/;"	m	struct:_PurpleRequestField::__anon140::__anon143	access:public
default_value	request.h	/^			int default_value;$/;"	m	struct:_PurpleRequestField::__anon140::__anon142	access:public
default_value	request.h	/^			int default_value;$/;"	m	struct:_PurpleRequestField::__anon140::__anon144	access:public
delete_buddy_icon_settings	buddyicon.c	/^delete_buddy_icon_settings(PurpleBlistNode *node, const char *setting_name)$/;"	f	file:	signature:(PurpleBlistNode *node, const char *setting_name)
delete_buddy_icon_settings	buddyicon.c	/^static void delete_buddy_icon_settings(PurpleBlistNode *node, const char *setting_name);$/;"	p	file:	signature:(PurpleBlistNode *node, const char *setting_name)
delete_cert	certificate.h	/^	gboolean (* delete_cert)(const gchar *id);$/;"	m	struct:_PurpleCertificatePool	access:public
delete_setting	account.c	/^delete_setting(void *data)$/;"	f	file:	signature:(void *data)
deny	account.h	/^	GSList *deny;               \/**< Deny list.                             *\/$/;"	m	struct:_PurpleAccount	access:public
deny_added	privacy.h	/^	void (*deny_added)(PurpleAccount *account, const char *name);$/;"	m	struct:__anon5	access:public
deny_cb	account.c	/^	PurpleAccountRequestAuthorizationCb deny_cb;$/;"	m	struct:__anon4	file:	access:public
deny_removed	privacy.h	/^	void (*deny_removed)(PurpleAccount *account, const char *name);$/;"	m	struct:__anon5	access:public
dependencies	plugin.h	/^	GList *dependencies;$/;"	m	struct:_PurplePluginInfo	access:public
dependent_plugins	plugin.h	/^	GList *dependent_plugins;              \/**< Plugins depending on this *\/$/;"	m	struct:_PurplePlugin	access:public
des_ecb_encrypt	ntlm.c	/^des_ecb_encrypt(const guint8 *plaintext, guint8 *result, const guint8 *key)$/;"	f	file:	signature:(const guint8 *plaintext, guint8 *result, const guint8 *key)
description	connection.h	/^	char *description;$/;"	m	struct:__anon74	access:public
description	plugin.h	/^	char *description;$/;"	m	struct:_PurplePluginInfo	access:public
description	status.h	/^	const char *description;$/;"	m	struct:_PurpleMood	access:public
description	theme.c	/^	gchar *description;$/;"	m	struct:__anon26	file:	access:public
dest_fp	ft.h	/^	FILE *dest_fp;                \/**< The destination file pointer.       *\/$/;"	m	struct:_PurpleXfer	access:public
dest_tag	util.c	/^	char *dest_tag;$/;"	m	struct:purple_parse_tag	file:	access:public
destroy	blist.h	/^	void (*destroy)(PurpleBuddyList *list);  \/**< When the list is destroyed, this is called to destroy the UI. *\/$/;"	m	struct:_PurpleBlistUiOps	access:public
destroy	dnsquery.h	/^	void (*destroy)(PurpleDnsQueryData *query_data);$/;"	m	struct:__anon78	access:public
destroy	dnssrv.h	/^	void (*destroy)(PurpleSrvTxtQueryData *query_data);$/;"	m	struct:__anon81	access:public
destroy	ft.h	/^	void (*destroy)(PurpleXfer *xfer);$/;"	m	struct:__anon24	access:public
destroy	plugin.h	/^	void     (*destroy)(PurplePlugin *plugin);$/;"	m	struct:_PurplePluginLoaderInfo	access:public
destroy	plugin.h	/^	void (*destroy)(PurplePlugin *plugin);$/;"	m	struct:_PurplePluginInfo	access:public
destroy	roomlist.h	/^	void (*destroy)(PurpleRoomlist *list); \/**< We're destroying list. *\/$/;"	m	struct:_PurpleRoomlistUiOps	access:public
destroy	whiteboard.h	/^	void (*destroy)(PurpleWhiteboard *wb);                               \/**< destory function *\/$/;"	m	struct:_PurpleWhiteboardUiOps	access:public
destroy_certificate	certificate.h	/^	void (* destroy_certificate)(PurpleCertificate * crt);$/;"	m	struct:_PurpleCertificateScheme	access:public
destroy_conversation	conversation.h	/^	void (*destroy_conversation)(PurpleConversation *conv);$/;"	m	struct:_PurpleConversationUiOps	access:public
destroy_instance_data	signals.c	/^destroy_instance_data(PurpleInstanceData *instance_data)$/;"	f	file:	signature:(PurpleInstanceData *instance_data)
destroy_ipc_info	plugin.c	/^destroy_ipc_info(void *data)$/;"	f	file:	signature:(void *data)
destroy_request	certificate.h	/^	void (* destroy_request)(PurpleCertificateVerificationRequest *vrq);$/;"	m	struct:_PurpleCertificateVerifier	access:public
destroy_signal_data	signals.c	/^destroy_signal_data(PurpleSignalData *signal_data)$/;"	f	file:	signature:(PurpleSignalData *signal_data)
digest	cipher.h	/^	gboolean (*digest)(PurpleCipherContext *context, size_t in_len, guchar digest[], size_t *out_len);$/;"	m	struct:_PurpleCipherOps	access:public
dir	theme.c	/^	gchar *dir;$/;"	m	struct:__anon26	file:	access:public
disco_callback_helper	prefs.c	/^disco_callback_helper(struct purple_pref *pref, guint callback_id)$/;"	f	file:	signature:(struct purple_pref *pref, guint callback_id)
disco_callback_helper_handle	prefs.c	/^disco_callback_helper_handle(struct purple_pref *pref, void *handle)$/;"	f	file:	signature:(struct purple_pref *pref, void *handle)
disconnect_handle_from_instance	signals.c	/^disconnect_handle_from_instance(void *instance,$/;"	f	file:	signature:(void *instance, PurpleInstanceData *instance_data, void *handle)
disconnect_handle_from_signals	signals.c	/^disconnect_handle_from_signals(const char *signal,$/;"	f	file:	signature:(const char *signal, PurpleSignalData *signal_data, void *handle)
disconnect_timeout	connection.h	/^	guint disconnect_timeout;    \/**< Timer used for nasty stack tricks  *\/$/;"	m	struct:_PurpleConnection	access:public
disconnected	connection.h	/^	void (*disconnected)(PurpleConnection *gc);$/;"	m	struct:__anon75	access:public
disconnecting	account.h	/^	gboolean disconnecting;     \/**< The account is currently disconnecting *\/$/;"	m	struct:_PurpleAccount	access:public
discovery_callbacks	upnp.c	/^static GSList *discovery_callbacks = NULL;$/;"	v	file:
display_name	connection.h	/^	char *display_name;          \/**< How you appear to other people.    *\/$/;"	m	struct:_PurpleConnection	access:public
ditem_load	desktopitem.c	/^ditem_load (FILE *df,$/;"	f	file:	signature:(FILE *df, gboolean no_translations, const char *uri)
dn	certificate.c	/^	gchar *dn;$/;"	m	struct:__anon13	file:	access:public
dngettext	internal.h	64;"	d
dns_main_thread_cb	dnsquery.c	/^dns_main_thread_cb(gpointer data)$/;"	f	file:	signature:(gpointer data)
dns_params_t	dnsquery.c	/^} dns_params_t;$/;"	t	typeref:struct:__anon6	file:
dns_pid	dnsquery.c	/^	pid_t dns_pid;$/;"	m	struct:_PurpleDnsQueryResolverProcess	file:	access:public
dns_query_ui_ops	dnsquery.c	/^static PurpleDnsQueryUiOps *dns_query_ui_ops = NULL;$/;"	v	file:
dns_str_is_ascii	dnsquery.c	/^dns_str_is_ascii(const char *name)$/;"	f	file:	signature:(const char *name)
dns_str_is_ascii	dnssrv.c	/^dns_str_is_ascii(const char *name)$/;"	f	file:	signature:(const char *name)
dns_thread	dnsquery.c	/^dns_thread(gpointer data)$/;"	f	file:	signature:(gpointer data)
do_callbacks	prefs.c	/^do_callbacks(const char* name, struct purple_pref *pref)$/;"	f	file:	signature:(const char* name, struct purple_pref *pref)
do_callbacks	stun.c	/^static void do_callbacks(void) {$/;"	f	file:	signature:(void)
do_port_mapping_cb	upnp.c	/^do_port_mapping_cb(gboolean has_control_mapping, gpointer data)$/;"	f	file:	signature:(gboolean has_control_mapping, gpointer data)
do_prpl_change_account_status	prpl.c	/^do_prpl_change_account_status(PurpleAccount *account,$/;"	f	file:	signature:(PurpleAccount *account, PurpleStatus *old_status, PurpleStatus *new_status)
do_test1	stun.c	/^static void do_test1(PurpleSrvResponse *resp, int results, gpointer sdata) {$/;"	f	file:	signature:(PurpleSrvResponse *resp, int results, gpointer sdata)
do_test2	stun.c	/^static void do_test2(struct stun_conn *sc) {$/;"	f	file:	signature:(struct stun_conn *sc)
do_transfer	ft.c	/^do_transfer(PurpleXfer *xfer)$/;"	f	file:	signature:(PurpleXfer *xfer)
doc	mime.c	/^	struct _PurpleMimeDocument *doc;$/;"	m	struct:_PurpleMimePart	typeref:struct:_PurpleMimePart::_PurpleMimeDocument	file:	access:public
doc_parts_load	mime.c	/^doc_parts_load(PurpleMimeDocument *doc, const char *boundary, const char *buf, gsize len)$/;"	f	file:	signature:(PurpleMimeDocument *doc, const char *boundary, const char *buf, gsize len)
dom_len1	ntlm.c	/^	guint16 dom_len1;        \/* domain string length *\/$/;"	m	struct:type1_message	file:	access:public
dom_len1	ntlm.c	/^	guint16 dom_len1;        \/* domain string length *\/$/;"	m	struct:type3_message	file:	access:public
dom_len2	ntlm.c	/^	guint16 dom_len2;        \/* domain string length *\/$/;"	m	struct:type1_message	file:	access:public
dom_len2	ntlm.c	/^	guint16 dom_len2;        \/* domain string length *\/$/;"	m	struct:type3_message	file:	access:public
dom_off	ntlm.c	/^	guint32 dom_off;         \/* domain string offset (always 0x00000040) *\/$/;"	m	struct:type3_message	file:	access:public
dom_off	ntlm.c	/^	guint32 dom_off;         \/* domain string offset *\/$/;"	m	struct:type1_message	file:	access:public
done_port_mapping_cb	upnp.c	/^done_port_mapping_cb(PurpleUtilFetchUrlData *url_data, gpointer user_data,$/;"	f	file:	signature:(PurpleUtilFetchUrlData *url_data, gpointer user_data, const gchar *httpResponse, gsize len, const gchar *error_message)
draw_line	whiteboard.h	/^	void (*draw_line)(PurpleWhiteboard *wb, int x1, int y1,$/;"	m	struct:_PurpleWhiteboardUiOps	access:public
draw_list	whiteboard.h	/^	GList *draw_list;                \/**< List of drawing elements\/deltas to send *\/$/;"	m	struct:_PurpleWhiteboard	access:public
draw_point	whiteboard.h	/^	void (*draw_point)(PurpleWhiteboard *wb, int x, int y,$/;"	m	struct:_PurpleWhiteboardUiOps	access:public
dup_section	desktopitem.c	/^dup_section (Section *sec)$/;"	f	file:	signature:(Section *sec)
editable	request.h	/^			gboolean editable;$/;"	m	struct:_PurpleRequestField::__anon140::__anon141	access:public
elements	mediamanager.c	/^	GList *elements;$/;"	m	struct:_PurpleMediaManagerPrivate	file:	access:public
empty_to_null	dbus-bindings.h	/^const char* empty_to_null(const char *str);$/;"	p	signature:(const char *str)
empty_to_null	dbus-server.c	/^const char *empty_to_null(const char *str)$/;"	f	signature:(const char *str)
enabled	pounce.c	/^	gboolean enabled;$/;"	m	struct:__anon8	file:	access:public
encoded_text_char_p	util.c	316;"	d	file:
encoding_name	media/codec.c	/^	char *encoding_name;$/;"	m	struct:_PurpleMediaCodecPrivate	file:	access:public
encrypt	cipher.h	/^	int (*encrypt)(PurpleCipherContext *context, const guchar data[], size_t len, guchar output[], size_t *outlen);$/;"	m	struct:_PurpleCipherOps	access:public
end	ft.h	/^		void (*end)(PurpleXfer *xfer);$/;"	m	struct:_PurpleXfer::__anon25	access:public
end	whiteboard.h	/^	void (*end)(PurpleWhiteboard *wb);                                     \/**< end function *\/$/;"	m	struct:_PurpleWhiteboardPrplOps	access:public
end_element_handler	pounce.c	/^end_element_handler(GMarkupParseContext *context, const gchar *element_name,$/;"	f	file:	signature:(GMarkupParseContext *context, const gchar *element_name, gpointer user_data, GError **error)
end_time	ft.h	/^	time_t end_time;              \/**< When the transfer of data ended.    *\/$/;"	m	struct:_PurpleXfer	access:public
enum_data	value.h	/^		int enum_data;$/;"	m	union:__anon18::__anon19	access:public
epoch	nat-pmp.c	/^	guint32		epoch;$/;"	m	struct:_PurplePmpMapResponse	file:	access:public
epoch	nat-pmp.c	/^	guint32		epoch;$/;"	m	struct:__anon39	file:	access:public
error	plugin.h	/^	char *error;$/;"	m	struct:_PurplePlugin	access:public
error	xmlnode.c	/^	gboolean error;$/;"	m	struct:_xmlnode_parser_data	file:	access:public
error_cb	sslconn.h	/^	PurpleSslErrorFunction error_cb;$/;"	m	struct:_PurpleSslConnection	access:public
error_message	dnsquery.c	/^	gchar *error_message;$/;"	m	struct:_PurpleDnsQueryData	file:	access:public
error_message	dnssrv.c	/^	char *error_message;$/;"	m	struct:_PurpleSrvTxtQueryData	file:	access:public
event_probe_cb	media/backend-fs2.c	/^event_probe_cb(GstPad *srcpad, GstEvent *event, gboolean release_pad)$/;"	f	file:	signature:(GstPad *srcpad, GstEvent *event, gboolean release_pad)
event_type	pounce.c	/^	char *event_type;$/;"	m	struct:__anon7	file:	access:public
eventloop_ui_ops	eventloop.c	/^static PurpleEventLoopUiOps *eventloop_ui_ops = NULL;$/;"	v	file:
events	pounce.c	/^	PurplePounceEvent events;$/;"	m	struct:__anon7	file:	access:public
events	pounce.h	/^	PurplePounceEvent events;       \/**< The event(s) to pounce on. *\/$/;"	m	struct:_PurplePounce	access:public
expanded_once	roomlist.h	/^	gboolean expanded_once; \/**< A flag the UI uses to avoid multiple expand prpl cbs. *\/$/;"	m	struct:_PurpleRoomlistRoom	access:public
expire_last_auto_responses	server.c	/^expire_last_auto_responses(gpointer data)$/;"	f	file:	signature:(gpointer data)
export_certificate	certificate.h	/^	gboolean (* export_certificate)(const gchar *filename, PurpleCertificate *crt);$/;"	m	struct:_PurpleCertificateScheme	access:public
extra	plugin.h	/^	void *extra;                           \/**< Plugin-specific data.     *\/$/;"	m	struct:_PurplePlugin	access:public
extra_data	log.h	/^	void *extra_data;$/;"	m	struct:_PurpleLogCommonLoggerData	access:public
extra_info	plugin.h	/^	void *extra_info;$/;"	m	struct:_PurplePluginInfo	access:public
extradata	dnssrv.c	/^	gpointer extradata;$/;"	m	struct:_PurpleSrvTxtQueryData	file:	access:public
exts	plugin.h	/^	GList *exts;$/;"	m	struct:_PurplePluginLoaderInfo	access:public
failure_cb	account.c	/^	gpointer failure_cb;$/;"	m	struct:public_alias_closure	file:	access:public
fakesink	media/backend-fs2.c	/^	GstElement *fakesink;$/;"	m	struct:_PurpleMediaBackendFs2Stream	file:	access:public
fd	ft.h	/^	int fd;                       \/**< The socket file descriptor.         *\/$/;"	m	struct:_PurpleXfer	access:public
fd	proxy.c	/^	int fd;$/;"	m	struct:_PurpleProxyConnectData	file:	access:public
fd	sslconn.h	/^	int fd;$/;"	m	struct:_PurpleSslConnection	access:public
fd	stun.c	/^	int fd;$/;"	m	struct:stun_conn	file:	access:public
fd	upnp.c	/^	int fd;$/;"	m	struct:__anon64	file:	access:public
fd	util.c	/^	int fd;$/;"	m	struct:_PurpleUtilFetchUrlData	file:	access:public
fd_in	dnsquery.c	/^	int fd_in, fd_out;$/;"	m	struct:_PurpleDnsQueryResolverProcess	file:	access:public
fd_in	dnssrv.c	/^	int fd_in, fd_out;$/;"	m	struct:_PurpleSrvTxtQueryData	file:	access:public
fd_out	dnsquery.c	/^	int fd_in, fd_out;$/;"	m	struct:_PurpleDnsQueryResolverProcess	file:	access:public
fd_out	dnssrv.c	/^	int fd_in, fd_out;$/;"	m	struct:_PurpleSrvTxtQueryData	file:	access:public
features	conversation.h	/^	PurpleConnectionFlags features; \/**< The supported features *\/$/;"	m	struct:_PurpleConversation	access:public
field_sep	accountopt.h	/^	char  field_sep;        \/**< The field separator.                   *\/$/;"	m	struct:__anon67	access:public
field_write	mime.c	/^field_write(const char *key, const char *val, GString *str)$/;"	f	file:	signature:(const char *key, const char *val, GString *str)
fields	mime.c	/^	struct mime_fields fields;$/;"	m	struct:_PurpleMimeDocument	typeref:struct:_PurpleMimeDocument::mime_fields	file:	access:public
fields	mime.c	/^	struct mime_fields fields;$/;"	m	struct:_PurpleMimePart	typeref:struct:_PurpleMimePart::mime_fields	file:	access:public
fields	request.h	/^	GHashTable *fields;$/;"	m	struct:__anon138	access:public
fields	request.h	/^	GList *fields;$/;"	m	struct:__anon139	access:public
fields	roomlist.h	/^	GList *fields; \/**< Other fields. *\/$/;"	m	struct:_PurpleRoomlistRoom	access:public
fields	roomlist.h	/^	GList *fields; \/**< The fields. *\/$/;"	m	struct:_PurpleRoomlist	access:public
fields_destroy	mime.c	/^fields_destroy(struct mime_fields *mf)$/;"	f	file:	signature:(struct mime_fields *mf)
fields_get	mime.c	/^fields_get(struct mime_fields *mf, const char *key)$/;"	f	file:	signature:(struct mime_fields *mf, const char *key)
fields_init	mime.c	/^fields_init(struct mime_fields *mf)$/;"	f	file:	signature:(struct mime_fields *mf)
fields_list	request.h	/^	PurpleRequestFields *fields_list;$/;"	m	struct:__anon139	access:public
fields_load	mime.c	/^fields_load(struct mime_fields *mf, char **buf, gsize *len)$/;"	f	file:	signature:(struct mime_fields *mf, char **buf, gsize *len)
fields_loadline	mime.c	/^fields_loadline(struct mime_fields *mf, const char *line, gsize len)$/;"	f	file:	signature:(struct mime_fields *mf, const char *line, gsize len)
fields_set	mime.c	/^fields_set(struct mime_fields *mf, const char *key, const char *val)$/;"	f	file:	signature:(struct mime_fields *mf, const char *key, const char *val)
fields_write	mime.c	/^fields_write(struct mime_fields *mf, GString *str)$/;"	f	file:	signature:(struct mime_fields *mf, GString *str)
file	log.h	/^	FILE *file;$/;"	m	struct:_PurpleLogCommonLoggerData	access:public
filename	ft.h	/^	char *filename;               \/**< The name sent over the network.     *\/$/;"	m	struct:_PurpleXfer	access:public
filename	imgstore.c	/^	char *filename;  \/**< The filename (for the UI) *\/$/;"	m	struct:_PurpleStoredImage	file:	access:public
filter_func	request.h	/^			PurpleFilterAccountFunc filter_func;$/;"	m	struct:_PurpleRequestField::__anon140::__anon146	access:public
finalize	log.h	/^	void (*finalize)(PurpleLog *log);$/;"	m	struct:_PurpleLogLogger	access:public
find_acct_buddies	blist.c	/^static void find_acct_buddies(gpointer key, gpointer value, gpointer data)$/;"	f	file:	signature:(gpointer key, gpointer value, gpointer data)
find_action_data	pounce.c	/^find_action_data(const PurplePounce *pounce, const char *name)$/;"	f	file:	signature:(const PurplePounce *pounce, const char *name)
find_blist_chat	prpl.h	/^	PurpleChat *(*find_blist_chat)(PurpleAccount *account, const char *name);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
find_header_content	util.c	/^find_header_content(const char *data, size_t data_len, const char *header, size_t header_len)$/;"	f	file:	signature:(const char *data, size_t data_len, const char *header, size_t header_len)
find_loader_for_plugin	plugin.c	/^find_loader_for_plugin(const PurplePlugin *plugin)$/;"	f	file:	signature:(const PurplePlugin *plugin)
find_pref	prefs.c	/^purple_pref *find_pref(const char *name)$/;"	f	file:	signature:(const char *name)
find_pref_parent	prefs.c	/^find_pref_parent(const char *name)$/;"	f	file:	signature:(const char *name)
find_section	desktopitem.c	/^find_section (PurpleDesktopItem *item, const char *section)$/;"	f	file:	signature:(PurpleDesktopItem *item, const char *section)
fire_ar_cb_async_and_free	upnp.c	/^fire_ar_cb_async_and_free(gpointer data)$/;"	f	file:	signature:(gpointer data)
fire_discovery_callbacks	upnp.c	/^fire_discovery_callbacks(gboolean success)$/;"	f	file:	signature:(gboolean success)
fire_port_mapping_failure_cb	upnp.c	/^fire_port_mapping_failure_cb(gpointer data)$/;"	f	file:	signature:(gpointer data)
first_child	prefs.c	/^	struct purple_pref *first_child;$/;"	m	struct:purple_pref	typeref:struct:purple_pref::purple_pref	file:	access:public
flags	blist.h	/^	PurpleBlistNodeFlags flags;           \/**< The buddy flags                *\/$/;"	m	struct:_PurpleBlistNode	access:public
flags	cmds.c	/^	PurpleCmdFlag flags;$/;"	m	struct:_PurpleCmd	file:	access:public
flags	connection.h	/^	PurpleConnectionFlags flags;   \/**< Connection flags.                  *\/$/;"	m	struct:_PurpleConnection	access:public
flags	conversation.h	/^	PurpleConvChatBuddyFlags flags;  \/**< A bitwise OR of flags for this participant,$/;"	m	struct:_PurpleConvChatBuddy	access:public
flags	conversation.h	/^	PurpleMessageFlags flags;$/;"	m	struct:_PurpleConvMessage	access:public
flags	ntlm.c	/^	guint32 flags;            \/* 0x00008201 *\/$/;"	m	struct:type3_message	file:	access:public
flags	ntlm.c	/^	guint32 flags;           \/* 0x00008201 *\/$/;"	m	struct:type2_message	file:	access:public
flags	ntlm.c	/^	guint32 flags;           \/* 0x0000b203 *\/$/;"	m	struct:type1_message	file:	access:public
flags	plugin.h	/^	unsigned long flags;$/;"	m	struct:_PurplePluginInfo	access:public
flags	value.h	/^	unsigned short flags;$/;"	m	struct:__anon18	access:public
force_online	network.c	/^static gboolean force_online;$/;"	v	file:
format	pluginpref.c	/^	PurpleStringFormatType format;$/;"	m	struct:_PurplePluginPref	file:	access:public
format	prpl.h	/^	char *format;$/;"	m	struct:_PurpleBuddyIconSpec	access:public
foundation	media/candidate.c	/^	gchar *foundation;$/;"	m	struct:_PurpleMediaCandidatePrivate	file:	access:public
frame	plugin.h	/^	PurplePluginPrefFrame *frame;                           \/**< Reserved *\/$/;"	m	struct:_PurplePluginUiInfo	access:public
free_action_data	pounce.c	/^free_action_data(gpointer data)$/;"	f	file:	signature:(gpointer data)
free_conv_message	conversation.c	/^free_conv_message(PurpleConvMessage *msg)$/;"	f	file:	signature:(PurpleConvMessage *msg)
free_dns_children	dnsquery.c	/^static GSList *free_dns_children = NULL;$/;"	v	file:
free_parser_data	pounce.c	/^free_parser_data(gpointer user_data)$/;"	f	file:	signature:(gpointer user_data)
free_pounce	pounce.c	/^	void (*free_pounce)(PurplePounce *);$/;"	m	struct:__anon9	file:	access:public
free_pounce_handler	pounce.c	/^free_pounce_handler(gpointer user_data)$/;"	f	file:	signature:(gpointer user_data)
free_pref_value	prefs.c	/^free_pref_value(struct purple_pref *pref)$/;"	f	file:	signature:(struct purple_pref *pref)
free_saved_status	savedstatuses.c	/^free_saved_status(PurpleSavedStatus *status)$/;"	f	file:	signature:(PurpleSavedStatus *status)
free_saved_status_sub	savedstatuses.c	/^free_saved_status_sub(PurpleSavedStatusSub *substatus)$/;"	f	file:	signature:(PurpleSavedStatusSub *substatus)
free_section	desktopitem.c	/^free_section (gpointer data, gpointer user_data)$/;"	f	file:	signature:(gpointer data, gpointer user_data)
free_session	media/backend-fs2.c	/^free_session(PurpleMediaBackendFs2Session *session)$/;"	f	file:	signature:(PurpleMediaBackendFs2Session *session)
free_session	media/backend-fs2.c	/^static void free_session(PurpleMediaBackendFs2Session *session);$/;"	p	file:	signature:(PurpleMediaBackendFs2Session *session)
free_stream	media/backend-fs2.c	/^free_stream(PurpleMediaBackendFs2Stream *stream)$/;"	f	file:	signature:(PurpleMediaBackendFs2Stream *stream)
free_stream	media/backend-fs2.c	/^static void free_stream(PurpleMediaBackendFs2Stream *stream);$/;"	p	file:	signature:(PurpleMediaBackendFs2Stream *stream)
full	util.c	/^	gboolean full;$/;"	m	struct:_PurpleUtilFetchUrlData	file:	access:public
full_url	upnp.c	/^	gchar *full_url;$/;"	m	struct:__anon64	file:	access:public
fullname	certificate.h	/^	gchar * fullname;$/;"	m	struct:_PurpleCertificateScheme	access:public
fullname	certificate.h	/^	gchar *fullname;$/;"	m	struct:_PurpleCertificatePool	access:public
func	cmds.c	/^	PurpleCmdFunc func;$/;"	m	struct:_PurpleCmd	file:	access:public
func	plugin.c	/^	PurpleCallback func;$/;"	m	struct:__anon11	file:	access:public
func	prefs.c	/^	PurplePrefCallback func;$/;"	m	struct:pref_cb	file:	access:public
func_append	libtool	/^func_append ()$/;"	f
func_append_quoted	libtool	/^func_append_quoted ()$/;"	f
func_arith	libtool	/^func_arith ()$/;"	f
func_basename	libtool	/^func_basename ()$/;"	f
func_check_version_match	libtool	/^func_check_version_match ()$/;"	f
func_config	libtool	/^func_config ()$/;"	f
func_convert_core_file_wine_to_w32	libtool	/^func_convert_core_file_wine_to_w32 ()$/;"	f
func_convert_core_msys_to_w32	libtool	/^func_convert_core_msys_to_w32 ()$/;"	f
func_convert_core_path_wine_to_w32	libtool	/^func_convert_core_path_wine_to_w32 ()$/;"	f
func_convert_file_check	libtool	/^func_convert_file_check ()$/;"	f
func_convert_file_cygwin_to_w32	libtool	/^func_convert_file_cygwin_to_w32 ()$/;"	f
func_convert_file_msys_to_cygwin	libtool	/^func_convert_file_msys_to_cygwin ()$/;"	f
func_convert_file_msys_to_w32	libtool	/^func_convert_file_msys_to_w32 ()$/;"	f
func_convert_file_nix_to_cygwin	libtool	/^func_convert_file_nix_to_cygwin ()$/;"	f
func_convert_file_nix_to_w32	libtool	/^func_convert_file_nix_to_w32 ()$/;"	f
func_convert_file_noop	libtool	/^func_convert_file_noop ()$/;"	f
func_convert_path_check	libtool	/^func_convert_path_check ()$/;"	f
func_convert_path_cygwin_to_w32	libtool	/^func_convert_path_cygwin_to_w32 ()$/;"	f
func_convert_path_front_back_pathsep	libtool	/^func_convert_path_front_back_pathsep ()$/;"	f
func_convert_path_msys_to_cygwin	libtool	/^func_convert_path_msys_to_cygwin ()$/;"	f
func_convert_path_msys_to_w32	libtool	/^func_convert_path_msys_to_w32 ()$/;"	f
func_convert_path_nix_to_cygwin	libtool	/^func_convert_path_nix_to_cygwin ()$/;"	f
func_convert_path_nix_to_w32	libtool	/^func_convert_path_nix_to_w32 ()$/;"	f
func_convert_path_noop	libtool	/^func_convert_path_noop ()$/;"	f
func_cygming_dll_for_implib	libtool	/^func_cygming_dll_for_implib ()$/;"	f
func_cygming_dll_for_implib_fallback	libtool	/^func_cygming_dll_for_implib_fallback ()$/;"	f
func_cygming_dll_for_implib_fallback_core	libtool	/^func_cygming_dll_for_implib_fallback_core ()$/;"	f
func_cygming_gnu_implib_p	libtool	/^func_cygming_gnu_implib_p ()$/;"	f
func_cygming_ms_implib_p	libtool	/^func_cygming_ms_implib_p ()$/;"	f
func_cygpath	libtool	/^func_cygpath ()$/;"	f
func_dirname	libtool	/^func_dirname ()$/;"	f
func_dirname_and_basename	libtool	/^func_dirname_and_basename ()$/;"	f
func_echo	libtool	/^func_echo ()$/;"	f
func_echo_all	libtool	/^func_echo_all ()$/;"	f
func_emit_cwrapperexe_src	libtool	/^func_emit_cwrapperexe_src ()$/;"	f
func_emit_wrapper	libtool	/^func_emit_wrapper ()$/;"	f
func_enable_tag	libtool	/^func_enable_tag ()$/;"	f
func_error	libtool	/^func_error ()$/;"	f
func_exec_program	libtool	/^func_exec_program ()$/;"	f
func_exec_program_core	libtool	/^func_exec_program_core ()$/;"	f
func_execute_cmds	libtool	/^func_execute_cmds ()$/;"	f
func_extract_an_archive	libtool	/^func_extract_an_archive ()$/;"	f
func_extract_archives	libtool	/^func_extract_archives ()$/;"	f
func_fallback_echo	libtool	/^func_fallback_echo ()$/;"	f
func_fatal_configuration	libtool	/^func_fatal_configuration ()$/;"	f
func_fatal_error	libtool	/^func_fatal_error ()$/;"	f
func_fatal_help	libtool	/^func_fatal_help ()$/;"	f
func_features	libtool	/^func_features ()$/;"	f
func_generate_dlsyms	libtool	/^func_generate_dlsyms ()$/;"	f
func_grep	libtool	/^func_grep ()$/;"	f
func_help	libtool	/^func_help ()$/;"	f
func_infer_tag	libtool	/^func_infer_tag ()$/;"	f
func_init_to_host_path_cmd	libtool	/^func_init_to_host_path_cmd ()$/;"	f
func_lalib_p	libtool	/^func_lalib_p ()$/;"	f
func_lalib_unsafe_p	libtool	/^func_lalib_unsafe_p ()$/;"	f
func_len	libtool	/^func_len ()$/;"	f
func_lo2o	libtool	/^func_lo2o ()$/;"	f
func_lt_dump_args	libtool	/^func_lt_dump_args ()$/;"	f
func_ltwrapper_executable_p	libtool	/^func_ltwrapper_executable_p ()$/;"	f
func_ltwrapper_p	libtool	/^func_ltwrapper_p ()$/;"	f
func_ltwrapper_script_p	libtool	/^func_ltwrapper_script_p ()$/;"	f
func_ltwrapper_scriptname	libtool	/^func_ltwrapper_scriptname ()$/;"	f
func_missing_arg	libtool	/^func_missing_arg ()$/;"	f
func_mkdir_p	libtool	/^func_mkdir_p ()$/;"	f
func_mktempdir	libtool	/^func_mktempdir ()$/;"	f
func_mode_compile	libtool	/^func_mode_compile ()$/;"	f
func_mode_execute	libtool	/^func_mode_execute ()$/;"	f
func_mode_finish	libtool	/^func_mode_finish ()$/;"	f
func_mode_help	libtool	/^func_mode_help ()$/;"	f
func_mode_install	libtool	/^func_mode_install ()$/;"	f
func_mode_link	libtool	/^func_mode_link ()$/;"	f
func_mode_uninstall	libtool	/^func_mode_uninstall ()$/;"	f
func_normal_abspath	libtool	/^func_normal_abspath ()$/;"	f
func_parse_lt_options	libtool	/^func_parse_lt_options ()$/;"	f
func_quote_for_eval	libtool	/^func_quote_for_eval ()$/;"	f
func_quote_for_expand	libtool	/^func_quote_for_expand ()$/;"	f
func_relative_path	libtool	/^func_relative_path ()$/;"	f
func_replace_sysroot	libtool	/^func_replace_sysroot ()$/;"	f
func_resolve_sysroot	libtool	/^func_resolve_sysroot ()$/;"	f
func_show_eval	libtool	/^func_show_eval ()$/;"	f
func_show_eval_locale	libtool	/^func_show_eval_locale ()$/;"	f
func_source	libtool	/^func_source ()$/;"	f
func_split_long_opt	libtool	/^func_split_long_opt ()$/;"	f
func_split_short_opt	libtool	/^func_split_short_opt ()$/;"	f
func_stripname	libtool	/^func_stripname ()$/;"	f
func_to_host_file	libtool	/^func_to_host_file ()$/;"	f
func_to_host_path	libtool	/^func_to_host_path ()$/;"	f
func_to_tool_file	libtool	/^func_to_tool_file ()$/;"	f
func_tr_sh	libtool	/^func_tr_sh ()$/;"	f
func_usage	libtool	/^func_usage ()$/;"	f
func_verbose	libtool	/^func_verbose ()$/;"	f
func_version	libtool	/^func_version ()$/;"	f
func_warning	libtool	/^func_warning ()$/;"	f
func_win32_import_lib_p	libtool	/^func_win32_import_lib_p ()$/;"	f
func_win32_libid	libtool	/^func_win32_libid ()$/;"	f
func_write_libtool_object	libtool	/^func_write_libtool_object ()$/;"	f
func_xform	libtool	/^func_xform ()$/;"	f
g_marshal_value_peek_boolean	marshallers.c	31;"	d	file:
g_marshal_value_peek_boolean	marshallers.c	7;"	d	file:
g_marshal_value_peek_boxed	marshallers.c	22;"	d	file:
g_marshal_value_peek_boxed	marshallers.c	46;"	d	file:
g_marshal_value_peek_char	marshallers.c	32;"	d	file:
g_marshal_value_peek_char	marshallers.c	8;"	d	file:
g_marshal_value_peek_double	marshallers.c	19;"	d	file:
g_marshal_value_peek_double	marshallers.c	43;"	d	file:
g_marshal_value_peek_enum	marshallers.c	16;"	d	file:
g_marshal_value_peek_enum	marshallers.c	40;"	d	file:
g_marshal_value_peek_flags	marshallers.c	17;"	d	file:
g_marshal_value_peek_flags	marshallers.c	41;"	d	file:
g_marshal_value_peek_float	marshallers.c	18;"	d	file:
g_marshal_value_peek_float	marshallers.c	42;"	d	file:
g_marshal_value_peek_int	marshallers.c	10;"	d	file:
g_marshal_value_peek_int	marshallers.c	34;"	d	file:
g_marshal_value_peek_int64	marshallers.c	14;"	d	file:
g_marshal_value_peek_int64	marshallers.c	38;"	d	file:
g_marshal_value_peek_long	marshallers.c	12;"	d	file:
g_marshal_value_peek_long	marshallers.c	36;"	d	file:
g_marshal_value_peek_object	marshallers.c	24;"	d	file:
g_marshal_value_peek_object	marshallers.c	48;"	d	file:
g_marshal_value_peek_param	marshallers.c	21;"	d	file:
g_marshal_value_peek_param	marshallers.c	45;"	d	file:
g_marshal_value_peek_pointer	marshallers.c	23;"	d	file:
g_marshal_value_peek_pointer	marshallers.c	47;"	d	file:
g_marshal_value_peek_string	marshallers.c	20;"	d	file:
g_marshal_value_peek_string	marshallers.c	44;"	d	file:
g_marshal_value_peek_uchar	marshallers.c	33;"	d	file:
g_marshal_value_peek_uchar	marshallers.c	9;"	d	file:
g_marshal_value_peek_uint	marshallers.c	11;"	d	file:
g_marshal_value_peek_uint	marshallers.c	35;"	d	file:
g_marshal_value_peek_uint64	marshallers.c	15;"	d	file:
g_marshal_value_peek_uint64	marshallers.c	39;"	d	file:
g_marshal_value_peek_ulong	marshallers.c	13;"	d	file:
g_marshal_value_peek_ulong	marshallers.c	37;"	d	file:
g_marshal_value_peek_variant	marshallers.c	25;"	d	file:
g_marshal_value_peek_variant	marshallers.c	49;"	d	file:
gaim_account_add_buddies	gaim-compat.h	115;"	d
gaim_account_add_buddy	gaim-compat.h	114;"	d
gaim_account_change_password	gaim-compat.h	121;"	d
gaim_account_clear_settings	gaim-compat.h	66;"	d
gaim_account_connect	gaim-compat.h	40;"	d
gaim_account_destroy	gaim-compat.h	39;"	d
gaim_account_destroy_log	gaim-compat.h	112;"	d
gaim_account_disconnect	gaim-compat.h	42;"	d
gaim_account_get_active_status	gaim-compat.h	92;"	d
gaim_account_get_alias	gaim-compat.h	82;"	d
gaim_account_get_bool	gaim-compat.h	104;"	d
gaim_account_get_buddy_icon_path	gaim-compat.h	84;"	d
gaim_account_get_check_mail	gaim-compat.h	89;"	d
gaim_account_get_connection	gaim-compat.h	87;"	d
gaim_account_get_enabled	gaim-compat.h	90;"	d
gaim_account_get_int	gaim-compat.h	102;"	d
gaim_account_get_log	gaim-compat.h	111;"	d
gaim_account_get_password	gaim-compat.h	81;"	d
gaim_account_get_presence	gaim-compat.h	98;"	d
gaim_account_get_protocol_id	gaim-compat.h	85;"	d
gaim_account_get_protocol_name	gaim-compat.h	86;"	d
gaim_account_get_proxy_info	gaim-compat.h	91;"	d
gaim_account_get_remember_password	gaim-compat.h	88;"	d
gaim_account_get_status	gaim-compat.h	93;"	d
gaim_account_get_status_type	gaim-compat.h	94;"	d
gaim_account_get_status_type_with_primitive	gaim-compat.h	95;"	d
gaim_account_get_status_types	gaim-compat.h	100;"	d
gaim_account_get_string	gaim-compat.h	103;"	d
gaim_account_get_ui_bool	gaim-compat.h	108;"	d
gaim_account_get_ui_int	gaim-compat.h	106;"	d
gaim_account_get_ui_string	gaim-compat.h	107;"	d
gaim_account_get_user_info	gaim-compat.h	83;"	d
gaim_account_get_username	gaim-compat.h	80;"	d
gaim_account_is_connected	gaim-compat.h	76;"	d
gaim_account_is_connecting	gaim-compat.h	77;"	d
gaim_account_is_disconnected	gaim-compat.h	78;"	d
gaim_account_is_status_active	gaim-compat.h	99;"	d
gaim_account_new	gaim-compat.h	38;"	d
gaim_account_notify_added	gaim-compat.h	43;"	d
gaim_account_option_add_list_item	gaim-compat.h	166;"	d
gaim_account_option_bool_new	gaim-compat.h	151;"	d
gaim_account_option_destroy	gaim-compat.h	156;"	d
gaim_account_option_get_default_bool	gaim-compat.h	172;"	d
gaim_account_option_get_default_int	gaim-compat.h	173;"	d
gaim_account_option_get_default_list_value	gaim-compat.h	175;"	d
gaim_account_option_get_default_string	gaim-compat.h	174;"	d
gaim_account_option_get_list	gaim-compat.h	178;"	d
gaim_account_option_get_masked	gaim-compat.h	177;"	d
gaim_account_option_get_setting	gaim-compat.h	170;"	d
gaim_account_option_get_text	gaim-compat.h	169;"	d
gaim_account_option_get_type	gaim-compat.h	168;"	d
gaim_account_option_int_new	gaim-compat.h	152;"	d
gaim_account_option_list_new	gaim-compat.h	154;"	d
gaim_account_option_new	gaim-compat.h	150;"	d
gaim_account_option_set_default_bool	gaim-compat.h	158;"	d
gaim_account_option_set_default_int	gaim-compat.h	159;"	d
gaim_account_option_set_default_string	gaim-compat.h	160;"	d
gaim_account_option_set_list	gaim-compat.h	164;"	d
gaim_account_option_set_masked	gaim-compat.h	162;"	d
gaim_account_option_string_new	gaim-compat.h	153;"	d
gaim_account_register	gaim-compat.h	41;"	d
gaim_account_remove_buddies	gaim-compat.h	117;"	d
gaim_account_remove_buddy	gaim-compat.h	116;"	d
gaim_account_remove_group	gaim-compat.h	119;"	d
gaim_account_request_add	gaim-compat.h	44;"	d
gaim_account_request_authorization	gaim-compat.h	47;"	d
gaim_account_request_change_password	gaim-compat.h	48;"	d
gaim_account_request_change_user_info	gaim-compat.h	49;"	d
gaim_account_request_close	gaim-compat.h	45;"	d
gaim_account_set_alias	gaim-compat.h	53;"	d
gaim_account_set_bool	gaim-compat.h	70;"	d
gaim_account_set_buddy_icon_path	gaim-compat.h	55;"	d
gaim_account_set_check_mail	gaim-compat.h	59;"	d
gaim_account_set_connection	gaim-compat.h	57;"	d
gaim_account_set_enabled	gaim-compat.h	60;"	d
gaim_account_set_int	gaim-compat.h	68;"	d
gaim_account_set_password	gaim-compat.h	52;"	d
gaim_account_set_protocol_id	gaim-compat.h	56;"	d
gaim_account_set_proxy_info	gaim-compat.h	61;"	d
gaim_account_set_remember_password	gaim-compat.h	58;"	d
gaim_account_set_status	gaim-compat.h	63;"	d
gaim_account_set_status_list	gaim-compat.h	64;"	d
gaim_account_set_status_types	gaim-compat.h	62;"	d
gaim_account_set_string	gaim-compat.h	69;"	d
gaim_account_set_ui_bool	gaim-compat.h	74;"	d
gaim_account_set_ui_int	gaim-compat.h	72;"	d
gaim_account_set_ui_string	gaim-compat.h	73;"	d
gaim_account_set_user_info	gaim-compat.h	54;"	d
gaim_account_set_username	gaim-compat.h	51;"	d
gaim_account_supports_offline_message	gaim-compat.h	123;"	d
gaim_account_user_split_destroy	gaim-compat.h	181;"	d
gaim_account_user_split_get_default_value	gaim-compat.h	184;"	d
gaim_account_user_split_get_separator	gaim-compat.h	185;"	d
gaim_account_user_split_get_text	gaim-compat.h	183;"	d
gaim_account_user_split_new	gaim-compat.h	180;"	d
gaim_accounts_add	gaim-compat.h	125;"	d
gaim_accounts_delete	gaim-compat.h	127;"	d
gaim_accounts_find	gaim-compat.h	133;"	d
gaim_accounts_get_all	gaim-compat.h	130;"	d
gaim_accounts_get_all_active	gaim-compat.h	131;"	d
gaim_accounts_get_handle	gaim-compat.h	140;"	d
gaim_accounts_get_ui_ops	gaim-compat.h	138;"	d
gaim_accounts_init	gaim-compat.h	142;"	d
gaim_accounts_remove	gaim-compat.h	126;"	d
gaim_accounts_reorder	gaim-compat.h	128;"	d
gaim_accounts_restore_current_statuses	gaim-compat.h	135;"	d
gaim_accounts_set_ui_ops	gaim-compat.h	137;"	d
gaim_accounts_uninit	gaim-compat.h	143;"	d
gaim_base16_decode	gaim-compat.h	2078;"	d
gaim_base16_encode	gaim-compat.h	2077;"	d
gaim_base64_decode	gaim-compat.h	2080;"	d
gaim_base64_encode	gaim-compat.h	2079;"	d
gaim_blist_add_account	gaim-compat.h	302;"	d
gaim_blist_add_buddy	gaim-compat.h	257;"	d
gaim_blist_add_chat	gaim-compat.h	247;"	d
gaim_blist_add_contact	gaim-compat.h	265;"	d
gaim_blist_add_group	gaim-compat.h	261;"	d
gaim_blist_alias_buddy	gaim-compat.h	239;"	d
gaim_blist_alias_chat	gaim-compat.h	241;"	d
gaim_blist_alias_contact	gaim-compat.h	238;"	d
gaim_blist_destroy	gaim-compat.h	230;"	d
gaim_blist_find_chat	gaim-compat.h	294;"	d
gaim_blist_get_group_online_count	gaim-compat.h	306;"	d
gaim_blist_get_group_size	gaim-compat.h	305;"	d
gaim_blist_get_handle	gaim-compat.h	332;"	d
gaim_blist_get_root	gaim-compat.h	225;"	d
gaim_blist_get_ui_ops	gaim-compat.h	330;"	d
gaim_blist_init	gaim-compat.h	334;"	d
gaim_blist_load	gaim-compat.h	308;"	d
gaim_blist_merge_contact	gaim-compat.h	266;"	d
gaim_blist_new	gaim-compat.h	221;"	d
gaim_blist_node_get_bool	gaim-compat.h	316;"	d
gaim_blist_node_get_extended_menu	gaim-compat.h	327;"	d
gaim_blist_node_get_flags	gaim-compat.h	325;"	d
gaim_blist_node_get_int	gaim-compat.h	318;"	d
gaim_blist_node_get_string	gaim-compat.h	320;"	d
gaim_blist_node_next	gaim-compat.h	226;"	d
gaim_blist_node_remove_setting	gaim-compat.h	322;"	d
gaim_blist_node_set_bool	gaim-compat.h	315;"	d
gaim_blist_node_set_flags	gaim-compat.h	324;"	d
gaim_blist_node_set_int	gaim-compat.h	317;"	d
gaim_blist_node_set_string	gaim-compat.h	319;"	d
gaim_blist_remove_account	gaim-compat.h	303;"	d
gaim_blist_remove_buddy	gaim-compat.h	275;"	d
gaim_blist_remove_chat	gaim-compat.h	277;"	d
gaim_blist_remove_contact	gaim-compat.h	276;"	d
gaim_blist_remove_group	gaim-compat.h	278;"	d
gaim_blist_rename_buddy	gaim-compat.h	243;"	d
gaim_blist_rename_group	gaim-compat.h	244;"	d
gaim_blist_request_add_buddy	gaim-compat.h	311;"	d
gaim_blist_request_add_chat	gaim-compat.h	312;"	d
gaim_blist_request_add_group	gaim-compat.h	313;"	d
gaim_blist_schedule_save	gaim-compat.h	309;"	d
gaim_blist_server_alias_buddy	gaim-compat.h	240;"	d
gaim_blist_set_ui_ops	gaim-compat.h	329;"	d
gaim_blist_set_visible	gaim-compat.h	232;"	d
gaim_blist_show	gaim-compat.h	228;"	d
gaim_blist_uninit	gaim-compat.h	335;"	d
gaim_blist_update_buddy_icon	gaim-compat.h	235;"	d
gaim_blist_update_buddy_status	gaim-compat.h	234;"	d
gaim_buddy_get_account	gaim-compat.h	251;"	d
gaim_buddy_get_alias	gaim-compat.h	284;"	d
gaim_buddy_get_alias_only	gaim-compat.h	280;"	d
gaim_buddy_get_contact	gaim-compat.h	254;"	d
gaim_buddy_get_contact_alias	gaim-compat.h	282;"	d
gaim_buddy_get_group	gaim-compat.h	297;"	d
gaim_buddy_get_icon	gaim-compat.h	253;"	d
gaim_buddy_get_local_alias	gaim-compat.h	283;"	d
gaim_buddy_get_name	gaim-compat.h	252;"	d
gaim_buddy_get_presence	gaim-compat.h	255;"	d
gaim_buddy_get_server_alias	gaim-compat.h	281;"	d
gaim_buddy_icon_get_account	gaim-compat.h	349;"	d
gaim_buddy_icon_get_data	gaim-compat.h	351;"	d
gaim_buddy_icon_get_scale_size	gaim-compat.h	365;"	d
gaim_buddy_icon_get_type	gaim-compat.h	352;"	d
gaim_buddy_icon_get_username	gaim-compat.h	350;"	d
gaim_buddy_icon_new	gaim-compat.h	340;"	d
gaim_buddy_icon_ref	gaim-compat.h	342;"	d
gaim_buddy_icon_set_data	gaim-compat.h	346;"	d
gaim_buddy_icon_unref	gaim-compat.h	343;"	d
gaim_buddy_icon_update	gaim-compat.h	344;"	d
gaim_buddy_icons_get_cache_dir	gaim-compat.h	359;"	d
gaim_buddy_icons_get_handle	gaim-compat.h	360;"	d
gaim_buddy_icons_init	gaim-compat.h	362;"	d
gaim_buddy_icons_is_caching	gaim-compat.h	357;"	d
gaim_buddy_icons_set_cache_dir	gaim-compat.h	358;"	d
gaim_buddy_icons_set_caching	gaim-compat.h	356;"	d
gaim_buddy_icons_set_for_user	gaim-compat.h	354;"	d
gaim_buddy_icons_uninit	gaim-compat.h	363;"	d
gaim_buddy_new	gaim-compat.h	249;"	d
gaim_buddy_set_icon	gaim-compat.h	250;"	d
gaim_build_dir	gaim-compat.h	2110;"	d
gaim_chat_get_group	gaim-compat.h	296;"	d
gaim_chat_get_name	gaim-compat.h	286;"	d
gaim_chat_new	gaim-compat.h	246;"	d
gaim_cipher_context_append	gaim-compat.h	414;"	d
gaim_cipher_context_decrypt	gaim-compat.h	418;"	d
gaim_cipher_context_destroy	gaim-compat.h	412;"	d
gaim_cipher_context_digest	gaim-compat.h	415;"	d
gaim_cipher_context_digest_to_str	gaim-compat.h	416;"	d
gaim_cipher_context_encrypt	gaim-compat.h	417;"	d
gaim_cipher_context_get_data	gaim-compat.h	424;"	d
gaim_cipher_context_get_key_size	gaim-compat.h	422;"	d
gaim_cipher_context_get_option	gaim-compat.h	407;"	d
gaim_cipher_context_get_salt_size	gaim-compat.h	420;"	d
gaim_cipher_context_new	gaim-compat.h	409;"	d
gaim_cipher_context_new_by_name	gaim-compat.h	410;"	d
gaim_cipher_context_reset	gaim-compat.h	411;"	d
gaim_cipher_context_set_data	gaim-compat.h	423;"	d
gaim_cipher_context_set_iv	gaim-compat.h	413;"	d
gaim_cipher_context_set_key	gaim-compat.h	421;"	d
gaim_cipher_context_set_option	gaim-compat.h	406;"	d
gaim_cipher_context_set_salt	gaim-compat.h	419;"	d
gaim_cipher_digest_region	gaim-compat.h	395;"	d
gaim_cipher_get_capabilities	gaim-compat.h	394;"	d
gaim_cipher_get_name	gaim-compat.h	393;"	d
gaim_cipher_http_digest_calculate_response	gaim-compat.h	429;"	d
gaim_cipher_http_digest_calculate_session_key	gaim-compat.h	426;"	d
gaim_ciphers_find_cipher	gaim-compat.h	397;"	d
gaim_ciphers_get_ciphers	gaim-compat.h	400;"	d
gaim_ciphers_get_handle	gaim-compat.h	402;"	d
gaim_ciphers_init	gaim-compat.h	403;"	d
gaim_ciphers_register_cipher	gaim-compat.h	398;"	d
gaim_ciphers_uninit	gaim-compat.h	404;"	d
gaim_ciphers_unregister_cipher	gaim-compat.h	399;"	d
gaim_circ_buffer_append	gaim-compat.h	438;"	d
gaim_circ_buffer_destroy	gaim-compat.h	437;"	d
gaim_circ_buffer_get_max_read	gaim-compat.h	439;"	d
gaim_circ_buffer_mark_read	gaim-compat.h	440;"	d
gaim_circ_buffer_new	gaim-compat.h	436;"	d
gaim_cmd_do_command	gaim-compat.h	483;"	d
gaim_cmd_help	gaim-compat.h	485;"	d
gaim_cmd_list	gaim-compat.h	484;"	d
gaim_cmd_register	gaim-compat.h	481;"	d
gaim_cmd_unregister	gaim-compat.h	482;"	d
gaim_connection_destroy	gaim-compat.h	511;"	d
gaim_connection_error	gaim-compat.h	527;"	d
gaim_connection_get_account	gaim-compat.h	520;"	d
gaim_connection_get_display_name	gaim-compat.h	522;"	d
gaim_connection_get_password	gaim-compat.h	521;"	d
gaim_connection_get_state	gaim-compat.h	516;"	d
gaim_connection_new	gaim-compat.h	510;"	d
gaim_connection_notice	gaim-compat.h	526;"	d
gaim_connection_set_account	gaim-compat.h	514;"	d
gaim_connection_set_display_name	gaim-compat.h	515;"	d
gaim_connection_set_state	gaim-compat.h	513;"	d
gaim_connection_update_progress	gaim-compat.h	524;"	d
gaim_connections_disconnect_all	gaim-compat.h	529;"	d
gaim_connections_get_all	gaim-compat.h	531;"	d
gaim_connections_get_connecting	gaim-compat.h	532;"	d
gaim_connections_get_handle	gaim-compat.h	541;"	d
gaim_connections_get_ui_ops	gaim-compat.h	537;"	d
gaim_connections_init	gaim-compat.h	539;"	d
gaim_connections_set_ui_ops	gaim-compat.h	536;"	d
gaim_connections_uninit	gaim-compat.h	540;"	d
gaim_contact_get_alias	gaim-compat.h	270;"	d
gaim_contact_get_priority_buddy	gaim-compat.h	268;"	d
gaim_contact_invalidate_priority_buddy	gaim-compat.h	273;"	d
gaim_contact_new	gaim-compat.h	263;"	d
gaim_contact_on_account	gaim-compat.h	271;"	d
gaim_contact_set_alias	gaim-compat.h	269;"	d
gaim_conv_chat_add_user	gaim-compat.h	700;"	d
gaim_conv_chat_add_users	gaim-compat.h	701;"	d
gaim_conv_chat_cb_destroy	gaim-compat.h	719;"	d
gaim_conv_chat_cb_find	gaim-compat.h	717;"	d
gaim_conv_chat_cb_get_name	gaim-compat.h	718;"	d
gaim_conv_chat_cb_new	gaim-compat.h	716;"	d
gaim_conv_chat_clear_users	gaim-compat.h	708;"	d
gaim_conv_chat_find_user	gaim-compat.h	705;"	d
gaim_conv_chat_get_conversation	gaim-compat.h	684;"	d
gaim_conv_chat_get_id	gaim-compat.h	696;"	d
gaim_conv_chat_get_ignored	gaim-compat.h	690;"	d
gaim_conv_chat_get_ignored_user	gaim-compat.h	691;"	d
gaim_conv_chat_get_nick	gaim-compat.h	710;"	d
gaim_conv_chat_get_topic	gaim-compat.h	694;"	d
gaim_conv_chat_get_users	gaim-compat.h	686;"	d
gaim_conv_chat_has_left	gaim-compat.h	712;"	d
gaim_conv_chat_ignore	gaim-compat.h	687;"	d
gaim_conv_chat_is_user_ignored	gaim-compat.h	692;"	d
gaim_conv_chat_left	gaim-compat.h	711;"	d
gaim_conv_chat_remove_user	gaim-compat.h	703;"	d
gaim_conv_chat_remove_users	gaim-compat.h	704;"	d
gaim_conv_chat_rename_user	gaim-compat.h	702;"	d
gaim_conv_chat_send	gaim-compat.h	698;"	d
gaim_conv_chat_send_with_flags	gaim-compat.h	699;"	d
gaim_conv_chat_set_id	gaim-compat.h	695;"	d
gaim_conv_chat_set_ignored	gaim-compat.h	689;"	d
gaim_conv_chat_set_nick	gaim-compat.h	709;"	d
gaim_conv_chat_set_topic	gaim-compat.h	693;"	d
gaim_conv_chat_set_users	gaim-compat.h	685;"	d
gaim_conv_chat_unignore	gaim-compat.h	688;"	d
gaim_conv_chat_user_get_flags	gaim-compat.h	707;"	d
gaim_conv_chat_user_set_flags	gaim-compat.h	706;"	d
gaim_conv_chat_write	gaim-compat.h	697;"	d
gaim_conv_custom_smiley_add	gaim-compat.h	680;"	d
gaim_conv_custom_smiley_close	gaim-compat.h	682;"	d
gaim_conv_custom_smiley_write	gaim-compat.h	681;"	d
gaim_conv_im_get_conversation	gaim-compat.h	651;"	d
gaim_conv_im_get_icon	gaim-compat.h	653;"	d
gaim_conv_im_get_send_typed_timeout	gaim-compat.h	669;"	d
gaim_conv_im_get_type_again	gaim-compat.h	661;"	d
gaim_conv_im_get_typing_state	gaim-compat.h	655;"	d
gaim_conv_im_get_typing_timeout	gaim-compat.h	659;"	d
gaim_conv_im_send	gaim-compat.h	677;"	d
gaim_conv_im_send_with_flags	gaim-compat.h	678;"	d
gaim_conv_im_set_icon	gaim-compat.h	652;"	d
gaim_conv_im_set_type_again	gaim-compat.h	660;"	d
gaim_conv_im_set_typing_state	gaim-compat.h	654;"	d
gaim_conv_im_start_send_typed_timeout	gaim-compat.h	663;"	d
gaim_conv_im_start_typing_timeout	gaim-compat.h	657;"	d
gaim_conv_im_stop_send_typed_timeout	gaim-compat.h	666;"	d
gaim_conv_im_stop_typing_timeout	gaim-compat.h	658;"	d
gaim_conv_im_update_typing	gaim-compat.h	675;"	d
gaim_conv_im_write	gaim-compat.h	676;"	d
gaim_conv_present_error	gaim-compat.h	672;"	d
gaim_conv_send_confirm	gaim-compat.h	673;"	d
gaim_conversation_autoset_title	gaim-compat.h	620;"	d
gaim_conversation_close_logs	gaim-compat.h	625;"	d
gaim_conversation_destroy	gaim-compat.h	610;"	d
gaim_conversation_foreach	gaim-compat.h	649;"	d
gaim_conversation_get_account	gaim-compat.h	616;"	d
gaim_conversation_get_chat_data	gaim-compat.h	630;"	d
gaim_conversation_get_data	gaim-compat.h	635;"	d
gaim_conversation_get_features	gaim-compat.h	646;"	d
gaim_conversation_get_gc	gaim-compat.h	617;"	d
gaim_conversation_get_im_data	gaim-compat.h	626;"	d
gaim_conversation_get_name	gaim-compat.h	622;"	d
gaim_conversation_get_title	gaim-compat.h	619;"	d
gaim_conversation_get_type	gaim-compat.h	612;"	d
gaim_conversation_get_ui_ops	gaim-compat.h	614;"	d
gaim_conversation_has_focus	gaim-compat.h	647;"	d
gaim_conversation_is_logging	gaim-compat.h	624;"	d
gaim_conversation_new	gaim-compat.h	609;"	d
gaim_conversation_present	gaim-compat.h	611;"	d
gaim_conversation_set_account	gaim-compat.h	615;"	d
gaim_conversation_set_data	gaim-compat.h	634;"	d
gaim_conversation_set_features	gaim-compat.h	645;"	d
gaim_conversation_set_logging	gaim-compat.h	623;"	d
gaim_conversation_set_name	gaim-compat.h	621;"	d
gaim_conversation_set_title	gaim-compat.h	618;"	d
gaim_conversation_set_ui_ops	gaim-compat.h	613;"	d
gaim_conversation_update	gaim-compat.h	648;"	d
gaim_conversation_write	gaim-compat.h	644;"	d
gaim_conversations_get_handle	gaim-compat.h	721;"	d
gaim_conversations_init	gaim-compat.h	722;"	d
gaim_conversations_set_ui_ops	gaim-compat.h	607;"	d
gaim_conversations_uninit	gaim-compat.h	723;"	d
gaim_core_get_ui	gaim-compat.h	736;"	d
gaim_core_get_ui_ops	gaim-compat.h	739;"	d
gaim_core_get_version	gaim-compat.h	735;"	d
gaim_core_init	gaim-compat.h	731;"	d
gaim_core_quit	gaim-compat.h	732;"	d
gaim_core_quit_cb	gaim-compat.h	734;"	d
gaim_core_set_ui_ops	gaim-compat.h	738;"	d
gaim_date_format_full	gaim-compat.h	2088;"	d
gaim_date_format_long	gaim-compat.h	2087;"	d
gaim_date_format_short	gaim-compat.h	2086;"	d
gaim_debug	gaim-compat.h	755;"	d
gaim_debug_error	gaim-compat.h	759;"	d
gaim_debug_fatal	gaim-compat.h	760;"	d
gaim_debug_get_ui_ops	gaim-compat.h	766;"	d
gaim_debug_info	gaim-compat.h	757;"	d
gaim_debug_init	gaim-compat.h	768;"	d
gaim_debug_is_enabled	gaim-compat.h	763;"	d
gaim_debug_misc	gaim-compat.h	756;"	d
gaim_debug_set_enabled	gaim-compat.h	762;"	d
gaim_debug_set_ui_ops	gaim-compat.h	765;"	d
gaim_debug_warning	gaim-compat.h	758;"	d
gaim_desktop_item_copy	gaim-compat.h	825;"	d
gaim_desktop_item_get_entry_type	gaim-compat.h	823;"	d
gaim_desktop_item_get_string	gaim-compat.h	824;"	d
gaim_desktop_item_get_type	gaim-compat.h	787;"	d
gaim_desktop_item_new_from_file	gaim-compat.h	822;"	d
gaim_desktop_item_unref	gaim-compat.h	826;"	d
gaim_dnsquery_a	gaim-compat.h	833;"	d
gaim_dnsquery_destroy	gaim-compat.h	834;"	d
gaim_dnsquery_get_host	gaim-compat.h	838;"	d
gaim_dnsquery_get_port	gaim-compat.h	839;"	d
gaim_dnsquery_init	gaim-compat.h	835;"	d
gaim_dnsquery_set_ui_ops	gaim-compat.h	837;"	d
gaim_dnsquery_uninit	gaim-compat.h	836;"	d
gaim_email_is_valid	gaim-compat.h	2163;"	d
gaim_escape_filename	gaim-compat.h	2180;"	d
gaim_eventloop_get_ui_ops	gaim-compat.h	865;"	d
gaim_eventloop_set_ui_ops	gaim-compat.h	864;"	d
gaim_fd_get_ip	gaim-compat.h	2124;"	d
gaim_find_buddies	gaim-compat.h	290;"	d
gaim_find_buddy	gaim-compat.h	288;"	d
gaim_find_buddy_in_group	gaim-compat.h	289;"	d
gaim_find_chat	gaim-compat.h	714;"	d
gaim_find_conversation_with_account	gaim-compat.h	641;"	d
gaim_find_group	gaim-compat.h	292;"	d
gaim_find_pounce	gaim-compat.h	1363;"	d
gaim_find_prpl	gaim-compat.h	1508;"	d
gaim_get_blist	gaim-compat.h	223;"	d
gaim_get_chats	gaim-compat.h	639;"	d
gaim_get_conversations	gaim-compat.h	637;"	d
gaim_get_core	gaim-compat.h	737;"	d
gaim_get_ims	gaim-compat.h	638;"	d
gaim_global_proxy_get_info	gaim-compat.h	1472;"	d
gaim_got_protocol_handler_uri	gaim-compat.h	2151;"	d
gaim_group_get_accounts	gaim-compat.h	299;"	d
gaim_group_new	gaim-compat.h	259;"	d
gaim_group_on_account	gaim-compat.h	300;"	d
gaim_home_dir	gaim-compat.h	2105;"	d
gaim_idle_get_ui_ops	gaim-compat.h	954;"	d
gaim_idle_init	gaim-compat.h	955;"	d
gaim_idle_set	gaim-compat.h	952;"	d
gaim_idle_set_ui_ops	gaim-compat.h	953;"	d
gaim_idle_touch	gaim-compat.h	951;"	d
gaim_idle_uninit	gaim-compat.h	956;"	d
gaim_imgstore_add	gaim-compat.h	962;"	d
gaim_imgstore_get	gaim-compat.h	964;"	d
gaim_imgstore_get_data	gaim-compat.h	965;"	d
gaim_imgstore_get_filename	gaim-compat.h	967;"	d
gaim_imgstore_get_size	gaim-compat.h	966;"	d
gaim_imgstore_ref	gaim-compat.h	968;"	d
gaim_imgstore_unref	gaim-compat.h	969;"	d
gaim_init	gaim-compat.h	945;"	d
gaim_init_aim_plugin	gaim-compat.h	2314;"	d
gaim_init_gg_plugin	gaim-compat.h	2305;"	d
gaim_init_icq_plugin	gaim-compat.h	2315;"	d
gaim_init_jabber_plugin	gaim-compat.h	2306;"	d
gaim_init_msn_plugin	gaim-compat.h	2308;"	d
gaim_init_novell_plugin	gaim-compat.h	2309;"	d
gaim_init_qq_plugin	gaim-compat.h	2310;"	d
gaim_init_sametime_plugin	gaim-compat.h	2307;"	d
gaim_init_simple_plugin	gaim-compat.h	2311;"	d
gaim_init_ssl_gnutls_plugin	gaim-compat.h	2304;"	d
gaim_init_ssl_openssl_plugin	gaim-compat.h	2303;"	d
gaim_init_ssl_plugin	gaim-compat.h	2302;"	d
gaim_init_yahoo_plugin	gaim-compat.h	2312;"	d
gaim_init_zephyr_plugin	gaim-compat.h	2313;"	d
gaim_input_add	gaim-compat.h	861;"	d
gaim_input_remove	gaim-compat.h	862;"	d
gaim_log_common_lister	gaim-compat.h	1007;"	d
gaim_log_common_sizer	gaim-compat.h	1009;"	d
gaim_log_common_total_sizer	gaim-compat.h	1008;"	d
gaim_log_common_writer	gaim-compat.h	1006;"	d
gaim_log_compare	gaim-compat.h	1002;"	d
gaim_log_free	gaim-compat.h	992;"	d
gaim_log_get_handle	gaim-compat.h	1021;"	d
gaim_log_get_log_dir	gaim-compat.h	1001;"	d
gaim_log_get_log_sets	gaim-compat.h	997;"	d
gaim_log_get_logs	gaim-compat.h	996;"	d
gaim_log_get_size	gaim-compat.h	999;"	d
gaim_log_get_system_logs	gaim-compat.h	998;"	d
gaim_log_get_total_size	gaim-compat.h	1000;"	d
gaim_log_init	gaim-compat.h	1020;"	d
gaim_log_logger_add	gaim-compat.h	1013;"	d
gaim_log_logger_free	gaim-compat.h	1012;"	d
gaim_log_logger_get	gaim-compat.h	1016;"	d
gaim_log_logger_get_options	gaim-compat.h	1018;"	d
gaim_log_logger_new	gaim-compat.h	1011;"	d
gaim_log_logger_remove	gaim-compat.h	1014;"	d
gaim_log_logger_set	gaim-compat.h	1015;"	d
gaim_log_new	gaim-compat.h	991;"	d
gaim_log_read	gaim-compat.h	994;"	d
gaim_log_set_compare	gaim-compat.h	1003;"	d
gaim_log_set_free	gaim-compat.h	1004;"	d
gaim_log_uninit	gaim-compat.h	1022;"	d
gaim_log_write	gaim-compat.h	993;"	d
gaim_markup_extract_info_field	gaim-compat.h	2097;"	d
gaim_markup_find_tag	gaim-compat.h	2096;"	d
gaim_markup_get_tag_name	gaim-compat.h	2102;"	d
gaim_markup_html_to_xhtml	gaim-compat.h	2098;"	d
gaim_markup_linkify	gaim-compat.h	2100;"	d
gaim_markup_slice	gaim-compat.h	2101;"	d
gaim_markup_strip_html	gaim-compat.h	2099;"	d
gaim_marshal_BOOLEAN__INT_POINTER	gaim-compat.h	1835;"	d
gaim_marshal_BOOLEAN__POINTER	gaim-compat.h	1820;"	d
gaim_marshal_BOOLEAN__POINTER_POINTER	gaim-compat.h	1822;"	d
gaim_marshal_BOOLEAN__POINTER_POINTER_POINTER	gaim-compat.h	1824;"	d
gaim_marshal_BOOLEAN__POINTER_POINTER_POINTER_POINTER	gaim-compat.h	1830;"	d
gaim_marshal_BOOLEAN__POINTER_POINTER_POINTER_POINTER_POINTER	gaim-compat.h	1832;"	d
gaim_marshal_BOOLEAN__POINTER_POINTER_POINTER_UINT	gaim-compat.h	1828;"	d
gaim_marshal_BOOLEAN__POINTER_POINTER_UINT	gaim-compat.h	1826;"	d
gaim_marshal_INT__INT	gaim-compat.h	1813;"	d
gaim_marshal_INT__INT_INT	gaim-compat.h	1815;"	d
gaim_marshal_INT__POINTER_POINTER_POINTER_POINTER_POINTER	gaim-compat.h	1817;"	d
gaim_marshal_POINTER__POINTER_INT	gaim-compat.h	1838;"	d
gaim_marshal_POINTER__POINTER_INT64	gaim-compat.h	1840;"	d
gaim_marshal_POINTER__POINTER_INT64_BOOLEAN	gaim-compat.h	1844;"	d
gaim_marshal_POINTER__POINTER_INT_BOOLEAN	gaim-compat.h	1842;"	d
gaim_marshal_POINTER__POINTER_POINTER	gaim-compat.h	1846;"	d
gaim_marshal_VOID	gaim-compat.h	1782;"	d
gaim_marshal_VOID__INT	gaim-compat.h	1784;"	d
gaim_marshal_VOID__INT_INT	gaim-compat.h	1786;"	d
gaim_marshal_VOID__POINTER	gaim-compat.h	1788;"	d
gaim_marshal_VOID__POINTER_INT_INT	gaim-compat.h	1792;"	d
gaim_marshal_VOID__POINTER_POINTER	gaim-compat.h	1794;"	d
gaim_marshal_VOID__POINTER_POINTER_POINTER	gaim-compat.h	1800;"	d
gaim_marshal_VOID__POINTER_POINTER_POINTER_POINTER	gaim-compat.h	1802;"	d
gaim_marshal_VOID__POINTER_POINTER_POINTER_POINTER_POINTER	gaim-compat.h	1804;"	d
gaim_marshal_VOID__POINTER_POINTER_POINTER_POINTER_UINT	gaim-compat.h	1808;"	d
gaim_marshal_VOID__POINTER_POINTER_POINTER_UINT	gaim-compat.h	1806;"	d
gaim_marshal_VOID__POINTER_POINTER_POINTER_UINT_UINT	gaim-compat.h	1810;"	d
gaim_marshal_VOID__POINTER_POINTER_UINT	gaim-compat.h	1796;"	d
gaim_marshal_VOID__POINTER_POINTER_UINT_UINT	gaim-compat.h	1798;"	d
gaim_marshal_VOID__POINTER_UINT	gaim-compat.h	1790;"	d
gaim_menu_action_free	gaim-compat.h	2075;"	d
gaim_menu_action_new	gaim-compat.h	2074;"	d
gaim_message_meify	gaim-compat.h	2175;"	d
gaim_mime_decode_field	gaim-compat.h	2083;"	d
gaim_mime_document_free	gaim-compat.h	1030;"	d
gaim_mime_document_get_field	gaim-compat.h	1035;"	d
gaim_mime_document_get_fields	gaim-compat.h	1034;"	d
gaim_mime_document_get_parts	gaim-compat.h	1037;"	d
gaim_mime_document_new	gaim-compat.h	1029;"	d
gaim_mime_document_parse	gaim-compat.h	1031;"	d
gaim_mime_document_parsen	gaim-compat.h	1032;"	d
gaim_mime_document_set_field	gaim-compat.h	1036;"	d
gaim_mime_document_write	gaim-compat.h	1033;"	d
gaim_mime_part_get_data	gaim-compat.h	1044;"	d
gaim_mime_part_get_data_decoded	gaim-compat.h	1045;"	d
gaim_mime_part_get_field	gaim-compat.h	1041;"	d
gaim_mime_part_get_field_decoded	gaim-compat.h	1042;"	d
gaim_mime_part_get_fields	gaim-compat.h	1040;"	d
gaim_mime_part_get_length	gaim-compat.h	1046;"	d
gaim_mime_part_new	gaim-compat.h	1039;"	d
gaim_mime_part_set_data	gaim-compat.h	1047;"	d
gaim_mime_part_set_field	gaim-compat.h	1043;"	d
gaim_mkstemp	gaim-compat.h	2116;"	d
gaim_network_get_local_system_ip	gaim-compat.h	1059;"	d
gaim_network_get_my_ip	gaim-compat.h	1060;"	d
gaim_network_get_port_from_fd	gaim-compat.h	1065;"	d
gaim_network_get_public_ip	gaim-compat.h	1058;"	d
gaim_network_init	gaim-compat.h	1069;"	d
gaim_network_ip_atoi	gaim-compat.h	1056;"	d
gaim_network_is_available	gaim-compat.h	1067;"	d
gaim_network_listen	gaim-compat.h	1062;"	d
gaim_network_listen_cancel	gaim-compat.h	1064;"	d
gaim_network_listen_range	gaim-compat.h	1063;"	d
gaim_network_set_public_ip	gaim-compat.h	1057;"	d
gaim_network_uninit	gaim-compat.h	1070;"	d
gaim_normalize	gaim-compat.h	2126;"	d
gaim_normalize_nocase	gaim-compat.h	2127;"	d
gaim_notify_close	gaim-compat.h	1159;"	d
gaim_notify_close_with_handle	gaim-compat.h	1160;"	d
gaim_notify_email	gaim-compat.h	1135;"	d
gaim_notify_emails	gaim-compat.h	1136;"	d
gaim_notify_error	gaim-compat.h	1164;"	d
gaim_notify_formatted	gaim-compat.h	1137;"	d
gaim_notify_get_handle	gaim-compat.h	1169;"	d
gaim_notify_get_ui_ops	gaim-compat.h	1167;"	d
gaim_notify_info	gaim-compat.h	1162;"	d
gaim_notify_init	gaim-compat.h	1171;"	d
gaim_notify_message	gaim-compat.h	1134;"	d
gaim_notify_searchresults	gaim-compat.h	1120;"	d
gaim_notify_searchresults_button_add	gaim-compat.h	1123;"	d
gaim_notify_searchresults_button_add_labeled	gaim-compat.h	1124;"	d
gaim_notify_searchresults_column_add	gaim-compat.h	1127;"	d
gaim_notify_searchresults_column_get_title	gaim-compat.h	1132;"	d
gaim_notify_searchresults_column_new	gaim-compat.h	1126;"	d
gaim_notify_searchresults_free	gaim-compat.h	1121;"	d
gaim_notify_searchresults_get_columns_count	gaim-compat.h	1130;"	d
gaim_notify_searchresults_get_rows_count	gaim-compat.h	1129;"	d
gaim_notify_searchresults_new	gaim-compat.h	1125;"	d
gaim_notify_searchresults_new_rows	gaim-compat.h	1122;"	d
gaim_notify_searchresults_row_add	gaim-compat.h	1128;"	d
gaim_notify_searchresults_row_get	gaim-compat.h	1131;"	d
gaim_notify_set_ui_ops	gaim-compat.h	1166;"	d
gaim_notify_uninit	gaim-compat.h	1172;"	d
gaim_notify_uri	gaim-compat.h	1158;"	d
gaim_notify_user_info_add_pair	gaim-compat.h	1144;"	d
gaim_notify_user_info_add_section_break	gaim-compat.h	1148;"	d
gaim_notify_user_info_add_section_header	gaim-compat.h	1149;"	d
gaim_notify_user_info_destroy	gaim-compat.h	1141;"	d
gaim_notify_user_info_entry_get_label	gaim-compat.h	1151;"	d
gaim_notify_user_info_entry_get_type	gaim-compat.h	1155;"	d
gaim_notify_user_info_entry_get_value	gaim-compat.h	1153;"	d
gaim_notify_user_info_entry_new	gaim-compat.h	1147;"	d
gaim_notify_user_info_entry_set_label	gaim-compat.h	1152;"	d
gaim_notify_user_info_entry_set_type	gaim-compat.h	1156;"	d
gaim_notify_user_info_entry_set_value	gaim-compat.h	1154;"	d
gaim_notify_user_info_get_entries	gaim-compat.h	1142;"	d
gaim_notify_user_info_get_text_with_newline	gaim-compat.h	1143;"	d
gaim_notify_user_info_new	gaim-compat.h	1140;"	d
gaim_notify_user_info_prepend_pair	gaim-compat.h	1145;"	d
gaim_notify_user_info_remove_entry	gaim-compat.h	1146;"	d
gaim_notify_user_info_remove_last_item	gaim-compat.h	1150;"	d
gaim_notify_userinfo	gaim-compat.h	1138;"	d
gaim_notify_warning	gaim-compat.h	1163;"	d
gaim_ntlm_gen_type1	gaim-compat.h	1176;"	d
gaim_ntlm_gen_type3	gaim-compat.h	1178;"	d
gaim_ntlm_parse_type2	gaim-compat.h	1177;"	d
gaim_plugin_action_free	gaim-compat.h	1271;"	d
gaim_plugin_action_new	gaim-compat.h	1270;"	d
gaim_plugin_destroy	gaim-compat.h	1225;"	d
gaim_plugin_get_author	gaim-compat.h	1233;"	d
gaim_plugin_get_description	gaim-compat.h	1232;"	d
gaim_plugin_get_homepage	gaim-compat.h	1234;"	d
gaim_plugin_get_id	gaim-compat.h	1228;"	d
gaim_plugin_get_name	gaim-compat.h	1229;"	d
gaim_plugin_get_summary	gaim-compat.h	1231;"	d
gaim_plugin_get_version	gaim-compat.h	1230;"	d
gaim_plugin_ipc_call	gaim-compat.h	1240;"	d
gaim_plugin_ipc_get_params	gaim-compat.h	1239;"	d
gaim_plugin_ipc_register	gaim-compat.h	1236;"	d
gaim_plugin_ipc_unregister	gaim-compat.h	1237;"	d
gaim_plugin_ipc_unregister_all	gaim-compat.h	1238;"	d
gaim_plugin_is_loaded	gaim-compat.h	1226;"	d
gaim_plugin_is_unloadable	gaim-compat.h	1227;"	d
gaim_plugin_load	gaim-compat.h	1222;"	d
gaim_plugin_new	gaim-compat.h	1219;"	d
gaim_plugin_pref_add_choice	gaim-compat.h	1309;"	d
gaim_plugin_pref_destroy	gaim-compat.h	1300;"	d
gaim_plugin_pref_frame_add	gaim-compat.h	1293;"	d
gaim_plugin_pref_frame_destroy	gaim-compat.h	1292;"	d
gaim_plugin_pref_frame_get_prefs	gaim-compat.h	1294;"	d
gaim_plugin_pref_frame_new	gaim-compat.h	1291;"	d
gaim_plugin_pref_get_bounds	gaim-compat.h	1306;"	d
gaim_plugin_pref_get_choices	gaim-compat.h	1310;"	d
gaim_plugin_pref_get_format_type	gaim-compat.h	1316;"	d
gaim_plugin_pref_get_label	gaim-compat.h	1304;"	d
gaim_plugin_pref_get_masked	gaim-compat.h	1314;"	d
gaim_plugin_pref_get_max_length	gaim-compat.h	1312;"	d
gaim_plugin_pref_get_name	gaim-compat.h	1302;"	d
gaim_plugin_pref_get_type	gaim-compat.h	1308;"	d
gaim_plugin_pref_new	gaim-compat.h	1296;"	d
gaim_plugin_pref_new_with_label	gaim-compat.h	1298;"	d
gaim_plugin_pref_new_with_name	gaim-compat.h	1297;"	d
gaim_plugin_pref_new_with_name_and_label	gaim-compat.h	1299;"	d
gaim_plugin_pref_set_bounds	gaim-compat.h	1305;"	d
gaim_plugin_pref_set_format_type	gaim-compat.h	1315;"	d
gaim_plugin_pref_set_label	gaim-compat.h	1303;"	d
gaim_plugin_pref_set_masked	gaim-compat.h	1313;"	d
gaim_plugin_pref_set_max_length	gaim-compat.h	1311;"	d
gaim_plugin_pref_set_name	gaim-compat.h	1301;"	d
gaim_plugin_pref_set_type	gaim-compat.h	1307;"	d
gaim_plugin_probe	gaim-compat.h	1220;"	d
gaim_plugin_register	gaim-compat.h	1221;"	d
gaim_plugin_reload	gaim-compat.h	1224;"	d
gaim_plugin_unload	gaim-compat.h	1223;"	d
gaim_plugins_add_search_path	gaim-compat.h	1242;"	d
gaim_plugins_destroy_all	gaim-compat.h	1244;"	d
gaim_plugins_enabled	gaim-compat.h	1248;"	d
gaim_plugins_find_with_basename	gaim-compat.h	1259;"	d
gaim_plugins_find_with_filename	gaim-compat.h	1258;"	d
gaim_plugins_find_with_id	gaim-compat.h	1260;"	d
gaim_plugins_find_with_name	gaim-compat.h	1257;"	d
gaim_plugins_get_all	gaim-compat.h	1264;"	d
gaim_plugins_get_handle	gaim-compat.h	1266;"	d
gaim_plugins_get_loaded	gaim-compat.h	1262;"	d
gaim_plugins_get_protocols	gaim-compat.h	1263;"	d
gaim_plugins_init	gaim-compat.h	1267;"	d
gaim_plugins_load_saved	gaim-compat.h	1246;"	d
gaim_plugins_probe	gaim-compat.h	1247;"	d
gaim_plugins_register_load_notify_cb	gaim-compat.h	1252;"	d
gaim_plugins_register_probe_notify_cb	gaim-compat.h	1250;"	d
gaim_plugins_register_unload_notify_cb	gaim-compat.h	1254;"	d
gaim_plugins_save_loaded	gaim-compat.h	1245;"	d
gaim_plugins_uninit	gaim-compat.h	1268;"	d
gaim_plugins_unload_all	gaim-compat.h	1243;"	d
gaim_plugins_unregister_load_notify_cb	gaim-compat.h	1253;"	d
gaim_plugins_unregister_probe_notify_cb	gaim-compat.h	1251;"	d
gaim_plugins_unregister_unload_notify_cb	gaim-compat.h	1255;"	d
gaim_pounce_action_get_attribute	gaim-compat.h	1359;"	d
gaim_pounce_action_is_enabled	gaim-compat.h	1358;"	d
gaim_pounce_action_register	gaim-compat.h	1349;"	d
gaim_pounce_action_set_attribute	gaim-compat.h	1351;"	d
gaim_pounce_action_set_enabled	gaim-compat.h	1350;"	d
gaim_pounce_destroy	gaim-compat.h	1342;"	d
gaim_pounce_destroy_all_by_account	gaim-compat.h	1343;"	d
gaim_pounce_execute	gaim-compat.h	1361;"	d
gaim_pounce_get_data	gaim-compat.h	1360;"	d
gaim_pounce_get_events	gaim-compat.h	1353;"	d
gaim_pounce_get_options	gaim-compat.h	1354;"	d
gaim_pounce_get_pouncee	gaim-compat.h	1356;"	d
gaim_pounce_get_pouncer	gaim-compat.h	1355;"	d
gaim_pounce_get_save	gaim-compat.h	1357;"	d
gaim_pounce_new	gaim-compat.h	1341;"	d
gaim_pounce_set_data	gaim-compat.h	1352;"	d
gaim_pounce_set_events	gaim-compat.h	1344;"	d
gaim_pounce_set_options	gaim-compat.h	1345;"	d
gaim_pounce_set_pouncee	gaim-compat.h	1347;"	d
gaim_pounce_set_pouncer	gaim-compat.h	1346;"	d
gaim_pounce_set_save	gaim-compat.h	1348;"	d
gaim_pounces_get_all	gaim-compat.h	1367;"	d
gaim_pounces_get_handle	gaim-compat.h	1368;"	d
gaim_pounces_init	gaim-compat.h	1369;"	d
gaim_pounces_load	gaim-compat.h	1364;"	d
gaim_pounces_register_handler	gaim-compat.h	1365;"	d
gaim_pounces_uninit	gaim-compat.h	1370;"	d
gaim_pounces_unregister_handler	gaim-compat.h	1366;"	d
gaim_prefs_add_bool	gaim-compat.h	1390;"	d
gaim_prefs_add_int	gaim-compat.h	1391;"	d
gaim_prefs_add_none	gaim-compat.h	1389;"	d
gaim_prefs_add_path	gaim-compat.h	1394;"	d
gaim_prefs_add_path_list	gaim-compat.h	1395;"	d
gaim_prefs_add_string	gaim-compat.h	1392;"	d
gaim_prefs_add_string_list	gaim-compat.h	1393;"	d
gaim_prefs_connect_callback	gaim-compat.h	1415;"	d
gaim_prefs_destroy	gaim-compat.h	1399;"	d
gaim_prefs_disconnect_by_handle	gaim-compat.h	1417;"	d
gaim_prefs_disconnect_callback	gaim-compat.h	1416;"	d
gaim_prefs_exists	gaim-compat.h	1407;"	d
gaim_prefs_get_bool	gaim-compat.h	1409;"	d
gaim_prefs_get_handle	gaim-compat.h	1386;"	d
gaim_prefs_get_int	gaim-compat.h	1410;"	d
gaim_prefs_get_path	gaim-compat.h	1413;"	d
gaim_prefs_get_path_list	gaim-compat.h	1414;"	d
gaim_prefs_get_string	gaim-compat.h	1411;"	d
gaim_prefs_get_string_list	gaim-compat.h	1412;"	d
gaim_prefs_get_type	gaim-compat.h	1408;"	d
gaim_prefs_init	gaim-compat.h	1387;"	d
gaim_prefs_load	gaim-compat.h	1419;"	d
gaim_prefs_remove	gaim-compat.h	1396;"	d
gaim_prefs_rename	gaim-compat.h	1397;"	d
gaim_prefs_rename_boolean_toggle	gaim-compat.h	1398;"	d
gaim_prefs_set_bool	gaim-compat.h	1401;"	d
gaim_prefs_set_generic	gaim-compat.h	1400;"	d
gaim_prefs_set_int	gaim-compat.h	1402;"	d
gaim_prefs_set_path	gaim-compat.h	1405;"	d
gaim_prefs_set_path_list	gaim-compat.h	1406;"	d
gaim_prefs_set_string	gaim-compat.h	1403;"	d
gaim_prefs_set_string_list	gaim-compat.h	1404;"	d
gaim_prefs_trigger_callback	gaim-compat.h	1418;"	d
gaim_prefs_uninit	gaim-compat.h	1388;"	d
gaim_prefs_update_old	gaim-compat.h	1420;"	d
gaim_presence_add_list	gaim-compat.h	1988;"	d
gaim_presence_add_status	gaim-compat.h	1987;"	d
gaim_presence_compare	gaim-compat.h	2008;"	d
gaim_presence_destroy	gaim-compat.h	1986;"	d
gaim_presence_get_account	gaim-compat.h	1994;"	d
gaim_presence_get_active_status	gaim-compat.h	1999;"	d
gaim_presence_get_chat_user	gaim-compat.h	1996;"	d
gaim_presence_get_context	gaim-compat.h	1993;"	d
gaim_presence_get_conversation	gaim-compat.h	1995;"	d
gaim_presence_get_idle_time	gaim-compat.h	2006;"	d
gaim_presence_get_login_time	gaim-compat.h	2007;"	d
gaim_presence_get_status	gaim-compat.h	1998;"	d
gaim_presence_get_statuses	gaim-compat.h	1997;"	d
gaim_presence_is_available	gaim-compat.h	2000;"	d
gaim_presence_is_idle	gaim-compat.h	2005;"	d
gaim_presence_is_online	gaim-compat.h	2001;"	d
gaim_presence_is_status_active	gaim-compat.h	2002;"	d
gaim_presence_is_status_primitive_active	gaim-compat.h	2003;"	d
gaim_presence_new	gaim-compat.h	1982;"	d
gaim_presence_new_for_account	gaim-compat.h	1983;"	d
gaim_presence_new_for_buddy	gaim-compat.h	1985;"	d
gaim_presence_new_for_conv	gaim-compat.h	1984;"	d
gaim_presence_set_idle	gaim-compat.h	1991;"	d
gaim_presence_set_login_time	gaim-compat.h	1992;"	d
gaim_presence_set_status_active	gaim-compat.h	1989;"	d
gaim_presence_switch_status	gaim-compat.h	1990;"	d
gaim_primitive_get_id_from_type	gaim-compat.h	1928;"	d
gaim_primitive_get_name_from_type	gaim-compat.h	1929;"	d
gaim_primitive_get_type_from_id	gaim-compat.h	1930;"	d
gaim_print_utf8_to_console	gaim-compat.h	2173;"	d
gaim_privacy_allow	gaim-compat.h	1437;"	d
gaim_privacy_check	gaim-compat.h	1439;"	d
gaim_privacy_deny	gaim-compat.h	1438;"	d
gaim_privacy_deny_add	gaim-compat.h	1435;"	d
gaim_privacy_deny_remove	gaim-compat.h	1436;"	d
gaim_privacy_get_ui_ops	gaim-compat.h	1441;"	d
gaim_privacy_init	gaim-compat.h	1442;"	d
gaim_privacy_permit_add	gaim-compat.h	1433;"	d
gaim_privacy_permit_remove	gaim-compat.h	1434;"	d
gaim_privacy_set_ui_ops	gaim-compat.h	1440;"	d
gaim_program_is_valid	gaim-compat.h	2118;"	d
gaim_proxy_connect	gaim-compat.h	1478;"	d
gaim_proxy_connect_cancel	gaim-compat.h	1480;"	d
gaim_proxy_connect_cancel_with_handle	gaim-compat.h	1481;"	d
gaim_proxy_connect_socks5	gaim-compat.h	1479;"	d
gaim_proxy_get_handle	gaim-compat.h	1473;"	d
gaim_proxy_get_setup	gaim-compat.h	1476;"	d
gaim_proxy_info_destroy	gaim-compat.h	1460;"	d
gaim_proxy_info_get_host	gaim-compat.h	1467;"	d
gaim_proxy_info_get_password	gaim-compat.h	1470;"	d
gaim_proxy_info_get_port	gaim-compat.h	1468;"	d
gaim_proxy_info_get_type	gaim-compat.h	1466;"	d
gaim_proxy_info_get_username	gaim-compat.h	1469;"	d
gaim_proxy_info_new	gaim-compat.h	1459;"	d
gaim_proxy_info_set_host	gaim-compat.h	1462;"	d
gaim_proxy_info_set_password	gaim-compat.h	1465;"	d
gaim_proxy_info_set_port	gaim-compat.h	1463;"	d
gaim_proxy_info_set_type	gaim-compat.h	1461;"	d
gaim_proxy_info_set_username	gaim-compat.h	1464;"	d
gaim_proxy_init	gaim-compat.h	1474;"	d
gaim_proxy_uninit	gaim-compat.h	1475;"	d
gaim_prpl_change_account_status	gaim-compat.h	1505;"	d
gaim_prpl_get_statuses	gaim-compat.h	1506;"	d
gaim_prpl_got_account_idle	gaim-compat.h	1499;"	d
gaim_prpl_got_account_login_time	gaim-compat.h	1500;"	d
gaim_prpl_got_account_status	gaim-compat.h	1501;"	d
gaim_prpl_got_user_idle	gaim-compat.h	1502;"	d
gaim_prpl_got_user_login_time	gaim-compat.h	1503;"	d
gaim_prpl_got_user_status	gaim-compat.h	1504;"	d
gaim_quotedp_decode	gaim-compat.h	2081;"	d
gaim_request_accept_cancel	gaim-compat.h	1662;"	d
gaim_request_action	gaim-compat.h	1654;"	d
gaim_request_action_varg	gaim-compat.h	1655;"	d
gaim_request_choice	gaim-compat.h	1652;"	d
gaim_request_choice_varg	gaim-compat.h	1653;"	d
gaim_request_close	gaim-compat.h	1657;"	d
gaim_request_close_with_handle	gaim-compat.h	1658;"	d
gaim_request_field_account_get_default_value	gaim-compat.h	1646;"	d
gaim_request_field_account_get_filter	gaim-compat.h	1649;"	d
gaim_request_field_account_get_show_all	gaim-compat.h	1648;"	d
gaim_request_field_account_get_value	gaim-compat.h	1647;"	d
gaim_request_field_account_new	gaim-compat.h	1641;"	d
gaim_request_field_account_set_default_value	gaim-compat.h	1642;"	d
gaim_request_field_account_set_filter	gaim-compat.h	1645;"	d
gaim_request_field_account_set_show_all	gaim-compat.h	1644;"	d
gaim_request_field_account_set_value	gaim-compat.h	1643;"	d
gaim_request_field_bool_get_default_value	gaim-compat.h	1606;"	d
gaim_request_field_bool_get_value	gaim-compat.h	1608;"	d
gaim_request_field_bool_new	gaim-compat.h	1602;"	d
gaim_request_field_bool_set_default_value	gaim-compat.h	1603;"	d
gaim_request_field_bool_set_value	gaim-compat.h	1605;"	d
gaim_request_field_choice_add	gaim-compat.h	1611;"	d
gaim_request_field_choice_get_default_value	gaim-compat.h	1615;"	d
gaim_request_field_choice_get_labels	gaim-compat.h	1618;"	d
gaim_request_field_choice_get_value	gaim-compat.h	1617;"	d
gaim_request_field_choice_new	gaim-compat.h	1610;"	d
gaim_request_field_choice_set_default_value	gaim-compat.h	1612;"	d
gaim_request_field_choice_set_value	gaim-compat.h	1614;"	d
gaim_request_field_destroy	gaim-compat.h	1569;"	d
gaim_request_field_get_id	gaim-compat.h	1575;"	d
gaim_request_field_get_label	gaim-compat.h	1576;"	d
gaim_request_field_get_type	gaim-compat.h	1574;"	d
gaim_request_field_get_type_hint	gaim-compat.h	1578;"	d
gaim_request_field_group_add_field	gaim-compat.h	1564;"	d
gaim_request_field_group_destroy	gaim-compat.h	1563;"	d
gaim_request_field_group_get_fields	gaim-compat.h	1566;"	d
gaim_request_field_group_get_title	gaim-compat.h	1565;"	d
gaim_request_field_group_new	gaim-compat.h	1562;"	d
gaim_request_field_image_get_buffer	gaim-compat.h	1636;"	d
gaim_request_field_image_get_scale_x	gaim-compat.h	1638;"	d
gaim_request_field_image_get_scale_y	gaim-compat.h	1639;"	d
gaim_request_field_image_get_size	gaim-compat.h	1637;"	d
gaim_request_field_image_new	gaim-compat.h	1634;"	d
gaim_request_field_image_set_scale	gaim-compat.h	1635;"	d
gaim_request_field_int_get_default_value	gaim-compat.h	1598;"	d
gaim_request_field_int_get_value	gaim-compat.h	1600;"	d
gaim_request_field_int_new	gaim-compat.h	1594;"	d
gaim_request_field_int_set_default_value	gaim-compat.h	1595;"	d
gaim_request_field_int_set_value	gaim-compat.h	1597;"	d
gaim_request_field_is_required	gaim-compat.h	1579;"	d
gaim_request_field_is_visible	gaim-compat.h	1577;"	d
gaim_request_field_label_new	gaim-compat.h	1632;"	d
gaim_request_field_list_add	gaim-compat.h	1624;"	d
gaim_request_field_list_add_selected	gaim-compat.h	1625;"	d
gaim_request_field_list_clear_selected	gaim-compat.h	1626;"	d
gaim_request_field_list_get_data	gaim-compat.h	1623;"	d
gaim_request_field_list_get_items	gaim-compat.h	1630;"	d
gaim_request_field_list_get_multi_select	gaim-compat.h	1622;"	d
gaim_request_field_list_get_selected	gaim-compat.h	1629;"	d
gaim_request_field_list_is_selected	gaim-compat.h	1628;"	d
gaim_request_field_list_new	gaim-compat.h	1620;"	d
gaim_request_field_list_set_multi_select	gaim-compat.h	1621;"	d
gaim_request_field_list_set_selected	gaim-compat.h	1627;"	d
gaim_request_field_new	gaim-compat.h	1568;"	d
gaim_request_field_set_label	gaim-compat.h	1570;"	d
gaim_request_field_set_required	gaim-compat.h	1573;"	d
gaim_request_field_set_type_hint	gaim-compat.h	1572;"	d
gaim_request_field_set_visible	gaim-compat.h	1571;"	d
gaim_request_field_string_get_default_value	gaim-compat.h	1587;"	d
gaim_request_field_string_get_value	gaim-compat.h	1589;"	d
gaim_request_field_string_is_editable	gaim-compat.h	1592;"	d
gaim_request_field_string_is_masked	gaim-compat.h	1591;"	d
gaim_request_field_string_is_multiline	gaim-compat.h	1590;"	d
gaim_request_field_string_new	gaim-compat.h	1581;"	d
gaim_request_field_string_set_default_value	gaim-compat.h	1582;"	d
gaim_request_field_string_set_editable	gaim-compat.h	1586;"	d
gaim_request_field_string_set_masked	gaim-compat.h	1585;"	d
gaim_request_field_string_set_value	gaim-compat.h	1584;"	d
gaim_request_fields	gaim-compat.h	1656;"	d
gaim_request_fields_add_group	gaim-compat.h	1549;"	d
gaim_request_fields_all_required_filled	gaim-compat.h	1554;"	d
gaim_request_fields_destroy	gaim-compat.h	1548;"	d
gaim_request_fields_exists	gaim-compat.h	1551;"	d
gaim_request_fields_get_account	gaim-compat.h	1560;"	d
gaim_request_fields_get_bool	gaim-compat.h	1558;"	d
gaim_request_fields_get_choice	gaim-compat.h	1559;"	d
gaim_request_fields_get_field	gaim-compat.h	1555;"	d
gaim_request_fields_get_groups	gaim-compat.h	1550;"	d
gaim_request_fields_get_integer	gaim-compat.h	1557;"	d
gaim_request_fields_get_required	gaim-compat.h	1552;"	d
gaim_request_fields_get_string	gaim-compat.h	1556;"	d
gaim_request_fields_is_field_required	gaim-compat.h	1553;"	d
gaim_request_fields_new	gaim-compat.h	1547;"	d
gaim_request_file	gaim-compat.h	1664;"	d
gaim_request_folder	gaim-compat.h	1665;"	d
gaim_request_get_ui_ops	gaim-compat.h	1668;"	d
gaim_request_input	gaim-compat.h	1651;"	d
gaim_request_ok_cancel	gaim-compat.h	1661;"	d
gaim_request_set_ui_ops	gaim-compat.h	1667;"	d
gaim_request_yes_no	gaim-compat.h	1660;"	d
gaim_roomlist_cancel_get_list	gaim-compat.h	1696;"	d
gaim_roomlist_expand_category	gaim-compat.h	1697;"	d
gaim_roomlist_field_new	gaim-compat.h	1702;"	d
gaim_roomlist_get_in_progress	gaim-compat.h	1692;"	d
gaim_roomlist_get_list	gaim-compat.h	1695;"	d
gaim_roomlist_get_ui_ops	gaim-compat.h	1705;"	d
gaim_roomlist_new	gaim-compat.h	1687;"	d
gaim_roomlist_ref	gaim-compat.h	1688;"	d
gaim_roomlist_room_add	gaim-compat.h	1693;"	d
gaim_roomlist_room_add_field	gaim-compat.h	1700;"	d
gaim_roomlist_room_join	gaim-compat.h	1701;"	d
gaim_roomlist_room_new	gaim-compat.h	1699;"	d
gaim_roomlist_set_fields	gaim-compat.h	1690;"	d
gaim_roomlist_set_in_progress	gaim-compat.h	1691;"	d
gaim_roomlist_set_ui_ops	gaim-compat.h	1704;"	d
gaim_roomlist_show_with_account	gaim-compat.h	1686;"	d
gaim_roomlist_unref	gaim-compat.h	1689;"	d
gaim_running_gnome	gaim-compat.h	2120;"	d
gaim_running_kde	gaim-compat.h	2121;"	d
gaim_running_osx	gaim-compat.h	2122;"	d
gaim_savedstatus_activate	gaim-compat.h	1742;"	d
gaim_savedstatus_activate_for_account	gaim-compat.h	1743;"	d
gaim_savedstatus_delete	gaim-compat.h	1718;"	d
gaim_savedstatus_find	gaim-compat.h	1728;"	d
gaim_savedstatus_find_by_creation_time	gaim-compat.h	1729;"	d
gaim_savedstatus_find_transient_by_type_and_message	gaim-compat.h	1730;"	d
gaim_savedstatus_get_creation_time	gaim-compat.h	1737;"	d
gaim_savedstatus_get_current	gaim-compat.h	1722;"	d
gaim_savedstatus_get_default	gaim-compat.h	1723;"	d
gaim_savedstatus_get_idleaway	gaim-compat.h	1724;"	d
gaim_savedstatus_get_message	gaim-compat.h	1736;"	d
gaim_savedstatus_get_startup	gaim-compat.h	1727;"	d
gaim_savedstatus_get_substatus	gaim-compat.h	1739;"	d
gaim_savedstatus_get_title	gaim-compat.h	1734;"	d
gaim_savedstatus_get_type	gaim-compat.h	1735;"	d
gaim_savedstatus_has_substatuses	gaim-compat.h	1738;"	d
gaim_savedstatus_is_idleaway	gaim-compat.h	1725;"	d
gaim_savedstatus_is_transient	gaim-compat.h	1733;"	d
gaim_savedstatus_new	gaim-compat.h	1712;"	d
gaim_savedstatus_set_idleaway	gaim-compat.h	1726;"	d
gaim_savedstatus_set_message	gaim-compat.h	1715;"	d
gaim_savedstatus_set_substatus	gaim-compat.h	1716;"	d
gaim_savedstatus_set_title	gaim-compat.h	1713;"	d
gaim_savedstatus_set_type	gaim-compat.h	1714;"	d
gaim_savedstatus_substatus_get_message	gaim-compat.h	1741;"	d
gaim_savedstatus_substatus_get_type	gaim-compat.h	1740;"	d
gaim_savedstatus_unset_substatus	gaim-compat.h	1717;"	d
gaim_savedstatuses_get_all	gaim-compat.h	1720;"	d
gaim_savedstatuses_get_handle	gaim-compat.h	1745;"	d
gaim_savedstatuses_get_popular	gaim-compat.h	1721;"	d
gaim_savedstatuses_init	gaim-compat.h	1746;"	d
gaim_savedstatuses_uninit	gaim-compat.h	1747;"	d
gaim_set_blist	gaim-compat.h	222;"	d
gaim_signal_connect	gaim-compat.h	1767;"	d
gaim_signal_connect_priority	gaim-compat.h	1766;"	d
gaim_signal_connect_priority_vargs	gaim-compat.h	1768;"	d
gaim_signal_connect_vargs	gaim-compat.h	1769;"	d
gaim_signal_disconnect	gaim-compat.h	1770;"	d
gaim_signal_emit	gaim-compat.h	1774;"	d
gaim_signal_emit_return_1	gaim-compat.h	1776;"	d
gaim_signal_emit_vargs	gaim-compat.h	1775;"	d
gaim_signal_emit_vargs_return_1	gaim-compat.h	1777;"	d
gaim_signal_get_values	gaim-compat.h	1765;"	d
gaim_signal_register	gaim-compat.h	1760;"	d
gaim_signal_unregister	gaim-compat.h	1761;"	d
gaim_signals_disconnect_by_handle	gaim-compat.h	1772;"	d
gaim_signals_init	gaim-compat.h	1779;"	d
gaim_signals_uninit	gaim-compat.h	1780;"	d
gaim_signals_unregister_by_instance	gaim-compat.h	1763;"	d
gaim_sound_get_ui_ops	gaim-compat.h	1870;"	d
gaim_sound_init	gaim-compat.h	1871;"	d
gaim_sound_play_event	gaim-compat.h	1868;"	d
gaim_sound_play_file	gaim-compat.h	1867;"	d
gaim_sound_set_ui_ops	gaim-compat.h	1869;"	d
gaim_sound_uninit	gaim-compat.h	1872;"	d
gaim_sounds_get_handle	gaim-compat.h	1874;"	d
gaim_srv_cancel	gaim-compat.h	848;"	d
gaim_srv_resolve	gaim-compat.h	847;"	d
gaim_ssl_close	gaim-compat.h	1895;"	d
gaim_ssl_connect	gaim-compat.h	1892;"	d
gaim_ssl_connect_fd	gaim-compat.h	1893;"	d
gaim_ssl_get_ops	gaim-compat.h	1900;"	d
gaim_ssl_init	gaim-compat.h	1901;"	d
gaim_ssl_input_add	gaim-compat.h	1894;"	d
gaim_ssl_is_supported	gaim-compat.h	1891;"	d
gaim_ssl_read	gaim-compat.h	1896;"	d
gaim_ssl_set_ops	gaim-compat.h	1899;"	d
gaim_ssl_uninit	gaim-compat.h	1902;"	d
gaim_ssl_write	gaim-compat.h	1897;"	d
gaim_status_attr_destroy	gaim-compat.h	1954;"	d
gaim_status_attr_get_id	gaim-compat.h	1955;"	d
gaim_status_attr_get_name	gaim-compat.h	1956;"	d
gaim_status_attr_get_value	gaim-compat.h	1957;"	d
gaim_status_attr_new	gaim-compat.h	1953;"	d
gaim_status_compare	gaim-compat.h	1980;"	d
gaim_status_destroy	gaim-compat.h	1960;"	d
gaim_status_get_attr_boolean	gaim-compat.h	1977;"	d
gaim_status_get_attr_int	gaim-compat.h	1978;"	d
gaim_status_get_attr_string	gaim-compat.h	1979;"	d
gaim_status_get_attr_value	gaim-compat.h	1976;"	d
gaim_status_get_handle	gaim-compat.h	2010;"	d
gaim_status_get_id	gaim-compat.h	1969;"	d
gaim_status_get_name	gaim-compat.h	1970;"	d
gaim_status_get_presence	gaim-compat.h	1968;"	d
gaim_status_get_type	gaim-compat.h	1967;"	d
gaim_status_init	gaim-compat.h	2011;"	d
gaim_status_is_active	gaim-compat.h	1974;"	d
gaim_status_is_available	gaim-compat.h	1973;"	d
gaim_status_is_exclusive	gaim-compat.h	1972;"	d
gaim_status_is_independent	gaim-compat.h	1971;"	d
gaim_status_is_online	gaim-compat.h	1975;"	d
gaim_status_new	gaim-compat.h	1959;"	d
gaim_status_set_active	gaim-compat.h	1961;"	d
gaim_status_set_active_with_attrs	gaim-compat.h	1962;"	d
gaim_status_set_active_with_attrs_list	gaim-compat.h	1963;"	d
gaim_status_set_attr_boolean	gaim-compat.h	1964;"	d
gaim_status_set_attr_int	gaim-compat.h	1965;"	d
gaim_status_set_attr_string	gaim-compat.h	1966;"	d
gaim_status_type_add_attr	gaim-compat.h	1937;"	d
gaim_status_type_add_attrs	gaim-compat.h	1938;"	d
gaim_status_type_add_attrs_vargs	gaim-compat.h	1939;"	d
gaim_status_type_destroy	gaim-compat.h	1935;"	d
gaim_status_type_find_with_id	gaim-compat.h	1951;"	d
gaim_status_type_get_attr	gaim-compat.h	1949;"	d
gaim_status_type_get_attrs	gaim-compat.h	1950;"	d
gaim_status_type_get_id	gaim-compat.h	1941;"	d
gaim_status_type_get_name	gaim-compat.h	1942;"	d
gaim_status_type_get_primary_attr	gaim-compat.h	1948;"	d
gaim_status_type_get_primitive	gaim-compat.h	1940;"	d
gaim_status_type_is_available	gaim-compat.h	1947;"	d
gaim_status_type_is_exclusive	gaim-compat.h	1946;"	d
gaim_status_type_is_independent	gaim-compat.h	1945;"	d
gaim_status_type_is_saveable	gaim-compat.h	1943;"	d
gaim_status_type_is_user_settable	gaim-compat.h	1944;"	d
gaim_status_type_new	gaim-compat.h	1933;"	d
gaim_status_type_new_full	gaim-compat.h	1932;"	d
gaim_status_type_new_with_attrs	gaim-compat.h	1934;"	d
gaim_status_type_set_primary_attr	gaim-compat.h	1936;"	d
gaim_status_uninit	gaim-compat.h	2012;"	d
gaim_str_add_cr	gaim-compat.h	2133;"	d
gaim_str_binary_to_ascii	gaim-compat.h	2148;"	d
gaim_str_has_prefix	gaim-compat.h	2131;"	d
gaim_str_has_suffix	gaim-compat.h	2132;"	d
gaim_str_seconds_to_string	gaim-compat.h	2147;"	d
gaim_str_size_to_units	gaim-compat.h	2146;"	d
gaim_str_strip_char	gaim-compat.h	2134;"	d
gaim_str_to_time	gaim-compat.h	2094;"	d
gaim_strcasereplace	gaim-compat.h	2143;"	d
gaim_strcasestr	gaim-compat.h	2144;"	d
gaim_strdup_withhtml	gaim-compat.h	2129;"	d
gaim_stringref_cmp	gaim-compat.h	2024;"	d
gaim_stringref_len	gaim-compat.h	2025;"	d
gaim_stringref_new	gaim-compat.h	2018;"	d
gaim_stringref_new_noref	gaim-compat.h	2019;"	d
gaim_stringref_printf	gaim-compat.h	2020;"	d
gaim_stringref_ref	gaim-compat.h	2021;"	d
gaim_stringref_unref	gaim-compat.h	2022;"	d
gaim_stringref_value	gaim-compat.h	2023;"	d
gaim_strreplace	gaim-compat.h	2138;"	d
gaim_stun_discover	gaim-compat.h	2048;"	d
gaim_stun_init	gaim-compat.h	2049;"	d
gaim_text_strip_mnemonic	gaim-compat.h	2177;"	d
gaim_time_build	gaim-compat.h	2090;"	d
gaim_time_format	gaim-compat.h	2089;"	d
gaim_timeout_add	gaim-compat.h	859;"	d
gaim_timeout_remove	gaim-compat.h	860;"	d
gaim_unescape_filename	gaim-compat.h	2179;"	d
gaim_unescape_html	gaim-compat.h	2103;"	d
gaim_upnp_cancel_port_mapping	gaim-compat.h	2060;"	d
gaim_upnp_discover	gaim-compat.h	2058;"	d
gaim_upnp_get_public_ip	gaim-compat.h	2059;"	d
gaim_upnp_remove_port_mapping	gaim-compat.h	2063;"	d
gaim_upnp_set_port_mapping	gaim-compat.h	2061;"	d
gaim_uri_list_extract_filenames	gaim-compat.h	2166;"	d
gaim_uri_list_extract_uris	gaim-compat.h	2165;"	d
gaim_url_decode	gaim-compat.h	2160;"	d
gaim_url_encode	gaim-compat.h	2161;"	d
gaim_url_parse	gaim-compat.h	2153;"	d
gaim_user_dir	gaim-compat.h	2106;"	d
gaim_utf8_has_word	gaim-compat.h	2171;"	d
gaim_utf8_ncr_decode	gaim-compat.h	2141;"	d
gaim_utf8_ncr_encode	gaim-compat.h	2140;"	d
gaim_utf8_salvage	gaim-compat.h	2169;"	d
gaim_utf8_strcasecmp	gaim-compat.h	2170;"	d
gaim_utf8_strftime	gaim-compat.h	2085;"	d
gaim_utf8_try_convert	gaim-compat.h	2168;"	d
gaim_util_chrreplace	gaim-compat.h	2136;"	d
gaim_util_fetch_url	gaim-compat.h	2156;"	d
gaim_util_fetch_url_cancel	gaim-compat.h	2158;"	d
gaim_util_fetch_url_request	gaim-compat.h	2157;"	d
gaim_util_read_xml_from_file	gaim-compat.h	2114;"	d
gaim_util_set_user_dir	gaim-compat.h	2108;"	d
gaim_util_write_data_to_file	gaim-compat.h	2112;"	d
gaim_value_destroy	gaim-compat.h	2229;"	d
gaim_value_dup	gaim-compat.h	2230;"	d
gaim_value_get_boolean	gaim-compat.h	2253;"	d
gaim_value_get_boxed	gaim-compat.h	2266;"	d
gaim_value_get_char	gaim-compat.h	2251;"	d
gaim_value_get_enum	gaim-compat.h	2265;"	d
gaim_value_get_int	gaim-compat.h	2256;"	d
gaim_value_get_int64	gaim-compat.h	2260;"	d
gaim_value_get_long	gaim-compat.h	2258;"	d
gaim_value_get_object	gaim-compat.h	2263;"	d
gaim_value_get_pointer	gaim-compat.h	2264;"	d
gaim_value_get_short	gaim-compat.h	2254;"	d
gaim_value_get_specific_type	gaim-compat.h	2233;"	d
gaim_value_get_string	gaim-compat.h	2262;"	d
gaim_value_get_subtype	gaim-compat.h	2232;"	d
gaim_value_get_uchar	gaim-compat.h	2252;"	d
gaim_value_get_uint	gaim-compat.h	2257;"	d
gaim_value_get_uint64	gaim-compat.h	2261;"	d
gaim_value_get_ulong	gaim-compat.h	2259;"	d
gaim_value_get_ushort	gaim-compat.h	2255;"	d
gaim_value_is_outgoing	gaim-compat.h	2234;"	d
gaim_value_new	gaim-compat.h	2227;"	d
gaim_value_new_outgoing	gaim-compat.h	2228;"	d
gaim_value_purple_buddy_icon_get_extensionget_type	gaim-compat.h	2231;"	d
gaim_value_set_boolean	gaim-compat.h	2237;"	d
gaim_value_set_boxed	gaim-compat.h	2250;"	d
gaim_value_set_char	gaim-compat.h	2235;"	d
gaim_value_set_enum	gaim-compat.h	2249;"	d
gaim_value_set_int	gaim-compat.h	2240;"	d
gaim_value_set_int64	gaim-compat.h	2244;"	d
gaim_value_set_long	gaim-compat.h	2242;"	d
gaim_value_set_object	gaim-compat.h	2247;"	d
gaim_value_set_pointer	gaim-compat.h	2248;"	d
gaim_value_set_short	gaim-compat.h	2238;"	d
gaim_value_set_string	gaim-compat.h	2246;"	d
gaim_value_set_uchar	gaim-compat.h	2236;"	d
gaim_value_set_uint	gaim-compat.h	2241;"	d
gaim_value_set_uint64	gaim-compat.h	2245;"	d
gaim_value_set_ulong	gaim-compat.h	2243;"	d
gaim_value_set_ushort	gaim-compat.h	2239;"	d
gaim_whiteboard_clear	gaim-compat.h	2295;"	d
gaim_whiteboard_create	gaim-compat.h	2285;"	d
gaim_whiteboard_destroy	gaim-compat.h	2286;"	d
gaim_whiteboard_draw_line	gaim-compat.h	2294;"	d
gaim_whiteboard_draw_list_destroy	gaim-compat.h	2289;"	d
gaim_whiteboard_draw_point	gaim-compat.h	2292;"	d
gaim_whiteboard_get_brush	gaim-compat.h	2298;"	d
gaim_whiteboard_get_dimensions	gaim-compat.h	2290;"	d
gaim_whiteboard_get_session	gaim-compat.h	2288;"	d
gaim_whiteboard_send_brush	gaim-compat.h	2297;"	d
gaim_whiteboard_send_clear	gaim-compat.h	2296;"	d
gaim_whiteboard_send_draw_list	gaim-compat.h	2293;"	d
gaim_whiteboard_set_brush	gaim-compat.h	2299;"	d
gaim_whiteboard_set_dimensions	gaim-compat.h	2291;"	d
gaim_whiteboard_set_prpl_ops	gaim-compat.h	2283;"	d
gaim_whiteboard_set_ui_ops	gaim-compat.h	2282;"	d
gaim_whiteboard_start	gaim-compat.h	2287;"	d
gaim_xfer_add	gaim-compat.h	930;"	d
gaim_xfer_cancel_local	gaim-compat.h	931;"	d
gaim_xfer_cancel_remote	gaim-compat.h	932;"	d
gaim_xfer_conversation_write	gaim-compat.h	935;"	d
gaim_xfer_end	gaim-compat.h	929;"	d
gaim_xfer_error	gaim-compat.h	933;"	d
gaim_xfer_get_account	gaim-compat.h	896;"	d
gaim_xfer_get_bytes_remaining	gaim-compat.h	903;"	d
gaim_xfer_get_bytes_sent	gaim-compat.h	902;"	d
gaim_xfer_get_filename	gaim-compat.h	900;"	d
gaim_xfer_get_local_filename	gaim-compat.h	901;"	d
gaim_xfer_get_local_port	gaim-compat.h	906;"	d
gaim_xfer_get_progress	gaim-compat.h	905;"	d
gaim_xfer_get_remote_ip	gaim-compat.h	907;"	d
gaim_xfer_get_remote_port	gaim-compat.h	908;"	d
gaim_xfer_get_size	gaim-compat.h	904;"	d
gaim_xfer_get_status	gaim-compat.h	897;"	d
gaim_xfer_get_type	gaim-compat.h	895;"	d
gaim_xfer_get_ui_ops	gaim-compat.h	915;"	d
gaim_xfer_is_canceled	gaim-compat.h	898;"	d
gaim_xfer_is_completed	gaim-compat.h	899;"	d
gaim_xfer_new	gaim-compat.h	889;"	d
gaim_xfer_read	gaim-compat.h	926;"	d
gaim_xfer_ref	gaim-compat.h	890;"	d
gaim_xfer_request	gaim-compat.h	892;"	d
gaim_xfer_request_accepted	gaim-compat.h	893;"	d
gaim_xfer_request_denied	gaim-compat.h	894;"	d
gaim_xfer_set_ack_fnc	gaim-compat.h	918;"	d
gaim_xfer_set_bytes_sent	gaim-compat.h	914;"	d
gaim_xfer_set_cancel_recv_fnc	gaim-compat.h	924;"	d
gaim_xfer_set_cancel_send_fnc	gaim-compat.h	923;"	d
gaim_xfer_set_completed	gaim-compat.h	909;"	d
gaim_xfer_set_end_fnc	gaim-compat.h	922;"	d
gaim_xfer_set_filename	gaim-compat.h	911;"	d
gaim_xfer_set_init_fnc	gaim-compat.h	920;"	d
gaim_xfer_set_local_filename	gaim-compat.h	912;"	d
gaim_xfer_set_message	gaim-compat.h	910;"	d
gaim_xfer_set_read_fnc	gaim-compat.h	916;"	d
gaim_xfer_set_request_denied_fnc	gaim-compat.h	919;"	d
gaim_xfer_set_size	gaim-compat.h	913;"	d
gaim_xfer_set_start_fnc	gaim-compat.h	921;"	d
gaim_xfer_set_write_fnc	gaim-compat.h	917;"	d
gaim_xfer_start	gaim-compat.h	928;"	d
gaim_xfer_unref	gaim-compat.h	891;"	d
gaim_xfer_update_progress	gaim-compat.h	934;"	d
gaim_xfer_write	gaim-compat.h	927;"	d
gaim_xfers_get_handle	gaim-compat.h	937;"	d
gaim_xfers_get_ui_ops	gaim-compat.h	941;"	d
gaim_xfers_init	gaim-compat.h	938;"	d
gaim_xfers_set_ui_ops	gaim-compat.h	940;"	d
gaim_xfers_uninit	gaim-compat.h	939;"	d
garray_int_to_glist	purple-client.c	/^static GList *garray_int_to_glist(GArray *array)$/;"	f	file:	signature:(GArray *array)
garray_int_to_gslist	purple-client.c	/^static GSList *garray_int_to_gslist(GArray *array)$/;"	f	file:	signature:(GArray *array)
gc	account.h	/^	PurpleConnection *gc;         \/**< The connection handle.                 *\/$/;"	m	struct:_PurpleAccount	access:public
gc	server.c	/^	PurpleConnection *gc;$/;"	m	struct:chat_invite_data	file:	access:public
gc	server.c	/^	PurpleConnection *gc;$/;"	m	struct:last_auto_response	file:	access:public
gclist	stringref.c	/^static GList *gclist = NULL;$/;"	v	file:
generic	prefs.c	/^		gpointer generic;$/;"	m	union:purple_pref::__anon15	file:	access:public
gensesskey	ntlm.c	/^gensesskey(char *buffer, const char *oldkey)$/;"	f	file:	signature:(char *buffer, const char *oldkey)
get_account_text_table	prpl.h	/^	GHashTable *(*get_account_text_table)(PurpleAccount *account);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
get_attention_types	prpl.h	/^	GList *(*get_attention_types)(PurpleAccount *acct);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
get_available_params	media/backend-iface.h	/^	const gchar **(*get_available_params) (void);$/;"	m	struct:_PurpleMediaBackendIface	access:public
get_batch_mode	cipher.h	/^	PurpleCipherBatchMode (*get_batch_mode)(PurpleCipherContext *context);$/;"	m	struct:_PurpleCipherOps	access:public
get_block_size	cipher.h	/^	size_t (*get_block_size)(PurpleCipherContext *context);$/;"	m	struct:_PurpleCipherOps	access:public
get_brush	whiteboard.h	/^	void (*get_brush) (const PurpleWhiteboard *wb, int *size, int *color); \/**< get the brush size and color *\/$/;"	m	struct:_PurpleWhiteboardPrplOps	access:public
get_cb_away	prpl.h	/^	void (*get_cb_away)(PurpleConnection *, int, const char *who);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
get_cb_info	prpl.h	/^	void (*get_cb_info)(PurpleConnection *, int, const char *who);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
get_cb_real_name	prpl.h	/^	char *(*get_cb_real_name)(PurpleConnection *gc, int id, const char *who);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
get_cert	certificate.h	/^	PurpleCertificate * (* get_cert)(const gchar *id);$/;"	m	struct:_PurpleCertificatePool	access:public
get_chat_name	prpl.h	/^	char *(*get_chat_name)(GHashTable *components);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
get_codecs	media/backend-iface.h	/^	GList *(*get_codecs) (PurpleMediaBackend *self,$/;"	m	struct:_PurpleMediaBackendIface	access:public
get_dimensions	whiteboard.h	/^	void (*get_dimensions)(const PurpleWhiteboard *wb, int *width, int *height); \/**< get_dimensions function *\/$/;"	m	struct:_PurpleWhiteboardPrplOps	access:public
get_encoding	desktopitem.c	/^get_encoding (FILE *df)$/;"	f	file:	signature:(FILE *df)
get_encoding_from_locale	desktopitem.c	/^get_encoding_from_locale (const char *locale)$/;"	f	file:	signature:(const char *locale)
get_file_full_path	smiley.c	/^static char *get_file_full_path(const char *filename)$/;"	f	file:	signature:(const char *filename)
get_file_full_path	smiley.c	/^static char *get_file_full_path(const char *filename);$/;"	p	file:	signature:(const char *filename)
get_fingerprint_sha1	certificate.h	/^	GByteArray * (* get_fingerprint_sha1)(PurpleCertificate *crt);$/;"	m	struct:_PurpleCertificateScheme	access:public
get_idlist	certificate.h	/^	GList * (* get_idlist)(void);$/;"	m	struct:_PurpleCertificatePool	access:public
get_info	prpl.h	/^	void (*get_info)(PurpleConnection *, const char *who);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
get_issuer_unique_id	certificate.h	/^	gchar * (* get_issuer_unique_id)(PurpleCertificate *crt);$/;"	m	struct:_PurpleCertificateScheme	access:public
get_key_size	cipher.h	/^	size_t (*get_key_size)(PurpleCipherContext *context);$/;"	m	struct:_PurpleCipherOps	access:public
get_last_auto_response	server.c	/^get_last_auto_response(PurpleConnection *gc, const char *name)$/;"	f	file:	signature:(PurpleConnection *gc, const char *name)
get_local_candidates	media/backend-iface.h	/^	GList *(*get_local_candidates) (PurpleMediaBackend *self,$/;"	m	struct:_PurpleMediaBackendIface	access:public
get_log_sets	log.h	/^	void (*get_log_sets)(PurpleLogSetCallback cb, GHashTable *sets);$/;"	m	struct:_PurpleLogLogger	access:public
get_media_caps	prpl.h	/^	PurpleMediaCaps (*get_media_caps)(PurpleAccount *account,$/;"	m	struct:_PurplePluginProtocolInfo	access:public
get_moods	prpl.h	/^	PurpleMood *(*get_moods)(PurpleAccount *account);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
get_next_node	blist.c	/^static PurpleBlistNode *get_next_node(PurpleBlistNode *node, gboolean godeep)$/;"	f	file:	signature:(PurpleBlistNode *node, gboolean godeep)
get_option	cipher.h	/^	void *(*get_option)(PurpleCipherContext *context, const gchar *name);$/;"	m	struct:_PurpleCipherOps	access:public
get_participant	media/backend-fs2.c	/^get_participant(PurpleMediaBackendFs2 *self, const gchar *name)$/;"	f	file:	signature:(PurpleMediaBackendFs2 *self, const gchar *name)
get_path_basename	prefs.c	/^get_path_basename(const char *name)$/;"	f	file:	signature:(const char *name)
get_path_dirname	prefs.c	/^get_path_dirname(const char *name)$/;"	f	file:	signature:(const char *name)
get_peer_certificates	sslconn.h	/^	GList * (* get_peer_certificates)(PurpleSslConnection * gsc);$/;"	m	struct:__anon99	access:public
get_plugin_pref_frame	plugin.h	/^	PurplePluginPrefFrame *(*get_plugin_pref_frame)(PurplePlugin *plugin);$/;"	m	struct:_PurplePluginUiInfo	access:public
get_public_alias	prpl.h	/^	void (*get_public_alias)(PurpleConnection *gc,$/;"	m	struct:_PurplePluginProtocolInfo	access:public
get_public_alias_unsupported	account.c	/^get_public_alias_unsupported(gpointer data)$/;"	f	file:	signature:(gpointer data)
get_rtaddrs	nat-pmp.c	/^get_rtaddrs(int bitmask, struct sockaddr *sa, struct sockaddr *addrs[])$/;"	f	file:	signature:(int bitmask, struct sockaddr *sa, struct sockaddr *addrs[])
get_salt_size	cipher.h	/^	size_t (*get_salt_size)(PurpleCipherContext *context);$/;"	m	struct:_PurpleCipherOps	access:public
get_session	media/backend-fs2.c	/^get_session(PurpleMediaBackendFs2 *self, const gchar *sess_id)$/;"	f	file:	signature:(PurpleMediaBackendFs2 *self, const gchar *sess_id)
get_session_from_fs_stream	media/backend-fs2.c	/^get_session_from_fs_stream(PurpleMediaBackendFs2 *self, FsStream *stream)$/;"	f	file:	signature:(PurpleMediaBackendFs2 *self, FsStream *stream)
get_stream	media/backend-fs2.c	/^get_stream(PurpleMediaBackendFs2 *self,$/;"	f	file:	signature:(PurpleMediaBackendFs2 *self, const gchar *sess_id, const gchar *name)
get_streams	media/backend-fs2.c	/^get_streams(PurpleMediaBackendFs2 *self,$/;"	f	file:	signature:(PurpleMediaBackendFs2 *self, const gchar *sess_id, const gchar *name)
get_subject_name	certificate.h	/^	gchar * (* get_subject_name)(PurpleCertificate *crt);$/;"	m	struct:_PurpleCertificateScheme	access:public
get_time_idle	idle.h	/^	time_t (*get_time_idle)(void);$/;"	m	struct:__anon70	access:public
get_times	certificate.h	/^	gboolean (* get_times)(PurpleCertificate *crt, time_t *activation, time_t *expiration);$/;"	m	struct:_PurpleCertificateScheme	access:public
get_ui_info	core.h	/^	GHashTable* (*get_ui_info)(void);$/;"	m	struct:__anon21	access:public
get_ui_settings_table	account.c	/^get_ui_settings_table(PurpleAccount *account, const char *ui)$/;"	f	file:	signature:(PurpleAccount *account, const char *ui)
get_unique_id	certificate.h	/^	gchar * (* get_unique_id)(PurpleCertificate *crt);$/;"	m	struct:_PurpleCertificateScheme	access:public
gfud	upnp.c	/^	PurpleUtilFetchUrlData *gfud;$/;"	m	struct:_UPnPMappingAddRemove	file:	access:public
global_proxy_info	proxy.c	/^static PurpleProxyInfo *global_proxy_info = NULL;$/;"	v	file:
got_attention	prpl.c	/^got_attention(PurpleConnection *gc, int id, const char *who, guint type_code)$/;"	f	file:	signature:(PurpleConnection *gc, int id, const char *who, guint type_code)
got_headers	util.c	/^	gboolean got_headers;$/;"	m	struct:_PurpleUtilFetchUrlData	file:	access:public
gpi	proxy.c	/^	PurpleProxyInfo *gpi;$/;"	m	struct:_PurpleProxyConnectData	file:	access:public
gproxycmds	proxy.c	/^static const char* gproxycmds[][2] = {$/;"	v	file:
group	blist.c	/^	PurpleBlistNode *group;$/;"	m	struct:_purple_hbuddy	file:	access:public
group	request.h	/^	PurpleRequestFieldGroup *group;$/;"	m	struct:_PurpleRequestField	access:public
group_buddy	prpl.h	/^	void (*group_buddy)(PurpleConnection *, const char *who,$/;"	m	struct:_PurplePluginProtocolInfo	access:public
group_to_xmlnode	blist.c	/^group_to_xmlnode(PurpleBlistNode *gnode)$/;"	f	file:	signature:(PurpleBlistNode *gnode)
groups	request.h	/^	GList *groups;$/;"	m	struct:__anon138	access:public
groups_cache	blist.c	/^static GHashTable *groups_cache = NULL;$/;"	v	file:
grow_circ_buffer	circbuffer.c	/^static void grow_circ_buffer(PurpleCircBuffer *buf, gsize len) {$/;"	f	file:	signature:(PurpleCircBuffer *buf, gsize len)
growsize	circbuffer.h	/^	gsize growsize;$/;"	m	struct:_PurpleCircBuffer	access:public
gs_idle_cb	stringref.c	/^static gboolean gs_idle_cb(gpointer data)$/;"	f	file:	signature:(gpointer data)
gs_idle_cb	stringref.c	/^static gboolean gs_idle_cb(gpointer data);$/;"	p	file:	signature:(gpointer data)
gst_bus_cb	media/backend-fs2.c	/^gst_bus_cb(GstBus *bus, GstMessage *msg, PurpleMediaBackendFs2 *self)$/;"	f	file:	signature:(GstBus *bus, GstMessage *msg, PurpleMediaBackendFs2 *self)
gst_bus_cb	media/backend-fs2.c	/^gst_bus_cb(GstBus *bus, GstMessage *msg, PurpleMediaBackendFs2 *self);$/;"	p	file:	signature:(GstBus *bus, GstMessage *msg, PurpleMediaBackendFs2 *self)
gst_element_added_cb	media/backend-fs2.c	/^gst_element_added_cb(FsElementAddedNotifier *self,$/;"	f	file:	signature:(FsElementAddedNotifier *self, GstBin *bin, GstElement *element, gpointer user_data)
gst_handle_message_element	media/backend-fs2.c	/^gst_handle_message_element(GstBus *bus, GstMessage *msg,$/;"	f	file:	signature:(GstBus *bus, GstMessage *msg, PurpleMediaBackendFs2 *self)
gst_handle_message_error	media/backend-fs2.c	/^gst_handle_message_error(GstBus *bus, GstMessage *msg,$/;"	f	file:	signature:(GstBus *bus, GstMessage *msg, PurpleMediaBackendFs2 *self)
gst_msg_db_to_percent	media/backend-fs2.c	/^gst_msg_db_to_percent(GstMessage *msg, gchar *value_name)$/;"	f	file:	signature:(GstMessage *msg, gchar *value_name)
handle	dnssrv.c	/^	guint handle;$/;"	m	struct:_PurpleSrvTxtQueryData	file:	access:public
handle	notify.c	/^	void *handle;$/;"	m	struct:__anon135	file:	access:public
handle	plugin.h	/^	void *handle;                          \/**< The module handle.        *\/$/;"	m	struct:_PurplePlugin	access:public
handle	prefs.c	/^	void *handle;$/;"	m	struct:pref_cb	file:	access:public
handle	proxy.c	/^	void *handle;$/;"	m	struct:_PurpleProxyConnectData	file:	access:public
handle	request.c	/^	void *handle;$/;"	m	struct:__anon122	file:	access:public
handle	signals.c	/^	void *handle;$/;"	m	struct:__anon102	file:	access:public
handle_next_queued_request	dnsquery.c	/^handle_next_queued_request(void)$/;"	f	file:	signature:(void)
handler	dbus-bindings.h	/^    DBusMessage* (*handler)(DBusMessage *request, DBusError *error);$/;"	m	struct:__anon134	access:public
handler_count	signals.c	/^	size_t handler_count;$/;"	m	struct:__anon101	file:	access:public
handler_priority	signals.c	/^static gint handler_priority(void * a, void * b) {$/;"	f	file:	signature:(void * a, void * b)
handlers	signals.c	/^	GList *handlers;$/;"	m	struct:__anon101	file:	access:public
handles	account.c	/^static GList *handles = NULL;$/;"	v	file:
handles	notify.c	/^static GList *handles = NULL;$/;"	v	file:
handles	proxy.c	/^static GSList *handles = NULL;$/;"	v	file:
handles	request.c	/^static GList *handles = NULL;$/;"	v	file:
has_explicit_data_len	util.c	/^	gboolean has_explicit_data_len;$/;"	m	struct:_PurpleUtilFetchUrlData	file:	access:public
has_file_extension	plugin.c	/^has_file_extension(const char *filename, const char *ext)$/;"	f	file:	signature:(const char *filename, const char *ext)
has_focus	conversation.h	/^	gboolean (*has_focus)(PurpleConversation *conv);$/;"	m	struct:_PurpleConversationUiOps	access:public
have_nm_state	network.c	/^static gboolean have_nm_state = FALSE;$/;"	v	file:
hbn_cb	stun.c	/^static void hbn_cb(GSList *hosts, gpointer data, const char *error_message) {$/;"	f	file:	signature:(GSList *hosts, gpointer data, const char *error_message)
hbn_listen_cb	stun.c	/^static void hbn_listen_cb(int fd, gpointer data) {$/;"	f	file:	signature:(int fd, gpointer data)
hdr	dnssrv.c	/^	HEADER hdr;$/;"	m	union:__anon89	file:	access:public
hdr	stun.c	/^	struct stun_header hdr;$/;"	m	struct:stun_change	typeref:struct:stun_change::stun_header	file:	access:public
help	cmds.c	/^	gchar *help;$/;"	m	struct:_PurpleCmd	file:	access:public
hidden	roomlist.h	/^	gboolean hidden; \/**< Hidden? *\/$/;"	m	struct:_PurpleRoomlistField	access:public
hmacmd5_chap	proxy.c	/^hmacmd5_chap(const unsigned char * challenge, int challen, const char * passwd, unsigned char * response)$/;"	f	file:	signature:(const unsigned char * challenge, int challen, const char * passwd, unsigned char * response)
homepage	plugin.h	/^	char *homepage;$/;"	m	struct:_PurplePluginInfo	access:public
host	proxy.c	/^	gchar *host;$/;"	m	struct:_PurpleProxyConnectData	file:	access:public
host	proxy.h	/^	char *host;           \/**< The host.        *\/$/;"	m	struct:__anon29	access:public
host	sslconn.h	/^	char *host;$/;"	m	struct:_PurpleSslConnection	access:public
host_len1	ntlm.c	/^	guint16 host_len1;       \/* host string length *\/$/;"	m	struct:type1_message	file:	access:public
host_len1	ntlm.c	/^	guint16 host_len1;       \/* host string length *\/$/;"	m	struct:type3_message	file:	access:public
host_len2	ntlm.c	/^	guint16 host_len2;       \/* host string length *\/$/;"	m	struct:type1_message	file:	access:public
host_len2	ntlm.c	/^	guint16 host_len2;       \/* host string length *\/$/;"	m	struct:type3_message	file:	access:public
host_off	ntlm.c	/^	guint32 host_off;        \/* host string offset (always 0x00000020) *\/$/;"	m	struct:type1_message	file:	access:public
host_off	ntlm.c	/^	guint32 host_off;        \/* host string offset *\/$/;"	m	struct:type3_message	file:	access:public
host_resolved	dnsquery.c	/^host_resolved(gpointer data, gint source, PurpleInputCondition cond)$/;"	f	file:	signature:(gpointer data, gint source, PurpleInputCondition cond)
host_resolved	dnsquery.c	/^static void host_resolved(gpointer data, gint source, PurpleInputCondition cond);$/;"	p	file:	signature:(gpointer data, gint source, PurpleInputCondition cond)
hostname	dnsquery.c	/^	char *hostname;$/;"	m	struct:_PurpleDnsQueryData	file:	access:public
hostname	dnsquery.c	/^	char hostname[512];$/;"	m	struct:__anon6	file:	access:public
hostname	dnssrv.h	/^	char hostname[256];$/;"	m	struct:_PurpleSrvResponse	access:public
hosts	dnsquery.c	/^	GSList *hosts;$/;"	m	struct:_PurpleDnsQueryData	file:	access:public
hosts	proxy.c	/^	GSList *hosts;$/;"	m	struct:_PurpleProxyConnectData	file:	access:public
html_logger	log.c	/^static PurpleLogLogger *html_logger;$/;"	v	file:
html_logger_finalize	log.c	/^static void html_logger_finalize(PurpleLog *log)$/;"	f	file:	signature:(PurpleLog *log)
html_logger_finalize	log.c	/^static void html_logger_finalize(PurpleLog *log);$/;"	p	file:	signature:(PurpleLog *log)
html_logger_list	log.c	/^static GList *html_logger_list(PurpleLogType type, const char *sn, PurpleAccount *account)$/;"	f	file:	signature:(PurpleLogType type, const char *sn, PurpleAccount *account)
html_logger_list	log.c	/^static GList *html_logger_list(PurpleLogType type, const char *sn, PurpleAccount *account);$/;"	p	file:	signature:(PurpleLogType type, const char *sn, PurpleAccount *account)
html_logger_list_syslog	log.c	/^static GList *html_logger_list_syslog(PurpleAccount *account)$/;"	f	file:	signature:(PurpleAccount *account)
html_logger_list_syslog	log.c	/^static GList *html_logger_list_syslog(PurpleAccount *account);$/;"	p	file:	signature:(PurpleAccount *account)
html_logger_read	log.c	/^static char *html_logger_read(PurpleLog *log, PurpleLogReadFlags *flags)$/;"	f	file:	signature:(PurpleLog *log, PurpleLogReadFlags *flags)
html_logger_read	log.c	/^static char *html_logger_read(PurpleLog *log, PurpleLogReadFlags *flags);$/;"	p	file:	signature:(PurpleLog *log, PurpleLogReadFlags *flags)
html_logger_total_size	log.c	/^static int html_logger_total_size(PurpleLogType type, const char *name, PurpleAccount *account)$/;"	f	file:	signature:(PurpleLogType type, const char *name, PurpleAccount *account)
html_logger_total_size	log.c	/^static int html_logger_total_size(PurpleLogType type, const char *name, PurpleAccount *account);$/;"	p	file:	signature:(PurpleLogType type, const char *name, PurpleAccount *account)
html_logger_write	log.c	/^static gsize html_logger_write(PurpleLog *log, PurpleMessageFlags type,$/;"	f	file:	signature:(PurpleLog *log, PurpleMessageFlags type, const char *from, time_t time, const char *message)
html_logger_write	log.c	/^static gsize html_logger_write(PurpleLog *log, PurpleMessageFlags type,$/;"	p	file:	signature:(PurpleLog *log, PurpleMessageFlags type, const char *from, time_t time, const char *message)
http11	util.c	/^	gboolean http11;$/;"	m	struct:_PurpleUtilFetchUrlData	file:	access:public
http_canread	proxy.c	/^http_canread(gpointer data, gint source, PurpleInputCondition cond)$/;"	f	file:	signature:(gpointer data, gint source, PurpleInputCondition cond)
http_canwrite	proxy.c	/^http_canwrite(gpointer data, gint source, PurpleInputCondition cond) {$/;"	f	file:	signature:(gpointer data, gint source, PurpleInputCondition cond)
http_start_connect_tunneling	proxy.c	/^http_start_connect_tunneling(PurpleProxyConnectData *connect_data) {$/;"	f	file:	signature:(PurpleProxyConnectData *connect_data)
icon	blist.h	/^	PurpleBuddyIcon *icon;                    \/**< The buddy icon. *\/$/;"	m	struct:_PurpleBuddy	access:public
icon	conversation.h	/^	PurpleBuddyIcon *icon;               \/**< The buddy icon.              *\/$/;"	m	struct:_PurpleConvIm	access:public
icon_caching	buddyicon.c	/^static gboolean    icon_caching  = TRUE;$/;"	v	file:
icon_data_cache	buddyicon.c	/^static GHashTable *icon_data_cache = NULL;$/;"	v	file:
icon_file_cache	buddyicon.c	/^static GHashTable *icon_file_cache = NULL;$/;"	v	file:
icon_name	prpl.h	/^	const char *icon_name;             \/**< Icon to display (optional) *\/$/;"	m	struct:_PurpleAttentionType	access:public
icon_spec	prpl.h	/^	PurpleBuddyIconSpec icon_spec; \/**< The icon spec. *\/$/;"	m	struct:_PurplePluginProtocolInfo	access:public
icons	request.h	/^			GList *icons;$/;"	m	struct:_PurpleRequestField::__anon140::__anon145	access:public
id	cmds.c	/^	PurpleCmdId id;$/;"	m	struct:_PurpleCmd	file:	access:public
id	conversation.h	/^	int    id;                       \/**< The chat ID.                  *\/$/;"	m	struct:_PurpleConvChat	access:public
id	imgstore.c	/^	int id;$/;"	m	struct:_PurpleStoredImage	file:	access:public
id	log.h	/^	char *id;                 \/**< an identifier to refer to this logger *\/$/;"	m	struct:_PurpleLogLogger	access:public
id	media.c	/^	gchar *id;$/;"	m	struct:_PurpleMediaSession	file:	access:public
id	media/backend-fs2.c	/^	gchar *id;$/;"	m	struct:_PurpleMediaBackendFs2Session	file:	access:public
id	media/codec.c	/^	gint id;$/;"	m	struct:_PurpleMediaCodecPrivate	file:	access:public
id	mediamanager.c	/^	gchar *id;$/;"	m	struct:_PurpleMediaElementInfoPrivate	file:	access:public
id	mediamanager.c	/^	gulong id;$/;"	m	struct:_PurpleMediaOutputWindow	file:	access:public
id	plugin.h	/^	char *id;$/;"	m	struct:_PurplePluginInfo	access:public
id	prefs.c	/^	guint id;$/;"	m	struct:pref_cb	file:	access:public
id	request.h	/^	char *id;$/;"	m	struct:_PurpleRequestField	access:public
id	signals.c	/^	gulong id;$/;"	m	struct:__anon101	file:	access:public
id	signals.c	/^	gulong id;$/;"	m	struct:__anon102	file:	access:public
id	status.c	/^	char *id;$/;"	m	struct:_PurpleStatusAttr	file:	access:public
id	status.c	/^	char *id;$/;"	m	struct:_PurpleStatusType	file:	access:public
id	status.c	/^	const char *id;$/;"	m	struct:PurpleStatusPrimitiveMap	file:	access:public
identifier	prpl.h	/^	const char *identifier;  \/**< Used by the PRPL to identify the option *\/$/;"	m	struct:proto_chat_entry	access:public
idle	status.c	/^	gboolean idle;$/;"	m	struct:_PurplePresence	file:	access:public
idle_reporting_cb	idle.c	/^idle_reporting_cb(const char *name, PurplePrefType type, gconstpointer val, gpointer data)$/;"	f	file:	signature:(const char *name, PurplePrefType type, gconstpointer val, gpointer data)
idle_time	status.c	/^	time_t idle_time;$/;"	m	struct:_PurplePresence	file:	access:public
idle_timer	idle.c	/^static guint idle_timer = 0;$/;"	v	file:
idle_ui_ops	idle.c	/^static PurpleIdleUiOps *idle_ui_ops = NULL;$/;"	v	file:
idled_accts	idle.c	/^static GList *idled_accts = NULL;$/;"	v	file:
ignore	util.c	/^	gboolean ignore;$/;"	m	struct:purple_parse_tag	file:	access:public
ignored	conversation.h	/^	GList *ignored;                  \/**< Ignored users.                *\/$/;"	m	struct:_PurpleConvChat	access:public
im	conversation.h	/^		PurpleConvIm   *im;       \/**< IM-specific data.                  *\/$/;"	m	union:_PurpleConversation::__anon61	access:public
im_msg_sent_cb	idle.c	/^im_msg_sent_cb(PurpleAccount *account, const char *receiver,$/;"	f	file:	signature:(PurpleAccount *account, const char *receiver, const char *message, void *data)
image	request.h	/^		} image;$/;"	m	union:_PurpleRequestField::__anon140	typeref:struct:_PurpleRequestField::__anon140::__anon147	access:public
image_deleting_cb	buddyicon.c	/^image_deleting_cb(const PurpleStoredImage *img, gpointer data)$/;"	f	file:	signature:(const PurpleStoredImage *img, gpointer data)
img	buddyicon.c	/^	PurpleStoredImage *img;    \/**< The stored image containing$/;"	m	struct:_PurpleBuddyIcon	file:	access:public
img	smiley.c	/^	PurpleStoredImage *img;        \/**< The id of the stored image with the$/;"	m	struct:_PurpleSmiley	file:	access:public
img	theme.c	/^	gchar *img;$/;"	m	struct:__anon26	file:	access:public
imgstore	imgstore.c	/^static GHashTable *imgstore;$/;"	v	file:
import_certificate	certificate.h	/^	PurpleCertificate * (* import_certificate)(const gchar * filename);$/;"	m	struct:_PurpleCertificateScheme	access:public
import_certificates	certificate.h	/^	GSList * (* import_certificates)(const gchar * filename);$/;"	m	struct:_PurpleCertificateScheme	access:public
ims	conversation.c	/^static GList *ims = NULL;$/;"	v	file:
in_progress	roomlist.h	/^	gboolean in_progress; \/**< The listing is in progress. *\/$/;"	m	struct:_PurpleRoomlist	access:public
in_progress	roomlist.h	/^	void (*in_progress)(PurpleRoomlist *list, gboolean flag); \/**< Are we fetching stuff still? *\/$/;"	m	struct:_PurpleRoomlistUiOps	access:public
in_room	conversation.h	/^	GList *in_room;                  \/**< The users in the room.$/;"	m	struct:_PurpleConvChat	access:public
incb	stun.c	/^	guint incb;$/;"	m	struct:stun_conn	file:	access:public
include_headers	util.c	/^	gboolean include_headers;$/;"	m	struct:_PurpleUtilFetchUrlData	file:	access:public
incoming_description	prpl.h	/^	const char *incoming_description;  \/**< Shown when sent *\/$/;"	m	struct:_PurpleAttentionType	access:public
independent	status.c	/^	gboolean independent;$/;"	m	struct:_PurpleStatusType	file:	access:public
info	plugin.h	/^	PurplePluginInfo *info;                  \/**< The plugin information.   *\/$/;"	m	struct:_PurplePlugin	access:public
init	certificate.h	/^	gboolean (* init)(void);$/;"	m	struct:_PurpleCertificatePool	access:public
init	cipher.h	/^	void (*init)(PurpleCipherContext *context, void *extra);$/;"	m	struct:_PurpleCipherOps	access:public
init	ft.h	/^		void (*init)(PurpleXfer *xfer);$/;"	m	struct:_PurpleXfer::__anon25	access:public
init	sound.h	/^	void (*init)(void);$/;"	m	struct:_PurpleSoundUiOps	access:public
init	sslconn.h	/^	gboolean (*init)(void);$/;"	m	struct:__anon99	access:public
init_conference	media/backend-fs2.c	/^init_conference(PurpleMediaBackendFs2 *self)$/;"	f	file:	signature:(PurpleMediaBackendFs2 *self)
init_encodings	desktopitem.c	/^init_encodings (void)$/;"	f	file:	signature:(void)
init_error	dbus-server.c	/^static gchar *init_error;$/;"	v	file:
initiate_media	prpl.h	/^	gboolean (*initiate_media)(PurpleAccount *account, const char *who,$/;"	m	struct:_PurplePluginProtocolInfo	access:public
initiate_resolving	dnsquery.c	/^initiate_resolving(gpointer data)$/;"	f	file:	signature:(gpointer data)
initiator	media.c	/^	gboolean initiator;$/;"	m	struct:_PurpleMediaPrivate	file:	access:public
initiator	media.c	/^	gboolean initiator;$/;"	m	struct:_PurpleMediaSession	file:	access:public
initiator	media.c	/^	gboolean initiator;$/;"	m	struct:_PurpleMediaStream	file:	access:public
inpa	connection.h	/^	int inpa;                    \/**< The input watcher.                 *\/$/;"	m	struct:_PurpleConnection	access:public
inpa	dnsquery.c	/^	guint inpa;$/;"	m	struct:_PurpleDnsQueryResolverProcess	file:	access:public
inpa	proxy.c	/^	guint inpa;$/;"	m	struct:_PurpleProxyConnectData	file:	access:public
inpa	sslconn.h	/^	guint inpa;$/;"	m	struct:_PurpleSslConnection	access:public
inpa	upnp.c	/^	guint inpa;	\/* purple_input_add handle *\/$/;"	m	struct:__anon64	file:	access:public
inpa	util.c	/^	guint inpa;$/;"	m	struct:_PurpleUtilFetchUrlData	file:	access:public
inptr	circbuffer.h	/^	gchar *inptr;$/;"	m	struct:_PurpleCircBuffer	access:public
input_add	eventloop.h	/^	guint (*input_add)(int fd, PurpleInputCondition cond,$/;"	m	struct:_PurpleEventLoopUiOps	access:public
input_get_error	eventloop.h	/^	int (*input_get_error)(int fd, int *error);$/;"	m	struct:_PurpleEventLoopUiOps	access:public
input_remove	eventloop.h	/^	gboolean (*input_remove)(guint handle);$/;"	m	struct:_PurpleEventLoopUiOps	access:public
insert_key	desktopitem.c	/^insert_key (PurpleDesktopItem *item,$/;"	f	file:	signature:(PurpleDesktopItem *item, Section *cur_section, Encoding encoding, const char *key, const char *value, gboolean old_kde, gboolean no_translations)
insert_locales	desktopitem.c	/^insert_locales (GHashTable *encodings, char *enc, ...)$/;"	f	file:	signature:(GHashTable *encodings, char *enc, ...)
instance	signals.c	/^	void *instance;$/;"	m	struct:__anon100	file:	access:public
instance_table	signals.c	/^static GHashTable *instance_table = NULL;$/;"	v	file:
int64_data	value.h	/^		gint64 int64_data;$/;"	m	union:__anon18::__anon19	access:public
int_data	value.h	/^		int int_data;$/;"	m	union:__anon18::__anon19	access:public
integer	account.c	/^		int integer;$/;"	m	union:__anon2::__anon3	file:	access:public
integer	accountopt.h	/^		int integer;        \/**< The default integer value.             *\/$/;"	m	union:__anon65::__anon66	access:public
integer	prefs.c	/^		int integer;$/;"	m	union:purple_pref::__anon15	file:	access:public
integer	request.h	/^		} integer;$/;"	m	union:_PurpleRequestField::__anon140	typeref:struct:_PurpleRequestField::__anon140::__anon142	access:public
internalip	upnp.c	/^	char internalip[16];$/;"	m	struct:__anon63	file:	access:public
invalidity_reason_to_string	certificate.c	/^invalidity_reason_to_string(PurpleCertificateInvalidityFlags flag)$/;"	f	file:	signature:(PurpleCertificateInvalidityFlags flag)
invite_user_to_chat	conversation.c	/^invite_user_to_chat(gpointer data, PurpleRequestFields *fields)$/;"	f	file:	signature:(gpointer data, PurpleRequestFields *fields)
ip	media/candidate.c	/^	gchar *ip;$/;"	m	struct:_PurpleMediaCandidatePrivate	file:	access:public
ipc_data	plugin.h	/^	void *ipc_data;                        \/**< IPC data.                 *\/$/;"	m	struct:_PurplePlugin	access:public
is_default_route	nat-pmp.c	/^is_default_route(struct sockaddr *sa, struct sockaddr *mask)$/;"	f	file:	signature:(struct sockaddr *sa, struct sockaddr *mask)
is_deletable	log.h	/^	gboolean (*is_deletable)(PurpleLog *log);$/;"	m	struct:_PurpleLogLogger	access:public
is_enabled	debug.h	/^	gboolean (*is_enabled)(PurpleDebugLevel level,$/;"	m	struct:__anon31	access:public
is_int	prpl.h	/^	gboolean is_int;         \/**< True if the entry expects an integer *\/$/;"	m	struct:proto_chat_entry	access:public
is_native	plugin.c	/^is_native(const char *filename)$/;"	f	file:	signature:(const char *filename)
is_ssl	util.c	/^	gboolean is_ssl;$/;"	m	struct:_PurpleUtilFetchUrlData	file:	access:public
item_data	request.h	/^			GHashTable *item_data;$/;"	m	struct:_PurpleRequestField::__anon140::__anon145	access:public
items	request.h	/^			GList *items;$/;"	m	struct:_PurpleRequestField::__anon140::__anon145	access:public
join_chat	prpl.h	/^	void (*join_chat)(PurpleConnection *, GHashTable *components);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
keepalive	connection.h	/^	guint keepalive;             \/**< Keep-alive.                        *\/$/;"	m	struct:_PurpleConnection	access:public
keepalive	prpl.h	/^	void (*keepalive)(PurpleConnection *);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
key	util.h	/^	gchar *key;$/;"	m	struct:_PurpleKeyValuePair	access:public
key_basename	desktopitem.c	/^key_basename (const char *key)$/;"	f	file:	signature:(const char *key)
keys	desktopitem.c	/^	GList *keys;$/;"	m	struct:_PurpleDesktopItem	file:	access:public
keys	desktopitem.c	/^	GList *keys;$/;"	m	struct:__anon47	file:	access:public
keys	mime.c	/^	GList *keys;$/;"	m	struct:mime_fields	file:	access:public
label	notify.c	/^	char *label;$/;"	m	struct:_PurpleNotifyUserInfoEntry	file:	access:public
label	notify.h	/^	char *label;                              \/**< only for PURPLE_NOTIFY_BUTTON_LABELED *\/$/;"	m	struct:__anon118	access:public
label	plugin.h	/^	char *label;$/;"	m	struct:_PurplePluginAction	access:public
label	pluginpref.c	/^	char *label;$/;"	m	struct:_PurplePluginPref	file:	access:public
label	prpl.h	/^	const char *label;       \/**< User-friendly name of the entry *\/$/;"	m	struct:proto_chat_entry	access:public
label	request.h	/^	char *label;$/;"	m	struct:_PurpleRequestField	access:public
label	roomlist.h	/^	gchar *label; \/**< The i18n user displayed name of the field. *\/$/;"	m	struct:_PurpleRoomlistField	access:public
label	util.h	/^	char *label;$/;"	m	struct:_PurpleMenuAction	access:public
labels	request.h	/^			GList *labels;$/;"	m	struct:_PurpleRequestField::__anon140::__anon144	access:public
languages	desktopitem.c	/^	GList *languages;$/;"	m	struct:_PurpleDesktopItem	file:	access:public
last_active_time	idle.c	/^static time_t last_active_time = 0;$/;"	v	file:
last_auto_response	server.c	/^struct last_auto_response {$/;"	s	file:
last_auto_response::gc	server.c	/^	PurpleConnection *gc;$/;"	m	struct:last_auto_response	file:	access:public
last_auto_response::name	server.c	/^	char name[80];$/;"	m	struct:last_auto_response	file:	access:public
last_auto_response::sent	server.c	/^	time_t sent;$/;"	m	struct:last_auto_response	file:	access:public
last_auto_responses	server.c	/^static GSList *last_auto_responses = NULL;$/;"	v	file:
last_played	sound.c	/^static time_t last_played[PURPLE_NUM_SOUNDS];$/;"	v	file:
last_received	connection.h	/^	time_t last_received;        \/**< When we last received a packet. Set by the$/;"	m	struct:_PurpleConnection	access:public
lastchild	xmlnode.h	/^	xmlnode *lastchild;         \/**< The last child node or @c NULL.*\/$/;"	m	struct:_xmlnode	access:public
lastused	savedstatuses.c	/^	time_t lastused;$/;"	m	struct:_PurpleSavedStatus	file:	access:public
left	conversation.h	/^	gboolean left;                   \/**< We left the chat and kept the window open *\/$/;"	m	struct:_PurpleConvChat	access:public
len	stun.c	/^	guint16 len;$/;"	m	struct:stun_attrib	file:	access:public
len	stun.c	/^	guint16 len;$/;"	m	struct:stun_header	file:	access:public
len	util.c	/^	gsize len;$/;"	m	struct:_PurpleUtilFetchUrlData	file:	access:public
length	log.c	/^	int length;$/;"	m	struct:old_logger_data	file:	access:public
level	media/backend-fs2.c	/^	GstElement *level;$/;"	m	struct:_PurpleMediaBackendFs2Stream	file:	access:public
lifetime	nat-pmp.c	/^	guint32		lifetime;$/;"	m	struct:_PurplePmpMapResponse	file:	access:public
lifetime	nat-pmp.c	/^	guint32		lifetime;$/;"	m	struct:__anon40	file:	access:public
list	accountopt.h	/^		GList *list;        \/**< The default list value.                *\/$/;"	m	union:__anon65::__anon66	access:public
list	blist.c	/^	GSList *list;$/;"	m	struct:_list_account_buddies	file:	access:public
list	log.h	/^	GList *(*list)(PurpleLogType type, const char *name, PurpleAccount *account);$/;"	m	struct:_PurpleLogLogger	access:public
list	request.h	/^		} list;$/;"	m	union:_PurpleRequestField::__anon140	typeref:struct:_PurpleRequestField::__anon140::__anon145	access:public
list_emblem	prpl.h	/^	const char *(*list_emblem)(PurpleBuddy *buddy);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
list_icon	prpl.h	/^	const char *(*list_icon)(PurpleAccount *account, PurpleBuddy *buddy);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
list_syslog	log.h	/^	GList *(*list_syslog)(PurpleAccount *account);$/;"	m	struct:_PurpleLogLogger	access:public
listen_map_external	network.c	/^static gboolean listen_map_external = TRUE;$/;"	v	file:
listenfd	network.c	/^	int listenfd;$/;"	m	struct:_PurpleNetworkListenData	file:	access:public
lm_resp_len1	ntlm.c	/^	guint16 lm_resp_len1;    \/* LanManager response length (always 0x18)*\/$/;"	m	struct:type3_message	file:	access:public
lm_resp_len2	ntlm.c	/^	guint16 lm_resp_len2;    \/* LanManager response length (always 0x18)*\/$/;"	m	struct:type3_message	file:	access:public
lm_resp_off	ntlm.c	/^	guint32 lm_resp_off;     \/* LanManager response offset *\/$/;"	m	struct:type3_message	file:	access:public
load	plugin.h	/^	gboolean (*load)(PurplePlugin *plugin);$/;"	m	struct:_PurplePluginInfo	access:public
load	plugin.h	/^	gboolean (*load)(PurplePlugin *plugin);$/;"	m	struct:_PurplePluginLoaderInfo	access:public
load_accounts	account.c	/^load_accounts(void)$/;"	f	file:	signature:(void)
load_cb	plugin.c	/^static void (*load_cb)(PurplePlugin *, void *) = NULL;$/;"	v	file:
load_cb_data	plugin.c	/^static void *load_cb_data = NULL;$/;"	v	file:
load_queue	plugin.c	/^static GList *load_queue       = NULL;$/;"	v	file:
load_statuses	savedstatuses.c	/^load_statuses(void)$/;"	f	file:	signature:(void)
loaded	plugin.h	/^	gboolean loaded;                       \/**< The loaded state.         *\/$/;"	m	struct:_PurplePlugin	access:public
loaded_plugins	plugin.c	/^static GList *loaded_plugins   = NULL;$/;"	v	file:
loader_supports_file	plugin.c	/^loader_supports_file(PurplePlugin *loader, const char *filename)$/;"	f	file:	signature:(PurplePlugin *loader, const char *filename)
local_candidates	media.c	/^	GList *local_candidates;$/;"	m	struct:_PurpleMediaStream	file:	access:public
local_candidates	media/backend-fs2.c	/^	GList *local_candidates;$/;"	m	struct:_PurpleMediaBackendFs2Stream	file:	access:public
local_filename	ft.h	/^	char *local_filename;         \/**< The name on the local hard drive.   *\/$/;"	m	struct:_PurpleXfer	access:public
local_port	ft.h	/^	int local_port;               \/**< The local port.                     *\/$/;"	m	struct:_PurpleXfer	access:public
location	desktopitem.c	/^	char *location;$/;"	m	struct:_PurpleDesktopItem	file:	access:public
log_add_log_set_to_hash	log.c	/^log_add_log_set_to_hash(GHashTable *sets, PurpleLogSet *set)$/;"	f	file:	signature:(GHashTable *sets, PurpleLogSet *set)
log_get_log_sets_common	log.c	/^static void log_get_log_sets_common(GHashTable *sets)$/;"	f	file:	signature:(GHashTable *sets)
log_get_log_sets_common	log.c	/^static void log_get_log_sets_common(GHashTable *sets);$/;"	p	file:	signature:(GHashTable *sets)
log_get_timestamp	log.c	/^static char *log_get_timestamp(PurpleLog *log, time_t when)$/;"	f	file:	signature:(PurpleLog *log, time_t when)
log_set_equal	log.c	/^log_set_equal(gconstpointer a, gconstpointer b)$/;"	f	file:	signature:(gconstpointer a, gconstpointer b)
log_set_hash	log.c	/^log_set_hash(gconstpointer key)$/;"	f	file:	signature:(gconstpointer key)
logger	log.h	/^	PurpleLogLogger *logger;                \/**< The logging mechanism this log$/;"	m	struct:_PurpleLog	access:public
logger_data	log.h	/^	void *logger_data;                    \/**< Data used by the log logger *\/$/;"	m	struct:_PurpleLog	access:public
logger_pref_cb	log.c	/^static void logger_pref_cb(const char *name, PurplePrefType type,$/;"	f	file:	signature:(const char *name, PurplePrefType type, gconstpointer value, gpointer data)
loggers	log.c	/^static GSList *loggers = NULL;$/;"	v	file:
logging	conversation.h	/^	gboolean logging;           \/**< The status of logging.             *\/$/;"	m	struct:_PurpleConversation	access:public
login	prpl.h	/^	void (*login)(PurpleAccount *);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
login_time	status.c	/^	time_t login_time;$/;"	m	struct:_PurplePresence	file:	access:public
logs	conversation.h	/^	GList *logs;                \/**< This conversation's logs           *\/$/;"	m	struct:_PurpleConversation	access:public
logsize_users	log.c	/^static GHashTable *logsize_users = NULL;$/;"	v	file:
logsize_users_decayed	log.c	/^static GHashTable *logsize_users_decayed = NULL;$/;"	v	file:
long_data	value.h	/^		long long_data;$/;"	m	union:__anon18::__anon19	access:public
looked_up_internal_ip_cb	upnp.c	/^looked_up_internal_ip_cb(gpointer data, gint source, const gchar *error_message)$/;"	f	file:	signature:(gpointer data, gint source, const gchar *error_message)
looked_up_public_ip_cb	upnp.c	/^looked_up_public_ip_cb(PurpleUtilFetchUrlData *url_data, gpointer user_data,$/;"	f	file:	signature:(PurpleUtilFetchUrlData *url_data, gpointer user_data, const gchar *httpResponse, gsize len, const gchar *error_message)
lookup	desktopitem.c	/^lookup (const PurpleDesktopItem *item, const char *key)$/;"	f	file:	signature:(const PurpleDesktopItem *item, const char *key)
lookup_internal_ip	upnp.c	/^lookup_internal_ip()$/;"	f	file:
lookup_internal_ip	upnp.c	/^static void lookup_internal_ip(void);$/;"	p	file:	signature:(void)
lookup_locale	desktopitem.c	/^lookup_locale (const PurpleDesktopItem *item, const char *key, const char *locale)$/;"	f	file:	signature:(const PurpleDesktopItem *item, const char *key, const char *locale)
lookup_public_ip	upnp.c	/^lookup_public_ip()$/;"	f	file:
lookup_public_ip	upnp.c	/^static void lookup_public_ip(void);$/;"	p	file:	signature:(void)
lookup_time	stun.h	/^	time_t lookup_time;$/;"	m	struct:_PurpleStunNatDiscovery	access:public
lookup_time	upnp.c	/^	time_t lookup_time;$/;"	m	struct:__anon63	file:	access:public
lose	purple-client.c	/^lose(const char *str, ...)$/;"	f	file:	signature:(const char *str, ...)
lose_gerror	purple-client.c	/^lose_gerror(const char *prefix, GError *error)$/;"	f	file:	signature:(const char *prefix, GError *error)
magic	plugin.h	/^	unsigned int magic;$/;"	m	struct:_PurplePluginInfo	access:public
main	purple-client-example.c	/^int main (int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main_hash	desktopitem.c	/^	GHashTable *main_hash;$/;"	m	struct:_PurpleDesktopItem	file:	access:public
major_version	plugin.h	/^	unsigned int major_version;$/;"	m	struct:_PurplePluginInfo	access:public
manager	media.c	/^	PurpleMediaManager *manager;$/;"	m	struct:_PurpleMediaPrivate	file:	access:public
map	mime.c	/^	GHashTable *map;$/;"	m	struct:mime_fields	file:	access:public
map_id_node	dbus-server.c	/^static GHashTable *map_id_node;$/;"	v	file:
map_id_type	dbus-server.c	/^static GHashTable *map_id_type;$/;"	v	file:
map_node_id	dbus-server.c	/^static GHashTable *map_node_id;$/;"	v	file:
mapping_data	network.c	/^	UPnPMappingAddRemove *mapping_data;$/;"	m	struct:_PurpleNetworkListenData	file:	access:public
marshal	plugin.c	/^	PurpleSignalMarshalFunc marshal;$/;"	m	struct:__anon11	file:	access:public
marshal	signals.c	/^	PurpleSignalMarshalFunc marshal;$/;"	m	struct:__anon101	file:	access:public
masked	accountopt.h	/^	gboolean masked;        \/**< Whether the value entered should be$/;"	m	struct:__anon65	access:public
masked	pluginpref.c	/^	gboolean masked;$/;"	m	struct:_PurplePluginPref	file:	access:public
masked	request.h	/^			gboolean masked;$/;"	m	struct:_PurpleRequestField::__anon140::__anon141	access:public
max	pluginpref.c	/^	int max;$/;"	m	struct:_PurplePluginPref	file:	access:public
max	prpl.h	/^	int max;                 \/**< Maximum value in case of integer *\/$/;"	m	struct:proto_chat_entry	access:public
max_filesize	prpl.h	/^	size_t max_filesize;               \/**< Maximum size in bytes *\/$/;"	m	struct:_PurpleBuddyIconSpec	access:public
max_height	prpl.h	/^	int max_height;                    \/**< Maximum height of this icon *\/$/;"	m	struct:_PurpleBuddyIconSpec	access:public
max_len	util.c	/^	gssize max_len;$/;"	m	struct:_PurpleUtilFetchUrlData	file:	access:public
max_length	pluginpref.c	/^	unsigned int max_length;$/;"	m	struct:_PurplePluginPref	file:	access:public
max_width	prpl.h	/^	int max_width;                     \/**< Maximum width of this icon  *\/$/;"	m	struct:_PurpleBuddyIconSpec	access:public
media	media.c	/^	PurpleMedia *media;$/;"	m	struct:_PurpleMediaSession	file:	access:public
media	media/backend-fs2.c	/^	PurpleMedia *media;$/;"	m	struct:_PurpleMediaBackendFs2Private	file:	access:public
media	mediamanager.c	/^	PurpleMedia *media;$/;"	m	struct:_PurpleMediaOutputWindow	file:	access:public
media_caps	blist.h	/^	PurpleMediaCaps media_caps;		\/**< The media capabilities of the buddy. *\/$/;"	m	struct:_PurpleBuddy	access:public
media_type	media/codec.c	/^	PurpleMediaSessionType media_type;$/;"	m	struct:_PurpleMediaCodecPrivate	file:	access:public
medias	mediamanager.c	/^	GList *medias;$/;"	m	struct:_PurpleMediaManagerPrivate	file:	access:public
message	ft.h	/^	char *message;                \/**< A message sent with the request     *\/$/;"	m	struct:_PurpleXfer	access:public
message	savedstatuses.c	/^	char *message;$/;"	m	struct:_PurpleSavedStatus	file:	access:public
message	savedstatuses.c	/^	char *message;$/;"	m	struct:_PurpleSavedStatusSub	file:	access:public
message_history	conversation.h	/^	GList *message_history;         \/**< Message history, as a GList of PurpleConvMessage's *\/$/;"	m	struct:_PurpleConversation	access:public
message_history_free	conversation.c	/^message_history_free(GList *list)$/;"	f	file:	signature:(GList *list)
migrate_buddy_icon	buddyicon.c	/^migrate_buddy_icon(PurpleBlistNode *node, const char *setting_name,$/;"	f	file:	signature:(PurpleBlistNode *node, const char *setting_name, const char *dirname, const char *filename)
migrate_icq_server	account.c	/^migrate_icq_server(PurpleAccount *account)$/;"	f	file:	signature:(PurpleAccount *account)
migrate_xmpp_encryption	account.c	/^migrate_xmpp_encryption(PurpleAccount *account)$/;"	f	file:	signature:(PurpleAccount *account)
migrate_yahoo_japan	account.c	/^migrate_yahoo_japan(PurpleAccount *account)$/;"	f	file:	signature:(PurpleAccount *account)
mime_fields	mime.c	/^struct mime_fields {$/;"	s	file:
mime_fields::keys	mime.c	/^	GList *keys;$/;"	m	struct:mime_fields	file:	access:public
mime_fields::map	mime.c	/^	GHashTable *map;$/;"	m	struct:mime_fields	file:	access:public
min	pluginpref.c	/^	int min;$/;"	m	struct:_PurplePluginPref	file:	access:public
min	prpl.h	/^	int min;                 \/**< Minimum value in case of integer *\/$/;"	m	struct:proto_chat_entry	access:public
min_height	prpl.h	/^	int min_height;                    \/**< Minimum height of this icon *\/$/;"	m	struct:_PurpleBuddyIconSpec	access:public
min_width	prpl.h	/^	int min_width;                     \/**< Minimum width of this icon  *\/$/;"	m	struct:_PurpleBuddyIconSpec	access:public
minor_version	plugin.h	/^	unsigned int minor_version;$/;"	m	struct:_PurplePluginInfo	access:public
misc	conversation.h	/^		void *misc;             \/**< Misc. data.                        *\/$/;"	m	union:_PurpleConversation::__anon61	access:public
mktime_utc	util.c	/^mktime_utc(struct tm *tm)$/;"	f	file:	signature:(struct tm *tm)
modified	desktopitem.c	/^	gboolean modified;$/;"	m	struct:_PurpleDesktopItem	file:	access:public
mood	status.h	/^	const char *mood;$/;"	m	struct:_PurpleMood	access:public
move_and_symlink_dir	core.c	/^move_and_symlink_dir(const char *path, const char *basename, const char *old_base, const char *new_base, const char *relative)$/;"	f	file:	signature:(const char *path, const char *basename, const char *old_base, const char *new_base, const char *relative)
msg_len1	ntlm.c	/^	guint16 msg_len1;        \/* target name length *\/$/;"	m	struct:type2_message	file:	access:public
msg_len2	ntlm.c	/^	guint16 msg_len2;        \/* target name length *\/$/;"	m	struct:type2_message	file:	access:public
mtime	desktopitem.c	/^	time_t mtime;$/;"	m	struct:_PurpleDesktopItem	file:	access:public
multiline	request.h	/^			gboolean multiline;$/;"	m	struct:_PurpleRequestField::__anon140::__anon141	access:public
multiple_selection	request.h	/^			gboolean multiple_selection;$/;"	m	struct:_PurpleRequestField::__anon140::__anon145	access:public
mutex	network.c	/^static GStaticMutex mutex = G_STATIC_MUTEX_INIT;$/;"	v	file:
my_arg	dbus-server.c	687;"	d	file:
my_arg	dbus-server.c	767;"	d	file:
my_fgets	desktopitem.c	/^my_fgets (char *buf, gsize bufsize, FILE *df)$/;"	f	file:	signature:(char *buf, gsize bufsize, FILE *df)
name	blist.c	/^	char *name;$/;"	m	struct:_purple_hbuddy	file:	access:public
name	blist.h	/^	char *name;                             \/**< The name of the buddy. *\/$/;"	m	struct:_PurpleBuddy	access:public
name	blist.h	/^	char *name;                            \/**< The name of this group. *\/$/;"	m	struct:_PurpleGroup	access:public
name	certificate.h	/^	gchar * name;$/;"	m	struct:_PurpleCertificateScheme	access:public
name	certificate.h	/^	gchar *name;$/;"	m	struct:_PurpleCertificatePool	access:public
name	certificate.h	/^	gchar *name;$/;"	m	struct:_PurpleCertificateVerifier	access:public
name	cipher.c	/^	gchar *name;          \/**< Internal name - used for searching *\/$/;"	m	struct:_PurpleCipher	file:	access:public
name	conversation.c	/^	char *name;$/;"	m	struct:_purple_hconv	file:	access:public
name	conversation.h	/^	char *name;                      \/**< The chat participant's name in the chat. *\/$/;"	m	struct:_PurpleConvChatBuddy	access:public
name	conversation.h	/^	char *name;                 \/**< The name of the conversation.      *\/$/;"	m	struct:_PurpleConversation	access:public
name	dbus-bindings.h	/^    const char *name;$/;"	m	struct:__anon134	access:public
name	desktopitem.c	/^	char *name;$/;"	m	struct:__anon47	file:	access:public
name	log.c	/^	char *name;$/;"	m	struct:_purple_logsize_user	file:	access:public
name	log.h	/^	char *name;                           \/**< The name of the logs available *\/$/;"	m	struct:_PurpleLogSet	access:public
name	log.h	/^	char *name;                           \/**< The name of this log *\/$/;"	m	struct:_PurpleLog	access:public
name	log.h	/^	char *name;               \/**< The logger's name *\/$/;"	m	struct:_PurpleLogLogger	access:public
name	mediamanager.c	/^	gchar *name;$/;"	m	struct:_PurpleMediaElementInfoPrivate	file:	access:public
name	plugin.h	/^	char *name;$/;"	m	struct:_PurplePluginInfo	access:public
name	pluginpref.c	/^	char *name;$/;"	m	struct:_PurplePluginPref	file:	access:public
name	pounce.c	/^	char *name;$/;"	m	struct:__anon8	file:	access:public
name	prefs.c	/^	char *name;$/;"	m	struct:purple_pref	file:	access:public
name	prpl.h	/^	const char *name;                  \/**< Shown in GUI elements *\/$/;"	m	struct:_PurpleAttentionType	access:public
name	roomlist.h	/^	gchar *name; \/**< The internal name of the field. *\/$/;"	m	struct:_PurpleRoomlistField	access:public
name	roomlist.h	/^	gchar *name; \/**< The name of the room. *\/$/;"	m	struct:_PurpleRoomlistRoom	access:public
name	server.c	/^	char name[80];$/;"	m	struct:last_auto_response	file:	access:public
name	status.c	/^			char *name;$/;"	m	struct:_PurplePresence::__anon34::__anon36	file:	access:public
name	status.c	/^	char *name;$/;"	m	struct:_PurpleStatusAttr	file:	access:public
name	status.c	/^	char *name;$/;"	m	struct:_PurpleStatusType	file:	access:public
name	status.c	/^	char *name;$/;"	m	struct:__anon37	file:	access:public
name	status.c	/^	const char *name;$/;"	m	struct:PurpleStatusPrimitiveMap	file:	access:public
name	theme.c	/^	gchar *name;$/;"	m	struct:__anon26	file:	access:public
name	xmlnode.h	/^	char *name;			\/**< The name of the node. *\/$/;"	m	struct:_xmlnode	access:public
namespace_map	xmlnode.h	/^	GHashTable *namespace_map;  \/**< The namespace map. *\/$/;"	m	struct:_xmlnode	access:public
nat_pmp_port_mappings	network.c	/^static GHashTable *nat_pmp_port_mappings = NULL;$/;"	v	file:
native_plugin	plugin.h	/^	gboolean native_plugin;                \/**< Native C plugin.          *\/$/;"	m	struct:_PurplePlugin	access:public
nattype	stun.c	/^static PurpleStunNatDiscovery nattype = {$/;"	v	file:
network_change_handle	network.c	/^static HANDLE network_change_handle = NULL;$/;"	v	file:
network_connected	connection.h	/^	void (*network_connected)(void);$/;"	m	struct:__anon75	access:public
network_disconnected	connection.h	/^	void (*network_disconnected)(void);$/;"	m	struct:__anon75	access:public
network_initialized	network.c	/^static gboolean network_initialized = FALSE;$/;"	v	file:
new_list	blist.h	/^	void (*new_list)(PurpleBuddyList *list); \/**< Sets UI-specific data on a buddy list. *\/$/;"	m	struct:_PurpleBlistUiOps	access:public
new_node	blist.h	/^	void (*new_node)(PurpleBlistNode *node); \/**< Sets UI-specific data on a node. *\/$/;"	m	struct:_PurpleBlistUiOps	access:public
new_node	xmlnode.c	/^new_node(const char *name, XMLNodeType type)$/;"	f	file:	signature:(const char *name, XMLNodeType type)
new_pounce	pounce.c	/^	void (*new_pounce)(PurplePounce *);$/;"	m	struct:__anon9	file:	access:public
new_xfer	ft.h	/^	void (*new_xfer)(PurpleXfer *xfer);$/;"	m	struct:__anon24	access:public
new_xfer	prpl.h	/^	PurpleXfer *(*new_xfer)(PurpleConnection *, const char *who);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
next	blist.h	/^	PurpleBlistNode *next;                \/**< The sibling after this buddy.  *\/$/;"	m	struct:_PurpleBlistNode	access:public
next	xmlnode.h	/^	xmlnode *next;              \/**< The next node or @c NULL. *\/$/;"	m	struct:_xmlnode	access:public
next_handler_id	signals.c	/^	gulong next_handler_id;$/;"	m	struct:__anon101	file:	access:public
next_id	cmds.c	/^static guint next_id = 1;$/;"	v	file:
next_output_window_id	mediamanager.c	/^	gulong next_output_window_id;$/;"	m	struct:_PurpleMediaManagerPrivate	file:	access:public
next_signal_id	signals.c	/^	gulong next_signal_id;$/;"	m	struct:__anon100	file:	access:public
nextid	imgstore.c	/^static unsigned int nextid = 0;$/;"	v	file:
ngettext	internal.h	63;"	d
nick	conversation.h	/^	char *nick;                      \/**< Your nick in this chat.       *\/$/;"	m	struct:_PurpleConvChat	access:public
nm_conn	network.c	/^static DBusGConnection *nm_conn = NULL;$/;"	v	file:
nm_dbus_name_owner_changed_cb	network.c	/^nm_dbus_name_owner_changed_cb(DBusGProxy *proxy, char *service, char *old_owner, char *new_owner, gpointer user_data)$/;"	f	file:	signature:(DBusGProxy *proxy, char *service, char *old_owner, char *new_owner, gpointer user_data)
nm_get_network_state	network.c	/^nm_get_network_state(void)$/;"	f	file:	signature:(void)
nm_get_network_state	network.c	/^static NMState nm_get_network_state(void);$/;"	p	file:	signature:(void)
nm_proxy	network.c	/^static DBusGProxy *nm_proxy = NULL;$/;"	v	file:
nm_state	network.c	/^static NMState nm_state = NM_STATE_UNKNOWN;$/;"	v	file:
nm_state_change_cb	network.c	/^nm_state_change_cb(DBusGProxy *proxy, NMState state, gpointer user_data)$/;"	f	file:	signature:(DBusGProxy *proxy, NMState state, gpointer user_data)
nm_update_state	network.c	/^nm_update_state(NMState state)$/;"	f	file:	signature:(NMState state)
no_away	idle.c	/^static gboolean no_away = FALSE;$/;"	v	file:
node	blist.h	/^	PurpleBlistNode node;		\/**< The node that this contact inherits from. *\/$/;"	m	struct:_PurpleContact	access:public
node	blist.h	/^	PurpleBlistNode node;                     \/**< The node that this buddy inherits from *\/$/;"	m	struct:_PurpleBuddy	access:public
node	blist.h	/^	PurpleBlistNode node;                    \/**< The node that this group inherits from *\/$/;"	m	struct:_PurpleGroup	access:public
node	blist.h	/^	PurpleBlistNode node;      \/**< The node that this chat inherits from *\/$/;"	m	struct:_PurpleChat	access:public
nonce	ntlm.c	/^	guint8  nonce[8];        \/* nonce *\/$/;"	m	struct:type2_message	file:	access:public
normalize	prpl.h	/^	const char *(*normalize)(const PurpleAccount *, const char *who);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
normalized_name	log.h	/^	char *normalized_name;                \/**< The normalized version of$/;"	m	struct:_PurpleLogSet	access:public
notice	connection.h	/^	void (*notice)(PurpleConnection *gc, const char *text);$/;"	m	struct:__anon75	access:public
notifier	media/backend-fs2.c	/^	FsElementAddedNotifier *notifier;$/;"	m	struct:_PurpleMediaBackendFs2Private	file:	access:public
notify_added	account.h	/^	void (*notify_added)(PurpleAccount *account,$/;"	m	struct:_PurpleAccountUiOps	access:public
notify_buddy_status_update	status.c	/^notify_buddy_status_update(PurpleBuddy *buddy, PurplePresence *presence,$/;"	f	file:	signature:(PurpleBuddy *buddy, PurplePresence *presence, PurpleStatus *old_status, PurpleStatus *new_status)
notify_email	notify.h	/^	void *(*notify_email)(PurpleConnection *gc,$/;"	m	struct:__anon119	access:public
notify_emails	notify.h	/^	void *(*notify_emails)(PurpleConnection *gc,$/;"	m	struct:__anon119	access:public
notify_formatted	notify.h	/^	void *(*notify_formatted)(const char *title, const char *primary,$/;"	m	struct:__anon119	access:public
notify_message	notify.h	/^	void *(*notify_message)(PurpleNotifyMsgType type, const char *title,$/;"	m	struct:__anon119	access:public
notify_searchresults	notify.h	/^	void *(*notify_searchresults)(PurpleConnection *gc, const char *title,$/;"	m	struct:__anon119	access:public
notify_searchresults_new_rows	notify.h	/^	void (*notify_searchresults_new_rows)(PurpleConnection *gc,$/;"	m	struct:__anon119	access:public
notify_status_update	status.c	/^notify_status_update(PurplePresence *presence, PurpleStatus *old_status,$/;"	f	file:	signature:(PurplePresence *presence, PurpleStatus *old_status, PurpleStatus *new_status)
notify_ui_ops	notify.c	/^static PurpleNotifyUiOps *notify_ui_ops = NULL;$/;"	v	file:
notify_uri	notify.h	/^	void *(*notify_uri)(const char *uri);$/;"	m	struct:__anon119	access:public
notify_userinfo	notify.h	/^	void *(*notify_userinfo)(PurpleConnection *gc, const char *who,$/;"	m	struct:__anon119	access:public
nraddr	valgrind.h	/^      unsigned int nraddr; \/* where's the code? *\/$/;"	m	struct:__anon105	access:public
nraddr	valgrind.h	/^      unsigned int nraddr; \/* where's the code? *\/$/;"	m	struct:__anon107	access:public
nraddr	valgrind.h	/^      unsigned int nraddr; \/* where's the code? *\/$/;"	m	struct:__anon109	access:public
nraddr	valgrind.h	/^      unsigned long long int nraddr; \/* where's the code? *\/$/;"	m	struct:__anon106	access:public
nraddr	valgrind.h	/^      unsigned long long int nraddr; \/* where's the code? *\/$/;"	m	struct:__anon108	access:public
nraddr	valgrind.h	/^      unsigned long long int nraddr; \/* where's the code? *\/$/;"	m	struct:__anon110	access:public
nt_resp_len1	ntlm.c	/^	guint16 nt_resp_len1;    \/* NT response length (always 0x18) *\/$/;"	m	struct:type3_message	file:	access:public
nt_resp_len2	ntlm.c	/^	guint16 nt_resp_len2;    \/* NT response length (always 0x18) *\/$/;"	m	struct:type3_message	file:	access:public
nt_resp_off	ntlm.c	/^	guint32 nt_resp_off;     \/* NT response offset *\/$/;"	m	struct:type3_message	file:	access:public
null_to_empty	dbus-bindings.h	/^const char* null_to_empty(const char *s);$/;"	p	signature:(const char *s)
null_to_empty	dbus-server.c	/^null_to_empty(const char *s)$/;"	f	signature:(const char *s)
num_params	plugin.c	/^	int num_params;$/;"	m	struct:__anon11	file:	access:public
num_times_redirected	util.c	/^	int num_times_redirected;$/;"	m	struct:_PurpleUtilFetchUrlData	file:	access:public
num_values	signals.c	/^	int num_values;$/;"	m	struct:__anon101	file:	access:public
number_of_dns_children	dnsquery.c	/^static int number_of_dns_children = 0;$/;"	v	file:
object_data	value.h	/^		void *object_data;$/;"	m	union:__anon18::__anon19	access:public
offline_message	prpl.h	/^	gboolean (*offline_message)(const PurpleBuddy *buddy);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
offset	log.c	/^	int offset;$/;"	m	struct:old_logger_data	file:	access:public
old_icons_dir	buddyicon.c	/^static char *old_icons_dir = NULL;$/;"	v	file:
old_logger	log.c	/^static PurpleLogLogger *old_logger;$/;"	v	file:
old_logger_data	log.c	/^struct old_logger_data {$/;"	s	file:
old_logger_data::length	log.c	/^	int length;$/;"	m	struct:old_logger_data	file:	access:public
old_logger_data::offset	log.c	/^	int offset;$/;"	m	struct:old_logger_data	file:	access:public
old_logger_data::pathref	log.c	/^	PurpleStringref *pathref;$/;"	m	struct:old_logger_data	file:	access:public
old_logger_finalize	log.c	/^static void old_logger_finalize(PurpleLog *log)$/;"	f	file:	signature:(PurpleLog *log)
old_logger_finalize	log.c	/^static void old_logger_finalize(PurpleLog *log);$/;"	p	file:	signature:(PurpleLog *log)
old_logger_get_log_sets	log.c	/^static void old_logger_get_log_sets(PurpleLogSetCallback cb, GHashTable *sets)$/;"	f	file:	signature:(PurpleLogSetCallback cb, GHashTable *sets)
old_logger_get_log_sets	log.c	/^static void old_logger_get_log_sets(PurpleLogSetCallback cb, GHashTable *sets);$/;"	p	file:	signature:(PurpleLogSetCallback cb, GHashTable *sets)
old_logger_list	log.c	/^static GList *old_logger_list(PurpleLogType type, const char *sn, PurpleAccount *account)$/;"	f	file:	signature:(PurpleLogType type, const char *sn, PurpleAccount *account)
old_logger_list	log.c	/^static GList *old_logger_list(PurpleLogType type, const char *sn, PurpleAccount *account);$/;"	p	file:	signature:(PurpleLogType type, const char *sn, PurpleAccount *account)
old_logger_read	log.c	/^static char * old_logger_read (PurpleLog *log, PurpleLogReadFlags *flags)$/;"	f	file:	signature:(PurpleLog *log, PurpleLogReadFlags *flags)
old_logger_read	log.c	/^static char * old_logger_read (PurpleLog *log, PurpleLogReadFlags *flags);$/;"	p	file:	signature:(PurpleLog *log, PurpleLogReadFlags *flags)
old_logger_size	log.c	/^static int old_logger_size (PurpleLog *log)$/;"	f	file:	signature:(PurpleLog *log)
old_logger_size	log.c	/^static int old_logger_size (PurpleLog *log);$/;"	p	file:	signature:(PurpleLog *log)
old_logger_total_size	log.c	/^static int old_logger_total_size(PurpleLogType type, const char *name, PurpleAccount *account)$/;"	f	file:	signature:(PurpleLogType type, const char *name, PurpleAccount *account)
old_logger_total_size	log.c	/^static int old_logger_total_size(PurpleLogType type, const char *name, PurpleAccount *account);$/;"	p	file:	signature:(PurpleLogType type, const char *name, PurpleAccount *account)
online	blist.h	/^	int online;			       \/**< The number of chats and contacts in this group who are currently online *\/$/;"	m	struct:_PurpleGroup	access:public
online	blist.h	/^	int online;			    \/**< The number of buddies in this contact who are currently online *\/$/;"	m	struct:_PurpleContact	access:public
opcode	nat-pmp.c	/^	guint8		opcode; \/* 128 + n *\/$/;"	m	struct:__anon39	file:	access:public
opcode	nat-pmp.c	/^	guint8		opcode;$/;"	m	struct:_PurplePmpMapResponse	file:	access:public
opcode	nat-pmp.c	/^	guint8		opcode;$/;"	m	struct:__anon40	file:	access:public
opcode	nat-pmp.c	/^	guint8 opcode;$/;"	m	struct:__anon38	file:	access:public
open_log	conversation.c	/^open_log(PurpleConversation *conv)$/;"	f	file:	signature:(PurpleConversation *conv)
ops	cipher.c	/^	PurpleCipherOps *ops; \/**< Operations supported by this cipher *\/$/;"	m	struct:_PurpleCipher	file:	access:public
ops	ft.h	/^	} ops;$/;"	m	struct:_PurpleXfer	typeref:struct:_PurpleXfer::__anon25	access:public
ops	roomlist.c	/^static PurpleRoomlistUiOps *ops = NULL;$/;"	v	file:
option_type	pounce.c	/^	char *option_type;$/;"	m	struct:__anon7	file:	access:public
optional_params	media/codec.c	/^	GList *optional_params;$/;"	m	struct:_PurpleMediaCodecPrivate	file:	access:public
options	pounce.c	/^	PurplePounceOption options;$/;"	m	struct:__anon7	file:	access:public
options	pounce.h	/^	PurplePounceOption options;     \/**< The pounce options         *\/$/;"	m	struct:_PurplePounce	access:public
options	prpl.h	/^	PurpleProtocolOptions options;  \/**< Protocol options.          *\/$/;"	m	struct:_PurplePluginProtocolInfo	access:public
outgoing_description	prpl.h	/^	const char *outgoing_description;  \/**< Shown when receied *\/$/;"	m	struct:_PurpleAttentionType	access:public
outptr	circbuffer.h	/^	gchar *outptr;$/;"	m	struct:_PurpleCircBuffer	access:public
output_windows	mediamanager.c	/^	GList *output_windows;$/;"	m	struct:_PurpleMediaManagerPrivate	file:	access:public
packet	stun.c	/^	struct stun_header *packet;$/;"	m	struct:stun_conn	typeref:struct:stun_conn::stun_header	file:	access:public
packetsize	stun.c	/^	size_t packetsize;$/;"	m	struct:stun_conn	file:	access:public
padding	status.h	/^	gpointer *padding;$/;"	m	struct:_PurpleMood	access:public
page	util.c	/^		char *page;$/;"	m	struct:_PurpleUtilFetchUrlData::__anon54	file:	access:public
page_num	plugin.h	/^	int page_num;                                         \/**< Reserved *\/$/;"	m	struct:_PurplePluginUiInfo	access:public
param_name	pounce.c	/^	char *param_name;$/;"	m	struct:__anon7	file:	access:public
parameters	dbus-bindings.h	/^    const char *parameters;$/;"	m	struct:__anon134	access:public
params	plugin.c	/^	PurpleValue **params;$/;"	m	struct:__anon11	file:	access:public
parent	blist.h	/^	PurpleBlistNode *parent;              \/**< The parent of this node        *\/$/;"	m	struct:_PurpleBlistNode	access:public
parent	dbus-server.h	/^    PurpleDBusType *parent;$/;"	m	struct:_PurpleDBusType	access:public
parent	media.c	/^	GObject parent;                \/**< The parent of this object. *\/$/;"	m	struct:_PurpleMedia	file:	access:public
parent	media/backend-fs2.c	/^	GObject parent;$/;"	m	struct:_PurpleMediaBackendFs2	file:	access:public
parent	media/candidate.c	/^	GObject parent;$/;"	m	struct:_PurpleMediaCandidate	file:	access:public
parent	media/codec.c	/^	GObject parent;$/;"	m	struct:_PurpleMediaCodec	file:	access:public
parent	mediamanager.c	/^	GObject parent;                  \/**< The parent of this manager. *\/$/;"	m	struct:_PurpleMediaManager	file:	access:public
parent	mediamanager.c	/^	GObject parent;$/;"	m	struct:_PurpleMediaElementInfo	file:	access:public
parent	prefs.c	/^	struct purple_pref *parent;$/;"	m	struct:purple_pref	typeref:struct:purple_pref::purple_pref	file:	access:public
parent	roomlist.h	/^	PurpleRoomlistRoom *parent; \/**< The parent room, or NULL. *\/$/;"	m	struct:_PurpleRoomlistRoom	access:public
parent	smiley.c	/^	GObject parent;$/;"	m	struct:_PurpleSmiley	file:	access:public
parent	sound-theme-loader.h	/^	PurpleThemeLoader parent;$/;"	m	struct:_PurpleSoundThemeLoader	access:public
parent	sound-theme.h	/^	PurpleTheme parent;$/;"	m	struct:_PurpleSoundTheme	access:public
parent	theme-loader.h	/^	GObject parent;$/;"	m	struct:_PurpleThemeLoader	access:public
parent	theme-manager.h	/^	GObject parent;$/;"	m	struct:_PurpleThemeManager	access:public
parent	theme.h	/^	GObject parent;$/;"	m	struct:_PurpleTheme	access:public
parent	xmlnode.h	/^	xmlnode *parent;            \/**< The parent node or @c NULL.*\/$/;"	m	struct:_xmlnode	access:public
parent_class	media.c	/^	GObjectClass parent_class;     \/**< The parent class. *\/$/;"	m	struct:_PurpleMediaClass	file:	access:public
parent_class	media.c	/^static GObjectClass *parent_class = NULL;$/;"	v	file:
parent_class	media/backend-fs2.c	/^	GObjectClass parent_class;$/;"	m	struct:_PurpleMediaBackendFs2Class	file:	access:public
parent_class	media/candidate.c	/^	GObjectClass parent_class;$/;"	m	struct:_PurpleMediaCandidateClass	file:	access:public
parent_class	media/codec.c	/^	GObjectClass parent_class;$/;"	m	struct:_PurpleMediaCodecClass	file:	access:public
parent_class	mediamanager.c	/^	GObjectClass parent_class;       \/**< The parent class. *\/$/;"	m	struct:_PurpleMediaManagerClass	file:	access:public
parent_class	mediamanager.c	/^	GObjectClass parent_class;$/;"	m	struct:_PurpleMediaElementInfoClass	file:	access:public
parent_class	mediamanager.c	/^static GObjectClass *parent_class = NULL;$/;"	v	file:
parent_class	smiley.c	/^	GObjectClass parent_class;$/;"	m	struct:_PurpleSmileyClass	file:	access:public
parent_class	smiley.c	/^static GObjectClass *parent_class;$/;"	v	file:
parent_class	sound-theme-loader.h	/^	PurpleThemeLoaderClass parent_class;$/;"	m	struct:_PurpleSoundThemeLoaderClass	access:public
parent_class	sound-theme.c	/^static GObjectClass *parent_class = NULL;$/;"	v	file:
parent_class	sound-theme.h	/^	PurpleThemeClass parent_class;$/;"	m	struct:_PurpleSoundThemeClass	access:public
parent_class	theme-loader.c	/^static GObjectClass *parent_class = NULL;$/;"	v	file:
parent_class	theme-loader.h	/^	GObjectClass parent_class;$/;"	m	struct:_PurpleThemeLoaderClass	access:public
parent_class	theme-manager.h	/^	GObjectClass parent_class;$/;"	m	struct:_PurpleThemeManagerClass	access:public
parent_class	theme.c	/^static GObjectClass *parent_class = NULL;$/;"	v	file:
parent_class	theme.h	/^	GObjectClass parent_class;$/;"	m	struct:_PurpleThemeClass	access:public
parent_iface	media/backend-iface.h	/^	GTypeInterface parent_iface; \/**< The parent iface class *\/$/;"	m	struct:_PurpleMediaBackendIface	access:public
parse_account	account.c	/^parse_account(xmlnode *node)$/;"	f	file:	signature:(xmlnode *node)
parse_boundary	mime.c	/^parse_boundary(const char *ct)$/;"	f	file:	signature:(const char *ct)
parse_buddy	blist.c	/^parse_buddy(PurpleGroup *group, PurpleContact *contact, xmlnode *bnode)$/;"	f	file:	signature:(PurpleGroup *group, PurpleContact *contact, xmlnode *bnode)
parse_chat	blist.c	/^parse_chat(PurpleGroup *group, xmlnode *cnode)$/;"	f	file:	signature:(PurpleGroup *group, xmlnode *cnode)
parse_contact	blist.c	/^parse_contact(PurpleGroup *group, xmlnode *cnode)$/;"	f	file:	signature:(PurpleGroup *group, xmlnode *cnode)
parse_content_len	util.c	/^parse_content_len(const char *data, size_t data_len)$/;"	f	file:	signature:(const char *data, size_t data_len)
parse_current_error	account.c	/^parse_current_error(xmlnode *node, PurpleAccount *account)$/;"	f	file:	signature:(xmlnode *node, PurpleAccount *account)
parse_group	blist.c	/^parse_group(xmlnode *groupnode)$/;"	f	file:	signature:(xmlnode *groupnode)
parse_proxy_info	account.c	/^parse_proxy_info(xmlnode *node, PurpleAccount *account)$/;"	f	file:	signature:(xmlnode *node, PurpleAccount *account)
parse_redirect	util.c	/^parse_redirect(const char *data, size_t data_len,$/;"	f	file:	signature:(const char *data, size_t data_len, PurpleUtilFetchUrlData *gfud)
parse_setting	blist.c	/^parse_setting(PurpleBlistNode *node, xmlnode *setting)$/;"	f	file:	signature:(PurpleBlistNode *node, xmlnode *setting)
parse_settings	account.c	/^parse_settings(xmlnode *node, PurpleAccount *account)$/;"	f	file:	signature:(xmlnode *node, PurpleAccount *account)
parse_smiley	smiley.c	/^parse_smiley(xmlnode *smiley_node)$/;"	f	file:	signature:(xmlnode *smiley_node)
parse_status	account.c	/^parse_status(xmlnode *node, PurpleAccount *account)$/;"	f	file:	signature:(xmlnode *node, PurpleAccount *account)
parse_status	savedstatuses.c	/^parse_status(xmlnode *status)$/;"	f	file:	signature:(xmlnode *status)
parse_status_attrs	account.c	/^parse_status_attrs(xmlnode *node, PurpleStatus *status)$/;"	f	file:	signature:(xmlnode *node, PurpleStatus *status)
parse_statuses	account.c	/^parse_statuses(xmlnode *node, PurpleAccount *account)$/;"	f	file:	signature:(xmlnode *node, PurpleAccount *account)
parse_substatus	savedstatuses.c	/^parse_substatus(xmlnode *substatus)$/;"	f	file:	signature:(xmlnode *substatus)
part_free	mime.c	/^part_free(PurpleMimePart *part)$/;"	f	file:	signature:(PurpleMimePart *part)
part_load	mime.c	/^part_load(PurpleMimePart *part, const char *buf, gsize len)$/;"	f	file:	signature:(PurpleMimePart *part, const char *buf, gsize len)
part_new	mime.c	/^part_new(PurpleMimeDocument *doc)$/;"	f	file:	signature:(PurpleMimeDocument *doc)
part_write	mime.c	/^part_write(PurpleMimePart *part, GString *str)$/;"	f	file:	signature:(PurpleMimePart *part, GString *str)
participant	media.c	/^	gchar *participant;$/;"	m	struct:_PurpleMediaStream	file:	access:public
participant	media/backend-fs2.c	/^	gchar *participant;$/;"	m	struct:_PurpleMediaBackendFs2Stream	file:	access:public
participant	mediamanager.c	/^	gchar *participant;$/;"	m	struct:_PurpleMediaOutputWindow	file:	access:public
participants	media.c	/^	GList *participants;$/;"	m	struct:_PurpleMediaPrivate	file:	access:public
participants	media/backend-fs2.c	/^	GHashTable *participants;$/;"	m	struct:_PurpleMediaBackendFs2Private	file:	access:public
parts	mime.c	/^	GList *parts;$/;"	m	struct:_PurpleMimeDocument	file:	access:public
passwd	util.c	/^		char *passwd;$/;"	m	struct:_PurpleUtilFetchUrlData::__anon54	file:	access:public
password	account.h	/^	char *password;             \/**< The account password.                  *\/$/;"	m	struct:_PurpleAccount	access:public
password	connection.h	/^	char *password;              \/**< The password used.                 *\/$/;"	m	struct:_PurpleConnection	access:public
password	media/candidate.c	/^	gchar *password;$/;"	m	struct:_PurpleMediaCandidatePrivate	file:	access:public
password	proxy.h	/^	char *password;       \/**< The password.    *\/$/;"	m	struct:__anon29	access:public
path	log.h	/^	char *path;$/;"	m	struct:_PurpleLogCommonLoggerData	access:public
path	plugin.h	/^	char *path;                            \/**< The path to the plugin.   *\/$/;"	m	struct:_PurplePlugin	access:public
pathref	log.c	/^	PurpleStringref *pathref;$/;"	m	struct:old_logger_data	file:	access:public
perm_deny	account.h	/^	PurplePrivacyType perm_deny;  \/**< The permit\/deny setting.               *\/$/;"	m	struct:_PurpleAccount	access:public
permit	account.h	/^	GSList *permit;             \/**< Permit list.                           *\/$/;"	m	struct:_PurpleAccount	access:public
permit_added	privacy.h	/^	void (*permit_added)(PurpleAccount *account, const char *name);$/;"	m	struct:__anon5	access:public
permit_removed	privacy.h	/^	void (*permit_removed)(PurpleAccount *account, const char *name);$/;"	m	struct:__anon5	access:public
pid	dnssrv.c	/^	pid_t pid;$/;"	m	struct:_PurpleSrvTxtQueryData	file:	access:public
pipeline	mediamanager.c	/^	GstElement *pipeline;$/;"	m	struct:_PurpleMediaManagerPrivate	file:	access:public
pipeline_bus_call	mediamanager.c	/^pipeline_bus_call(GstBus *bus, GstMessage *msg, PurpleMediaManager *manager)$/;"	f	file:	signature:(GstBus *bus, GstMessage *msg, PurpleMediaManager *manager)
play_event	sound.h	/^	void (*play_event)(PurpleSoundEventID event);$/;"	m	struct:_PurpleSoundUiOps	access:public
play_file	sound.h	/^	void (*play_file)(const char *filename);$/;"	m	struct:_PurpleSoundUiOps	access:public
plugin	plugin.h	/^	PurplePlugin *plugin;$/;"	m	struct:_PurplePluginAction	access:public
plugin_loaders	plugin.c	/^static GList *plugin_loaders   = NULL;$/;"	v	file:
plugins	plugin.c	/^static GList *plugins          = NULL;$/;"	v	file:
plugins_to_disable	plugin.c	/^static GList *plugins_to_disable = NULL;$/;"	v	file:
pmp_info	nat-pmp.c	/^static PurplePmpInfo pmp_info = {PURPLE_PMP_STATUS_UNDISCOVERED, NULL};$/;"	v	file:
pointer_data	value.h	/^		void *pointer_data;$/;"	m	union:__anon18::__anon19	access:public
pointer_icon_cache	buddyicon.c	/^static GHashTable *pointer_icon_cache = NULL;$/;"	v	file:
port	dnsquery.c	/^	int port;$/;"	m	struct:_PurpleDnsQueryData	file:	access:public
port	dnsquery.c	/^	int port;$/;"	m	struct:__anon6	file:	access:public
port	dnssrv.h	/^	int port;$/;"	m	struct:_PurpleSrvResponse	access:public
port	media/candidate.c	/^	guint16 port;$/;"	m	struct:_PurpleMediaCandidatePrivate	file:	access:public
port	proxy.c	/^	int port;$/;"	m	struct:_PurpleProxyConnectData	file:	access:public
port	proxy.h	/^	int   port;           \/**< The port number. *\/$/;"	m	struct:__anon29	access:public
port	sslconn.h	/^	int port;$/;"	m	struct:_PurpleSslConnection	access:public
port	util.c	/^		int port;$/;"	m	struct:_PurpleUtilFetchUrlData::__anon54	file:	access:public
portmap	upnp.c	/^	unsigned short portmap;$/;"	m	struct:_UPnPMappingAddRemove	file:	access:public
pounce	pounce.c	/^	PurplePounce *pounce;$/;"	m	struct:__anon7	file:	access:public
pounce_handlers	pounce.c	/^static GHashTable *pounce_handlers = NULL;$/;"	v	file:
pounce_to_xmlnode	pounce.c	/^pounce_to_xmlnode(PurplePounce *pounce)$/;"	f	file:	signature:(PurplePounce *pounce)
pouncee	pounce.c	/^	char *pouncee;$/;"	m	struct:__anon7	file:	access:public
pouncee	pounce.h	/^	char *pouncee;                \/**< The buddy to pounce on.    *\/$/;"	m	struct:_PurplePounce	access:public
pouncer	pounce.h	/^	PurpleAccount *pouncer;         \/**< The user who is pouncing.  *\/$/;"	m	struct:_PurplePounce	access:public
pounces	pounce.c	/^static GList      *pounces = NULL;$/;"	v	file:
pounces_loaded	pounce.c	/^static gboolean    pounces_loaded = FALSE;$/;"	v	file:
pounces_parser	pounce.c	/^static GMarkupParser pounces_parser =$/;"	v	file:
pounces_to_xmlnode	pounce.c	/^pounces_to_xmlnode(void)$/;"	f	file:	signature:(void)
pref	dnssrv.h	/^	int pref;$/;"	m	struct:_PurpleSrvResponse	access:public
pref_cb	prefs.c	/^struct pref_cb {$/;"	s	file:
pref_cb::data	prefs.c	/^	gpointer data;$/;"	m	struct:pref_cb	file:	access:public
pref_cb::func	prefs.c	/^	PurplePrefCallback func;$/;"	m	struct:pref_cb	file:	access:public
pref_cb::handle	prefs.c	/^	void *handle;$/;"	m	struct:pref_cb	file:	access:public
pref_cb::id	prefs.c	/^	guint id;$/;"	m	struct:pref_cb	file:	access:public
pref_full_name	prefs.c	/^pref_full_name(struct purple_pref *pref)$/;"	f	file:	signature:(struct purple_pref *pref)
pref_name	accountopt.h	/^	char *pref_name;        \/**< The name of the associated preference. *\/$/;"	m	struct:__anon65	access:public
pref_to_xmlnode	prefs.c	/^pref_to_xmlnode(xmlnode *parent, struct purple_pref *pref)$/;"	f	file:	signature:(xmlnode *parent, struct purple_pref *pref)
prefix	xmlnode.h	/^	char *prefix;               \/**< The namespace prefix if any. *\/$/;"	m	struct:_xmlnode	access:public
prefs	pluginpref.c	/^	GList *prefs;$/;"	m	struct:_PurplePluginPrefFrame	file:	access:public
prefs	prefs.c	/^static struct purple_pref prefs = {$/;"	v	typeref:struct:purple_pref	file:
prefs_end_element_handler	prefs.c	/^prefs_end_element_handler(GMarkupParseContext *context,$/;"	f	file:	signature:(GMarkupParseContext *context, const gchar *element_name, gpointer user_data, GError **error)
prefs_hash	prefs.c	/^static GHashTable *prefs_hash = NULL;$/;"	v	file:
prefs_info	plugin.h	/^	PurplePluginUiInfo *prefs_info; \/**< Used by any plugin to display preferences.  If #ui_info has been specified, this will be ignored. *\/$/;"	m	struct:_PurplePluginInfo	access:public
prefs_loaded	prefs.c	/^static gboolean    prefs_loaded = FALSE;$/;"	v	file:
prefs_parser	prefs.c	/^static GMarkupParser prefs_parser = {$/;"	v	file:
prefs_save_cb	prefs.c	/^prefs_save_cb(const char *name, PurplePrefType type, gconstpointer val,$/;"	f	file:	signature:(const char *name, PurplePrefType type, gconstpointer val, gpointer user_data)
prefs_stack	prefs.c	/^static GList *prefs_stack = NULL;$/;"	v	file:
prefs_start_element_handler	prefs.c	/^prefs_start_element_handler (GMarkupParseContext *context,$/;"	f	file:	signature:(GMarkupParseContext *context, const gchar *element_name, const gchar **attribute_names, const gchar **attribute_values, gpointer user_data, GError **error)
prefs_to_xmlnode	prefs.c	/^prefs_to_xmlnode(void)$/;"	f	file:	signature:(void)
presence	account.h	/^	PurplePresence *presence;     \/**< Presence.                              *\/$/;"	m	struct:_PurpleAccount	access:public
presence	blist.h	/^	PurplePresence *presence;$/;"	m	struct:_PurpleBuddy	access:public
presence	status.c	/^	PurplePresence *presence;$/;"	m	struct:_PurpleStatus	file:	access:public
present	conversation.h	/^	void (*present)(PurpleConversation *conv);$/;"	m	struct:_PurpleConversationUiOps	access:public
prev	blist.h	/^	PurpleBlistNode *prev;                \/**< The sibling before this buddy. *\/$/;"	m	struct:_PurpleBlistNode	access:public
primary_attr_id	status.c	/^	char *primary_attr_id;$/;"	m	struct:_PurpleStatusType	file:	access:public
primitive	status.c	/^	PurpleStatusPrimitive primitive;$/;"	m	struct:_PurpleStatusType	file:	access:public
primitive_scores	status.c	/^static int primitive_scores[] =$/;"	v	file:
print	debug.h	/^	void (*print)(PurpleDebugLevel level, const char *category,$/;"	m	struct:__anon31	access:public
priority	blist.h	/^	PurpleBuddy *priority;    \/**< The "top" buddy for this contact *\/$/;"	m	struct:_PurpleContact	access:public
priority	cmds.c	/^	PurpleCmdPriority priority;$/;"	m	struct:_PurpleCmd	file:	access:public
priority	media/candidate.c	/^	guint32 priority;$/;"	m	struct:_PurpleMediaCandidatePrivate	file:	access:public
priority	plugin.h	/^	PurplePluginPriority priority;$/;"	m	struct:_PurplePluginInfo	access:public
priority	signals.c	/^	int priority;$/;"	m	struct:__anon102	file:	access:public
priority_valid	blist.h	/^	gboolean priority_valid; \/**< Is priority valid? *\/$/;"	m	struct:_PurpleContact	access:public
priv	account.h	/^	gpointer priv;              \/**< Pointer to opaque private data. *\/$/;"	m	struct:_PurpleAccount	access:public
priv	media.c	/^	PurpleMediaPrivate *priv;      \/**< The private data of this object. *\/$/;"	m	struct:_PurpleMedia	file:	access:public
priv	mediamanager.c	/^	PurpleMediaManagerPrivate *priv; \/**< Private data for the manager. *\/$/;"	m	struct:_PurpleMediaManager	file:	access:public
priv	sound-theme.h	/^	gpointer priv;$/;"	m	struct:_PurpleSoundTheme	access:public
priv	theme-loader.h	/^	gpointer priv;$/;"	m	struct:_PurpleThemeLoader	access:public
priv	theme.h	/^	gpointer priv;$/;"	m	struct:_PurpleTheme	access:public
privacy_ops	privacy.c	/^static PurplePrivacyUiOps *privacy_ops = NULL;$/;"	v	file:
private_data	sslconn.h	/^	void *private_data;$/;"	m	struct:_PurpleSslConnection	access:public
privateport	nat-pmp.c	/^	guint16		privateport;$/;"	m	struct:_PurplePmpMapResponse	file:	access:public
privateport	nat-pmp.c	/^	guint16		privateport;$/;"	m	struct:__anon40	file:	access:public
probe	plugin.h	/^	gboolean (*probe)(PurplePlugin *plugin);$/;"	m	struct:_PurplePluginLoaderInfo	access:public
probe_cb	plugin.c	/^static void (*probe_cb)(void *) = NULL;$/;"	v	file:
probe_cb_data	plugin.c	/^static void *probe_cb_data = NULL;$/;"	v	file:
process_chunked_data	util.c	/^process_chunked_data(char *data, gsize *len)$/;"	f	file:	signature:(char *data, gsize *len)
process_link	util.c	/^process_link(GString *ret,$/;"	f	file:	signature:(GString *ret, const char *start, const char *c, int matchlen, const char *urlprefix, int inside_paren)
process_txt_log	log.c	/^static char *process_txt_log(char *txt, char *to_free)$/;"	f	file:	signature:(char *txt, char *to_free)
proto	media/candidate.c	/^	PurpleMediaNetworkProtocol proto;$/;"	m	struct:_PurpleMediaCandidatePrivate	file:	access:public
proto_chat_entry	prpl.h	/^struct proto_chat_entry {$/;"	s
proto_chat_entry::identifier	prpl.h	/^	const char *identifier;  \/**< Used by the PRPL to identify the option *\/$/;"	m	struct:proto_chat_entry	access:public
proto_chat_entry::is_int	prpl.h	/^	gboolean is_int;         \/**< True if the entry expects an integer *\/$/;"	m	struct:proto_chat_entry	access:public
proto_chat_entry::label	prpl.h	/^	const char *label;       \/**< User-friendly name of the entry *\/$/;"	m	struct:proto_chat_entry	access:public
proto_chat_entry::max	prpl.h	/^	int max;                 \/**< Maximum value in case of integer *\/$/;"	m	struct:proto_chat_entry	access:public
proto_chat_entry::min	prpl.h	/^	int min;                 \/**< Minimum value in case of integer *\/$/;"	m	struct:proto_chat_entry	access:public
proto_chat_entry::required	prpl.h	/^	gboolean required;       \/**< True if it's required *\/$/;"	m	struct:proto_chat_entry	access:public
proto_chat_entry::secret	prpl.h	/^	gboolean secret;         \/**< True if the entry is secret (password) *\/$/;"	m	struct:proto_chat_entry	access:public
proto_data	blist.h	/^	void *proto_data;                       \/**< This allows the prpl to associate whatever data it wants with a buddy *\/$/;"	m	struct:_PurpleBuddy	access:public
proto_data	connection.h	/^	void *proto_data;            \/**< Protocol-specific data.            *\/$/;"	m	struct:_PurpleConnection	access:public
proto_data	roomlist.h	/^	gpointer proto_data; \/** Prpl private data. *\/$/;"	m	struct:_PurpleRoomlist	access:public
proto_data	whiteboard.h	/^	void *proto_data;                \/**< Protocol specific data *\/$/;"	m	struct:_PurpleWhiteboard	access:public
protocol	ntlm.c	/^	guint8  protocol[8];     \/* 'N', 'T', 'L', 'M', 'S', 'S', 'P', '\\0' *\/$/;"	m	struct:type1_message	file:	access:public
protocol	ntlm.c	/^	guint8  protocol[8];     \/* 'N', 'T', 'L', 'M', 'S', 'S', 'P', '\\0'*\/$/;"	m	struct:type2_message	file:	access:public
protocol	ntlm.c	/^	guint8  protocol[8];     \/* 'N', 'T', 'L', 'M', 'S', 'S', 'P', '\\0'*\/$/;"	m	struct:type3_message	file:	access:public
protocol	upnp.c	/^	gchar protocol[4];$/;"	m	struct:_UPnPMappingAddRemove	file:	access:public
protocol_id	account.h	/^	char *protocol_id;          \/**< The ID of the protocol.                *\/$/;"	m	struct:_PurpleAccount	access:public
protocol_id	pounce.c	/^	char *protocol_id;$/;"	m	struct:__anon7	file:	access:public
protocol_options	prpl.h	/^	GList *protocol_options; \/**< A GList of PurpleAccountOption    *\/$/;"	m	struct:_PurplePluginProtocolInfo	access:public
protocol_plugins	plugin.c	/^static GList *protocol_plugins = NULL;$/;"	v	file:
proxy_connect_http	proxy.c	/^proxy_connect_http(PurpleProxyConnectData *connect_data, struct sockaddr *addr, socklen_t addrlen)$/;"	f	file:	signature:(PurpleProxyConnectData *connect_data, struct sockaddr *addr, socklen_t addrlen)
proxy_connect_none	proxy.c	/^proxy_connect_none(PurpleProxyConnectData *connect_data, struct sockaddr *addr, socklen_t addrlen)$/;"	f	file:	signature:(PurpleProxyConnectData *connect_data, struct sockaddr *addr, socklen_t addrlen)
proxy_connect_socks4	proxy.c	/^proxy_connect_socks4(PurpleProxyConnectData *connect_data, struct sockaddr *addr, socklen_t addrlen)$/;"	f	file:	signature:(PurpleProxyConnectData *connect_data, struct sockaddr *addr, socklen_t addrlen)
proxy_connect_socks5	proxy.c	/^proxy_connect_socks5(PurpleProxyConnectData *connect_data, struct sockaddr *addr, socklen_t addrlen)$/;"	f	file:	signature:(PurpleProxyConnectData *connect_data, struct sockaddr *addr, socklen_t addrlen)
proxy_connect_udp_none	proxy.c	/^proxy_connect_udp_none(PurpleProxyConnectData *connect_data, struct sockaddr *addr, socklen_t addrlen)$/;"	f	file:	signature:(PurpleProxyConnectData *connect_data, struct sockaddr *addr, socklen_t addrlen)
proxy_do_write	proxy.c	/^proxy_do_write(gpointer data, gint source, PurpleInputCondition cond)$/;"	f	file:	signature:(gpointer data, gint source, PurpleInputCondition cond)
proxy_info	account.h	/^	PurpleProxyInfo *proxy_info;  \/**< Proxy information.  This will be set   *\/$/;"	m	struct:_PurpleAccount	access:public
proxy_pref_cb	proxy.c	/^proxy_pref_cb(const char *name, PurplePrefType type,$/;"	f	file:	signature:(const char *name, PurplePrefType type, gconstpointer value, gpointer data)
proxy_settings_to_xmlnode	account.c	/^proxy_settings_to_xmlnode(PurpleProxyInfo *proxy_info)$/;"	f	file:	signature:(PurpleProxyInfo *proxy_info)
prpl	connection.h	/^	PurplePlugin *prpl;            \/**< The protocol plugin.               *\/$/;"	m	struct:_PurpleConnection	access:public
prpl_data	media.c	/^	gpointer prpl_data;$/;"	m	struct:_PurpleMediaPrivate	file:	access:public
prpl_id	cmds.c	/^	gchar *prpl_id;$/;"	m	struct:_PurpleCmd	file:	access:public
prpl_ops	whiteboard.h	/^	PurpleWhiteboardPrplOps *prpl_ops; \/**< Protocol-plugin operations *\/$/;"	m	struct:_PurpleWhiteboard	access:public
public_alias_closure	account.c	/^struct public_alias_closure$/;"	s	file:
public_alias_closure::account	account.c	/^	PurpleAccount *account;$/;"	m	struct:public_alias_closure	file:	access:public
public_alias_closure::failure_cb	account.c	/^	gpointer failure_cb;$/;"	m	struct:public_alias_closure	file:	access:public
publicip	nat-pmp.c	/^	gchar *publicip;$/;"	m	struct:__anon42	file:	access:public
publicip	stun.h	/^	char publicip[16];$/;"	m	struct:_PurpleStunNatDiscovery	access:public
publicip	upnp.c	/^	char publicip[16];$/;"	m	struct:__anon63	file:	access:public
publicport	nat-pmp.c	/^	guint16		publicport;$/;"	m	struct:_PurplePmpMapResponse	file:	access:public
publicport	nat-pmp.c	/^	guint16		publicport;$/;"	m	struct:__anon40	file:	access:public
purple_GList_to_array	dbus-bindings.h	/^gpointer* purple_GList_to_array(GList *list, gboolean free_memory,$/;"	p	signature:(GList *list, gboolean free_memory, dbus_int32_t *len)
purple_GList_to_array	dbus-server.c	/^purple_GList_to_array(GList *list, gboolean free_memory, dbus_int32_t *len)$/;"	f	signature:(GList *list, gboolean free_memory, dbus_int32_t *len)
purple_GSList_to_array	dbus-bindings.h	/^gpointer* purple_GSList_to_array(GSList *list, gboolean free_memory,$/;"	p	signature:(GSList *list, gboolean free_memory, dbus_int32_t *len)
purple_GSList_to_array	dbus-server.c	/^purple_GSList_to_array(GSList *list, gboolean free_memory, dbus_int32_t *len)$/;"	f	signature:(GSList *list, gboolean free_memory, dbus_int32_t *len)
purple_account_add_buddies	account.c	/^purple_account_add_buddies(PurpleAccount *account, GList *buddies)$/;"	f	signature:(PurpleAccount *account, GList *buddies)
purple_account_add_buddies	account.h	/^void purple_account_add_buddies(PurpleAccount *account, GList *buddies);$/;"	p	signature:(PurpleAccount *account, GList *buddies)
purple_account_add_buddies_with_invite	account.c	/^purple_account_add_buddies_with_invite(PurpleAccount *account, GList *buddies, const char *message)$/;"	f	signature:(PurpleAccount *account, GList *buddies, const char *message)
purple_account_add_buddies_with_invite	account.h	/^void purple_account_add_buddies_with_invite(PurpleAccount *account, GList *buddies, const char *message);$/;"	p	signature:(PurpleAccount *account, GList *buddies, const char *message)
purple_account_add_buddy	account.c	/^purple_account_add_buddy(PurpleAccount *account, PurpleBuddy *buddy)$/;"	f	signature:(PurpleAccount *account, PurpleBuddy *buddy)
purple_account_add_buddy	account.h	/^void purple_account_add_buddy(PurpleAccount *account, PurpleBuddy *buddy);$/;"	p	signature:(PurpleAccount *account, PurpleBuddy *buddy)
purple_account_add_buddy_with_invite	account.c	/^purple_account_add_buddy_with_invite(PurpleAccount *account, PurpleBuddy *buddy, const char *message)$/;"	f	signature:(PurpleAccount *account, PurpleBuddy *buddy, const char *message)
purple_account_add_buddy_with_invite	account.h	/^void purple_account_add_buddy_with_invite(PurpleAccount *account, PurpleBuddy *buddy, const char *message);$/;"	p	signature:(PurpleAccount *account, PurpleBuddy *buddy, const char *message)
purple_account_change_password	account.c	/^purple_account_change_password(PurpleAccount *account, const char *orig_pw,$/;"	f	signature:(PurpleAccount *account, const char *orig_pw, const char *new_pw)
purple_account_change_password	account.h	/^void purple_account_change_password(PurpleAccount *account, const char *orig_pw,$/;"	p	signature:(PurpleAccount *account, const char *orig_pw, const char *new_pw)
purple_account_clear_current_error	account.c	/^purple_account_clear_current_error(PurpleAccount *account)$/;"	f	signature:(PurpleAccount *account)
purple_account_clear_current_error	account.h	/^void purple_account_clear_current_error(PurpleAccount *account);$/;"	p	signature:(PurpleAccount *account)
purple_account_clear_settings	account.c	/^purple_account_clear_settings(PurpleAccount *account)$/;"	f	signature:(PurpleAccount *account)
purple_account_clear_settings	account.h	/^void purple_account_clear_settings(PurpleAccount *account);$/;"	p	signature:(PurpleAccount *account)
purple_account_connect	account.c	/^purple_account_connect(PurpleAccount *account)$/;"	f	signature:(PurpleAccount *account)
purple_account_connect	account.h	/^void purple_account_connect(PurpleAccount *account);$/;"	p	signature:(PurpleAccount *account)
purple_account_destroy	account.c	/^purple_account_destroy(PurpleAccount *account)$/;"	f	signature:(PurpleAccount *account)
purple_account_destroy	account.h	/^void purple_account_destroy(PurpleAccount *account);$/;"	p	signature:(PurpleAccount *account)
purple_account_destroy_log	account.c	/^purple_account_destroy_log(PurpleAccount *account)$/;"	f	signature:(PurpleAccount *account)
purple_account_destroy_log	account.h	/^void purple_account_destroy_log(PurpleAccount *account);$/;"	p	signature:(PurpleAccount *account)
purple_account_disconnect	account.c	/^purple_account_disconnect(PurpleAccount *account)$/;"	f	signature:(PurpleAccount *account)
purple_account_disconnect	account.h	/^void purple_account_disconnect(PurpleAccount *account);$/;"	p	signature:(PurpleAccount *account)
purple_account_get_active_status	account.c	/^purple_account_get_active_status(const PurpleAccount *account)$/;"	f	signature:(const PurpleAccount *account)
purple_account_get_active_status	account.h	/^PurpleStatus *purple_account_get_active_status(const PurpleAccount *account);$/;"	p	signature:(const PurpleAccount *account)
purple_account_get_alias	account.c	/^purple_account_get_alias(const PurpleAccount *account)$/;"	f	signature:(const PurpleAccount *account)
purple_account_get_alias	account.h	/^const char *purple_account_get_alias(const PurpleAccount *account);$/;"	p	signature:(const PurpleAccount *account)
purple_account_get_bool	account.c	/^purple_account_get_bool(const PurpleAccount *account, const char *name,$/;"	f	signature:(const PurpleAccount *account, const char *name, gboolean default_value)
purple_account_get_bool	account.h	/^gboolean purple_account_get_bool(const PurpleAccount *account, const char *name,$/;"	p	signature:(const PurpleAccount *account, const char *name, gboolean default_value)
purple_account_get_buddy_icon_path	account.c	/^purple_account_get_buddy_icon_path(const PurpleAccount *account)$/;"	f	signature:(const PurpleAccount *account)
purple_account_get_buddy_icon_path	account.h	/^const char *purple_account_get_buddy_icon_path(const PurpleAccount *account);$/;"	p	signature:(const PurpleAccount *account)
purple_account_get_check_mail	account.c	/^purple_account_get_check_mail(const PurpleAccount *account)$/;"	f	signature:(const PurpleAccount *account)
purple_account_get_check_mail	account.h	/^gboolean purple_account_get_check_mail(const PurpleAccount *account);$/;"	p	signature:(const PurpleAccount *account)
purple_account_get_connection	account.c	/^purple_account_get_connection(const PurpleAccount *account)$/;"	f	signature:(const PurpleAccount *account)
purple_account_get_connection	account.h	/^PurpleConnection *purple_account_get_connection(const PurpleAccount *account);$/;"	p	signature:(const PurpleAccount *account)
purple_account_get_current_error	account.c	/^purple_account_get_current_error(PurpleAccount *account)$/;"	f	signature:(PurpleAccount *account)
purple_account_get_current_error	account.h	/^const PurpleConnectionErrorInfo *purple_account_get_current_error(PurpleAccount *account);$/;"	p	signature:(PurpleAccount *account)
purple_account_get_enabled	account.c	/^purple_account_get_enabled(const PurpleAccount *account, const char *ui)$/;"	f	signature:(const PurpleAccount *account, const char *ui)
purple_account_get_enabled	account.h	/^gboolean purple_account_get_enabled(const PurpleAccount *account,$/;"	p	signature:(const PurpleAccount *account, const char *ui)
purple_account_get_int	account.c	/^purple_account_get_int(const PurpleAccount *account, const char *name,$/;"	f	signature:(const PurpleAccount *account, const char *name, int default_value)
purple_account_get_int	account.h	/^int purple_account_get_int(const PurpleAccount *account, const char *name,$/;"	p	signature:(const PurpleAccount *account, const char *name, int default_value)
purple_account_get_log	account.c	/^purple_account_get_log(PurpleAccount *account, gboolean create)$/;"	f	signature:(PurpleAccount *account, gboolean create)
purple_account_get_log	account.h	/^PurpleLog *purple_account_get_log(PurpleAccount *account, gboolean create);$/;"	p	signature:(PurpleAccount *account, gboolean create)
purple_account_get_name_for_display	account.c	/^purple_account_get_name_for_display(const PurpleAccount *account)$/;"	f	signature:(const PurpleAccount *account)
purple_account_get_name_for_display	account.h	/^const gchar *purple_account_get_name_for_display(const PurpleAccount *account);$/;"	p	signature:(const PurpleAccount *account)
purple_account_get_password	account.c	/^purple_account_get_password(const PurpleAccount *account)$/;"	f	signature:(const PurpleAccount *account)
purple_account_get_password	account.h	/^const char *purple_account_get_password(const PurpleAccount *account);$/;"	p	signature:(const PurpleAccount *account)
purple_account_get_presence	account.c	/^purple_account_get_presence(const PurpleAccount *account)$/;"	f	signature:(const PurpleAccount *account)
purple_account_get_presence	account.h	/^PurplePresence *purple_account_get_presence(const PurpleAccount *account);$/;"	p	signature:(const PurpleAccount *account)
purple_account_get_privacy_type	account.c	/^purple_account_get_privacy_type(const PurpleAccount *account)$/;"	f	signature:(const PurpleAccount *account)
purple_account_get_privacy_type	account.h	/^PurplePrivacyType purple_account_get_privacy_type(const PurpleAccount *account);$/;"	p	signature:(const PurpleAccount *account)
purple_account_get_protocol_id	account.c	/^purple_account_get_protocol_id(const PurpleAccount *account)$/;"	f	signature:(const PurpleAccount *account)
purple_account_get_protocol_id	account.h	/^const char *purple_account_get_protocol_id(const PurpleAccount *account);$/;"	p	signature:(const PurpleAccount *account)
purple_account_get_protocol_name	account.c	/^purple_account_get_protocol_name(const PurpleAccount *account)$/;"	f	signature:(const PurpleAccount *account)
purple_account_get_protocol_name	account.h	/^const char *purple_account_get_protocol_name(const PurpleAccount *account);$/;"	p	signature:(const PurpleAccount *account)
purple_account_get_proxy_info	account.c	/^purple_account_get_proxy_info(const PurpleAccount *account)$/;"	f	signature:(const PurpleAccount *account)
purple_account_get_proxy_info	account.h	/^PurpleProxyInfo *purple_account_get_proxy_info(const PurpleAccount *account);$/;"	p	signature:(const PurpleAccount *account)
purple_account_get_public_alias	account.c	/^purple_account_get_public_alias(PurpleAccount *account,$/;"	f	signature:(PurpleAccount *account, PurpleGetPublicAliasSuccessCallback success_cb, PurpleGetPublicAliasFailureCallback failure_cb)
purple_account_get_public_alias	account.h	/^void purple_account_get_public_alias(PurpleAccount *account,$/;"	p	signature:(PurpleAccount *account, PurpleGetPublicAliasSuccessCallback success_cb, PurpleGetPublicAliasFailureCallback failure_cb)
purple_account_get_remember_password	account.c	/^purple_account_get_remember_password(const PurpleAccount *account)$/;"	f	signature:(const PurpleAccount *account)
purple_account_get_remember_password	account.h	/^gboolean purple_account_get_remember_password(const PurpleAccount *account);$/;"	p	signature:(const PurpleAccount *account)
purple_account_get_silence_suppression	account.c	/^purple_account_get_silence_suppression(const PurpleAccount *account)$/;"	f	signature:(const PurpleAccount *account)
purple_account_get_silence_suppression	account.h	/^gboolean purple_account_get_silence_suppression(const PurpleAccount *account);$/;"	p	signature:(const PurpleAccount *account)
purple_account_get_state	account.c	/^purple_account_get_state(const PurpleAccount *account)$/;"	f	file:	signature:(const PurpleAccount *account)
purple_account_get_status	account.c	/^purple_account_get_status(const PurpleAccount *account, const char *status_id)$/;"	f	signature:(const PurpleAccount *account, const char *status_id)
purple_account_get_status	account.h	/^PurpleStatus *purple_account_get_status(const PurpleAccount *account,$/;"	p	signature:(const PurpleAccount *account, const char *status_id)
purple_account_get_status_type	account.c	/^purple_account_get_status_type(const PurpleAccount *account, const char *id)$/;"	f	signature:(const PurpleAccount *account, const char *id)
purple_account_get_status_type	account.h	/^PurpleStatusType *purple_account_get_status_type(const PurpleAccount *account,$/;"	p	signature:(const PurpleAccount *account, const char *id)
purple_account_get_status_type_with_primitive	account.c	/^purple_account_get_status_type_with_primitive(const PurpleAccount *account, PurpleStatusPrimitive primitive)$/;"	f	signature:(const PurpleAccount *account, PurpleStatusPrimitive primitive)
purple_account_get_status_type_with_primitive	account.h	/^PurpleStatusType *purple_account_get_status_type_with_primitive($/;"	p	signature:( const PurpleAccount *account, PurpleStatusPrimitive primitive)
purple_account_get_status_types	account.c	/^purple_account_get_status_types(const PurpleAccount *account)$/;"	f	signature:(const PurpleAccount *account)
purple_account_get_status_types	account.h	/^GList *purple_account_get_status_types(const PurpleAccount *account);$/;"	p	signature:(const PurpleAccount *account)
purple_account_get_string	account.c	/^purple_account_get_string(const PurpleAccount *account, const char *name,$/;"	f	signature:(const PurpleAccount *account, const char *name, const char *default_value)
purple_account_get_string	account.h	/^const char *purple_account_get_string(const PurpleAccount *account,$/;"	p	signature:(const PurpleAccount *account, const char *name, const char *default_value)
purple_account_get_ui_bool	account.c	/^purple_account_get_ui_bool(const PurpleAccount *account, const char *ui,$/;"	f	signature:(const PurpleAccount *account, const char *ui, const char *name, gboolean default_value)
purple_account_get_ui_bool	account.h	/^gboolean purple_account_get_ui_bool(const PurpleAccount *account, const char *ui,$/;"	p	signature:(const PurpleAccount *account, const char *ui, const char *name, gboolean default_value)
purple_account_get_ui_int	account.c	/^purple_account_get_ui_int(const PurpleAccount *account, const char *ui,$/;"	f	signature:(const PurpleAccount *account, const char *ui, const char *name, int default_value)
purple_account_get_ui_int	account.h	/^int purple_account_get_ui_int(const PurpleAccount *account, const char *ui,$/;"	p	signature:(const PurpleAccount *account, const char *ui, const char *name, int default_value)
purple_account_get_ui_string	account.c	/^purple_account_get_ui_string(const PurpleAccount *account, const char *ui,$/;"	f	signature:(const PurpleAccount *account, const char *ui, const char *name, const char *default_value)
purple_account_get_ui_string	account.h	/^const char *purple_account_get_ui_string(const PurpleAccount *account,$/;"	p	signature:(const PurpleAccount *account, const char *ui, const char *name, const char *default_value)
purple_account_get_user_info	account.c	/^purple_account_get_user_info(const PurpleAccount *account)$/;"	f	signature:(const PurpleAccount *account)
purple_account_get_user_info	account.h	/^const char *purple_account_get_user_info(const PurpleAccount *account);$/;"	p	signature:(const PurpleAccount *account)
purple_account_get_username	account.c	/^purple_account_get_username(const PurpleAccount *account)$/;"	f	signature:(const PurpleAccount *account)
purple_account_get_username	account.h	/^const char *purple_account_get_username(const PurpleAccount *account);$/;"	p	signature:(const PurpleAccount *account)
purple_account_is_connected	account.c	/^purple_account_is_connected(const PurpleAccount *account)$/;"	f	signature:(const PurpleAccount *account)
purple_account_is_connected	account.h	/^gboolean purple_account_is_connected(const PurpleAccount *account);$/;"	p	signature:(const PurpleAccount *account)
purple_account_is_connecting	account.c	/^purple_account_is_connecting(const PurpleAccount *account)$/;"	f	signature:(const PurpleAccount *account)
purple_account_is_connecting	account.h	/^gboolean purple_account_is_connecting(const PurpleAccount *account);$/;"	p	signature:(const PurpleAccount *account)
purple_account_is_disconnected	account.c	/^purple_account_is_disconnected(const PurpleAccount *account)$/;"	f	signature:(const PurpleAccount *account)
purple_account_is_disconnected	account.h	/^gboolean purple_account_is_disconnected(const PurpleAccount *account);$/;"	p	signature:(const PurpleAccount *account)
purple_account_is_status_active	account.c	/^purple_account_is_status_active(const PurpleAccount *account,$/;"	f	signature:(const PurpleAccount *account, const char *status_id)
purple_account_is_status_active	account.h	/^gboolean purple_account_is_status_active(const PurpleAccount *account,$/;"	p	signature:(const PurpleAccount *account, const char *status_id)
purple_account_new	account.c	/^purple_account_new(const char *username, const char *protocol_id)$/;"	f	signature:(const char *username, const char *protocol_id)
purple_account_new	account.h	/^PurpleAccount *purple_account_new(const char *username, const char *protocol_id);$/;"	p	signature:(const char *username, const char *protocol_id)
purple_account_notify_added	account.c	/^purple_account_notify_added(PurpleAccount *account, const char *remote_user,$/;"	f	signature:(PurpleAccount *account, const char *remote_user, const char *id, const char *alias, const char *message)
purple_account_notify_added	account.h	/^void purple_account_notify_added(PurpleAccount *account, const char *remote_user,$/;"	p	signature:(PurpleAccount *account, const char *remote_user, const char *id, const char *alias, const char *message)
purple_account_option_add_list_item	accountopt.c	/^purple_account_option_add_list_item(PurpleAccountOption *option,$/;"	f	signature:(PurpleAccountOption *option, const char *key, const char *value)
purple_account_option_add_list_item	accountopt.h	/^void purple_account_option_add_list_item(PurpleAccountOption *option,$/;"	p	signature:(PurpleAccountOption *option, const char *key, const char *value)
purple_account_option_bool_new	accountopt.c	/^purple_account_option_bool_new(const char *text, const char *pref_name,$/;"	f	signature:(const char *text, const char *pref_name, gboolean default_value)
purple_account_option_bool_new	accountopt.h	/^PurpleAccountOption *purple_account_option_bool_new(const char *text,$/;"	p	signature:(const char *text, const char *pref_name, gboolean default_value)
purple_account_option_destroy	accountopt.c	/^purple_account_option_destroy(PurpleAccountOption *option)$/;"	f	signature:(PurpleAccountOption *option)
purple_account_option_destroy	accountopt.h	/^void purple_account_option_destroy(PurpleAccountOption *option);$/;"	p	signature:(PurpleAccountOption *option)
purple_account_option_get_default_bool	accountopt.c	/^purple_account_option_get_default_bool(const PurpleAccountOption *option)$/;"	f	signature:(const PurpleAccountOption *option)
purple_account_option_get_default_bool	accountopt.h	/^gboolean purple_account_option_get_default_bool(const PurpleAccountOption *option);$/;"	p	signature:(const PurpleAccountOption *option)
purple_account_option_get_default_int	accountopt.c	/^purple_account_option_get_default_int(const PurpleAccountOption *option)$/;"	f	signature:(const PurpleAccountOption *option)
purple_account_option_get_default_int	accountopt.h	/^int purple_account_option_get_default_int(const PurpleAccountOption *option);$/;"	p	signature:(const PurpleAccountOption *option)
purple_account_option_get_default_list_value	accountopt.c	/^purple_account_option_get_default_list_value(const PurpleAccountOption *option)$/;"	f	signature:(const PurpleAccountOption *option)
purple_account_option_get_default_list_value	accountopt.h	/^const char *purple_account_option_get_default_list_value($/;"	p	signature:( const PurpleAccountOption *option)
purple_account_option_get_default_string	accountopt.c	/^purple_account_option_get_default_string(const PurpleAccountOption *option)$/;"	f	signature:(const PurpleAccountOption *option)
purple_account_option_get_default_string	accountopt.h	/^const char *purple_account_option_get_default_string($/;"	p	signature:( const PurpleAccountOption *option)
purple_account_option_get_list	accountopt.c	/^purple_account_option_get_list(const PurpleAccountOption *option)$/;"	f	signature:(const PurpleAccountOption *option)
purple_account_option_get_list	accountopt.h	/^GList *purple_account_option_get_list(const PurpleAccountOption *option);$/;"	p	signature:(const PurpleAccountOption *option)
purple_account_option_get_masked	accountopt.c	/^purple_account_option_get_masked(const PurpleAccountOption *option)$/;"	f	signature:(const PurpleAccountOption *option)
purple_account_option_get_masked	accountopt.h	/^purple_account_option_get_masked(const PurpleAccountOption *option);$/;"	p	signature:(const PurpleAccountOption *option)
purple_account_option_get_setting	accountopt.c	/^purple_account_option_get_setting(const PurpleAccountOption *option)$/;"	f	signature:(const PurpleAccountOption *option)
purple_account_option_get_setting	accountopt.h	/^const char *purple_account_option_get_setting(const PurpleAccountOption *option);$/;"	p	signature:(const PurpleAccountOption *option)
purple_account_option_get_text	accountopt.c	/^purple_account_option_get_text(const PurpleAccountOption *option)$/;"	f	signature:(const PurpleAccountOption *option)
purple_account_option_get_text	accountopt.h	/^const char *purple_account_option_get_text(const PurpleAccountOption *option);$/;"	p	signature:(const PurpleAccountOption *option)
purple_account_option_get_type	accountopt.c	/^purple_account_option_get_type(const PurpleAccountOption *option)$/;"	f	signature:(const PurpleAccountOption *option)
purple_account_option_get_type	accountopt.h	/^PurplePrefType purple_account_option_get_type(const PurpleAccountOption *option);$/;"	p	signature:(const PurpleAccountOption *option)
purple_account_option_int_new	accountopt.c	/^purple_account_option_int_new(const char *text, const char *pref_name,$/;"	f	signature:(const char *text, const char *pref_name, int default_value)
purple_account_option_int_new	accountopt.h	/^PurpleAccountOption *purple_account_option_int_new(const char *text,$/;"	p	signature:(const char *text, const char *pref_name, int default_value)
purple_account_option_list_free	accountopt.c	/^purple_account_option_list_free(gpointer data, gpointer user_data)$/;"	f	file:	signature:(gpointer data, gpointer user_data)
purple_account_option_list_new	accountopt.c	/^purple_account_option_list_new(const char *text, const char *pref_name,$/;"	f	signature:(const char *text, const char *pref_name, GList *list)
purple_account_option_list_new	accountopt.h	/^PurpleAccountOption *purple_account_option_list_new(const char *text,$/;"	p	signature:(const char *text, const char *pref_name, GList *list)
purple_account_option_new	accountopt.c	/^purple_account_option_new(PurplePrefType type, const char *text,$/;"	f	signature:(PurplePrefType type, const char *text, const char *pref_name)
purple_account_option_new	accountopt.h	/^PurpleAccountOption *purple_account_option_new(PurplePrefType type,$/;"	p	signature:(PurplePrefType type, const char *text, const char *pref_name)
purple_account_option_set_default_bool	accountopt.c	/^purple_account_option_set_default_bool(PurpleAccountOption *option,$/;"	f	signature:(PurpleAccountOption *option, gboolean value)
purple_account_option_set_default_bool	accountopt.h	/^void purple_account_option_set_default_bool(PurpleAccountOption *option,$/;"	p	signature:(PurpleAccountOption *option, gboolean value)
purple_account_option_set_default_int	accountopt.c	/^purple_account_option_set_default_int(PurpleAccountOption *option, int value)$/;"	f	signature:(PurpleAccountOption *option, int value)
purple_account_option_set_default_int	accountopt.h	/^void purple_account_option_set_default_int(PurpleAccountOption *option,$/;"	p	signature:(PurpleAccountOption *option, int value)
purple_account_option_set_default_string	accountopt.c	/^purple_account_option_set_default_string(PurpleAccountOption *option,$/;"	f	signature:(PurpleAccountOption *option, const char *value)
purple_account_option_set_default_string	accountopt.h	/^void purple_account_option_set_default_string(PurpleAccountOption *option,$/;"	p	signature:(PurpleAccountOption *option, const char *value)
purple_account_option_set_list	accountopt.c	/^purple_account_option_set_list(PurpleAccountOption *option, GList *values)$/;"	f	signature:(PurpleAccountOption *option, GList *values)
purple_account_option_set_list	accountopt.h	/^void purple_account_option_set_list(PurpleAccountOption *option, GList *values);$/;"	p	signature:(PurpleAccountOption *option, GList *values)
purple_account_option_set_masked	accountopt.c	/^purple_account_option_set_masked(PurpleAccountOption *option, gboolean masked)$/;"	f	signature:(PurpleAccountOption *option, gboolean masked)
purple_account_option_set_masked	accountopt.h	/^purple_account_option_set_masked(PurpleAccountOption *option, gboolean masked);$/;"	p	signature:(PurpleAccountOption *option, gboolean masked)
purple_account_option_string_new	accountopt.c	/^purple_account_option_string_new(const char *text, const char *pref_name,$/;"	f	signature:(const char *text, const char *pref_name, const char *default_value)
purple_account_option_string_new	accountopt.h	/^PurpleAccountOption *purple_account_option_string_new(const char *text,$/;"	p	signature:(const char *text, const char *pref_name, const char *default_value)
purple_account_register	account.c	/^purple_account_register(PurpleAccount *account)$/;"	f	signature:(PurpleAccount *account)
purple_account_register	account.h	/^void purple_account_register(PurpleAccount *account);$/;"	p	signature:(PurpleAccount *account)
purple_account_remove_buddies	account.c	/^purple_account_remove_buddies(PurpleAccount *account, GList *buddies, GList *groups)$/;"	f	signature:(PurpleAccount *account, GList *buddies, GList *groups)
purple_account_remove_buddies	account.h	/^void purple_account_remove_buddies(PurpleAccount *account, GList *buddies,$/;"	p	signature:(PurpleAccount *account, GList *buddies, GList *groups)
purple_account_remove_buddy	account.c	/^purple_account_remove_buddy(PurpleAccount *account, PurpleBuddy *buddy,$/;"	f	signature:(PurpleAccount *account, PurpleBuddy *buddy, PurpleGroup *group)
purple_account_remove_buddy	account.h	/^void purple_account_remove_buddy(PurpleAccount *account, PurpleBuddy *buddy,$/;"	p	signature:(PurpleAccount *account, PurpleBuddy *buddy, PurpleGroup *group)
purple_account_remove_group	account.c	/^purple_account_remove_group(PurpleAccount *account, PurpleGroup *group)$/;"	f	signature:(PurpleAccount *account, PurpleGroup *group)
purple_account_remove_group	account.h	/^void purple_account_remove_group(PurpleAccount *account, PurpleGroup *group);$/;"	p	signature:(PurpleAccount *account, PurpleGroup *group)
purple_account_remove_setting	account.c	/^purple_account_remove_setting(PurpleAccount *account, const char *setting)$/;"	f	signature:(PurpleAccount *account, const char *setting)
purple_account_remove_setting	account.h	/^void purple_account_remove_setting(PurpleAccount *account, const char *setting);$/;"	p	signature:(PurpleAccount *account, const char *setting)
purple_account_request_add	account.c	/^purple_account_request_add(PurpleAccount *account, const char *remote_user,$/;"	f	signature:(PurpleAccount *account, const char *remote_user, const char *id, const char *alias, const char *message)
purple_account_request_add	account.h	/^void purple_account_request_add(PurpleAccount *account, const char *remote_user,$/;"	p	signature:(PurpleAccount *account, const char *remote_user, const char *id, const char *alias, const char *message)
purple_account_request_authorization	account.c	/^purple_account_request_authorization(PurpleAccount *account, const char *remote_user,$/;"	f	signature:(PurpleAccount *account, const char *remote_user, const char *id, const char *alias, const char *message, gboolean on_list, PurpleAccountRequestAuthorizationCb auth_cb, PurpleAccountRequestAuthorizationCb deny_cb, void *user_data)
purple_account_request_authorization	account.h	/^void *purple_account_request_authorization(PurpleAccount *account, const char *remote_user,$/;"	p	signature:(PurpleAccount *account, const char *remote_user, const char *id, const char *alias, const char *message, gboolean on_list, PurpleAccountRequestAuthorizationCb auth_cb, PurpleAccountRequestAuthorizationCb deny_cb, void *user_data)
purple_account_request_change_password	account.c	/^purple_account_request_change_password(PurpleAccount *account)$/;"	f	signature:(PurpleAccount *account)
purple_account_request_change_password	account.h	/^void purple_account_request_change_password(PurpleAccount *account);$/;"	p	signature:(PurpleAccount *account)
purple_account_request_change_user_info	account.c	/^purple_account_request_change_user_info(PurpleAccount *account)$/;"	f	signature:(PurpleAccount *account)
purple_account_request_change_user_info	account.h	/^void purple_account_request_change_user_info(PurpleAccount *account);$/;"	p	signature:(PurpleAccount *account)
purple_account_request_close	account.c	/^purple_account_request_close(void *ui_handle)$/;"	f	signature:(void *ui_handle)
purple_account_request_close	account.h	/^void purple_account_request_close(void *ui_handle);$/;"	p	signature:(void *ui_handle)
purple_account_request_close_info	account.c	/^purple_account_request_close_info(PurpleAccountRequestInfo *info)$/;"	f	file:	signature:(PurpleAccountRequestInfo *info)
purple_account_request_close_with_account	account.c	/^purple_account_request_close_with_account(PurpleAccount *account)$/;"	f	signature:(PurpleAccount *account)
purple_account_request_close_with_account	account.h	/^void purple_account_request_close_with_account(PurpleAccount *account);$/;"	p	signature:(PurpleAccount *account)
purple_account_request_info_unref	account.c	/^purple_account_request_info_unref(PurpleAccountRequestInfo *info)$/;"	f	file:	signature:(PurpleAccountRequestInfo *info)
purple_account_request_password	account.c	/^purple_account_request_password(PurpleAccount *account, GCallback ok_cb,$/;"	f	signature:(PurpleAccount *account, GCallback ok_cb, GCallback cancel_cb, void *user_data)
purple_account_request_password	account.h	/^void purple_account_request_password(PurpleAccount *account, GCallback ok_cb,$/;"	p	signature:(PurpleAccount *account, GCallback ok_cb, GCallback cancel_cb, void *user_data)
purple_account_set_alias	account.c	/^purple_account_set_alias(PurpleAccount *account, const char *alias)$/;"	f	signature:(PurpleAccount *account, const char *alias)
purple_account_set_alias	account.h	/^void purple_account_set_alias(PurpleAccount *account, const char *alias);$/;"	p	signature:(PurpleAccount *account, const char *alias)
purple_account_set_bool	account.c	/^purple_account_set_bool(PurpleAccount *account, const char *name, gboolean value)$/;"	f	signature:(PurpleAccount *account, const char *name, gboolean value)
purple_account_set_bool	account.h	/^void purple_account_set_bool(PurpleAccount *account, const char *name,$/;"	p	signature:(PurpleAccount *account, const char *name, gboolean value)
purple_account_set_buddy_icon_path	account.c	/^void purple_account_set_buddy_icon_path(PurpleAccount *account, const char *path)$/;"	f	signature:(PurpleAccount *account, const char *path)
purple_account_set_buddy_icon_path	account.h	/^void purple_account_set_buddy_icon_path(PurpleAccount *account, const char *path);$/;"	p	signature:(PurpleAccount *account, const char *path)
purple_account_set_check_mail	account.c	/^purple_account_set_check_mail(PurpleAccount *account, gboolean value)$/;"	f	signature:(PurpleAccount *account, gboolean value)
purple_account_set_check_mail	account.h	/^void purple_account_set_check_mail(PurpleAccount *account, gboolean value);$/;"	p	signature:(PurpleAccount *account, gboolean value)
purple_account_set_connection	account.c	/^purple_account_set_connection(PurpleAccount *account, PurpleConnection *gc)$/;"	f	signature:(PurpleAccount *account, PurpleConnection *gc)
purple_account_set_connection	account.h	/^void purple_account_set_connection(PurpleAccount *account, PurpleConnection *gc);$/;"	p	signature:(PurpleAccount *account, PurpleConnection *gc)
purple_account_set_enabled	account.c	/^purple_account_set_enabled(PurpleAccount *account, const char *ui,$/;"	f	signature:(PurpleAccount *account, const char *ui, gboolean value)
purple_account_set_enabled	account.h	/^void purple_account_set_enabled(PurpleAccount *account, const char *ui,$/;"	p	signature:(PurpleAccount *account, const char *ui, gboolean value)
purple_account_set_int	account.c	/^purple_account_set_int(PurpleAccount *account, const char *name, int value)$/;"	f	signature:(PurpleAccount *account, const char *name, int value)
purple_account_set_int	account.h	/^void purple_account_set_int(PurpleAccount *account, const char *name, int value);$/;"	p	signature:(PurpleAccount *account, const char *name, int value)
purple_account_set_password	account.c	/^purple_account_set_password(PurpleAccount *account, const char *password)$/;"	f	signature:(PurpleAccount *account, const char *password)
purple_account_set_password	account.h	/^void purple_account_set_password(PurpleAccount *account, const char *password);$/;"	p	signature:(PurpleAccount *account, const char *password)
purple_account_set_privacy_type	account.c	/^purple_account_set_privacy_type(PurpleAccount *account, PurplePrivacyType privacy_type)$/;"	f	signature:(PurpleAccount *account, PurplePrivacyType privacy_type)
purple_account_set_privacy_type	account.h	/^void purple_account_set_privacy_type(PurpleAccount *account, PurplePrivacyType privacy_type);$/;"	p	signature:(PurpleAccount *account, PurplePrivacyType privacy_type)
purple_account_set_protocol_id	account.c	/^purple_account_set_protocol_id(PurpleAccount *account, const char *protocol_id)$/;"	f	signature:(PurpleAccount *account, const char *protocol_id)
purple_account_set_protocol_id	account.h	/^void purple_account_set_protocol_id(PurpleAccount *account,$/;"	p	signature:(PurpleAccount *account, const char *protocol_id)
purple_account_set_proxy_info	account.c	/^purple_account_set_proxy_info(PurpleAccount *account, PurpleProxyInfo *info)$/;"	f	signature:(PurpleAccount *account, PurpleProxyInfo *info)
purple_account_set_proxy_info	account.h	/^void purple_account_set_proxy_info(PurpleAccount *account, PurpleProxyInfo *info);$/;"	p	signature:(PurpleAccount *account, PurpleProxyInfo *info)
purple_account_set_public_alias	account.c	/^purple_account_set_public_alias(PurpleAccount *account,$/;"	f	signature:(PurpleAccount *account, const char *alias, PurpleSetPublicAliasSuccessCallback success_cb, PurpleSetPublicAliasFailureCallback failure_cb)
purple_account_set_public_alias	account.h	/^void purple_account_set_public_alias(PurpleAccount *account,$/;"	p	signature:(PurpleAccount *account, const char *alias, PurpleSetPublicAliasSuccessCallback success_cb, PurpleSetPublicAliasFailureCallback failure_cb)
purple_account_set_register_callback	account.c	/^purple_account_set_register_callback(PurpleAccount *account, PurpleAccountRegistrationCb cb, void *user_data)$/;"	f	signature:(PurpleAccount *account, PurpleAccountRegistrationCb cb, void *user_data)
purple_account_set_register_callback	account.h	/^void purple_account_set_register_callback(PurpleAccount *account, PurpleAccountRegistrationCb cb, void *user_data);$/;"	p	signature:(PurpleAccount *account, PurpleAccountRegistrationCb cb, void *user_data)
purple_account_set_remember_password	account.c	/^purple_account_set_remember_password(PurpleAccount *account, gboolean value)$/;"	f	signature:(PurpleAccount *account, gboolean value)
purple_account_set_remember_password	account.h	/^void purple_account_set_remember_password(PurpleAccount *account, gboolean value);$/;"	p	signature:(PurpleAccount *account, gboolean value)
purple_account_set_silence_suppression	account.c	/^purple_account_set_silence_suppression(PurpleAccount *account, gboolean value)$/;"	f	signature:(PurpleAccount *account, gboolean value)
purple_account_set_silence_suppression	account.h	/^void purple_account_set_silence_suppression(PurpleAccount *account,$/;"	p	signature:(PurpleAccount *account, gboolean value)
purple_account_set_status	account.c	/^purple_account_set_status(PurpleAccount *account, const char *status_id,$/;"	f	signature:(PurpleAccount *account, const char *status_id, gboolean active, ...)
purple_account_set_status_list	account.c	/^purple_account_set_status_list(PurpleAccount *account, const char *status_id,$/;"	f	signature:(PurpleAccount *account, const char *status_id, gboolean active, GList *attrs)
purple_account_set_status_list	account.h	/^void purple_account_set_status_list(PurpleAccount *account,$/;"	p	signature:(PurpleAccount *account, const char *status_id, gboolean active, GList *attrs)
purple_account_set_status_types	account.c	/^purple_account_set_status_types(PurpleAccount *account, GList *status_types)$/;"	f	signature:(PurpleAccount *account, GList *status_types)
purple_account_set_status_types	account.h	/^void purple_account_set_status_types(PurpleAccount *account, GList *status_types);$/;"	p	signature:(PurpleAccount *account, GList *status_types)
purple_account_set_string	account.c	/^purple_account_set_string(PurpleAccount *account, const char *name,$/;"	f	signature:(PurpleAccount *account, const char *name, const char *value)
purple_account_set_string	account.h	/^void purple_account_set_string(PurpleAccount *account, const char *name,$/;"	p	signature:(PurpleAccount *account, const char *name, const char *value)
purple_account_set_ui_bool	account.c	/^purple_account_set_ui_bool(PurpleAccount *account, const char *ui,$/;"	f	signature:(PurpleAccount *account, const char *ui, const char *name, gboolean value)
purple_account_set_ui_bool	account.h	/^void purple_account_set_ui_bool(PurpleAccount *account, const char *ui,$/;"	p	signature:(PurpleAccount *account, const char *ui, const char *name, gboolean value)
purple_account_set_ui_int	account.c	/^purple_account_set_ui_int(PurpleAccount *account, const char *ui,$/;"	f	signature:(PurpleAccount *account, const char *ui, const char *name, int value)
purple_account_set_ui_int	account.h	/^void purple_account_set_ui_int(PurpleAccount *account, const char *ui,$/;"	p	signature:(PurpleAccount *account, const char *ui, const char *name, int value)
purple_account_set_ui_string	account.c	/^purple_account_set_ui_string(PurpleAccount *account, const char *ui,$/;"	f	signature:(PurpleAccount *account, const char *ui, const char *name, const char *value)
purple_account_set_ui_string	account.h	/^void purple_account_set_ui_string(PurpleAccount *account, const char *ui,$/;"	p	signature:(PurpleAccount *account, const char *ui, const char *name, const char *value)
purple_account_set_user_info	account.c	/^purple_account_set_user_info(PurpleAccount *account, const char *user_info)$/;"	f	signature:(PurpleAccount *account, const char *user_info)
purple_account_set_user_info	account.h	/^void purple_account_set_user_info(PurpleAccount *account, const char *user_info);$/;"	p	signature:(PurpleAccount *account, const char *user_info)
purple_account_set_username	account.c	/^purple_account_set_username(PurpleAccount *account, const char *username)$/;"	f	signature:(PurpleAccount *account, const char *username)
purple_account_set_username	account.h	/^void purple_account_set_username(PurpleAccount *account, const char *username);$/;"	p	signature:(PurpleAccount *account, const char *username)
purple_account_supports_offline_message	account.c	/^gboolean purple_account_supports_offline_message(PurpleAccount *account, PurpleBuddy *buddy)$/;"	f	signature:(PurpleAccount *account, PurpleBuddy *buddy)
purple_account_supports_offline_message	account.h	/^gboolean purple_account_supports_offline_message(PurpleAccount *account, PurpleBuddy *buddy);$/;"	p	signature:(PurpleAccount *account, PurpleBuddy *buddy)
purple_account_unregister	account.c	/^purple_account_unregister(PurpleAccount *account, PurpleAccountUnregistrationCb cb, void *user_data)$/;"	f	signature:(PurpleAccount *account, PurpleAccountUnregistrationCb cb, void *user_data)
purple_account_unregister	account.h	/^void purple_account_unregister(PurpleAccount *account, PurpleAccountUnregistrationCb cb, void *user_data);$/;"	p	signature:(PurpleAccount *account, PurpleAccountUnregistrationCb cb, void *user_data)
purple_account_user_split_destroy	accountopt.c	/^purple_account_user_split_destroy(PurpleAccountUserSplit *split)$/;"	f	signature:(PurpleAccountUserSplit *split)
purple_account_user_split_destroy	accountopt.h	/^void purple_account_user_split_destroy(PurpleAccountUserSplit *split);$/;"	p	signature:(PurpleAccountUserSplit *split)
purple_account_user_split_get_default_value	accountopt.c	/^purple_account_user_split_get_default_value(const PurpleAccountUserSplit *split)$/;"	f	signature:(const PurpleAccountUserSplit *split)
purple_account_user_split_get_default_value	accountopt.h	/^const char *purple_account_user_split_get_default_value($/;"	p	signature:( const PurpleAccountUserSplit *split)
purple_account_user_split_get_reverse	accountopt.c	/^purple_account_user_split_get_reverse(const PurpleAccountUserSplit *split)$/;"	f	signature:(const PurpleAccountUserSplit *split)
purple_account_user_split_get_reverse	accountopt.h	/^gboolean purple_account_user_split_get_reverse(const PurpleAccountUserSplit *split);$/;"	p	signature:(const PurpleAccountUserSplit *split)
purple_account_user_split_get_separator	accountopt.c	/^purple_account_user_split_get_separator(const PurpleAccountUserSplit *split)$/;"	f	signature:(const PurpleAccountUserSplit *split)
purple_account_user_split_get_separator	accountopt.h	/^char purple_account_user_split_get_separator(const PurpleAccountUserSplit *split);$/;"	p	signature:(const PurpleAccountUserSplit *split)
purple_account_user_split_get_text	accountopt.c	/^purple_account_user_split_get_text(const PurpleAccountUserSplit *split)$/;"	f	signature:(const PurpleAccountUserSplit *split)
purple_account_user_split_get_text	accountopt.h	/^const char *purple_account_user_split_get_text(const PurpleAccountUserSplit *split);$/;"	p	signature:(const PurpleAccountUserSplit *split)
purple_account_user_split_new	accountopt.c	/^purple_account_user_split_new(const char *text, const char *default_value,$/;"	f	signature:(const char *text, const char *default_value, char sep)
purple_account_user_split_new	accountopt.h	/^PurpleAccountUserSplit *purple_account_user_split_new(const char *text,$/;"	p	signature:(const char *text, const char *default_value, char sep)
purple_account_user_split_set_reverse	accountopt.c	/^purple_account_user_split_set_reverse(PurpleAccountUserSplit *split, gboolean reverse)$/;"	f	signature:(PurpleAccountUserSplit *split, gboolean reverse)
purple_account_user_split_set_reverse	accountopt.h	/^void purple_account_user_split_set_reverse(PurpleAccountUserSplit *split, gboolean reverse);$/;"	p	signature:(PurpleAccountUserSplit *split, gboolean reverse)
purple_accounts_add	account.c	/^purple_accounts_add(PurpleAccount *account)$/;"	f	signature:(PurpleAccount *account)
purple_accounts_add	account.h	/^void purple_accounts_add(PurpleAccount *account);$/;"	p	signature:(PurpleAccount *account)
purple_accounts_delete	account.c	/^purple_accounts_delete(PurpleAccount *account)$/;"	f	signature:(PurpleAccount *account)
purple_accounts_delete	account.h	/^void purple_accounts_delete(PurpleAccount *account);$/;"	p	signature:(PurpleAccount *account)
purple_accounts_find	account.c	/^purple_accounts_find(const char *name, const char *protocol_id)$/;"	f	signature:(const char *name, const char *protocol_id)
purple_accounts_find	account.h	/^PurpleAccount *purple_accounts_find(const char *name, const char *protocol);$/;"	p	signature:(const char *name, const char *protocol)
purple_accounts_find_any	dbus-useful.c	/^PurpleAccount *purple_accounts_find_any(const char *name, const char *protocol)$/;"	f	signature:(const char *name, const char *protocol)
purple_accounts_find_any	dbus-useful.h	/^PurpleAccount *purple_accounts_find_any(const char *name, const char *protocol);$/;"	p	signature:(const char *name, const char *protocol)
purple_accounts_find_connected	dbus-useful.c	/^PurpleAccount *purple_accounts_find_connected(const char *name, const char *protocol)$/;"	f	signature:(const char *name, const char *protocol)
purple_accounts_find_connected	dbus-useful.h	/^PurpleAccount *purple_accounts_find_connected(const char *name, const char *protocol);$/;"	p	signature:(const char *name, const char *protocol)
purple_accounts_find_ext	dbus-useful.c	/^purple_accounts_find_ext(const char *name, const char *protocol_id,$/;"	f	signature:(const char *name, const char *protocol_id, gboolean (*account_test)(const PurpleAccount *account))
purple_accounts_find_ext	dbus-useful.h	/^PurpleAccount *purple_accounts_find_ext(const char *name, const char *protocol_id,$/;"	p	signature:(const char *name, const char *protocol_id, gboolean (*account_test)(const PurpleAccount *account))
purple_accounts_get_all	account.c	/^purple_accounts_get_all(void)$/;"	f	signature:(void)
purple_accounts_get_all	account.h	/^GList *purple_accounts_get_all(void);$/;"	p	signature:(void)
purple_accounts_get_all_active	account.c	/^purple_accounts_get_all_active(void)$/;"	f	signature:(void)
purple_accounts_get_all_active	account.h	/^GList *purple_accounts_get_all_active(void);$/;"	p	signature:(void)
purple_accounts_get_handle	account.c	/^purple_accounts_get_handle(void)$/;"	f	signature:(void)
purple_accounts_get_handle	account.h	/^void *purple_accounts_get_handle(void);$/;"	p	signature:(void)
purple_accounts_get_ui_ops	account.c	/^purple_accounts_get_ui_ops(void)$/;"	f	signature:(void)
purple_accounts_get_ui_ops	account.h	/^PurpleAccountUiOps *purple_accounts_get_ui_ops(void);$/;"	p	signature:(void)
purple_accounts_init	account.c	/^purple_accounts_init(void)$/;"	f	signature:(void)
purple_accounts_init	account.h	/^void purple_accounts_init(void);$/;"	p	signature:(void)
purple_accounts_remove	account.c	/^purple_accounts_remove(PurpleAccount *account)$/;"	f	signature:(PurpleAccount *account)
purple_accounts_remove	account.h	/^void purple_accounts_remove(PurpleAccount *account);$/;"	p	signature:(PurpleAccount *account)
purple_accounts_reorder	account.c	/^purple_accounts_reorder(PurpleAccount *account, gint new_index)$/;"	f	signature:(PurpleAccount *account, gint new_index)
purple_accounts_reorder	account.h	/^void purple_accounts_reorder(PurpleAccount *account, gint new_index);$/;"	p	signature:(PurpleAccount *account, gint new_index)
purple_accounts_restore_current_statuses	account.c	/^purple_accounts_restore_current_statuses()$/;"	f
purple_accounts_restore_current_statuses	account.h	/^void purple_accounts_restore_current_statuses(void);$/;"	p	signature:(void)
purple_accounts_set_ui_ops	account.c	/^purple_accounts_set_ui_ops(PurpleAccountUiOps *ops)$/;"	f	signature:(PurpleAccountUiOps *ops)
purple_accounts_set_ui_ops	account.h	/^void purple_accounts_set_ui_ops(PurpleAccountUiOps *ops);$/;"	p	signature:(PurpleAccountUiOps *ops)
purple_accounts_uninit	account.c	/^purple_accounts_uninit(void)$/;"	f	signature:(void)
purple_accounts_uninit	account.h	/^void purple_accounts_uninit(void);$/;"	p	signature:(void)
purple_add_eight	util.h	1430;"	d
purple_attention_type_get_icon_name	prpl.c	/^purple_attention_type_get_icon_name(const PurpleAttentionType *type)$/;"	f	signature:(const PurpleAttentionType *type)
purple_attention_type_get_icon_name	prpl.h	/^const char *purple_attention_type_get_icon_name(const PurpleAttentionType *type);$/;"	p	signature:(const PurpleAttentionType *type)
purple_attention_type_get_incoming_desc	prpl.c	/^purple_attention_type_get_incoming_desc(const PurpleAttentionType *type)$/;"	f	signature:(const PurpleAttentionType *type)
purple_attention_type_get_incoming_desc	prpl.h	/^const char *purple_attention_type_get_incoming_desc(const PurpleAttentionType *type);$/;"	p	signature:(const PurpleAttentionType *type)
purple_attention_type_get_name	prpl.c	/^purple_attention_type_get_name(const PurpleAttentionType *type)$/;"	f	signature:(const PurpleAttentionType *type)
purple_attention_type_get_name	prpl.h	/^const char *purple_attention_type_get_name(const PurpleAttentionType *type);$/;"	p	signature:(const PurpleAttentionType *type)
purple_attention_type_get_outgoing_desc	prpl.c	/^purple_attention_type_get_outgoing_desc(const PurpleAttentionType *type)$/;"	f	signature:(const PurpleAttentionType *type)
purple_attention_type_get_outgoing_desc	prpl.h	/^const char *purple_attention_type_get_outgoing_desc(const PurpleAttentionType *type);$/;"	p	signature:(const PurpleAttentionType *type)
purple_attention_type_get_unlocalized_name	prpl.c	/^purple_attention_type_get_unlocalized_name(const PurpleAttentionType *type)$/;"	f	signature:(const PurpleAttentionType *type)
purple_attention_type_get_unlocalized_name	prpl.h	/^const char *purple_attention_type_get_unlocalized_name(const PurpleAttentionType *type);$/;"	p	signature:(const PurpleAttentionType *type)
purple_attention_type_new	prpl.c	/^purple_attention_type_new(const char *ulname, const char *name,$/;"	f	signature:(const char *ulname, const char *name, const char *inc_desc, const char *out_desc)
purple_attention_type_new	prpl.h	/^PurpleAttentionType *purple_attention_type_new(const char *ulname, const char *name,$/;"	p	signature:(const char *ulname, const char *name, const char *inc_desc, const char *out_desc)
purple_attention_type_set_icon_name	prpl.c	/^purple_attention_type_set_icon_name(PurpleAttentionType *type, const char *name)$/;"	f	signature:(PurpleAttentionType *type, const char *name)
purple_attention_type_set_icon_name	prpl.h	/^void purple_attention_type_set_icon_name(PurpleAttentionType *type, const char *name);$/;"	p	signature:(PurpleAttentionType *type, const char *name)
purple_attention_type_set_incoming_desc	prpl.c	/^purple_attention_type_set_incoming_desc(PurpleAttentionType *type, const char *desc)$/;"	f	signature:(PurpleAttentionType *type, const char *desc)
purple_attention_type_set_incoming_desc	prpl.h	/^void purple_attention_type_set_incoming_desc(PurpleAttentionType *type, const char *desc);$/;"	p	signature:(PurpleAttentionType *type, const char *desc)
purple_attention_type_set_name	prpl.c	/^purple_attention_type_set_name(PurpleAttentionType *type, const char *name)$/;"	f	signature:(PurpleAttentionType *type, const char *name)
purple_attention_type_set_name	prpl.h	/^void purple_attention_type_set_name(PurpleAttentionType *type, const char *name);$/;"	p	signature:(PurpleAttentionType *type, const char *name)
purple_attention_type_set_outgoing_desc	prpl.c	/^purple_attention_type_set_outgoing_desc(PurpleAttentionType *type, const char *desc)$/;"	f	signature:(PurpleAttentionType *type, const char *desc)
purple_attention_type_set_outgoing_desc	prpl.h	/^void purple_attention_type_set_outgoing_desc(PurpleAttentionType *type, const char *desc);$/;"	p	signature:(PurpleAttentionType *type, const char *desc)
purple_attention_type_set_unlocalized_name	prpl.c	/^purple_attention_type_set_unlocalized_name(PurpleAttentionType *type, const char *ulname)$/;"	f	signature:(PurpleAttentionType *type, const char *ulname)
purple_attention_type_set_unlocalized_name	prpl.h	/^void purple_attention_type_set_unlocalized_name(PurpleAttentionType *type, const char *ulname);$/;"	p	signature:(PurpleAttentionType *type, const char *ulname)
purple_base16_decode	util.c	/^purple_base16_decode(const char *str, gsize *ret_len)$/;"	f	signature:(const char *str, gsize *ret_len)
purple_base16_decode	util.h	/^guchar *purple_base16_decode(const char *str, gsize *ret_len);$/;"	p	signature:(const char *str, gsize *ret_len)
purple_base16_encode	util.c	/^purple_base16_encode(const guchar *data, gsize len)$/;"	f	signature:(const guchar *data, gsize len)
purple_base16_encode	util.h	/^gchar *purple_base16_encode(const guchar *data, gsize len);$/;"	p	signature:(const guchar *data, gsize len)
purple_base16_encode_chunked	util.c	/^purple_base16_encode_chunked(const guchar *data, gsize len)$/;"	f	signature:(const guchar *data, gsize len)
purple_base16_encode_chunked	util.h	/^gchar *purple_base16_encode_chunked(const guchar *data, gsize len);$/;"	p	signature:(const guchar *data, gsize len)
purple_base64_decode	util.c	/^purple_base64_decode(const char *str, gsize *ret_len)$/;"	f	signature:(const char *str, gsize *ret_len)
purple_base64_decode	util.h	/^guchar *purple_base64_decode(const char *str, gsize *ret_len);$/;"	p	signature:(const char *str, gsize *ret_len)
purple_base64_encode	util.c	/^purple_base64_encode(const guchar *data, gsize len)$/;"	f	signature:(const guchar *data, gsize len)
purple_base64_encode	util.h	/^gchar *purple_base64_encode(const guchar *data, gsize len);$/;"	p	signature:(const guchar *data, gsize len)
purple_blist_add_account	blist.c	/^void purple_blist_add_account(PurpleAccount *account)$/;"	f	signature:(PurpleAccount *account)
purple_blist_add_account	blist.h	/^void purple_blist_add_account(PurpleAccount *account);$/;"	p	signature:(PurpleAccount *account)
purple_blist_add_buddy	blist.c	/^void purple_blist_add_buddy(PurpleBuddy *buddy, PurpleContact *contact, PurpleGroup *group, PurpleBlistNode *node)$/;"	f	signature:(PurpleBuddy *buddy, PurpleContact *contact, PurpleGroup *group, PurpleBlistNode *node)
purple_blist_add_buddy	blist.h	/^void purple_blist_add_buddy(PurpleBuddy *buddy, PurpleContact *contact, PurpleGroup *group, PurpleBlistNode *node);$/;"	p	signature:(PurpleBuddy *buddy, PurpleContact *contact, PurpleGroup *group, PurpleBlistNode *node)
purple_blist_add_chat	blist.c	/^void purple_blist_add_chat(PurpleChat *chat, PurpleGroup *group, PurpleBlistNode *node)$/;"	f	signature:(PurpleChat *chat, PurpleGroup *group, PurpleBlistNode *node)
purple_blist_add_chat	blist.h	/^void purple_blist_add_chat(PurpleChat *chat, PurpleGroup *group, PurpleBlistNode *node);$/;"	p	signature:(PurpleChat *chat, PurpleGroup *group, PurpleBlistNode *node)
purple_blist_add_contact	blist.c	/^void purple_blist_add_contact(PurpleContact *contact, PurpleGroup *group, PurpleBlistNode *node)$/;"	f	signature:(PurpleContact *contact, PurpleGroup *group, PurpleBlistNode *node)
purple_blist_add_contact	blist.h	/^void purple_blist_add_contact(PurpleContact *contact, PurpleGroup *group, PurpleBlistNode *node);$/;"	p	signature:(PurpleContact *contact, PurpleGroup *group, PurpleBlistNode *node)
purple_blist_add_group	blist.c	/^void purple_blist_add_group(PurpleGroup *group, PurpleBlistNode *node)$/;"	f	signature:(PurpleGroup *group, PurpleBlistNode *node)
purple_blist_add_group	blist.h	/^void purple_blist_add_group(PurpleGroup *group, PurpleBlistNode *node);$/;"	p	signature:(PurpleGroup *group, PurpleBlistNode *node)
purple_blist_alias_buddy	blist.c	/^void purple_blist_alias_buddy(PurpleBuddy *buddy, const char *alias)$/;"	f	signature:(PurpleBuddy *buddy, const char *alias)
purple_blist_alias_buddy	blist.h	/^void purple_blist_alias_buddy(PurpleBuddy *buddy, const char *alias);$/;"	p	signature:(PurpleBuddy *buddy, const char *alias)
purple_blist_alias_chat	blist.c	/^void purple_blist_alias_chat(PurpleChat *chat, const char *alias)$/;"	f	signature:(PurpleChat *chat, const char *alias)
purple_blist_alias_chat	blist.h	/^void purple_blist_alias_chat(PurpleChat *chat, const char *alias);$/;"	p	signature:(PurpleChat *chat, const char *alias)
purple_blist_alias_contact	blist.c	/^void purple_blist_alias_contact(PurpleContact *contact, const char *alias)$/;"	f	signature:(PurpleContact *contact, const char *alias)
purple_blist_alias_contact	blist.h	/^void purple_blist_alias_contact(PurpleContact *contact, const char *alias);$/;"	p	signature:(PurpleContact *contact, const char *alias)
purple_blist_buddies_cache_add_account	blist.c	/^purple_blist_buddies_cache_add_account(PurpleAccount *account)$/;"	f	file:	signature:(PurpleAccount *account)
purple_blist_buddies_cache_remove_account	blist.c	/^purple_blist_buddies_cache_remove_account(const PurpleAccount *account)$/;"	f	file:	signature:(const PurpleAccount *account)
purple_blist_destroy	blist.c	/^void purple_blist_destroy()$/;"	f
purple_blist_destroy	blist.h	/^void purple_blist_destroy(void);$/;"	p	signature:(void)
purple_blist_find_chat	blist.c	/^purple_blist_find_chat(PurpleAccount *account, const char *name)$/;"	f	signature:(PurpleAccount *account, const char *name)
purple_blist_find_chat	blist.h	/^PurpleChat *purple_blist_find_chat(PurpleAccount *account, const char *name);$/;"	p	signature:(PurpleAccount *account, const char *name)
purple_blist_get_buddies	blist.c	/^purple_blist_get_buddies()$/;"	f
purple_blist_get_buddies	blist.h	/^GSList *purple_blist_get_buddies(void);$/;"	p	signature:(void)
purple_blist_get_group_online_count	blist.c	/^int purple_blist_get_group_online_count(PurpleGroup *group)$/;"	f	signature:(PurpleGroup *group)
purple_blist_get_group_online_count	blist.h	/^int purple_blist_get_group_online_count(PurpleGroup *group);$/;"	p	signature:(PurpleGroup *group)
purple_blist_get_group_size	blist.c	/^int purple_blist_get_group_size(PurpleGroup *group, gboolean offline)$/;"	f	signature:(PurpleGroup *group, gboolean offline)
purple_blist_get_group_size	blist.h	/^int purple_blist_get_group_size(PurpleGroup *group, gboolean offline);$/;"	p	signature:(PurpleGroup *group, gboolean offline)
purple_blist_get_handle	blist.c	/^purple_blist_get_handle(void)$/;"	f	signature:(void)
purple_blist_get_handle	blist.h	/^void *purple_blist_get_handle(void);$/;"	p	signature:(void)
purple_blist_get_last_child	blist.c	/^static PurpleBlistNode *purple_blist_get_last_child(PurpleBlistNode *node)$/;"	f	file:	signature:(PurpleBlistNode *node)
purple_blist_get_last_sibling	blist.c	/^static PurpleBlistNode *purple_blist_get_last_sibling(PurpleBlistNode *node)$/;"	f	file:	signature:(PurpleBlistNode *node)
purple_blist_get_root	blist.c	/^purple_blist_get_root()$/;"	f
purple_blist_get_root	blist.h	/^PurpleBlistNode *purple_blist_get_root(void);$/;"	p	signature:(void)
purple_blist_get_ui_data	blist.c	/^purple_blist_get_ui_data()$/;"	f
purple_blist_get_ui_data	blist.h	/^gpointer purple_blist_get_ui_data(void);$/;"	p	signature:(void)
purple_blist_get_ui_ops	blist.c	/^purple_blist_get_ui_ops(void)$/;"	f	signature:(void)
purple_blist_get_ui_ops	blist.h	/^PurpleBlistUiOps *purple_blist_get_ui_ops(void);$/;"	p	signature:(void)
purple_blist_init	blist.c	/^purple_blist_init(void)$/;"	f	signature:(void)
purple_blist_init	blist.h	/^void purple_blist_init(void);$/;"	p	signature:(void)
purple_blist_load	blist.c	/^purple_blist_load()$/;"	f
purple_blist_load	blist.h	/^void purple_blist_load(void);$/;"	p	signature:(void)
purple_blist_merge_contact	blist.c	/^void purple_blist_merge_contact(PurpleContact *source, PurpleBlistNode *node)$/;"	f	signature:(PurpleContact *source, PurpleBlistNode *node)
purple_blist_merge_contact	blist.h	/^void purple_blist_merge_contact(PurpleContact *source, PurpleBlistNode *node);$/;"	p	signature:(PurpleContact *source, PurpleBlistNode *node)
purple_blist_new	blist.c	/^PurpleBuddyList *purple_blist_new()$/;"	f
purple_blist_new	blist.h	/^PurpleBuddyList *purple_blist_new(void);$/;"	p	signature:(void)
purple_blist_node_destroy	blist.c	/^purple_blist_node_destroy(PurpleBlistNode *node)$/;"	f	file:	signature:(PurpleBlistNode *node)
purple_blist_node_get_bool	blist.c	/^purple_blist_node_get_bool(PurpleBlistNode* node, const char *key)$/;"	f	signature:(PurpleBlistNode* node, const char *key)
purple_blist_node_get_bool	blist.h	/^gboolean purple_blist_node_get_bool(PurpleBlistNode *node, const char *key);$/;"	p	signature:(PurpleBlistNode *node, const char *key)
purple_blist_node_get_extended_menu	blist.c	/^purple_blist_node_get_extended_menu(PurpleBlistNode *n)$/;"	f	signature:(PurpleBlistNode *n)
purple_blist_node_get_extended_menu	blist.h	/^GList *purple_blist_node_get_extended_menu(PurpleBlistNode *n);$/;"	p	signature:(PurpleBlistNode *n)
purple_blist_node_get_first_child	blist.c	/^PurpleBlistNode *purple_blist_node_get_first_child(PurpleBlistNode *node)$/;"	f	signature:(PurpleBlistNode *node)
purple_blist_node_get_first_child	blist.h	/^PurpleBlistNode *purple_blist_node_get_first_child(PurpleBlistNode *node);$/;"	p	signature:(PurpleBlistNode *node)
purple_blist_node_get_flags	blist.c	/^purple_blist_node_get_flags(PurpleBlistNode *node)$/;"	f	signature:(PurpleBlistNode *node)
purple_blist_node_get_flags	blist.h	/^PurpleBlistNodeFlags purple_blist_node_get_flags(PurpleBlistNode *node);$/;"	p	signature:(PurpleBlistNode *node)
purple_blist_node_get_int	blist.c	/^purple_blist_node_get_int(PurpleBlistNode* node, const char *key)$/;"	f	signature:(PurpleBlistNode* node, const char *key)
purple_blist_node_get_int	blist.h	/^int purple_blist_node_get_int(PurpleBlistNode *node, const char *key);$/;"	p	signature:(PurpleBlistNode *node, const char *key)
purple_blist_node_get_parent	blist.c	/^PurpleBlistNode *purple_blist_node_get_parent(PurpleBlistNode *node)$/;"	f	signature:(PurpleBlistNode *node)
purple_blist_node_get_parent	blist.h	/^PurpleBlistNode *purple_blist_node_get_parent(PurpleBlistNode *node);$/;"	p	signature:(PurpleBlistNode *node)
purple_blist_node_get_sibling_next	blist.c	/^PurpleBlistNode *purple_blist_node_get_sibling_next(PurpleBlistNode *node)$/;"	f	signature:(PurpleBlistNode *node)
purple_blist_node_get_sibling_next	blist.h	/^PurpleBlistNode *purple_blist_node_get_sibling_next(PurpleBlistNode *node);$/;"	p	signature:(PurpleBlistNode *node)
purple_blist_node_get_sibling_prev	blist.c	/^PurpleBlistNode *purple_blist_node_get_sibling_prev(PurpleBlistNode *node)$/;"	f	signature:(PurpleBlistNode *node)
purple_blist_node_get_sibling_prev	blist.h	/^PurpleBlistNode *purple_blist_node_get_sibling_prev(PurpleBlistNode *node);$/;"	p	signature:(PurpleBlistNode *node)
purple_blist_node_get_string	blist.c	/^purple_blist_node_get_string(PurpleBlistNode* node, const char *key)$/;"	f	signature:(PurpleBlistNode* node, const char *key)
purple_blist_node_get_string	blist.h	/^const char *purple_blist_node_get_string(PurpleBlistNode *node, const char *key);$/;"	p	signature:(PurpleBlistNode *node, const char *key)
purple_blist_node_get_type	blist.c	/^purple_blist_node_get_type(PurpleBlistNode *node)$/;"	f	signature:(PurpleBlistNode *node)
purple_blist_node_get_type	blist.h	/^PurpleBlistNodeType purple_blist_node_get_type(PurpleBlistNode *node);$/;"	p	signature:(PurpleBlistNode *node)
purple_blist_node_get_ui_data	blist.c	/^purple_blist_node_get_ui_data(const PurpleBlistNode *node)$/;"	f	signature:(const PurpleBlistNode *node)
purple_blist_node_get_ui_data	blist.h	/^gpointer purple_blist_node_get_ui_data(const PurpleBlistNode *node);$/;"	p	signature:(const PurpleBlistNode *node)
purple_blist_node_initialize_settings	blist.c	/^static void purple_blist_node_initialize_settings(PurpleBlistNode *node)$/;"	f	file:	signature:(PurpleBlistNode *node)
purple_blist_node_initialize_settings	blist.c	/^static void purple_blist_node_initialize_settings(PurpleBlistNode *node);$/;"	p	file:	signature:(PurpleBlistNode *node)
purple_blist_node_next	blist.c	/^PurpleBlistNode *purple_blist_node_next(PurpleBlistNode *node, gboolean offline)$/;"	f	signature:(PurpleBlistNode *node, gboolean offline)
purple_blist_node_next	blist.h	/^PurpleBlistNode *purple_blist_node_next(PurpleBlistNode *node, gboolean offline);$/;"	p	signature:(PurpleBlistNode *node, gboolean offline)
purple_blist_node_remove_setting	blist.c	/^void purple_blist_node_remove_setting(PurpleBlistNode *node, const char *key)$/;"	f	signature:(PurpleBlistNode *node, const char *key)
purple_blist_node_remove_setting	blist.h	/^void purple_blist_node_remove_setting(PurpleBlistNode *node, const char *key);$/;"	p	signature:(PurpleBlistNode *node, const char *key)
purple_blist_node_set_bool	blist.c	/^purple_blist_node_set_bool(PurpleBlistNode* node, const char *key, gboolean data)$/;"	f	signature:(PurpleBlistNode* node, const char *key, gboolean data)
purple_blist_node_set_bool	blist.h	/^void purple_blist_node_set_bool(PurpleBlistNode *node, const char *key, gboolean value);$/;"	p	signature:(PurpleBlistNode *node, const char *key, gboolean value)
purple_blist_node_set_flags	blist.c	/^purple_blist_node_set_flags(PurpleBlistNode *node, PurpleBlistNodeFlags flags)$/;"	f	signature:(PurpleBlistNode *node, PurpleBlistNodeFlags flags)
purple_blist_node_set_flags	blist.h	/^void purple_blist_node_set_flags(PurpleBlistNode *node, PurpleBlistNodeFlags flags);$/;"	p	signature:(PurpleBlistNode *node, PurpleBlistNodeFlags flags)
purple_blist_node_set_int	blist.c	/^purple_blist_node_set_int(PurpleBlistNode* node, const char *key, int data)$/;"	f	signature:(PurpleBlistNode* node, const char *key, int data)
purple_blist_node_set_int	blist.h	/^void purple_blist_node_set_int(PurpleBlistNode *node, const char *key, int value);$/;"	p	signature:(PurpleBlistNode *node, const char *key, int value)
purple_blist_node_set_string	blist.c	/^purple_blist_node_set_string(PurpleBlistNode* node, const char *key, const char *data)$/;"	f	signature:(PurpleBlistNode* node, const char *key, const char *data)
purple_blist_node_set_string	blist.h	/^void purple_blist_node_set_string(PurpleBlistNode *node, const char *key,$/;"	p	signature:(PurpleBlistNode *node, const char *key, const char *value)
purple_blist_node_set_ui_data	blist.c	/^purple_blist_node_set_ui_data(PurpleBlistNode *node, void *ui_data) {$/;"	f	signature:(PurpleBlistNode *node, void *ui_data)
purple_blist_node_set_ui_data	blist.h	/^void purple_blist_node_set_ui_data(PurpleBlistNode *node, gpointer ui_data);$/;"	p	signature:(PurpleBlistNode *node, gpointer ui_data)
purple_blist_node_setting_free	blist.c	/^purple_blist_node_setting_free(gpointer data)$/;"	f	file:	signature:(gpointer data)
purple_blist_remove_account	blist.c	/^void purple_blist_remove_account(PurpleAccount *account)$/;"	f	signature:(PurpleAccount *account)
purple_blist_remove_account	blist.h	/^void purple_blist_remove_account(PurpleAccount *account);$/;"	p	signature:(PurpleAccount *account)
purple_blist_remove_buddy	blist.c	/^void purple_blist_remove_buddy(PurpleBuddy *buddy)$/;"	f	signature:(PurpleBuddy *buddy)
purple_blist_remove_buddy	blist.h	/^void purple_blist_remove_buddy(PurpleBuddy *buddy);$/;"	p	signature:(PurpleBuddy *buddy)
purple_blist_remove_chat	blist.c	/^void purple_blist_remove_chat(PurpleChat *chat)$/;"	f	signature:(PurpleChat *chat)
purple_blist_remove_chat	blist.h	/^void purple_blist_remove_chat(PurpleChat *chat);$/;"	p	signature:(PurpleChat *chat)
purple_blist_remove_contact	blist.c	/^void purple_blist_remove_contact(PurpleContact *contact)$/;"	f	signature:(PurpleContact *contact)
purple_blist_remove_contact	blist.h	/^void purple_blist_remove_contact(PurpleContact *contact);$/;"	p	signature:(PurpleContact *contact)
purple_blist_remove_group	blist.c	/^void purple_blist_remove_group(PurpleGroup *group)$/;"	f	signature:(PurpleGroup *group)
purple_blist_remove_group	blist.h	/^void purple_blist_remove_group(PurpleGroup *group);$/;"	p	signature:(PurpleGroup *group)
purple_blist_rename_buddy	blist.c	/^void purple_blist_rename_buddy(PurpleBuddy *buddy, const char *name)$/;"	f	signature:(PurpleBuddy *buddy, const char *name)
purple_blist_rename_buddy	blist.h	/^void purple_blist_rename_buddy(PurpleBuddy *buddy, const char *name);$/;"	p	signature:(PurpleBuddy *buddy, const char *name)
purple_blist_rename_group	blist.c	/^void purple_blist_rename_group(PurpleGroup *source, const char *name)$/;"	f	signature:(PurpleGroup *source, const char *name)
purple_blist_rename_group	blist.h	/^void purple_blist_rename_group(PurpleGroup *group, const char *name);$/;"	p	signature:(PurpleGroup *group, const char *name)
purple_blist_request_add_buddy	blist.c	/^purple_blist_request_add_buddy(PurpleAccount *account, const char *username,$/;"	f	signature:(PurpleAccount *account, const char *username, const char *group, const char *alias)
purple_blist_request_add_buddy	blist.h	/^void purple_blist_request_add_buddy(PurpleAccount *account, const char *username,$/;"	p	signature:(PurpleAccount *account, const char *username, const char *group, const char *alias)
purple_blist_request_add_chat	blist.c	/^purple_blist_request_add_chat(PurpleAccount *account, PurpleGroup *group,$/;"	f	signature:(PurpleAccount *account, PurpleGroup *group, const char *alias, const char *name)
purple_blist_request_add_chat	blist.h	/^void purple_blist_request_add_chat(PurpleAccount *account, PurpleGroup *group,$/;"	p	signature:(PurpleAccount *account, PurpleGroup *group, const char *alias, const char *name)
purple_blist_request_add_group	blist.c	/^purple_blist_request_add_group(void)$/;"	f	signature:(void)
purple_blist_request_add_group	blist.h	/^void purple_blist_request_add_group(void);$/;"	p	signature:(void)
purple_blist_save_account	blist.c	/^purple_blist_save_account(PurpleAccount *account)$/;"	f	file:	signature:(PurpleAccount *account)
purple_blist_save_node	blist.c	/^purple_blist_save_node(PurpleBlistNode *node)$/;"	f	file:	signature:(PurpleBlistNode *node)
purple_blist_schedule_save	blist.c	/^void purple_blist_schedule_save()$/;"	f
purple_blist_schedule_save	blist.h	/^void purple_blist_schedule_save(void);$/;"	p	signature:(void)
purple_blist_server_alias_buddy	blist.c	/^void purple_blist_server_alias_buddy(PurpleBuddy *buddy, const char *alias)$/;"	f	signature:(PurpleBuddy *buddy, const char *alias)
purple_blist_server_alias_buddy	blist.h	/^void purple_blist_server_alias_buddy(PurpleBuddy *buddy, const char *alias);$/;"	p	signature:(PurpleBuddy *buddy, const char *alias)
purple_blist_set_ui_data	blist.c	/^purple_blist_set_ui_data(void *ui_data)$/;"	f	signature:(void *ui_data)
purple_blist_set_ui_data	blist.h	/^void purple_blist_set_ui_data(gpointer ui_data);$/;"	p	signature:(gpointer ui_data)
purple_blist_set_ui_ops	blist.c	/^purple_blist_set_ui_ops(PurpleBlistUiOps *ops)$/;"	f	signature:(PurpleBlistUiOps *ops)
purple_blist_set_ui_ops	blist.h	/^void purple_blist_set_ui_ops(PurpleBlistUiOps *ops);$/;"	p	signature:(PurpleBlistUiOps *ops)
purple_blist_set_visible	blist.c	/^void purple_blist_set_visible(gboolean show)$/;"	f	signature:(gboolean show)
purple_blist_set_visible	blist.h	/^void purple_blist_set_visible(gboolean show);$/;"	p	signature:(gboolean show)
purple_blist_show	blist.c	/^void purple_blist_show()$/;"	f
purple_blist_show	blist.h	/^void purple_blist_show(void);$/;"	p	signature:(void)
purple_blist_sync	blist.c	/^purple_blist_sync(void)$/;"	f	file:	signature:(void)
purple_blist_uninit	blist.c	/^purple_blist_uninit(void)$/;"	f	signature:(void)
purple_blist_uninit	blist.h	/^void purple_blist_uninit(void);$/;"	p	signature:(void)
purple_blist_update_buddy_icon	blist.c	/^purple_blist_update_buddy_icon(PurpleBuddy *buddy)$/;"	f	signature:(PurpleBuddy *buddy)
purple_blist_update_buddy_icon	blist.h	/^void purple_blist_update_buddy_icon(PurpleBuddy *buddy);$/;"	p	signature:(PurpleBuddy *buddy)
purple_blist_update_buddy_status	blist.c	/^purple_blist_update_buddy_status(PurpleBuddy *buddy, PurpleStatus *old_status)$/;"	f	signature:(PurpleBuddy *buddy, PurpleStatus *old_status)
purple_blist_update_buddy_status	blist.h	/^void purple_blist_update_buddy_status(PurpleBuddy *buddy, PurpleStatus *old_status);$/;"	p	signature:(PurpleBuddy *buddy, PurpleStatus *old_status)
purple_blist_update_node_icon	blist.c	/^purple_blist_update_node_icon(PurpleBlistNode *node)$/;"	f	signature:(PurpleBlistNode *node)
purple_blist_update_node_icon	blist.h	/^void purple_blist_update_node_icon(PurpleBlistNode *node);$/;"	p	signature:(PurpleBlistNode *node)
purple_buddy_destroy	blist.c	/^purple_buddy_destroy(PurpleBuddy *buddy)$/;"	f	signature:(PurpleBuddy *buddy)
purple_buddy_destroy	blist.h	/^void purple_buddy_destroy(PurpleBuddy *buddy);$/;"	p	signature:(PurpleBuddy *buddy)
purple_buddy_get_account	blist.c	/^purple_buddy_get_account(const PurpleBuddy *buddy)$/;"	f	signature:(const PurpleBuddy *buddy)
purple_buddy_get_account	blist.h	/^PurpleAccount *purple_buddy_get_account(const PurpleBuddy *buddy);$/;"	p	signature:(const PurpleBuddy *buddy)
purple_buddy_get_alias	blist.c	/^const char *purple_buddy_get_alias(PurpleBuddy *buddy)$/;"	f	signature:(PurpleBuddy *buddy)
purple_buddy_get_alias	blist.h	/^const char *purple_buddy_get_alias(PurpleBuddy *buddy);$/;"	p	signature:(PurpleBuddy *buddy)
purple_buddy_get_alias_only	blist.c	/^const char *purple_buddy_get_alias_only(PurpleBuddy *buddy)$/;"	f	signature:(PurpleBuddy *buddy)
purple_buddy_get_alias_only	blist.h	/^const char *purple_buddy_get_alias_only(PurpleBuddy *buddy);$/;"	p	signature:(PurpleBuddy *buddy)
purple_buddy_get_contact	blist.c	/^PurpleContact *purple_buddy_get_contact(PurpleBuddy *buddy)$/;"	f	signature:(PurpleBuddy *buddy)
purple_buddy_get_contact	blist.h	/^PurpleContact *purple_buddy_get_contact(PurpleBuddy *buddy);$/;"	p	signature:(PurpleBuddy *buddy)
purple_buddy_get_contact_alias	blist.c	/^const char *purple_buddy_get_contact_alias(PurpleBuddy *buddy)$/;"	f	signature:(PurpleBuddy *buddy)
purple_buddy_get_contact_alias	blist.h	/^const char *purple_buddy_get_contact_alias(PurpleBuddy *buddy);$/;"	p	signature:(PurpleBuddy *buddy)
purple_buddy_get_group	blist.c	/^PurpleGroup *purple_buddy_get_group(PurpleBuddy *buddy)$/;"	f	signature:(PurpleBuddy *buddy)
purple_buddy_get_group	blist.h	/^PurpleGroup *purple_buddy_get_group(PurpleBuddy *buddy);$/;"	p	signature:(PurpleBuddy *buddy)
purple_buddy_get_icon	blist.c	/^purple_buddy_get_icon(const PurpleBuddy *buddy)$/;"	f	signature:(const PurpleBuddy *buddy)
purple_buddy_get_icon	blist.h	/^PurpleBuddyIcon *purple_buddy_get_icon(const PurpleBuddy *buddy);$/;"	p	signature:(const PurpleBuddy *buddy)
purple_buddy_get_local_alias	blist.c	/^const char *purple_buddy_get_local_alias(PurpleBuddy *buddy)$/;"	f	signature:(PurpleBuddy *buddy)
purple_buddy_get_local_alias	blist.h	/^const char *purple_buddy_get_local_alias(PurpleBuddy *buddy);$/;"	p	signature:(PurpleBuddy *buddy)
purple_buddy_get_local_buddy_alias	blist.c	/^const char *purple_buddy_get_local_buddy_alias(PurpleBuddy *buddy)$/;"	f	signature:(PurpleBuddy *buddy)
purple_buddy_get_local_buddy_alias	blist.h	/^const char *purple_buddy_get_local_buddy_alias(PurpleBuddy *buddy);$/;"	p	signature:(PurpleBuddy *buddy)
purple_buddy_get_media_caps	blist.c	/^PurpleMediaCaps purple_buddy_get_media_caps(const PurpleBuddy *buddy)$/;"	f	signature:(const PurpleBuddy *buddy)
purple_buddy_get_media_caps	blist.h	/^PurpleMediaCaps purple_buddy_get_media_caps(const PurpleBuddy *buddy);$/;"	p	signature:(const PurpleBuddy *buddy)
purple_buddy_get_name	blist.c	/^purple_buddy_get_name(const PurpleBuddy *buddy)$/;"	f	signature:(const PurpleBuddy *buddy)
purple_buddy_get_name	blist.h	/^const char *purple_buddy_get_name(const PurpleBuddy *buddy);$/;"	p	signature:(const PurpleBuddy *buddy)
purple_buddy_get_presence	blist.c	/^PurplePresence *purple_buddy_get_presence(const PurpleBuddy *buddy)$/;"	f	signature:(const PurpleBuddy *buddy)
purple_buddy_get_presence	blist.h	/^PurplePresence *purple_buddy_get_presence(const PurpleBuddy *buddy);$/;"	p	signature:(const PurpleBuddy *buddy)
purple_buddy_get_protocol_data	blist.c	/^purple_buddy_get_protocol_data(const PurpleBuddy *buddy)$/;"	f	signature:(const PurpleBuddy *buddy)
purple_buddy_get_protocol_data	blist.h	/^gpointer purple_buddy_get_protocol_data(const PurpleBuddy *buddy);$/;"	p	signature:(const PurpleBuddy *buddy)
purple_buddy_get_server_alias	blist.c	/^const char *purple_buddy_get_server_alias(PurpleBuddy *buddy)$/;"	f	signature:(PurpleBuddy *buddy)
purple_buddy_get_server_alias	blist.h	/^const char *purple_buddy_get_server_alias(PurpleBuddy *buddy);$/;"	p	signature:(PurpleBuddy *buddy)
purple_buddy_icon_create	buddyicon.c	/^purple_buddy_icon_create(PurpleAccount *account, const char *username)$/;"	f	file:	signature:(PurpleAccount *account, const char *username)
purple_buddy_icon_data_cache	buddyicon.c	/^purple_buddy_icon_data_cache(PurpleStoredImage *img)$/;"	f	file:	signature:(PurpleStoredImage *img)
purple_buddy_icon_data_new	buddyicon.c	/^purple_buddy_icon_data_new(guchar *icon_data, size_t icon_len, const char *filename)$/;"	f	file:	signature:(guchar *icon_data, size_t icon_len, const char *filename)
purple_buddy_icon_data_uncache_file	buddyicon.c	/^purple_buddy_icon_data_uncache_file(const char *filename)$/;"	f	file:	signature:(const char *filename)
purple_buddy_icon_get_account	buddyicon.c	/^purple_buddy_icon_get_account(const PurpleBuddyIcon *icon)$/;"	f	signature:(const PurpleBuddyIcon *icon)
purple_buddy_icon_get_account	buddyicon.h	/^PurpleAccount *purple_buddy_icon_get_account(const PurpleBuddyIcon *icon);$/;"	p	signature:(const PurpleBuddyIcon *icon)
purple_buddy_icon_get_checksum	buddyicon.c	/^purple_buddy_icon_get_checksum(const PurpleBuddyIcon *icon)$/;"	f	signature:(const PurpleBuddyIcon *icon)
purple_buddy_icon_get_checksum	buddyicon.h	/^const char *purple_buddy_icon_get_checksum(const PurpleBuddyIcon *icon);$/;"	p	signature:(const PurpleBuddyIcon *icon)
purple_buddy_icon_get_data	buddyicon.c	/^purple_buddy_icon_get_data(const PurpleBuddyIcon *icon, size_t *len)$/;"	f	signature:(const PurpleBuddyIcon *icon, size_t *len)
purple_buddy_icon_get_data	buddyicon.h	/^gconstpointer purple_buddy_icon_get_data(const PurpleBuddyIcon *icon, size_t *len);$/;"	p	signature:(const PurpleBuddyIcon *icon, size_t *len)
purple_buddy_icon_get_extension	buddyicon.c	/^purple_buddy_icon_get_extension(const PurpleBuddyIcon *icon)$/;"	f	signature:(const PurpleBuddyIcon *icon)
purple_buddy_icon_get_extension	buddyicon.h	/^const char *purple_buddy_icon_get_extension(const PurpleBuddyIcon *icon);$/;"	p	signature:(const PurpleBuddyIcon *icon)
purple_buddy_icon_get_full_path	buddyicon.c	/^char *purple_buddy_icon_get_full_path(PurpleBuddyIcon *icon)$/;"	f	signature:(PurpleBuddyIcon *icon)
purple_buddy_icon_get_full_path	buddyicon.h	/^char *purple_buddy_icon_get_full_path(PurpleBuddyIcon *icon);$/;"	p	signature:(PurpleBuddyIcon *icon)
purple_buddy_icon_get_scale_size	buddyicon.c	/^void purple_buddy_icon_get_scale_size(PurpleBuddyIconSpec *spec, int *width, int *height)$/;"	f	signature:(PurpleBuddyIconSpec *spec, int *width, int *height)
purple_buddy_icon_get_scale_size	buddyicon.h	/^void purple_buddy_icon_get_scale_size(PurpleBuddyIconSpec *spec, int *width, int *height);$/;"	p	signature:(PurpleBuddyIconSpec *spec, int *width, int *height)
purple_buddy_icon_get_username	buddyicon.c	/^purple_buddy_icon_get_username(const PurpleBuddyIcon *icon)$/;"	f	signature:(const PurpleBuddyIcon *icon)
purple_buddy_icon_get_username	buddyicon.h	/^const char *purple_buddy_icon_get_username(const PurpleBuddyIcon *icon);$/;"	p	signature:(const PurpleBuddyIcon *icon)
purple_buddy_icon_new	buddyicon.c	/^purple_buddy_icon_new(PurpleAccount *account, const char *username,$/;"	f	signature:(PurpleAccount *account, const char *username, void *icon_data, size_t icon_len, const char *checksum)
purple_buddy_icon_new	buddyicon.h	/^PurpleBuddyIcon *purple_buddy_icon_new(PurpleAccount *account, const char *username,$/;"	p	signature:(PurpleAccount *account, const char *username, void *icon_data, size_t icon_len, const char *checksum)
purple_buddy_icon_ref	buddyicon.c	/^purple_buddy_icon_ref(PurpleBuddyIcon *icon)$/;"	f	signature:(PurpleBuddyIcon *icon)
purple_buddy_icon_ref	buddyicon.h	/^PurpleBuddyIcon *purple_buddy_icon_ref(PurpleBuddyIcon *icon);$/;"	p	signature:(PurpleBuddyIcon *icon)
purple_buddy_icon_set_data	buddyicon.c	/^purple_buddy_icon_set_data(PurpleBuddyIcon *icon, guchar *data,$/;"	f	signature:(PurpleBuddyIcon *icon, guchar *data, size_t len, const char *checksum)
purple_buddy_icon_set_data	buddyicon.h	/^purple_buddy_icon_set_data(PurpleBuddyIcon *icon, guchar *data,$/;"	p	signature:(PurpleBuddyIcon *icon, guchar *data, size_t len, const char *checksum)
purple_buddy_icon_unref	buddyicon.c	/^purple_buddy_icon_unref(PurpleBuddyIcon *icon)$/;"	f	signature:(PurpleBuddyIcon *icon)
purple_buddy_icon_unref	buddyicon.h	/^PurpleBuddyIcon *purple_buddy_icon_unref(PurpleBuddyIcon *icon);$/;"	p	signature:(PurpleBuddyIcon *icon)
purple_buddy_icon_update	buddyicon.c	/^purple_buddy_icon_update(PurpleBuddyIcon *icon)$/;"	f	signature:(PurpleBuddyIcon *icon)
purple_buddy_icon_update	buddyicon.h	/^void purple_buddy_icon_update(PurpleBuddyIcon *icon);$/;"	p	signature:(PurpleBuddyIcon *icon)
purple_buddy_icons_find	buddyicon.c	/^purple_buddy_icons_find(PurpleAccount *account, const char *username)$/;"	f	signature:(PurpleAccount *account, const char *username)
purple_buddy_icons_find	buddyicon.h	/^purple_buddy_icons_find(PurpleAccount *account, const char *username);$/;"	p	signature:(PurpleAccount *account, const char *username)
purple_buddy_icons_find_account_icon	buddyicon.c	/^purple_buddy_icons_find_account_icon(PurpleAccount *account)$/;"	f	signature:(PurpleAccount *account)
purple_buddy_icons_find_account_icon	buddyicon.h	/^purple_buddy_icons_find_account_icon(PurpleAccount *account);$/;"	p	signature:(PurpleAccount *account)
purple_buddy_icons_find_custom_icon	buddyicon.c	/^purple_buddy_icons_find_custom_icon(PurpleContact *contact)$/;"	f	signature:(PurpleContact *contact)
purple_buddy_icons_find_custom_icon	buddyicon.h	/^purple_buddy_icons_find_custom_icon(PurpleContact *contact);$/;"	p	signature:(PurpleContact *contact)
purple_buddy_icons_get_account_icon_timestamp	buddyicon.c	/^purple_buddy_icons_get_account_icon_timestamp(PurpleAccount *account)$/;"	f	signature:(PurpleAccount *account)
purple_buddy_icons_get_account_icon_timestamp	buddyicon.h	/^purple_buddy_icons_get_account_icon_timestamp(PurpleAccount *account);$/;"	p	signature:(PurpleAccount *account)
purple_buddy_icons_get_cache_dir	buddyicon.c	/^purple_buddy_icons_get_cache_dir(void)$/;"	f	signature:(void)
purple_buddy_icons_get_cache_dir	buddyicon.h	/^const char *purple_buddy_icons_get_cache_dir(void);$/;"	p	signature:(void)
purple_buddy_icons_get_checksum_for_user	buddyicon.c	/^purple_buddy_icons_get_checksum_for_user(PurpleBuddy *buddy)$/;"	f	signature:(PurpleBuddy *buddy)
purple_buddy_icons_get_checksum_for_user	buddyicon.h	/^purple_buddy_icons_get_checksum_for_user(PurpleBuddy *buddy);$/;"	p	signature:(PurpleBuddy *buddy)
purple_buddy_icons_get_handle	buddyicon.c	/^purple_buddy_icons_get_handle()$/;"	f
purple_buddy_icons_get_handle	buddyicon.h	/^void *purple_buddy_icons_get_handle(void);$/;"	p	signature:(void)
purple_buddy_icons_has_custom_icon	buddyicon.c	/^purple_buddy_icons_has_custom_icon(PurpleContact *contact)$/;"	f	signature:(PurpleContact *contact)
purple_buddy_icons_has_custom_icon	buddyicon.h	/^purple_buddy_icons_has_custom_icon(PurpleContact *contact);$/;"	p	signature:(PurpleContact *contact)
purple_buddy_icons_init	buddyicon.c	/^purple_buddy_icons_init()$/;"	f
purple_buddy_icons_init	buddyicon.h	/^void purple_buddy_icons_init(void);$/;"	p	signature:(void)
purple_buddy_icons_is_caching	buddyicon.c	/^purple_buddy_icons_is_caching(void)$/;"	f	signature:(void)
purple_buddy_icons_is_caching	buddyicon.h	/^gboolean purple_buddy_icons_is_caching(void);$/;"	p	signature:(void)
purple_buddy_icons_node_find_custom_icon	buddyicon.c	/^purple_buddy_icons_node_find_custom_icon(PurpleBlistNode *node)$/;"	f	signature:(PurpleBlistNode *node)
purple_buddy_icons_node_find_custom_icon	buddyicon.h	/^purple_buddy_icons_node_find_custom_icon(PurpleBlistNode *node);$/;"	p	signature:(PurpleBlistNode *node)
purple_buddy_icons_node_has_custom_icon	buddyicon.c	/^purple_buddy_icons_node_has_custom_icon(PurpleBlistNode *node)$/;"	f	signature:(PurpleBlistNode *node)
purple_buddy_icons_node_has_custom_icon	buddyicon.h	/^purple_buddy_icons_node_has_custom_icon(PurpleBlistNode *node);$/;"	p	signature:(PurpleBlistNode *node)
purple_buddy_icons_node_set_custom_icon	buddyicon.c	/^purple_buddy_icons_node_set_custom_icon(PurpleBlistNode *node,$/;"	f	signature:(PurpleBlistNode *node, guchar *icon_data, size_t icon_len)
purple_buddy_icons_node_set_custom_icon	buddyicon.h	/^purple_buddy_icons_node_set_custom_icon(PurpleBlistNode *node,$/;"	p	signature:(PurpleBlistNode *node, guchar *icon_data, size_t icon_len)
purple_buddy_icons_node_set_custom_icon_from_file	buddyicon.c	/^purple_buddy_icons_node_set_custom_icon_from_file(PurpleBlistNode *node,$/;"	f	signature:(PurpleBlistNode *node, const gchar *filename)
purple_buddy_icons_node_set_custom_icon_from_file	buddyicon.h	/^purple_buddy_icons_node_set_custom_icon_from_file(PurpleBlistNode *node,$/;"	p	signature:(PurpleBlistNode *node, const gchar *filename)
purple_buddy_icons_set_account_icon	buddyicon.c	/^purple_buddy_icons_set_account_icon(PurpleAccount *account,$/;"	f	signature:(PurpleAccount *account, guchar *icon_data, size_t icon_len)
purple_buddy_icons_set_account_icon	buddyicon.h	/^purple_buddy_icons_set_account_icon(PurpleAccount *account,$/;"	p	signature:(PurpleAccount *account, guchar *icon_data, size_t icon_len)
purple_buddy_icons_set_cache_dir	buddyicon.c	/^purple_buddy_icons_set_cache_dir(const char *dir)$/;"	f	signature:(const char *dir)
purple_buddy_icons_set_cache_dir	buddyicon.h	/^void purple_buddy_icons_set_cache_dir(const char *cache_dir);$/;"	p	signature:(const char *cache_dir)
purple_buddy_icons_set_caching	buddyicon.c	/^purple_buddy_icons_set_caching(gboolean caching)$/;"	f	signature:(gboolean caching)
purple_buddy_icons_set_caching	buddyicon.h	/^void purple_buddy_icons_set_caching(gboolean caching);$/;"	p	signature:(gboolean caching)
purple_buddy_icons_set_custom_icon	buddyicon.c	/^purple_buddy_icons_set_custom_icon(PurpleContact *contact, guchar *icon_data,$/;"	f	signature:(PurpleContact *contact, guchar *icon_data, size_t icon_len)
purple_buddy_icons_set_custom_icon	buddyicon.h	/^purple_buddy_icons_set_custom_icon(PurpleContact *contact,$/;"	p	signature:(PurpleContact *contact, guchar *icon_data, size_t icon_len)
purple_buddy_icons_set_for_user	buddyicon.c	/^purple_buddy_icons_set_for_user(PurpleAccount *account, const char *username,$/;"	f	signature:(PurpleAccount *account, const char *username, void *icon_data, size_t icon_len, const char *checksum)
purple_buddy_icons_set_for_user	buddyicon.h	/^purple_buddy_icons_set_for_user(PurpleAccount *account, const char *username,$/;"	p	signature:(PurpleAccount *account, const char *username, void *icon_data, size_t icon_len, const char *checksum)
purple_buddy_icons_uninit	buddyicon.c	/^purple_buddy_icons_uninit()$/;"	f
purple_buddy_icons_uninit	buddyicon.h	/^void purple_buddy_icons_uninit(void);$/;"	p	signature:(void)
purple_buddy_new	blist.c	/^PurpleBuddy *purple_buddy_new(PurpleAccount *account, const char *name, const char *alias)$/;"	f	signature:(PurpleAccount *account, const char *name, const char *alias)
purple_buddy_new	blist.h	/^PurpleBuddy *purple_buddy_new(PurpleAccount *account, const char *name, const char *alias);$/;"	p	signature:(PurpleAccount *account, const char *name, const char *alias)
purple_buddy_set_icon	blist.c	/^purple_buddy_set_icon(PurpleBuddy *buddy, PurpleBuddyIcon *icon)$/;"	f	signature:(PurpleBuddy *buddy, PurpleBuddyIcon *icon)
purple_buddy_set_icon	blist.h	/^void purple_buddy_set_icon(PurpleBuddy *buddy, PurpleBuddyIcon *icon);$/;"	p	signature:(PurpleBuddy *buddy, PurpleBuddyIcon *icon)
purple_buddy_set_media_caps	blist.c	/^void purple_buddy_set_media_caps(PurpleBuddy *buddy, PurpleMediaCaps media_caps)$/;"	f	signature:(PurpleBuddy *buddy, PurpleMediaCaps media_caps)
purple_buddy_set_media_caps	blist.h	/^void purple_buddy_set_media_caps(PurpleBuddy *buddy, PurpleMediaCaps media_caps);$/;"	p	signature:(PurpleBuddy *buddy, PurpleMediaCaps media_caps)
purple_buddy_set_protocol_data	blist.c	/^purple_buddy_set_protocol_data(PurpleBuddy *buddy, gpointer data)$/;"	f	signature:(PurpleBuddy *buddy, gpointer data)
purple_buddy_set_protocol_data	blist.h	/^void purple_buddy_set_protocol_data(PurpleBuddy *buddy, gpointer data);$/;"	p	signature:(PurpleBuddy *buddy, gpointer data)
purple_build_dir	util.c	/^int purple_build_dir (const char *path, int mode)$/;"	f	signature:(const char *path, int mode)
purple_build_dir	util.h	/^int purple_build_dir(const char *path, int mode);$/;"	p	signature:(const char *path, int mode)
purple_certificate_add_ca_search_path	certificate.c	/^void purple_certificate_add_ca_search_path(const char *path)$/;"	f	signature:(const char *path)
purple_certificate_add_ca_search_path	certificate.h	/^void purple_certificate_add_ca_search_path(const char *path);$/;"	p	signature:(const char *path)
purple_certificate_check_signature_chain	certificate.c	/^purple_certificate_check_signature_chain(GList *chain)$/;"	f	signature:(GList *chain)
purple_certificate_check_signature_chain	certificate.h	/^purple_certificate_check_signature_chain(GList *chain);$/;"	p	signature:(GList *chain)
purple_certificate_check_signature_chain_with_failing	certificate.c	/^purple_certificate_check_signature_chain_with_failing(GList *chain,$/;"	f	signature:(GList *chain, PurpleCertificate **failing)
purple_certificate_check_signature_chain_with_failing	certificate.h	/^purple_certificate_check_signature_chain_with_failing(GList *chain,$/;"	p	signature:(GList *chain, PurpleCertificate **failing)
purple_certificate_check_subject_name	certificate.c	/^purple_certificate_check_subject_name(PurpleCertificate *crt, const gchar *name)$/;"	f	signature:(PurpleCertificate *crt, const gchar *name)
purple_certificate_check_subject_name	certificate.h	/^purple_certificate_check_subject_name(PurpleCertificate *crt, const gchar *name);$/;"	p	signature:(PurpleCertificate *crt, const gchar *name)
purple_certificate_copy	certificate.c	/^purple_certificate_copy(PurpleCertificate *crt)$/;"	f	signature:(PurpleCertificate *crt)
purple_certificate_copy	certificate.h	/^purple_certificate_copy(PurpleCertificate *crt);$/;"	p	signature:(PurpleCertificate *crt)
purple_certificate_copy_list	certificate.c	/^purple_certificate_copy_list(GList *crt_list)$/;"	f	signature:(GList *crt_list)
purple_certificate_copy_list	certificate.h	/^purple_certificate_copy_list(GList *crt_list);$/;"	p	signature:(GList *crt_list)
purple_certificate_destroy	certificate.c	/^purple_certificate_destroy (PurpleCertificate *crt)$/;"	f	signature:(PurpleCertificate *crt)
purple_certificate_destroy	certificate.h	/^purple_certificate_destroy (PurpleCertificate *crt);$/;"	p	signature:(PurpleCertificate *crt)
purple_certificate_destroy_list	certificate.c	/^purple_certificate_destroy_list (GList * crt_list)$/;"	f	signature:(GList * crt_list)
purple_certificate_destroy_list	certificate.h	/^purple_certificate_destroy_list (GList * crt_list);$/;"	p	signature:(GList * crt_list)
purple_certificate_display_x509	certificate.c	/^purple_certificate_display_x509(PurpleCertificate *crt)$/;"	f	signature:(PurpleCertificate *crt)
purple_certificate_display_x509	certificate.h	/^purple_certificate_display_x509(PurpleCertificate *crt);$/;"	p	signature:(PurpleCertificate *crt)
purple_certificate_export	certificate.c	/^purple_certificate_export(const gchar *filename, PurpleCertificate *crt)$/;"	f	signature:(const gchar *filename, PurpleCertificate *crt)
purple_certificate_export	certificate.h	/^purple_certificate_export(const gchar *filename, PurpleCertificate *crt);$/;"	p	signature:(const gchar *filename, PurpleCertificate *crt)
purple_certificate_find_pool	certificate.c	/^purple_certificate_find_pool(const gchar *scheme_name, const gchar *pool_name)$/;"	f	signature:(const gchar *scheme_name, const gchar *pool_name)
purple_certificate_find_pool	certificate.h	/^purple_certificate_find_pool(const gchar *scheme_name, const gchar *pool_name);$/;"	p	signature:(const gchar *scheme_name, const gchar *pool_name)
purple_certificate_find_scheme	certificate.c	/^purple_certificate_find_scheme(const gchar *name)$/;"	f	signature:(const gchar *name)
purple_certificate_find_scheme	certificate.h	/^purple_certificate_find_scheme(const gchar *name);$/;"	p	signature:(const gchar *name)
purple_certificate_find_verifier	certificate.c	/^purple_certificate_find_verifier(const gchar *scheme_name, const gchar *ver_name)$/;"	f	signature:(const gchar *scheme_name, const gchar *ver_name)
purple_certificate_find_verifier	certificate.h	/^purple_certificate_find_verifier(const gchar *scheme_name, const gchar *ver_name);$/;"	p	signature:(const gchar *scheme_name, const gchar *ver_name)
purple_certificate_get_fingerprint_sha1	certificate.c	/^purple_certificate_get_fingerprint_sha1(PurpleCertificate *crt)$/;"	f	signature:(PurpleCertificate *crt)
purple_certificate_get_fingerprint_sha1	certificate.h	/^purple_certificate_get_fingerprint_sha1(PurpleCertificate *crt);$/;"	p	signature:(PurpleCertificate *crt)
purple_certificate_get_handle	certificate.c	/^purple_certificate_get_handle(void)$/;"	f	signature:(void)
purple_certificate_get_handle	certificate.h	/^purple_certificate_get_handle(void);$/;"	p	signature:(void)
purple_certificate_get_issuer_unique_id	certificate.c	/^purple_certificate_get_issuer_unique_id(PurpleCertificate *crt)$/;"	f	signature:(PurpleCertificate *crt)
purple_certificate_get_issuer_unique_id	certificate.h	/^purple_certificate_get_issuer_unique_id(PurpleCertificate *crt);$/;"	p	signature:(PurpleCertificate *crt)
purple_certificate_get_pools	certificate.c	/^purple_certificate_get_pools(void)$/;"	f	signature:(void)
purple_certificate_get_pools	certificate.h	/^purple_certificate_get_pools(void);$/;"	p	signature:(void)
purple_certificate_get_schemes	certificate.c	/^purple_certificate_get_schemes(void)$/;"	f	signature:(void)
purple_certificate_get_schemes	certificate.h	/^purple_certificate_get_schemes(void);$/;"	p	signature:(void)
purple_certificate_get_subject_name	certificate.c	/^purple_certificate_get_subject_name(PurpleCertificate *crt)$/;"	f	signature:(PurpleCertificate *crt)
purple_certificate_get_subject_name	certificate.h	/^purple_certificate_get_subject_name(PurpleCertificate *crt);$/;"	p	signature:(PurpleCertificate *crt)
purple_certificate_get_times	certificate.c	/^purple_certificate_get_times(PurpleCertificate *crt, time_t *activation, time_t *expiration)$/;"	f	signature:(PurpleCertificate *crt, time_t *activation, time_t *expiration)
purple_certificate_get_times	certificate.h	/^purple_certificate_get_times(PurpleCertificate *crt, time_t *activation, time_t *expiration);$/;"	p	signature:(PurpleCertificate *crt, time_t *activation, time_t *expiration)
purple_certificate_get_unique_id	certificate.c	/^purple_certificate_get_unique_id(PurpleCertificate *crt)$/;"	f	signature:(PurpleCertificate *crt)
purple_certificate_get_unique_id	certificate.h	/^purple_certificate_get_unique_id(PurpleCertificate *crt);$/;"	p	signature:(PurpleCertificate *crt)
purple_certificate_get_verifiers	certificate.c	/^purple_certificate_get_verifiers(void)$/;"	f	signature:(void)
purple_certificate_get_verifiers	certificate.h	/^purple_certificate_get_verifiers(void);$/;"	p	signature:(void)
purple_certificate_import	certificate.c	/^purple_certificate_import(PurpleCertificateScheme *scheme, const gchar *filename)$/;"	f	signature:(PurpleCertificateScheme *scheme, const gchar *filename)
purple_certificate_import	certificate.h	/^purple_certificate_import(PurpleCertificateScheme *scheme, const gchar *filename);$/;"	p	signature:(PurpleCertificateScheme *scheme, const gchar *filename)
purple_certificate_init	certificate.c	/^purple_certificate_init(void)$/;"	f	signature:(void)
purple_certificate_init	certificate.h	/^purple_certificate_init(void);$/;"	p	signature:(void)
purple_certificate_pool_contains	certificate.c	/^purple_certificate_pool_contains(PurpleCertificatePool *pool, const gchar *id)$/;"	f	signature:(PurpleCertificatePool *pool, const gchar *id)
purple_certificate_pool_contains	certificate.h	/^purple_certificate_pool_contains(PurpleCertificatePool *pool, const gchar *id);$/;"	p	signature:(PurpleCertificatePool *pool, const gchar *id)
purple_certificate_pool_delete	certificate.c	/^purple_certificate_pool_delete(PurpleCertificatePool *pool, const gchar *id)$/;"	f	signature:(PurpleCertificatePool *pool, const gchar *id)
purple_certificate_pool_delete	certificate.h	/^purple_certificate_pool_delete(PurpleCertificatePool *pool, const gchar *id);$/;"	p	signature:(PurpleCertificatePool *pool, const gchar *id)
purple_certificate_pool_destroy_idlist	certificate.c	/^purple_certificate_pool_destroy_idlist(GList *idlist)$/;"	f	signature:(GList *idlist)
purple_certificate_pool_destroy_idlist	certificate.h	/^purple_certificate_pool_destroy_idlist(GList *idlist);$/;"	p	signature:(GList *idlist)
purple_certificate_pool_get_idlist	certificate.c	/^purple_certificate_pool_get_idlist(PurpleCertificatePool *pool)$/;"	f	signature:(PurpleCertificatePool *pool)
purple_certificate_pool_get_idlist	certificate.h	/^purple_certificate_pool_get_idlist(PurpleCertificatePool *pool);$/;"	p	signature:(PurpleCertificatePool *pool)
purple_certificate_pool_get_scheme	certificate.c	/^purple_certificate_pool_get_scheme(PurpleCertificatePool *pool)$/;"	f	signature:(PurpleCertificatePool *pool)
purple_certificate_pool_get_scheme	certificate.h	/^purple_certificate_pool_get_scheme(PurpleCertificatePool *pool);$/;"	p	signature:(PurpleCertificatePool *pool)
purple_certificate_pool_mkpath	certificate.c	/^purple_certificate_pool_mkpath(PurpleCertificatePool *pool, const gchar *id)$/;"	f	signature:(PurpleCertificatePool *pool, const gchar *id)
purple_certificate_pool_mkpath	certificate.h	/^purple_certificate_pool_mkpath(PurpleCertificatePool *pool, const gchar *id);$/;"	p	signature:(PurpleCertificatePool *pool, const gchar *id)
purple_certificate_pool_retrieve	certificate.c	/^purple_certificate_pool_retrieve(PurpleCertificatePool *pool, const gchar *id)$/;"	f	signature:(PurpleCertificatePool *pool, const gchar *id)
purple_certificate_pool_retrieve	certificate.h	/^purple_certificate_pool_retrieve(PurpleCertificatePool *pool, const gchar *id);$/;"	p	signature:(PurpleCertificatePool *pool, const gchar *id)
purple_certificate_pool_store	certificate.c	/^purple_certificate_pool_store(PurpleCertificatePool *pool, const gchar *id, PurpleCertificate *crt)$/;"	f	signature:(PurpleCertificatePool *pool, const gchar *id, PurpleCertificate *crt)
purple_certificate_pool_store	certificate.h	/^purple_certificate_pool_store(PurpleCertificatePool *pool, const gchar *id, PurpleCertificate *crt);$/;"	p	signature:(PurpleCertificatePool *pool, const gchar *id, PurpleCertificate *crt)
purple_certificate_pool_usable	certificate.c	/^purple_certificate_pool_usable(PurpleCertificatePool *pool)$/;"	f	signature:(PurpleCertificatePool *pool)
purple_certificate_pool_usable	certificate.h	/^purple_certificate_pool_usable(PurpleCertificatePool *pool);$/;"	p	signature:(PurpleCertificatePool *pool)
purple_certificate_register_pool	certificate.c	/^purple_certificate_register_pool(PurpleCertificatePool *pool)$/;"	f	signature:(PurpleCertificatePool *pool)
purple_certificate_register_pool	certificate.h	/^purple_certificate_register_pool(PurpleCertificatePool *pool);$/;"	p	signature:(PurpleCertificatePool *pool)
purple_certificate_register_scheme	certificate.c	/^purple_certificate_register_scheme(PurpleCertificateScheme *scheme)$/;"	f	signature:(PurpleCertificateScheme *scheme)
purple_certificate_register_scheme	certificate.h	/^purple_certificate_register_scheme(PurpleCertificateScheme *scheme);$/;"	p	signature:(PurpleCertificateScheme *scheme)
purple_certificate_register_verifier	certificate.c	/^purple_certificate_register_verifier(PurpleCertificateVerifier *vr)$/;"	f	signature:(PurpleCertificateVerifier *vr)
purple_certificate_register_verifier	certificate.h	/^purple_certificate_register_verifier(PurpleCertificateVerifier *vr);$/;"	p	signature:(PurpleCertificateVerifier *vr)
purple_certificate_signed_by	certificate.c	/^purple_certificate_signed_by(PurpleCertificate *crt, PurpleCertificate *issuer)$/;"	f	signature:(PurpleCertificate *crt, PurpleCertificate *issuer)
purple_certificate_signed_by	certificate.h	/^purple_certificate_signed_by(PurpleCertificate *crt, PurpleCertificate *issuer);$/;"	p	signature:(PurpleCertificate *crt, PurpleCertificate *issuer)
purple_certificate_uninit	certificate.c	/^purple_certificate_uninit(void)$/;"	f	signature:(void)
purple_certificate_uninit	certificate.h	/^purple_certificate_uninit(void);$/;"	p	signature:(void)
purple_certificate_unregister_pool	certificate.c	/^purple_certificate_unregister_pool(PurpleCertificatePool *pool)$/;"	f	signature:(PurpleCertificatePool *pool)
purple_certificate_unregister_pool	certificate.h	/^purple_certificate_unregister_pool(PurpleCertificatePool *pool);$/;"	p	signature:(PurpleCertificatePool *pool)
purple_certificate_unregister_scheme	certificate.c	/^purple_certificate_unregister_scheme(PurpleCertificateScheme *scheme)$/;"	f	signature:(PurpleCertificateScheme *scheme)
purple_certificate_unregister_scheme	certificate.h	/^purple_certificate_unregister_scheme(PurpleCertificateScheme *scheme);$/;"	p	signature:(PurpleCertificateScheme *scheme)
purple_certificate_unregister_verifier	certificate.c	/^purple_certificate_unregister_verifier(PurpleCertificateVerifier *vr)$/;"	f	signature:(PurpleCertificateVerifier *vr)
purple_certificate_unregister_verifier	certificate.h	/^purple_certificate_unregister_verifier(PurpleCertificateVerifier *vr);$/;"	p	signature:(PurpleCertificateVerifier *vr)
purple_certificate_verify	certificate.c	/^purple_certificate_verify (PurpleCertificateVerifier *verifier,$/;"	f	signature:(PurpleCertificateVerifier *verifier, const gchar *subject_name, GList *cert_chain, PurpleCertificateVerifiedCallback cb, gpointer cb_data)
purple_certificate_verify	certificate.h	/^purple_certificate_verify (PurpleCertificateVerifier *verifier,$/;"	p	signature:(PurpleCertificateVerifier *verifier, const gchar *subject_name, GList *cert_chain, PurpleCertificateVerifiedCallback cb, gpointer cb_data)
purple_certificate_verify_complete	certificate.c	/^purple_certificate_verify_complete(PurpleCertificateVerificationRequest *vrq,$/;"	f	signature:(PurpleCertificateVerificationRequest *vrq, PurpleCertificateVerificationStatus st)
purple_certificate_verify_complete	certificate.h	/^purple_certificate_verify_complete(PurpleCertificateVerificationRequest *vrq,$/;"	p	signature:(PurpleCertificateVerificationRequest *vrq, PurpleCertificateVerificationStatus st)
purple_certificates_import	certificate.c	/^purple_certificates_import(PurpleCertificateScheme *scheme, const gchar *filename)$/;"	f	signature:(PurpleCertificateScheme *scheme, const gchar *filename)
purple_certificates_import	certificate.h	/^purple_certificates_import(PurpleCertificateScheme *scheme, const gchar *filename);$/;"	p	signature:(PurpleCertificateScheme *scheme, const gchar *filename)
purple_chat_destroy	blist.c	/^purple_chat_destroy(PurpleChat *chat)$/;"	f	signature:(PurpleChat *chat)
purple_chat_destroy	blist.h	/^void purple_chat_destroy(PurpleChat *chat);$/;"	p	signature:(PurpleChat *chat)
purple_chat_get_account	blist.c	/^purple_chat_get_account(PurpleChat *chat)$/;"	f	signature:(PurpleChat *chat)
purple_chat_get_account	blist.h	/^PurpleAccount *purple_chat_get_account(PurpleChat *chat);$/;"	p	signature:(PurpleChat *chat)
purple_chat_get_components	blist.c	/^purple_chat_get_components(PurpleChat *chat)$/;"	f	signature:(PurpleChat *chat)
purple_chat_get_components	blist.h	/^GHashTable *purple_chat_get_components(PurpleChat *chat);$/;"	p	signature:(PurpleChat *chat)
purple_chat_get_group	blist.c	/^purple_chat_get_group(PurpleChat *chat)$/;"	f	signature:(PurpleChat *chat)
purple_chat_get_group	blist.h	/^PurpleGroup *purple_chat_get_group(PurpleChat *chat);$/;"	p	signature:(PurpleChat *chat)
purple_chat_get_name	blist.c	/^const char *purple_chat_get_name(PurpleChat *chat)$/;"	f	signature:(PurpleChat *chat)
purple_chat_get_name	blist.h	/^const char *purple_chat_get_name(PurpleChat *chat);$/;"	p	signature:(PurpleChat *chat)
purple_chat_new	blist.c	/^PurpleChat *purple_chat_new(PurpleAccount *account, const char *alias, GHashTable *components)$/;"	f	signature:(PurpleAccount *account, const char *alias, GHashTable *components)
purple_chat_new	blist.h	/^PurpleChat *purple_chat_new(PurpleAccount *account, const char *alias, GHashTable *components);$/;"	p	signature:(PurpleAccount *account, const char *alias, GHashTable *components)
purple_cipher_context_append	cipher.c	/^purple_cipher_context_append(PurpleCipherContext *context, const guchar *data,$/;"	f	signature:(PurpleCipherContext *context, const guchar *data, size_t len)
purple_cipher_context_append	cipher.h	/^void purple_cipher_context_append(PurpleCipherContext *context, const guchar *data, size_t len);$/;"	p	signature:(PurpleCipherContext *context, const guchar *data, size_t len)
purple_cipher_context_decrypt	cipher.c	/^purple_cipher_context_decrypt(PurpleCipherContext *context, const guchar data[],$/;"	f	signature:(PurpleCipherContext *context, const guchar data[], size_t len, guchar output[], size_t *outlen)
purple_cipher_context_decrypt	cipher.h	/^gint purple_cipher_context_decrypt(PurpleCipherContext *context, const guchar data[], size_t len, guchar output[], size_t *outlen);$/;"	p	signature:(PurpleCipherContext *context, const guchar data[], size_t len, guchar output[], size_t *outlen)
purple_cipher_context_destroy	cipher.c	/^purple_cipher_context_destroy(PurpleCipherContext *context) {$/;"	f	signature:(PurpleCipherContext *context)
purple_cipher_context_destroy	cipher.h	/^void purple_cipher_context_destroy(PurpleCipherContext *context);$/;"	p	signature:(PurpleCipherContext *context)
purple_cipher_context_digest	cipher.c	/^purple_cipher_context_digest(PurpleCipherContext *context, size_t in_len,$/;"	f	signature:(PurpleCipherContext *context, size_t in_len, guchar digest[], size_t *out_len)
purple_cipher_context_digest	cipher.h	/^gboolean purple_cipher_context_digest(PurpleCipherContext *context, size_t in_len, guchar digest[], size_t *out_len);$/;"	p	signature:(PurpleCipherContext *context, size_t in_len, guchar digest[], size_t *out_len)
purple_cipher_context_digest_to_str	cipher.c	/^purple_cipher_context_digest_to_str(PurpleCipherContext *context, size_t in_len,$/;"	f	signature:(PurpleCipherContext *context, size_t in_len, gchar digest_s[], size_t *out_len)
purple_cipher_context_digest_to_str	cipher.h	/^gboolean purple_cipher_context_digest_to_str(PurpleCipherContext *context, size_t in_len, gchar digest_s[], size_t *out_len);$/;"	p	signature:(PurpleCipherContext *context, size_t in_len, gchar digest_s[], size_t *out_len)
purple_cipher_context_encrypt	cipher.c	/^purple_cipher_context_encrypt(PurpleCipherContext *context, const guchar data[],$/;"	f	signature:(PurpleCipherContext *context, const guchar data[], size_t len, guchar output[], size_t *outlen)
purple_cipher_context_encrypt	cipher.h	/^gint purple_cipher_context_encrypt(PurpleCipherContext *context, const guchar data[], size_t len, guchar output[], size_t *outlen);$/;"	p	signature:(PurpleCipherContext *context, const guchar data[], size_t len, guchar output[], size_t *outlen)
purple_cipher_context_get_batch_mode	cipher.c	/^purple_cipher_context_get_batch_mode(PurpleCipherContext *context)$/;"	f	signature:(PurpleCipherContext *context)
purple_cipher_context_get_batch_mode	cipher.h	/^PurpleCipherBatchMode purple_cipher_context_get_batch_mode(PurpleCipherContext *context);$/;"	p	signature:(PurpleCipherContext *context)
purple_cipher_context_get_block_size	cipher.c	/^purple_cipher_context_get_block_size(PurpleCipherContext *context)$/;"	f	signature:(PurpleCipherContext *context)
purple_cipher_context_get_block_size	cipher.h	/^size_t purple_cipher_context_get_block_size(PurpleCipherContext *context);$/;"	p	signature:(PurpleCipherContext *context)
purple_cipher_context_get_data	cipher.c	/^purple_cipher_context_get_data(PurpleCipherContext *context) {$/;"	f	signature:(PurpleCipherContext *context)
purple_cipher_context_get_data	cipher.h	/^gpointer purple_cipher_context_get_data(PurpleCipherContext *context);$/;"	p	signature:(PurpleCipherContext *context)
purple_cipher_context_get_key_size	cipher.c	/^purple_cipher_context_get_key_size(PurpleCipherContext *context) {$/;"	f	signature:(PurpleCipherContext *context)
purple_cipher_context_get_key_size	cipher.h	/^size_t purple_cipher_context_get_key_size(PurpleCipherContext *context);$/;"	p	signature:(PurpleCipherContext *context)
purple_cipher_context_get_option	cipher.c	/^purple_cipher_context_get_option(PurpleCipherContext *context, const gchar *name) {$/;"	f	signature:(PurpleCipherContext *context, const gchar *name)
purple_cipher_context_get_option	cipher.h	/^gpointer purple_cipher_context_get_option(PurpleCipherContext *context, const gchar *name);$/;"	p	signature:(PurpleCipherContext *context, const gchar *name)
purple_cipher_context_get_salt_size	cipher.c	/^purple_cipher_context_get_salt_size(PurpleCipherContext *context) {$/;"	f	signature:(PurpleCipherContext *context)
purple_cipher_context_get_salt_size	cipher.h	/^size_t purple_cipher_context_get_salt_size(PurpleCipherContext *context);$/;"	p	signature:(PurpleCipherContext *context)
purple_cipher_context_new	cipher.c	/^purple_cipher_context_new(PurpleCipher *cipher, void *extra) {$/;"	f	signature:(PurpleCipher *cipher, void *extra)
purple_cipher_context_new	cipher.h	/^PurpleCipherContext *purple_cipher_context_new(PurpleCipher *cipher, void *extra);$/;"	p	signature:(PurpleCipher *cipher, void *extra)
purple_cipher_context_new_by_name	cipher.c	/^purple_cipher_context_new_by_name(const gchar *name, void *extra) {$/;"	f	signature:(const gchar *name, void *extra)
purple_cipher_context_new_by_name	cipher.h	/^PurpleCipherContext *purple_cipher_context_new_by_name(const gchar *name, void *extra);$/;"	p	signature:(const gchar *name, void *extra)
purple_cipher_context_reset	cipher.c	/^purple_cipher_context_reset(PurpleCipherContext *context, void *extra) {$/;"	f	signature:(PurpleCipherContext *context, void *extra)
purple_cipher_context_reset	cipher.h	/^void purple_cipher_context_reset(PurpleCipherContext *context, gpointer extra);$/;"	p	signature:(PurpleCipherContext *context, gpointer extra)
purple_cipher_context_set_batch_mode	cipher.c	/^purple_cipher_context_set_batch_mode(PurpleCipherContext *context,$/;"	f	signature:(PurpleCipherContext *context, PurpleCipherBatchMode mode)
purple_cipher_context_set_batch_mode	cipher.h	/^void purple_cipher_context_set_batch_mode(PurpleCipherContext *context, PurpleCipherBatchMode mode);$/;"	p	signature:(PurpleCipherContext *context, PurpleCipherBatchMode mode)
purple_cipher_context_set_data	cipher.c	/^purple_cipher_context_set_data(PurpleCipherContext *context, gpointer data) {$/;"	f	signature:(PurpleCipherContext *context, gpointer data)
purple_cipher_context_set_data	cipher.h	/^void purple_cipher_context_set_data(PurpleCipherContext *context, gpointer data);$/;"	p	signature:(PurpleCipherContext *context, gpointer data)
purple_cipher_context_set_iv	cipher.c	/^purple_cipher_context_set_iv(PurpleCipherContext *context, guchar *iv, size_t len)$/;"	f	signature:(PurpleCipherContext *context, guchar *iv, size_t len)
purple_cipher_context_set_iv	cipher.h	/^void purple_cipher_context_set_iv(PurpleCipherContext *context, guchar *iv, size_t len);$/;"	p	signature:(PurpleCipherContext *context, guchar *iv, size_t len)
purple_cipher_context_set_key	cipher.c	/^purple_cipher_context_set_key(PurpleCipherContext *context, const guchar *key) {$/;"	f	signature:(PurpleCipherContext *context, const guchar *key)
purple_cipher_context_set_key	cipher.h	/^void purple_cipher_context_set_key(PurpleCipherContext *context, const guchar *key);$/;"	p	signature:(PurpleCipherContext *context, const guchar *key)
purple_cipher_context_set_key_with_len	cipher.c	/^purple_cipher_context_set_key_with_len(PurpleCipherContext *context,$/;"	f	signature:(PurpleCipherContext *context, const guchar *key, size_t len)
purple_cipher_context_set_key_with_len	cipher.h	/^void purple_cipher_context_set_key_with_len(PurpleCipherContext *context, const guchar *key, size_t len);$/;"	p	signature:(PurpleCipherContext *context, const guchar *key, size_t len)
purple_cipher_context_set_option	cipher.c	/^purple_cipher_context_set_option(PurpleCipherContext *context, const gchar *name,$/;"	f	signature:(PurpleCipherContext *context, const gchar *name, gpointer value)
purple_cipher_context_set_option	cipher.h	/^void purple_cipher_context_set_option(PurpleCipherContext *context, const gchar *name, gpointer value);$/;"	p	signature:(PurpleCipherContext *context, const gchar *name, gpointer value)
purple_cipher_context_set_salt	cipher.c	/^purple_cipher_context_set_salt(PurpleCipherContext *context, guchar *salt) {$/;"	f	signature:(PurpleCipherContext *context, guchar *salt)
purple_cipher_context_set_salt	cipher.h	/^void purple_cipher_context_set_salt(PurpleCipherContext *context, guchar *salt);$/;"	p	signature:(PurpleCipherContext *context, guchar *salt)
purple_cipher_digest_region	cipher.c	/^purple_cipher_digest_region(const gchar *name, const guchar *data,$/;"	f	signature:(const gchar *name, const guchar *data, size_t data_len, size_t in_len, guchar digest[], size_t *out_len)
purple_cipher_digest_region	cipher.h	/^gboolean purple_cipher_digest_region(const gchar *name, const guchar *data, size_t data_len, size_t in_len, guchar digest[], size_t *out_len);$/;"	p	signature:(const gchar *name, const guchar *data, size_t data_len, size_t in_len, guchar digest[], size_t *out_len)
purple_cipher_get_capabilities	cipher.c	/^purple_cipher_get_capabilities(PurpleCipher *cipher) {$/;"	f	signature:(PurpleCipher *cipher)
purple_cipher_get_capabilities	cipher.h	/^guint purple_cipher_get_capabilities(PurpleCipher *cipher);$/;"	p	signature:(PurpleCipher *cipher)
purple_cipher_get_name	cipher.c	/^purple_cipher_get_name(PurpleCipher *cipher) {$/;"	f	signature:(PurpleCipher *cipher)
purple_cipher_get_name	cipher.h	/^const gchar *purple_cipher_get_name(PurpleCipher *cipher);$/;"	p	signature:(PurpleCipher *cipher)
purple_cipher_http_digest_calculate_response	cipher.c	/^gchar *purple_cipher_http_digest_calculate_response($/;"	f	signature:( const gchar *algorithm, const gchar *method, const gchar *digest_uri, const gchar *qop, const gchar *entity, const gchar *nonce, const gchar *nonce_count, const gchar *client_nonce, const gchar *session_key)
purple_cipher_http_digest_calculate_response	cipher.h	/^gchar *purple_cipher_http_digest_calculate_response($/;"	p	signature:( const gchar *algorithm, const gchar *method, const gchar *digest_uri, const gchar *qop, const gchar *entity, const gchar *nonce, const gchar *nonce_count, const gchar *client_nonce, const gchar *session_key)
purple_cipher_http_digest_calculate_session_key	cipher.c	/^gchar *purple_cipher_http_digest_calculate_session_key($/;"	f	signature:( const gchar *algorithm, const gchar *username, const gchar *realm, const gchar *password, const gchar *nonce, const gchar *client_nonce)
purple_cipher_http_digest_calculate_session_key	cipher.h	/^gchar *purple_cipher_http_digest_calculate_session_key($/;"	p	signature:( const gchar *algorithm, const gchar *username, const gchar *realm, const gchar *password, const gchar *nonce, const gchar *client_nonce)
purple_ciphers_find_cipher	cipher.c	/^purple_ciphers_find_cipher(const gchar *name) {$/;"	f	signature:(const gchar *name)
purple_ciphers_find_cipher	cipher.h	/^PurpleCipher *purple_ciphers_find_cipher(const gchar *name);$/;"	p	signature:(const gchar *name)
purple_ciphers_get_ciphers	cipher.c	/^purple_ciphers_get_ciphers() {$/;"	f
purple_ciphers_get_ciphers	cipher.h	/^GList *purple_ciphers_get_ciphers(void);$/;"	p	signature:(void)
purple_ciphers_get_handle	cipher.c	/^purple_ciphers_get_handle() {$/;"	f
purple_ciphers_get_handle	cipher.h	/^gpointer purple_ciphers_get_handle(void);$/;"	p	signature:(void)
purple_ciphers_init	cipher.c	/^purple_ciphers_init() {$/;"	f
purple_ciphers_init	cipher.h	/^void purple_ciphers_init(void);$/;"	p	signature:(void)
purple_ciphers_register_cipher	cipher.c	/^purple_ciphers_register_cipher(const gchar *name, PurpleCipherOps *ops) {$/;"	f	signature:(const gchar *name, PurpleCipherOps *ops)
purple_ciphers_register_cipher	cipher.h	/^PurpleCipher *purple_ciphers_register_cipher(const gchar *name, PurpleCipherOps *ops);$/;"	p	signature:(const gchar *name, PurpleCipherOps *ops)
purple_ciphers_uninit	cipher.c	/^purple_ciphers_uninit() {$/;"	f
purple_ciphers_uninit	cipher.h	/^void purple_ciphers_uninit(void);$/;"	p	signature:(void)
purple_ciphers_unregister_cipher	cipher.c	/^purple_ciphers_unregister_cipher(PurpleCipher *cipher) {$/;"	f	signature:(PurpleCipher *cipher)
purple_ciphers_unregister_cipher	cipher.h	/^gboolean purple_ciphers_unregister_cipher(PurpleCipher *cipher);$/;"	p	signature:(PurpleCipher *cipher)
purple_circ_buffer_append	circbuffer.c	/^void purple_circ_buffer_append(PurpleCircBuffer *buf, gconstpointer src, gsize len) {$/;"	f	signature:(PurpleCircBuffer *buf, gconstpointer src, gsize len)
purple_circ_buffer_append	circbuffer.h	/^void purple_circ_buffer_append(PurpleCircBuffer *buf, gconstpointer src, gsize len);$/;"	p	signature:(PurpleCircBuffer *buf, gconstpointer src, gsize len)
purple_circ_buffer_destroy	circbuffer.c	/^void purple_circ_buffer_destroy(PurpleCircBuffer *buf) {$/;"	f	signature:(PurpleCircBuffer *buf)
purple_circ_buffer_destroy	circbuffer.h	/^void purple_circ_buffer_destroy(PurpleCircBuffer *buf);$/;"	p	signature:(PurpleCircBuffer *buf)
purple_circ_buffer_get_max_read	circbuffer.c	/^gsize purple_circ_buffer_get_max_read(const PurpleCircBuffer *buf) {$/;"	f	signature:(const PurpleCircBuffer *buf)
purple_circ_buffer_get_max_read	circbuffer.h	/^gsize purple_circ_buffer_get_max_read(const PurpleCircBuffer *buf);$/;"	p	signature:(const PurpleCircBuffer *buf)
purple_circ_buffer_mark_read	circbuffer.c	/^gboolean purple_circ_buffer_mark_read(PurpleCircBuffer *buf, gsize len) {$/;"	f	signature:(PurpleCircBuffer *buf, gsize len)
purple_circ_buffer_mark_read	circbuffer.h	/^gboolean purple_circ_buffer_mark_read(PurpleCircBuffer *buf, gsize len);$/;"	p	signature:(PurpleCircBuffer *buf, gsize len)
purple_circ_buffer_new	circbuffer.c	/^purple_circ_buffer_new(gsize growsize) {$/;"	f	signature:(gsize growsize)
purple_circ_buffer_new	circbuffer.h	/^PurpleCircBuffer *purple_circ_buffer_new(gsize growsize);$/;"	p	signature:(gsize growsize)
purple_cmd_do_command	cmds.c	/^PurpleCmdStatus purple_cmd_do_command(PurpleConversation *conv, const gchar *cmdline,$/;"	f	signature:(PurpleConversation *conv, const gchar *cmdline, const gchar *markup, gchar **error)
purple_cmd_do_command	cmds.h	/^PurpleCmdStatus purple_cmd_do_command(PurpleConversation *conv, const gchar *cmdline,$/;"	p	signature:(PurpleConversation *conv, const gchar *cmdline, const gchar *markup, gchar **errormsg)
purple_cmd_free	cmds.c	/^static void purple_cmd_free(PurpleCmd *c)$/;"	f	file:	signature:(PurpleCmd *c)
purple_cmd_help	cmds.c	/^GList *purple_cmd_help(PurpleConversation *conv, const gchar *cmd)$/;"	f	signature:(PurpleConversation *conv, const gchar *cmd)
purple_cmd_help	cmds.h	/^GList *purple_cmd_help(PurpleConversation *conv, const gchar *cmd);$/;"	p	signature:(PurpleConversation *conv, const gchar *cmd)
purple_cmd_list	cmds.c	/^GList *purple_cmd_list(PurpleConversation *conv)$/;"	f	signature:(PurpleConversation *conv)
purple_cmd_list	cmds.h	/^GList *purple_cmd_list(PurpleConversation *conv);$/;"	p	signature:(PurpleConversation *conv)
purple_cmd_parse_args	cmds.c	/^static gboolean purple_cmd_parse_args(PurpleCmd *cmd, const gchar *s, const gchar *m, gchar ***args)$/;"	f	file:	signature:(PurpleCmd *cmd, const gchar *s, const gchar *m, gchar ***args)
purple_cmd_register	cmds.c	/^PurpleCmdId purple_cmd_register(const gchar *cmd, const gchar *args,$/;"	f	signature:(const gchar *cmd, const gchar *args, PurpleCmdPriority p, PurpleCmdFlag f, const gchar *prpl_id, PurpleCmdFunc func, const gchar *helpstr, void *data)
purple_cmd_register	cmds.h	/^PurpleCmdId purple_cmd_register(const gchar *cmd, const gchar *args, PurpleCmdPriority p, PurpleCmdFlag f,$/;"	p	signature:(const gchar *cmd, const gchar *args, PurpleCmdPriority p, PurpleCmdFlag f, const gchar *prpl_id, PurpleCmdFunc func, const gchar *helpstr, void *data)
purple_cmd_strip_cmd_from_markup	cmds.c	/^static void purple_cmd_strip_cmd_from_markup(char *markup)$/;"	f	file:	signature:(char *markup)
purple_cmd_strip_current_char	cmds.c	/^static void purple_cmd_strip_current_char(gunichar c, char *s, guint len)$/;"	f	file:	signature:(gunichar c, char *s, guint len)
purple_cmd_unregister	cmds.c	/^void purple_cmd_unregister(PurpleCmdId id)$/;"	f	signature:(PurpleCmdId id)
purple_cmd_unregister	cmds.h	/^void purple_cmd_unregister(PurpleCmdId id);$/;"	p	signature:(PurpleCmdId id)
purple_cmds_get_handle	cmds.c	/^gpointer purple_cmds_get_handle(void)$/;"	f	signature:(void)
purple_cmds_get_handle	cmds.h	/^gpointer purple_cmds_get_handle(void);$/;"	p	signature:(void)
purple_cmds_init	cmds.c	/^void purple_cmds_init(void)$/;"	f	signature:(void)
purple_cmds_init	cmds.h	/^void purple_cmds_init(void);$/;"	p	signature:(void)
purple_cmds_uninit	cmds.c	/^void purple_cmds_uninit(void)$/;"	f	signature:(void)
purple_cmds_uninit	cmds.h	/^void purple_cmds_uninit(void);$/;"	p	signature:(void)
purple_connection_destroy	connection.c	/^purple_connection_destroy(PurpleConnection *gc)$/;"	f	signature:(PurpleConnection *gc)
purple_connection_destroy	connection.h	/^void purple_connection_destroy(PurpleConnection *gc);$/;"	p	signature:(PurpleConnection *gc)
purple_connection_disconnect_cb	connection.c	/^purple_connection_disconnect_cb(gpointer data)$/;"	f	file:	signature:(gpointer data)
purple_connection_error	connection.c	/^purple_connection_error(PurpleConnection *gc, const char *text)$/;"	f	signature:(PurpleConnection *gc, const char *text)
purple_connection_error	connection.h	/^void purple_connection_error(PurpleConnection *gc, const char *reason);$/;"	p	signature:(PurpleConnection *gc, const char *reason)
purple_connection_error_is_fatal	connection.c	/^purple_connection_error_is_fatal (PurpleConnectionError reason)$/;"	f	signature:(PurpleConnectionError reason)
purple_connection_error_is_fatal	connection.h	/^purple_connection_error_is_fatal (PurpleConnectionError reason);$/;"	p	signature:(PurpleConnectionError reason)
purple_connection_error_reason	connection.c	/^purple_connection_error_reason (PurpleConnection *gc,$/;"	f	signature:(PurpleConnection *gc, PurpleConnectionError reason, const char *description)
purple_connection_error_reason	connection.h	/^purple_connection_error_reason (PurpleConnection *gc,$/;"	p	signature:(PurpleConnection *gc, PurpleConnectionError reason, const char *description)
purple_connection_get_account	connection.c	/^purple_connection_get_account(const PurpleConnection *gc)$/;"	f	signature:(const PurpleConnection *gc)
purple_connection_get_account	connection.h	/^PurpleAccount *purple_connection_get_account(const PurpleConnection *gc);$/;"	p	signature:(const PurpleConnection *gc)
purple_connection_get_display_name	connection.c	/^purple_connection_get_display_name(const PurpleConnection *gc)$/;"	f	signature:(const PurpleConnection *gc)
purple_connection_get_display_name	connection.h	/^const char *purple_connection_get_display_name(const PurpleConnection *gc);$/;"	p	signature:(const PurpleConnection *gc)
purple_connection_get_password	connection.c	/^purple_connection_get_password(const PurpleConnection *gc)$/;"	f	signature:(const PurpleConnection *gc)
purple_connection_get_password	connection.h	/^const char *purple_connection_get_password(const PurpleConnection *gc);$/;"	p	signature:(const PurpleConnection *gc)
purple_connection_get_protocol_data	connection.c	/^purple_connection_get_protocol_data(const PurpleConnection *connection) {$/;"	f	signature:(const PurpleConnection *connection)
purple_connection_get_protocol_data	connection.h	/^void *purple_connection_get_protocol_data(const PurpleConnection *connection);$/;"	p	signature:(const PurpleConnection *connection)
purple_connection_get_prpl	connection.c	/^purple_connection_get_prpl(const PurpleConnection *gc)$/;"	f	signature:(const PurpleConnection *gc)
purple_connection_get_prpl	connection.h	/^PurplePlugin * purple_connection_get_prpl(const PurpleConnection *gc);$/;"	p	signature:(const PurpleConnection *gc)
purple_connection_get_state	connection.c	/^purple_connection_get_state(const PurpleConnection *gc)$/;"	f	signature:(const PurpleConnection *gc)
purple_connection_get_state	connection.h	/^PurpleConnectionState purple_connection_get_state(const PurpleConnection *gc);$/;"	p	signature:(const PurpleConnection *gc)
purple_connection_new	connection.c	/^purple_connection_new(PurpleAccount *account, gboolean regist, const char *password)$/;"	f	signature:(PurpleAccount *account, gboolean regist, const char *password)
purple_connection_new	connection.h	/^void purple_connection_new(PurpleAccount *account, gboolean regist,$/;"	p	signature:(PurpleAccount *account, gboolean regist, const char *password)
purple_connection_new_unregister	connection.c	/^purple_connection_new_unregister(PurpleAccount *account, const char *password, PurpleAccountUnregistrationCb cb, void *user_data)$/;"	f	signature:(PurpleAccount *account, const char *password, PurpleAccountUnregistrationCb cb, void *user_data)
purple_connection_new_unregister	connection.h	/^void purple_connection_new_unregister(PurpleAccount *account, const char *password, PurpleAccountUnregistrationCb cb, void *user_data);$/;"	p	signature:(PurpleAccount *account, const char *password, PurpleAccountUnregistrationCb cb, void *user_data)
purple_connection_notice	connection.c	/^purple_connection_notice(PurpleConnection *gc, const char *text)$/;"	f	signature:(PurpleConnection *gc, const char *text)
purple_connection_notice	connection.h	/^void purple_connection_notice(PurpleConnection *gc, const char *text);$/;"	p	signature:(PurpleConnection *gc, const char *text)
purple_connection_set_account	connection.c	/^purple_connection_set_account(PurpleConnection *gc, PurpleAccount *account)$/;"	f	signature:(PurpleConnection *gc, PurpleAccount *account)
purple_connection_set_account	connection.h	/^void purple_connection_set_account(PurpleConnection *gc, PurpleAccount *account);$/;"	p	signature:(PurpleConnection *gc, PurpleAccount *account)
purple_connection_set_display_name	connection.c	/^purple_connection_set_display_name(PurpleConnection *gc, const char *name)$/;"	f	signature:(PurpleConnection *gc, const char *name)
purple_connection_set_display_name	connection.h	/^void purple_connection_set_display_name(PurpleConnection *gc, const char *name);$/;"	p	signature:(PurpleConnection *gc, const char *name)
purple_connection_set_protocol_data	connection.c	/^purple_connection_set_protocol_data(PurpleConnection *connection, void *proto_data) {$/;"	f	signature:(PurpleConnection *connection, void *proto_data)
purple_connection_set_protocol_data	connection.h	/^void purple_connection_set_protocol_data(PurpleConnection *connection, void *proto_data);$/;"	p	signature:(PurpleConnection *connection, void *proto_data)
purple_connection_set_state	connection.c	/^purple_connection_set_state(PurpleConnection *gc, PurpleConnectionState state)$/;"	f	signature:(PurpleConnection *gc, PurpleConnectionState state)
purple_connection_set_state	connection.h	/^void purple_connection_set_state(PurpleConnection *gc, PurpleConnectionState state);$/;"	p	signature:(PurpleConnection *gc, PurpleConnectionState state)
purple_connection_ssl_error	connection.c	/^purple_connection_ssl_error (PurpleConnection *gc,$/;"	f	signature:(PurpleConnection *gc, PurpleSslErrorType ssl_error)
purple_connection_ssl_error	connection.h	/^purple_connection_ssl_error (PurpleConnection *gc,$/;"	p	signature:(PurpleConnection *gc, PurpleSslErrorType ssl_error)
purple_connection_update_progress	connection.c	/^purple_connection_update_progress(PurpleConnection *gc, const char *text,$/;"	f	signature:(PurpleConnection *gc, const char *text, size_t step, size_t count)
purple_connection_update_progress	connection.h	/^void purple_connection_update_progress(PurpleConnection *gc, const char *text,$/;"	p	signature:(PurpleConnection *gc, const char *text, size_t step, size_t count)
purple_connections_disconnect_all	connection.c	/^purple_connections_disconnect_all(void)$/;"	f	signature:(void)
purple_connections_disconnect_all	connection.h	/^void purple_connections_disconnect_all(void);$/;"	p	signature:(void)
purple_connections_get_all	connection.c	/^purple_connections_get_all(void)$/;"	f	signature:(void)
purple_connections_get_all	connection.h	/^GList *purple_connections_get_all(void);$/;"	p	signature:(void)
purple_connections_get_connecting	connection.c	/^purple_connections_get_connecting(void)$/;"	f	signature:(void)
purple_connections_get_connecting	connection.h	/^GList *purple_connections_get_connecting(void);$/;"	p	signature:(void)
purple_connections_get_handle	connection.c	/^purple_connections_get_handle(void)$/;"	f	signature:(void)
purple_connections_get_handle	connection.h	/^void *purple_connections_get_handle(void);$/;"	p	signature:(void)
purple_connections_get_ui_ops	connection.c	/^purple_connections_get_ui_ops(void)$/;"	f	signature:(void)
purple_connections_get_ui_ops	connection.h	/^PurpleConnectionUiOps *purple_connections_get_ui_ops(void);$/;"	p	signature:(void)
purple_connections_init	connection.c	/^purple_connections_init(void)$/;"	f	signature:(void)
purple_connections_init	connection.h	/^void purple_connections_init(void);$/;"	p	signature:(void)
purple_connections_set_ui_ops	connection.c	/^purple_connections_set_ui_ops(PurpleConnectionUiOps *ops)$/;"	f	signature:(PurpleConnectionUiOps *ops)
purple_connections_set_ui_ops	connection.h	/^void purple_connections_set_ui_ops(PurpleConnectionUiOps *ops);$/;"	p	signature:(PurpleConnectionUiOps *ops)
purple_connections_uninit	connection.c	/^purple_connections_uninit(void)$/;"	f	signature:(void)
purple_connections_uninit	connection.h	/^void purple_connections_uninit(void);$/;"	p	signature:(void)
purple_contact_compute_priority_buddy	blist.c	/^purple_contact_compute_priority_buddy(PurpleContact *contact)$/;"	f	file:	signature:(PurpleContact *contact)
purple_contact_destroy	blist.c	/^purple_contact_destroy(PurpleContact *contact)$/;"	f	signature:(PurpleContact *contact)
purple_contact_destroy	blist.h	/^void purple_contact_destroy(PurpleContact *contact);$/;"	p	signature:(PurpleContact *contact)
purple_contact_get_alias	blist.c	/^const char *purple_contact_get_alias(PurpleContact* contact)$/;"	f	signature:(PurpleContact* contact)
purple_contact_get_alias	blist.h	/^const char *purple_contact_get_alias(PurpleContact *contact);$/;"	p	signature:(PurpleContact *contact)
purple_contact_get_group	blist.c	/^purple_contact_get_group(const PurpleContact *contact)$/;"	f	signature:(const PurpleContact *contact)
purple_contact_get_group	blist.h	/^PurpleGroup *purple_contact_get_group(const PurpleContact *contact);$/;"	p	signature:(const PurpleContact *contact)
purple_contact_get_priority_buddy	blist.c	/^PurpleBuddy *purple_contact_get_priority_buddy(PurpleContact *contact)$/;"	f	signature:(PurpleContact *contact)
purple_contact_get_priority_buddy	blist.h	/^PurpleBuddy *purple_contact_get_priority_buddy(PurpleContact *contact);$/;"	p	signature:(PurpleContact *contact)
purple_contact_invalidate_priority_buddy	blist.c	/^void purple_contact_invalidate_priority_buddy(PurpleContact *contact)$/;"	f	signature:(PurpleContact *contact)
purple_contact_invalidate_priority_buddy	blist.h	/^void purple_contact_invalidate_priority_buddy(PurpleContact *contact);$/;"	p	signature:(PurpleContact *contact)
purple_contact_new	blist.c	/^PurpleContact *purple_contact_new()$/;"	f
purple_contact_new	blist.h	/^PurpleContact *purple_contact_new(void);$/;"	p	signature:(void)
purple_contact_on_account	blist.c	/^gboolean purple_contact_on_account(PurpleContact *c, PurpleAccount *account)$/;"	f	signature:(PurpleContact *c, PurpleAccount *account)
purple_contact_on_account	blist.h	/^gboolean purple_contact_on_account(PurpleContact *contact, PurpleAccount *account);$/;"	p	signature:(PurpleContact *contact, PurpleAccount *account)
purple_contact_set_alias	blist.c	/^void purple_contact_set_alias(PurpleContact *contact, const char *alias)$/;"	f	signature:(PurpleContact *contact, const char *alias)
purple_contact_set_alias	blist.h	/^void purple_contact_set_alias(PurpleContact *contact, const char *alias);$/;"	p	signature:(PurpleContact *contact, const char *alias)
purple_conv_chat_add_user	conversation.c	/^purple_conv_chat_add_user(PurpleConvChat *chat, const char *user,$/;"	f	signature:(PurpleConvChat *chat, const char *user, const char *extra_msg, PurpleConvChatBuddyFlags flags, gboolean new_arrival)
purple_conv_chat_add_user	conversation.h	/^void purple_conv_chat_add_user(PurpleConvChat *chat, const char *user,$/;"	p	signature:(PurpleConvChat *chat, const char *user, const char *extra_msg, PurpleConvChatBuddyFlags flags, gboolean new_arrival)
purple_conv_chat_add_users	conversation.c	/^purple_conv_chat_add_users(PurpleConvChat *chat, GList *users, GList *extra_msgs,$/;"	f	signature:(PurpleConvChat *chat, GList *users, GList *extra_msgs, GList *flags, gboolean new_arrivals)
purple_conv_chat_add_users	conversation.h	/^void purple_conv_chat_add_users(PurpleConvChat *chat, GList *users, GList *extra_msgs,$/;"	p	signature:(PurpleConvChat *chat, GList *users, GList *extra_msgs, GList *flags, gboolean new_arrivals)
purple_conv_chat_cb_compare	conversation.c	/^purple_conv_chat_cb_compare(PurpleConvChatBuddy *a, PurpleConvChatBuddy *b)$/;"	f	file:	signature:(PurpleConvChatBuddy *a, PurpleConvChatBuddy *b)
purple_conv_chat_cb_destroy	conversation.c	/^purple_conv_chat_cb_destroy(PurpleConvChatBuddy *cb)$/;"	f	signature:(PurpleConvChatBuddy *cb)
purple_conv_chat_cb_destroy	conversation.h	/^void purple_conv_chat_cb_destroy(PurpleConvChatBuddy *cb);$/;"	p	signature:(PurpleConvChatBuddy *cb)
purple_conv_chat_cb_find	conversation.c	/^purple_conv_chat_cb_find(PurpleConvChat *chat, const char *name)$/;"	f	signature:(PurpleConvChat *chat, const char *name)
purple_conv_chat_cb_find	conversation.h	/^PurpleConvChatBuddy *purple_conv_chat_cb_find(PurpleConvChat *chat, const char *name);$/;"	p	signature:(PurpleConvChat *chat, const char *name)
purple_conv_chat_cb_get_attribute	conversation.c	/^purple_conv_chat_cb_get_attribute(PurpleConvChatBuddy *cb, const char *key)$/;"	f	signature:(PurpleConvChatBuddy *cb, const char *key)
purple_conv_chat_cb_get_attribute	conversation.h	/^const char *purple_conv_chat_cb_get_attribute(PurpleConvChatBuddy *cb, const char *key);$/;"	p	signature:(PurpleConvChatBuddy *cb, const char *key)
purple_conv_chat_cb_get_attribute_keys	conversation.c	/^purple_conv_chat_cb_get_attribute_keys(PurpleConvChatBuddy *cb)$/;"	f	signature:(PurpleConvChatBuddy *cb)
purple_conv_chat_cb_get_attribute_keys	conversation.h	/^GList *purple_conv_chat_cb_get_attribute_keys(PurpleConvChatBuddy *cb);$/;"	p	signature:(PurpleConvChatBuddy *cb)
purple_conv_chat_cb_get_name	conversation.c	/^purple_conv_chat_cb_get_name(PurpleConvChatBuddy *cb)$/;"	f	signature:(PurpleConvChatBuddy *cb)
purple_conv_chat_cb_get_name	conversation.h	/^const char *purple_conv_chat_cb_get_name(PurpleConvChatBuddy *cb);$/;"	p	signature:(PurpleConvChatBuddy *cb)
purple_conv_chat_cb_new	conversation.c	/^purple_conv_chat_cb_new(const char *name, const char *alias, PurpleConvChatBuddyFlags flags)$/;"	f	signature:(const char *name, const char *alias, PurpleConvChatBuddyFlags flags)
purple_conv_chat_cb_new	conversation.h	/^PurpleConvChatBuddy *purple_conv_chat_cb_new(const char *name, const char *alias,$/;"	p	signature:(const char *name, const char *alias, PurpleConvChatBuddyFlags flags)
purple_conv_chat_cb_set_attribute	conversation.c	/^purple_conv_chat_cb_set_attribute(PurpleConvChat *chat, PurpleConvChatBuddy *cb, const char *key, const char *value)$/;"	f	signature:(PurpleConvChat *chat, PurpleConvChatBuddy *cb, const char *key, const char *value)
purple_conv_chat_cb_set_attribute	conversation.h	/^void purple_conv_chat_cb_set_attribute(PurpleConvChat *chat, PurpleConvChatBuddy *cb, const char *key, const char *value);$/;"	p	signature:(PurpleConvChat *chat, PurpleConvChatBuddy *cb, const char *key, const char *value)
purple_conv_chat_cb_set_attributes	conversation.c	/^purple_conv_chat_cb_set_attributes(PurpleConvChat *chat, PurpleConvChatBuddy *cb, GList *keys, GList *values)$/;"	f	signature:(PurpleConvChat *chat, PurpleConvChatBuddy *cb, GList *keys, GList *values)
purple_conv_chat_cb_set_attributes	conversation.h	/^purple_conv_chat_cb_set_attributes(PurpleConvChat *chat, PurpleConvChatBuddy *cb, GList *keys, GList *values);$/;"	p	signature:(PurpleConvChat *chat, PurpleConvChatBuddy *cb, GList *keys, GList *values)
purple_conv_chat_clear_users	conversation.c	/^purple_conv_chat_clear_users(PurpleConvChat *chat)$/;"	f	signature:(PurpleConvChat *chat)
purple_conv_chat_clear_users	conversation.h	/^void purple_conv_chat_clear_users(PurpleConvChat *chat);$/;"	p	signature:(PurpleConvChat *chat)
purple_conv_chat_find_user	conversation.c	/^purple_conv_chat_find_user(PurpleConvChat *chat, const char *user)$/;"	f	signature:(PurpleConvChat *chat, const char *user)
purple_conv_chat_find_user	conversation.h	/^gboolean purple_conv_chat_find_user(PurpleConvChat *chat, const char *user);$/;"	p	signature:(PurpleConvChat *chat, const char *user)
purple_conv_chat_get_conversation	conversation.c	/^purple_conv_chat_get_conversation(const PurpleConvChat *chat)$/;"	f	signature:(const PurpleConvChat *chat)
purple_conv_chat_get_conversation	conversation.h	/^PurpleConversation *purple_conv_chat_get_conversation(const PurpleConvChat *chat);$/;"	p	signature:(const PurpleConvChat *chat)
purple_conv_chat_get_id	conversation.c	/^purple_conv_chat_get_id(const PurpleConvChat *chat)$/;"	f	signature:(const PurpleConvChat *chat)
purple_conv_chat_get_id	conversation.h	/^int purple_conv_chat_get_id(const PurpleConvChat *chat);$/;"	p	signature:(const PurpleConvChat *chat)
purple_conv_chat_get_ignored	conversation.c	/^purple_conv_chat_get_ignored(const PurpleConvChat *chat)$/;"	f	signature:(const PurpleConvChat *chat)
purple_conv_chat_get_ignored	conversation.h	/^GList *purple_conv_chat_get_ignored(const PurpleConvChat *chat);$/;"	p	signature:(const PurpleConvChat *chat)
purple_conv_chat_get_ignored_user	conversation.c	/^purple_conv_chat_get_ignored_user(const PurpleConvChat *chat, const char *user)$/;"	f	signature:(const PurpleConvChat *chat, const char *user)
purple_conv_chat_get_ignored_user	conversation.h	/^const char *purple_conv_chat_get_ignored_user(const PurpleConvChat *chat,$/;"	p	signature:(const PurpleConvChat *chat, const char *user)
purple_conv_chat_get_nick	conversation.c	/^const char *purple_conv_chat_get_nick(PurpleConvChat *chat) {$/;"	f	signature:(PurpleConvChat *chat)
purple_conv_chat_get_nick	conversation.h	/^const char *purple_conv_chat_get_nick(PurpleConvChat *chat);$/;"	p	signature:(PurpleConvChat *chat)
purple_conv_chat_get_topic	conversation.c	/^purple_conv_chat_get_topic(const PurpleConvChat *chat)$/;"	f	signature:(const PurpleConvChat *chat)
purple_conv_chat_get_topic	conversation.h	/^const char *purple_conv_chat_get_topic(const PurpleConvChat *chat);$/;"	p	signature:(const PurpleConvChat *chat)
purple_conv_chat_get_users	conversation.c	/^purple_conv_chat_get_users(const PurpleConvChat *chat)$/;"	f	signature:(const PurpleConvChat *chat)
purple_conv_chat_get_users	conversation.h	/^GList *purple_conv_chat_get_users(const PurpleConvChat *chat);$/;"	p	signature:(const PurpleConvChat *chat)
purple_conv_chat_has_left	conversation.c	/^purple_conv_chat_has_left(PurpleConvChat *chat)$/;"	f	signature:(PurpleConvChat *chat)
purple_conv_chat_has_left	conversation.h	/^gboolean purple_conv_chat_has_left(PurpleConvChat *chat);$/;"	p	signature:(PurpleConvChat *chat)
purple_conv_chat_ignore	conversation.c	/^purple_conv_chat_ignore(PurpleConvChat *chat, const char *name)$/;"	f	signature:(PurpleConvChat *chat, const char *name)
purple_conv_chat_ignore	conversation.h	/^void purple_conv_chat_ignore(PurpleConvChat *chat, const char *name);$/;"	p	signature:(PurpleConvChat *chat, const char *name)
purple_conv_chat_invite_user	conversation.c	/^void purple_conv_chat_invite_user(PurpleConvChat *chat, const char *user,$/;"	f	signature:(PurpleConvChat *chat, const char *user, const char *message, gboolean confirm)
purple_conv_chat_invite_user	conversation.h	/^void purple_conv_chat_invite_user(PurpleConvChat *chat, const char *user,$/;"	p	signature:(PurpleConvChat *chat, const char *user, const char *message, gboolean confirm)
purple_conv_chat_is_user_ignored	conversation.c	/^purple_conv_chat_is_user_ignored(const PurpleConvChat *chat, const char *user)$/;"	f	signature:(const PurpleConvChat *chat, const char *user)
purple_conv_chat_is_user_ignored	conversation.h	/^gboolean purple_conv_chat_is_user_ignored(const PurpleConvChat *chat,$/;"	p	signature:(const PurpleConvChat *chat, const char *user)
purple_conv_chat_left	conversation.c	/^purple_conv_chat_left(PurpleConvChat *chat)$/;"	f	signature:(PurpleConvChat *chat)
purple_conv_chat_left	conversation.h	/^void purple_conv_chat_left(PurpleConvChat *chat);$/;"	p	signature:(PurpleConvChat *chat)
purple_conv_chat_remove_user	conversation.c	/^purple_conv_chat_remove_user(PurpleConvChat *chat, const char *user, const char *reason)$/;"	f	signature:(PurpleConvChat *chat, const char *user, const char *reason)
purple_conv_chat_remove_user	conversation.h	/^void purple_conv_chat_remove_user(PurpleConvChat *chat, const char *user,$/;"	p	signature:(PurpleConvChat *chat, const char *user, const char *reason)
purple_conv_chat_remove_users	conversation.c	/^purple_conv_chat_remove_users(PurpleConvChat *chat, GList *users, const char *reason)$/;"	f	signature:(PurpleConvChat *chat, GList *users, const char *reason)
purple_conv_chat_remove_users	conversation.h	/^void purple_conv_chat_remove_users(PurpleConvChat *chat, GList *users,$/;"	p	signature:(PurpleConvChat *chat, GList *users, const char *reason)
purple_conv_chat_rename_user	conversation.c	/^purple_conv_chat_rename_user(PurpleConvChat *chat, const char *old_user,$/;"	f	signature:(PurpleConvChat *chat, const char *old_user, const char *new_user)
purple_conv_chat_rename_user	conversation.h	/^void purple_conv_chat_rename_user(PurpleConvChat *chat, const char *old_user,$/;"	p	signature:(PurpleConvChat *chat, const char *old_user, const char *new_user)
purple_conv_chat_send	conversation.c	/^purple_conv_chat_send(PurpleConvChat *chat, const char *message)$/;"	f	signature:(PurpleConvChat *chat, const char *message)
purple_conv_chat_send	conversation.h	/^void purple_conv_chat_send(PurpleConvChat *chat, const char *message);$/;"	p	signature:(PurpleConvChat *chat, const char *message)
purple_conv_chat_send_with_flags	conversation.c	/^purple_conv_chat_send_with_flags(PurpleConvChat *chat, const char *message, PurpleMessageFlags flags)$/;"	f	signature:(PurpleConvChat *chat, const char *message, PurpleMessageFlags flags)
purple_conv_chat_send_with_flags	conversation.h	/^void purple_conv_chat_send_with_flags(PurpleConvChat *chat, const char *message, PurpleMessageFlags flags);$/;"	p	signature:(PurpleConvChat *chat, const char *message, PurpleMessageFlags flags)
purple_conv_chat_set_id	conversation.c	/^purple_conv_chat_set_id(PurpleConvChat *chat, int id)$/;"	f	signature:(PurpleConvChat *chat, int id)
purple_conv_chat_set_id	conversation.h	/^void purple_conv_chat_set_id(PurpleConvChat *chat, int id);$/;"	p	signature:(PurpleConvChat *chat, int id)
purple_conv_chat_set_ignored	conversation.c	/^purple_conv_chat_set_ignored(PurpleConvChat *chat, GList *ignored)$/;"	f	signature:(PurpleConvChat *chat, GList *ignored)
purple_conv_chat_set_ignored	conversation.h	/^GList *purple_conv_chat_set_ignored(PurpleConvChat *chat, GList *ignored);$/;"	p	signature:(PurpleConvChat *chat, GList *ignored)
purple_conv_chat_set_nick	conversation.c	/^void purple_conv_chat_set_nick(PurpleConvChat *chat, const char *nick) {$/;"	f	signature:(PurpleConvChat *chat, const char *nick)
purple_conv_chat_set_nick	conversation.h	/^void purple_conv_chat_set_nick(PurpleConvChat *chat, const char *nick);$/;"	p	signature:(PurpleConvChat *chat, const char *nick)
purple_conv_chat_set_topic	conversation.c	/^purple_conv_chat_set_topic(PurpleConvChat *chat, const char *who, const char *topic)$/;"	f	signature:(PurpleConvChat *chat, const char *who, const char *topic)
purple_conv_chat_set_topic	conversation.h	/^void purple_conv_chat_set_topic(PurpleConvChat *chat, const char *who,$/;"	p	signature:(PurpleConvChat *chat, const char *who, const char *topic)
purple_conv_chat_set_users	conversation.c	/^purple_conv_chat_set_users(PurpleConvChat *chat, GList *users)$/;"	f	signature:(PurpleConvChat *chat, GList *users)
purple_conv_chat_set_users	conversation.h	/^GList *purple_conv_chat_set_users(PurpleConvChat *chat, GList *users);$/;"	p	signature:(PurpleConvChat *chat, GList *users)
purple_conv_chat_unignore	conversation.c	/^purple_conv_chat_unignore(PurpleConvChat *chat, const char *name)$/;"	f	signature:(PurpleConvChat *chat, const char *name)
purple_conv_chat_unignore	conversation.h	/^void purple_conv_chat_unignore(PurpleConvChat *chat, const char *name);$/;"	p	signature:(PurpleConvChat *chat, const char *name)
purple_conv_chat_user_get_flags	conversation.c	/^purple_conv_chat_user_get_flags(PurpleConvChat *chat, const char *user)$/;"	f	signature:(PurpleConvChat *chat, const char *user)
purple_conv_chat_user_get_flags	conversation.h	/^PurpleConvChatBuddyFlags purple_conv_chat_user_get_flags(PurpleConvChat *chat,$/;"	p	signature:(PurpleConvChat *chat, const char *user)
purple_conv_chat_user_set_flags	conversation.c	/^purple_conv_chat_user_set_flags(PurpleConvChat *chat, const char *user,$/;"	f	signature:(PurpleConvChat *chat, const char *user, PurpleConvChatBuddyFlags flags)
purple_conv_chat_user_set_flags	conversation.h	/^void purple_conv_chat_user_set_flags(PurpleConvChat *chat, const char *user,$/;"	p	signature:(PurpleConvChat *chat, const char *user, PurpleConvChatBuddyFlags flags)
purple_conv_chat_write	conversation.c	/^purple_conv_chat_write(PurpleConvChat *chat, const char *who, const char *message,$/;"	f	signature:(PurpleConvChat *chat, const char *who, const char *message, PurpleMessageFlags flags, time_t mtime)
purple_conv_chat_write	conversation.h	/^void purple_conv_chat_write(PurpleConvChat *chat, const char *who,$/;"	p	signature:(PurpleConvChat *chat, const char *who, const char *message, PurpleMessageFlags flags, time_t mtime)
purple_conv_custom_smiley_add	conversation.c	/^purple_conv_custom_smiley_add(PurpleConversation *conv, const char *smile,$/;"	f	signature:(PurpleConversation *conv, const char *smile, const char *cksum_type, const char *chksum, gboolean remote)
purple_conv_custom_smiley_add	conversation.h	/^gboolean purple_conv_custom_smiley_add(PurpleConversation *conv, const char *smile,$/;"	p	signature:(PurpleConversation *conv, const char *smile, const char *cksum_type, const char *chksum, gboolean remote)
purple_conv_custom_smiley_close	conversation.c	/^purple_conv_custom_smiley_close(PurpleConversation *conv, const char *smile)$/;"	f	signature:(PurpleConversation *conv, const char *smile)
purple_conv_custom_smiley_close	conversation.h	/^void purple_conv_custom_smiley_close(PurpleConversation *conv, const char *smile);$/;"	p	signature:(PurpleConversation *conv, const char *smile)
purple_conv_custom_smiley_write	conversation.c	/^purple_conv_custom_smiley_write(PurpleConversation *conv, const char *smile,$/;"	f	signature:(PurpleConversation *conv, const char *smile, const guchar *data, gsize size)
purple_conv_custom_smiley_write	conversation.h	/^void purple_conv_custom_smiley_write(PurpleConversation *conv,$/;"	p	signature:(PurpleConversation *conv, const char *smile, const guchar *data, gsize size)
purple_conv_im_get_conversation	conversation.c	/^purple_conv_im_get_conversation(const PurpleConvIm *im)$/;"	f	signature:(const PurpleConvIm *im)
purple_conv_im_get_conversation	conversation.h	/^PurpleConversation *purple_conv_im_get_conversation(const PurpleConvIm *im);$/;"	p	signature:(const PurpleConvIm *im)
purple_conv_im_get_icon	conversation.c	/^purple_conv_im_get_icon(const PurpleConvIm *im)$/;"	f	signature:(const PurpleConvIm *im)
purple_conv_im_get_icon	conversation.h	/^PurpleBuddyIcon *purple_conv_im_get_icon(const PurpleConvIm *im);$/;"	p	signature:(const PurpleConvIm *im)
purple_conv_im_get_send_typed_timeout	conversation.c	/^purple_conv_im_get_send_typed_timeout(const PurpleConvIm *im)$/;"	f	signature:(const PurpleConvIm *im)
purple_conv_im_get_send_typed_timeout	conversation.h	/^guint purple_conv_im_get_send_typed_timeout(const PurpleConvIm *im);$/;"	p	signature:(const PurpleConvIm *im)
purple_conv_im_get_type_again	conversation.c	/^purple_conv_im_get_type_again(const PurpleConvIm *im)$/;"	f	signature:(const PurpleConvIm *im)
purple_conv_im_get_type_again	conversation.h	/^time_t purple_conv_im_get_type_again(const PurpleConvIm *im);$/;"	p	signature:(const PurpleConvIm *im)
purple_conv_im_get_typing_state	conversation.c	/^purple_conv_im_get_typing_state(const PurpleConvIm *im)$/;"	f	signature:(const PurpleConvIm *im)
purple_conv_im_get_typing_state	conversation.h	/^PurpleTypingState purple_conv_im_get_typing_state(const PurpleConvIm *im);$/;"	p	signature:(const PurpleConvIm *im)
purple_conv_im_get_typing_timeout	conversation.c	/^purple_conv_im_get_typing_timeout(const PurpleConvIm *im)$/;"	f	signature:(const PurpleConvIm *im)
purple_conv_im_get_typing_timeout	conversation.h	/^guint purple_conv_im_get_typing_timeout(const PurpleConvIm *im);$/;"	p	signature:(const PurpleConvIm *im)
purple_conv_im_send	conversation.c	/^purple_conv_im_send(PurpleConvIm *im, const char *message)$/;"	f	signature:(PurpleConvIm *im, const char *message)
purple_conv_im_send	conversation.h	/^void purple_conv_im_send(PurpleConvIm *im, const char *message);$/;"	p	signature:(PurpleConvIm *im, const char *message)
purple_conv_im_send_with_flags	conversation.c	/^purple_conv_im_send_with_flags(PurpleConvIm *im, const char *message, PurpleMessageFlags flags)$/;"	f	signature:(PurpleConvIm *im, const char *message, PurpleMessageFlags flags)
purple_conv_im_send_with_flags	conversation.h	/^void purple_conv_im_send_with_flags(PurpleConvIm *im, const char *message, PurpleMessageFlags flags);$/;"	p	signature:(PurpleConvIm *im, const char *message, PurpleMessageFlags flags)
purple_conv_im_set_icon	conversation.c	/^purple_conv_im_set_icon(PurpleConvIm *im, PurpleBuddyIcon *icon)$/;"	f	signature:(PurpleConvIm *im, PurpleBuddyIcon *icon)
purple_conv_im_set_icon	conversation.h	/^void purple_conv_im_set_icon(PurpleConvIm *im, PurpleBuddyIcon *icon);$/;"	p	signature:(PurpleConvIm *im, PurpleBuddyIcon *icon)
purple_conv_im_set_type_again	conversation.c	/^purple_conv_im_set_type_again(PurpleConvIm *im, unsigned int val)$/;"	f	signature:(PurpleConvIm *im, unsigned int val)
purple_conv_im_set_type_again	conversation.h	/^void purple_conv_im_set_type_again(PurpleConvIm *im, unsigned int val);$/;"	p	signature:(PurpleConvIm *im, unsigned int val)
purple_conv_im_set_typing_state	conversation.c	/^purple_conv_im_set_typing_state(PurpleConvIm *im, PurpleTypingState state)$/;"	f	signature:(PurpleConvIm *im, PurpleTypingState state)
purple_conv_im_set_typing_state	conversation.h	/^void purple_conv_im_set_typing_state(PurpleConvIm *im, PurpleTypingState state);$/;"	p	signature:(PurpleConvIm *im, PurpleTypingState state)
purple_conv_im_start_send_typed_timeout	conversation.c	/^purple_conv_im_start_send_typed_timeout(PurpleConvIm *im)$/;"	f	signature:(PurpleConvIm *im)
purple_conv_im_start_send_typed_timeout	conversation.h	/^void purple_conv_im_start_send_typed_timeout(PurpleConvIm *im);$/;"	p	signature:(PurpleConvIm *im)
purple_conv_im_start_typing_timeout	conversation.c	/^purple_conv_im_start_typing_timeout(PurpleConvIm *im, int timeout)$/;"	f	signature:(PurpleConvIm *im, int timeout)
purple_conv_im_start_typing_timeout	conversation.h	/^void purple_conv_im_start_typing_timeout(PurpleConvIm *im, int timeout);$/;"	p	signature:(PurpleConvIm *im, int timeout)
purple_conv_im_stop_send_typed_timeout	conversation.c	/^purple_conv_im_stop_send_typed_timeout(PurpleConvIm *im)$/;"	f	signature:(PurpleConvIm *im)
purple_conv_im_stop_send_typed_timeout	conversation.h	/^void purple_conv_im_stop_send_typed_timeout(PurpleConvIm *im);$/;"	p	signature:(PurpleConvIm *im)
purple_conv_im_stop_typing_timeout	conversation.c	/^purple_conv_im_stop_typing_timeout(PurpleConvIm *im)$/;"	f	signature:(PurpleConvIm *im)
purple_conv_im_stop_typing_timeout	conversation.h	/^void purple_conv_im_stop_typing_timeout(PurpleConvIm *im);$/;"	p	signature:(PurpleConvIm *im)
purple_conv_im_update_typing	conversation.c	/^purple_conv_im_update_typing(PurpleConvIm *im)$/;"	f	signature:(PurpleConvIm *im)
purple_conv_im_update_typing	conversation.h	/^void purple_conv_im_update_typing(PurpleConvIm *im);$/;"	p	signature:(PurpleConvIm *im)
purple_conv_im_write	conversation.c	/^purple_conv_im_write(PurpleConvIm *im, const char *who, const char *message,$/;"	f	signature:(PurpleConvIm *im, const char *who, const char *message, PurpleMessageFlags flags, time_t mtime)
purple_conv_im_write	conversation.h	/^void purple_conv_im_write(PurpleConvIm *im, const char *who,$/;"	p	signature:(PurpleConvIm *im, const char *who, const char *message, PurpleMessageFlags flags, time_t mtime)
purple_conv_present_error	conversation.c	/^gboolean purple_conv_present_error(const char *who, PurpleAccount *account, const char *what)$/;"	f	signature:(const char *who, PurpleAccount *account, const char *what)
purple_conv_present_error	conversation.h	/^gboolean purple_conv_present_error(const char *who, PurpleAccount *account, const char *what);$/;"	p	signature:(const char *who, PurpleAccount *account, const char *what)
purple_conv_send_confirm	conversation.c	/^purple_conv_send_confirm(PurpleConversation *conv, const char *message)$/;"	f	signature:(PurpleConversation *conv, const char *message)
purple_conv_send_confirm	conversation.h	/^void purple_conv_send_confirm(PurpleConversation *conv, const char *message);$/;"	p	signature:(PurpleConversation *conv, const char *message)
purple_conv_send_confirm_cb	conversation.c	/^purple_conv_send_confirm_cb(gpointer *data)$/;"	f	file:	signature:(gpointer *data)
purple_conversation_autoset_title	conversation.c	/^purple_conversation_autoset_title(PurpleConversation *conv)$/;"	f	signature:(PurpleConversation *conv)
purple_conversation_autoset_title	conversation.h	/^void purple_conversation_autoset_title(PurpleConversation *conv);$/;"	p	signature:(PurpleConversation *conv)
purple_conversation_chat_cleanup_for_rejoin	conversation.c	/^purple_conversation_chat_cleanup_for_rejoin(PurpleConversation *conv)$/;"	f	file:	signature:(PurpleConversation *conv)
purple_conversation_clear_message_history	conversation.c	/^void purple_conversation_clear_message_history(PurpleConversation *conv)$/;"	f	signature:(PurpleConversation *conv)
purple_conversation_clear_message_history	conversation.h	/^void purple_conversation_clear_message_history(PurpleConversation *conv);$/;"	p	signature:(PurpleConversation *conv)
purple_conversation_close_logs	conversation.c	/^purple_conversation_close_logs(PurpleConversation *conv)$/;"	f	signature:(PurpleConversation *conv)
purple_conversation_close_logs	conversation.h	/^void purple_conversation_close_logs(PurpleConversation *conv);$/;"	p	signature:(PurpleConversation *conv)
purple_conversation_destroy	conversation.c	/^purple_conversation_destroy(PurpleConversation *conv)$/;"	f	signature:(PurpleConversation *conv)
purple_conversation_destroy	conversation.h	/^void purple_conversation_destroy(PurpleConversation *conv);$/;"	p	signature:(PurpleConversation *conv)
purple_conversation_do_command	conversation.c	/^purple_conversation_do_command(PurpleConversation *conv, const gchar *cmdline,$/;"	f	signature:(PurpleConversation *conv, const gchar *cmdline, const gchar *markup, gchar **error)
purple_conversation_do_command	conversation.h	/^gboolean purple_conversation_do_command(PurpleConversation *conv, const gchar *cmdline, const gchar *markup, gchar **error);$/;"	p	signature:(PurpleConversation *conv, const gchar *cmdline, const gchar *markup, gchar **error)
purple_conversation_foreach	conversation.c	/^purple_conversation_foreach(void (*func)(PurpleConversation *conv))$/;"	f	signature:(void (*func)(PurpleConversation *conv))
purple_conversation_foreach	conversation.h	/^void purple_conversation_foreach(void (*func)(PurpleConversation *conv));$/;"	p	signature:(void (*func)(PurpleConversation *conv))
purple_conversation_get_account	conversation.c	/^purple_conversation_get_account(const PurpleConversation *conv)$/;"	f	signature:(const PurpleConversation *conv)
purple_conversation_get_account	conversation.h	/^PurpleAccount *purple_conversation_get_account(const PurpleConversation *conv);$/;"	p	signature:(const PurpleConversation *conv)
purple_conversation_get_chat_data	conversation.c	/^purple_conversation_get_chat_data(const PurpleConversation *conv)$/;"	f	signature:(const PurpleConversation *conv)
purple_conversation_get_chat_data	conversation.h	/^PurpleConvChat *purple_conversation_get_chat_data(const PurpleConversation *conv);$/;"	p	signature:(const PurpleConversation *conv)
purple_conversation_get_data	conversation.c	/^purple_conversation_get_data(PurpleConversation *conv, const char *key)$/;"	f	signature:(PurpleConversation *conv, const char *key)
purple_conversation_get_data	conversation.h	/^gpointer purple_conversation_get_data(PurpleConversation *conv, const char *key);$/;"	p	signature:(PurpleConversation *conv, const char *key)
purple_conversation_get_extended_menu	conversation.c	/^purple_conversation_get_extended_menu(PurpleConversation *conv)$/;"	f	signature:(PurpleConversation *conv)
purple_conversation_get_extended_menu	conversation.h	/^GList * purple_conversation_get_extended_menu(PurpleConversation *conv);$/;"	p	signature:(PurpleConversation *conv)
purple_conversation_get_features	conversation.c	/^purple_conversation_get_features(PurpleConversation *conv)$/;"	f	signature:(PurpleConversation *conv)
purple_conversation_get_features	conversation.h	/^PurpleConnectionFlags purple_conversation_get_features(PurpleConversation *conv);$/;"	p	signature:(PurpleConversation *conv)
purple_conversation_get_gc	conversation.c	/^purple_conversation_get_gc(const PurpleConversation *conv)$/;"	f	signature:(const PurpleConversation *conv)
purple_conversation_get_gc	conversation.h	/^PurpleConnection *purple_conversation_get_gc(const PurpleConversation *conv);$/;"	p	signature:(const PurpleConversation *conv)
purple_conversation_get_im_data	conversation.c	/^purple_conversation_get_im_data(const PurpleConversation *conv)$/;"	f	signature:(const PurpleConversation *conv)
purple_conversation_get_im_data	conversation.h	/^PurpleConvIm *purple_conversation_get_im_data(const PurpleConversation *conv);$/;"	p	signature:(const PurpleConversation *conv)
purple_conversation_get_message_history	conversation.c	/^GList *purple_conversation_get_message_history(PurpleConversation *conv)$/;"	f	signature:(PurpleConversation *conv)
purple_conversation_get_message_history	conversation.h	/^GList *purple_conversation_get_message_history(PurpleConversation *conv);$/;"	p	signature:(PurpleConversation *conv)
purple_conversation_get_name	conversation.c	/^purple_conversation_get_name(const PurpleConversation *conv)$/;"	f	signature:(const PurpleConversation *conv)
purple_conversation_get_name	conversation.h	/^const char *purple_conversation_get_name(const PurpleConversation *conv);$/;"	p	signature:(const PurpleConversation *conv)
purple_conversation_get_title	conversation.c	/^purple_conversation_get_title(const PurpleConversation *conv)$/;"	f	signature:(const PurpleConversation *conv)
purple_conversation_get_title	conversation.h	/^const char *purple_conversation_get_title(const PurpleConversation *conv);$/;"	p	signature:(const PurpleConversation *conv)
purple_conversation_get_type	conversation.c	/^purple_conversation_get_type(const PurpleConversation *conv)$/;"	f	signature:(const PurpleConversation *conv)
purple_conversation_get_type	conversation.h	/^PurpleConversationType purple_conversation_get_type(const PurpleConversation *conv);$/;"	p	signature:(const PurpleConversation *conv)
purple_conversation_get_ui_ops	conversation.c	/^purple_conversation_get_ui_ops(const PurpleConversation *conv)$/;"	f	signature:(const PurpleConversation *conv)
purple_conversation_get_ui_ops	conversation.h	/^PurpleConversationUiOps *purple_conversation_get_ui_ops($/;"	p	signature:( const PurpleConversation *conv)
purple_conversation_has_focus	conversation.c	/^purple_conversation_has_focus(PurpleConversation *conv)$/;"	f	signature:(PurpleConversation *conv)
purple_conversation_has_focus	conversation.h	/^gboolean purple_conversation_has_focus(PurpleConversation *conv);$/;"	p	signature:(PurpleConversation *conv)
purple_conversation_is_logging	conversation.c	/^purple_conversation_is_logging(const PurpleConversation *conv)$/;"	f	signature:(const PurpleConversation *conv)
purple_conversation_is_logging	conversation.h	/^gboolean purple_conversation_is_logging(const PurpleConversation *conv);$/;"	p	signature:(const PurpleConversation *conv)
purple_conversation_message_get_flags	conversation.c	/^PurpleMessageFlags purple_conversation_message_get_flags(PurpleConvMessage *msg)$/;"	f	signature:(PurpleConvMessage *msg)
purple_conversation_message_get_flags	conversation.h	/^PurpleMessageFlags purple_conversation_message_get_flags(PurpleConvMessage *msg);$/;"	p	signature:(PurpleConvMessage *msg)
purple_conversation_message_get_message	conversation.c	/^const char *purple_conversation_message_get_message(PurpleConvMessage *msg)$/;"	f	signature:(PurpleConvMessage *msg)
purple_conversation_message_get_message	conversation.h	/^const char *purple_conversation_message_get_message(PurpleConvMessage *msg);$/;"	p	signature:(PurpleConvMessage *msg)
purple_conversation_message_get_sender	conversation.c	/^const char *purple_conversation_message_get_sender(PurpleConvMessage *msg)$/;"	f	signature:(PurpleConvMessage *msg)
purple_conversation_message_get_sender	conversation.h	/^const char *purple_conversation_message_get_sender(PurpleConvMessage *msg);$/;"	p	signature:(PurpleConvMessage *msg)
purple_conversation_message_get_timestamp	conversation.c	/^time_t purple_conversation_message_get_timestamp(PurpleConvMessage *msg)$/;"	f	signature:(PurpleConvMessage *msg)
purple_conversation_message_get_timestamp	conversation.h	/^time_t purple_conversation_message_get_timestamp(PurpleConvMessage *msg);$/;"	p	signature:(PurpleConvMessage *msg)
purple_conversation_new	conversation.c	/^purple_conversation_new(PurpleConversationType type, PurpleAccount *account,$/;"	f	signature:(PurpleConversationType type, PurpleAccount *account, const char *name)
purple_conversation_new	conversation.h	/^PurpleConversation *purple_conversation_new(PurpleConversationType type,$/;"	p	signature:(PurpleConversationType type, PurpleAccount *account, const char *name)
purple_conversation_present	conversation.c	/^purple_conversation_present(PurpleConversation *conv) {$/;"	f	signature:(PurpleConversation *conv)
purple_conversation_present	conversation.h	/^void purple_conversation_present(PurpleConversation *conv);$/;"	p	signature:(PurpleConversation *conv)
purple_conversation_set_account	conversation.c	/^purple_conversation_set_account(PurpleConversation *conv, PurpleAccount *account)$/;"	f	signature:(PurpleConversation *conv, PurpleAccount *account)
purple_conversation_set_account	conversation.h	/^void purple_conversation_set_account(PurpleConversation *conv,$/;"	p	signature:(PurpleConversation *conv, PurpleAccount *account)
purple_conversation_set_data	conversation.c	/^purple_conversation_set_data(PurpleConversation *conv, const char *key,$/;"	f	signature:(PurpleConversation *conv, const char *key, gpointer data)
purple_conversation_set_data	conversation.h	/^void purple_conversation_set_data(PurpleConversation *conv, const char *key,$/;"	p	signature:(PurpleConversation *conv, const char *key, gpointer data)
purple_conversation_set_features	conversation.c	/^purple_conversation_set_features(PurpleConversation *conv, PurpleConnectionFlags features)$/;"	f	signature:(PurpleConversation *conv, PurpleConnectionFlags features)
purple_conversation_set_features	conversation.h	/^void purple_conversation_set_features(PurpleConversation *conv,$/;"	p	signature:(PurpleConversation *conv, PurpleConnectionFlags features)
purple_conversation_set_logging	conversation.c	/^purple_conversation_set_logging(PurpleConversation *conv, gboolean log)$/;"	f	signature:(PurpleConversation *conv, gboolean log)
purple_conversation_set_logging	conversation.h	/^void purple_conversation_set_logging(PurpleConversation *conv, gboolean log);$/;"	p	signature:(PurpleConversation *conv, gboolean log)
purple_conversation_set_name	conversation.c	/^purple_conversation_set_name(PurpleConversation *conv, const char *name)$/;"	f	signature:(PurpleConversation *conv, const char *name)
purple_conversation_set_name	conversation.h	/^void purple_conversation_set_name(PurpleConversation *conv, const char *name);$/;"	p	signature:(PurpleConversation *conv, const char *name)
purple_conversation_set_title	conversation.c	/^purple_conversation_set_title(PurpleConversation *conv, const char *title)$/;"	f	signature:(PurpleConversation *conv, const char *title)
purple_conversation_set_title	conversation.h	/^void purple_conversation_set_title(PurpleConversation *conv, const char *title);$/;"	p	signature:(PurpleConversation *conv, const char *title)
purple_conversation_set_ui_ops	conversation.c	/^purple_conversation_set_ui_ops(PurpleConversation *conv,$/;"	f	signature:(PurpleConversation *conv, PurpleConversationUiOps *ops)
purple_conversation_set_ui_ops	conversation.h	/^void purple_conversation_set_ui_ops(PurpleConversation *conv,$/;"	p	signature:(PurpleConversation *conv, PurpleConversationUiOps *ops)
purple_conversation_update	conversation.c	/^purple_conversation_update(PurpleConversation *conv, PurpleConvUpdateType type)$/;"	f	signature:(PurpleConversation *conv, PurpleConvUpdateType type)
purple_conversation_update	conversation.h	/^void purple_conversation_update(PurpleConversation *conv, PurpleConvUpdateType type);$/;"	p	signature:(PurpleConversation *conv, PurpleConvUpdateType type)
purple_conversation_write	conversation.c	/^purple_conversation_write(PurpleConversation *conv, const char *who,$/;"	f	signature:(PurpleConversation *conv, const char *who, const char *message, PurpleMessageFlags flags, time_t mtime)
purple_conversation_write	conversation.h	/^void purple_conversation_write(PurpleConversation *conv, const char *who,$/;"	p	signature:(PurpleConversation *conv, const char *who, const char *message, PurpleMessageFlags flags, time_t mtime)
purple_conversations_get_handle	conversation.c	/^purple_conversations_get_handle(void)$/;"	f	signature:(void)
purple_conversations_get_handle	conversation.h	/^void *purple_conversations_get_handle(void);$/;"	p	signature:(void)
purple_conversations_init	conversation.c	/^purple_conversations_init(void)$/;"	f	signature:(void)
purple_conversations_init	conversation.h	/^void purple_conversations_init(void);$/;"	p	signature:(void)
purple_conversations_set_ui_ops	conversation.c	/^purple_conversations_set_ui_ops(PurpleConversationUiOps *ops)$/;"	f	signature:(PurpleConversationUiOps *ops)
purple_conversations_set_ui_ops	conversation.h	/^void purple_conversations_set_ui_ops(PurpleConversationUiOps *ops);$/;"	p	signature:(PurpleConversationUiOps *ops)
purple_conversations_uninit	conversation.c	/^purple_conversations_uninit(void)$/;"	f	signature:(void)
purple_conversations_uninit	conversation.h	/^void purple_conversations_uninit(void);$/;"	p	signature:(void)
purple_core_ensure_single_instance	core.c	/^purple_core_ensure_single_instance()$/;"	f
purple_core_ensure_single_instance	core.h	/^gboolean purple_core_ensure_single_instance(void);$/;"	p	signature:(void)
purple_core_get_ui	core.c	/^purple_core_get_ui(void)$/;"	f	signature:(void)
purple_core_get_ui	core.h	/^const char *purple_core_get_ui(void);$/;"	p	signature:(void)
purple_core_get_ui_info	core.c	/^GHashTable* purple_core_get_ui_info() {$/;"	f
purple_core_get_ui_info	core.h	/^GHashTable* purple_core_get_ui_info(void);$/;"	p	signature:(void)
purple_core_get_ui_ops	core.c	/^purple_core_get_ui_ops(void)$/;"	f	signature:(void)
purple_core_get_ui_ops	core.h	/^PurpleCoreUiOps *purple_core_get_ui_ops(void);$/;"	p	signature:(void)
purple_core_get_version	core.c	/^purple_core_get_version(void)$/;"	f	signature:(void)
purple_core_get_version	core.h	/^const char *purple_core_get_version(void);$/;"	p	signature:(void)
purple_core_init	core.c	/^purple_core_init(const char *ui)$/;"	f	signature:(const char *ui)
purple_core_init	core.h	/^gboolean purple_core_init(const char *ui);$/;"	p	signature:(const char *ui)
purple_core_migrate	core.c	/^purple_core_migrate(void)$/;"	f	signature:(void)
purple_core_migrate	core.h	/^gboolean purple_core_migrate(void);$/;"	p	signature:(void)
purple_core_quit	core.c	/^purple_core_quit(void)$/;"	f	signature:(void)
purple_core_quit	core.h	/^void purple_core_quit(void);$/;"	p	signature:(void)
purple_core_quit_cb	core.c	/^purple_core_quit_cb(gpointer unused)$/;"	f	signature:(gpointer unused)
purple_core_quit_cb	core.h	/^gboolean purple_core_quit_cb(gpointer unused);$/;"	p	signature:(gpointer unused)
purple_core_set_ui_ops	core.c	/^purple_core_set_ui_ops(PurpleCoreUiOps *ops)$/;"	f	signature:(PurpleCoreUiOps *ops)
purple_core_set_ui_ops	core.h	/^void purple_core_set_ui_ops(PurpleCoreUiOps *ops);$/;"	p	signature:(PurpleCoreUiOps *ops)
purple_date_format_full	util.c	/^purple_date_format_full(const struct tm *tm)$/;"	f	signature:(const struct tm *tm)
purple_date_format_full	util.h	/^const char *purple_date_format_full(const struct tm *tm);$/;"	p	signature:(const struct tm *tm)
purple_date_format_long	util.c	/^purple_date_format_long(const struct tm *tm)$/;"	f	signature:(const struct tm *tm)
purple_date_format_long	util.h	/^const char *purple_date_format_long(const struct tm *tm);$/;"	p	signature:(const struct tm *tm)
purple_date_format_short	util.c	/^purple_date_format_short(const struct tm *tm)$/;"	f	signature:(const struct tm *tm)
purple_date_format_short	util.h	/^const char *purple_date_format_short(const struct tm *tm);$/;"	p	signature:(const struct tm *tm)
purple_dbus_connection	dbus-server.c	/^static DBusConnection *purple_dbus_connection;$/;"	v	file:
purple_dbus_convert_signal_name	dbus-server.c	/^purple_dbus_convert_signal_name(const char *purple_name)$/;"	f	file:	signature:(const char *purple_name)
purple_dbus_dispatch	dbus-server.c	/^purple_dbus_dispatch(DBusConnection *connection,$/;"	f	file:	signature:(DBusConnection *connection, DBusMessage *message, void *user_data)
purple_dbus_dispatch_cb	dbus-server.c	/^purple_dbus_dispatch_cb(DBusConnection *connection,$/;"	f	file:	signature:(DBusConnection *connection, DBusMessage *message, void *user_data)
purple_dbus_dispatch_init	dbus-server.c	/^purple_dbus_dispatch_init(void)$/;"	f	file:	signature:(void)
purple_dbus_get_connection	dbus-bindings.h	/^DBusConnection *purple_dbus_get_connection(void);$/;"	p	signature:(void)
purple_dbus_get_connection	dbus-server.c	/^purple_dbus_get_connection(void)$/;"	f	signature:(void)
purple_dbus_get_handle	dbus-server.c	/^purple_dbus_get_handle(void)$/;"	f	signature:(void)
purple_dbus_get_handle	dbus-server.h	/^void *purple_dbus_get_handle(void);$/;"	p	signature:(void)
purple_dbus_get_init_error	dbus-server.c	/^purple_dbus_get_init_error(void)$/;"	f	signature:(void)
purple_dbus_get_init_error	dbus-server.h	/^const char *purple_dbus_get_init_error(void);$/;"	p	signature:(void)
purple_dbus_id_to_pointer	dbus-bindings.h	/^gpointer purple_dbus_id_to_pointer(gint id, PurpleDBusType *type);$/;"	p	signature:(gint id, PurpleDBusType *type)
purple_dbus_id_to_pointer	dbus-server.c	/^purple_dbus_id_to_pointer(gint id, PurpleDBusType *type)$/;"	f	signature:(gint id, PurpleDBusType *type)
purple_dbus_id_to_pointer_error	dbus-bindings.h	/^gpointer purple_dbus_id_to_pointer_error(gint id, PurpleDBusType *type,$/;"	p	signature:(gint id, PurpleDBusType *type, const char *typename, DBusError *error)
purple_dbus_id_to_pointer_error	dbus-server.c	/^purple_dbus_id_to_pointer_error(gint id, PurpleDBusType *type,$/;"	f	signature:(gint id, PurpleDBusType *type, const char *typename, DBusError *error)
purple_dbus_init	dbus-server.c	/^purple_dbus_init(void)$/;"	f	signature:(void)
purple_dbus_init	dbus-server.h	/^void purple_dbus_init(void);$/;"	p	signature:(void)
purple_dbus_init_ids	dbus-server.c	/^purple_dbus_init_ids(void)$/;"	f	signature:(void)
purple_dbus_init_ids	dbus-server.h	/^void purple_dbus_init_ids(void);$/;"	p	signature:(void)
purple_dbus_introspect	dbus-server.c	/^static DBusMessage *purple_dbus_introspect(DBusMessage *message)$/;"	f	file:	signature:(DBusMessage *message)
purple_dbus_introspect_cb	dbus-server.c	/^purple_dbus_introspect_cb(GList **bindings_list, void *bindings)$/;"	f	file:	signature:(GList **bindings_list, void *bindings)
purple_dbus_is_owner	dbus-server.c	/^gboolean purple_dbus_is_owner(void)$/;"	f	signature:(void)
purple_dbus_is_owner	dbus-server.h	/^gboolean purple_dbus_is_owner(void);$/;"	p	signature:(void)
purple_dbus_iter_hash_table	dbus-bindings.h	/^GHashTable *purple_dbus_iter_hash_table(DBusMessageIter *iter, DBusError *error);$/;"	p	signature:(DBusMessageIter *iter, DBusError *error)
purple_dbus_iter_hash_table	dbus-server.c	/^purple_dbus_iter_hash_table(DBusMessageIter *iter, DBusError *error)$/;"	f	signature:(DBusMessageIter *iter, DBusError *error)
purple_dbus_message_append_purple_values	dbus-server.c	/^purple_dbus_message_append_purple_values(DBusMessageIter *iter,$/;"	f	file:	signature:(DBusMessageIter *iter, int number, PurpleValue **purple_values, va_list data)
purple_dbus_message_get_args	dbus-bindings.h	/^purple_dbus_message_get_args (DBusMessage     *message,$/;"	p	signature:(DBusMessage *message, DBusError *error, int first_arg_type, ...)
purple_dbus_message_get_args	dbus-server.c	/^purple_dbus_message_get_args(DBusMessage *message,$/;"	f	signature:(DBusMessage *message, DBusError *error, int first_arg_type, ...)
purple_dbus_message_get_args_valist	dbus-bindings.h	/^purple_dbus_message_get_args_valist (DBusMessage     *message,$/;"	p	signature:(DBusMessage *message, DBusError *error, int first_arg_type, va_list var_args)
purple_dbus_message_get_args_valist	dbus-server.c	/^purple_dbus_message_get_args_valist(DBusMessage *message,$/;"	f	signature:(DBusMessage *message, DBusError *error, int first_arg_type, va_list var_args)
purple_dbus_message_iter_get_args	dbus-bindings.h	/^purple_dbus_message_iter_get_args (DBusMessageIter *iter,$/;"	p	signature:(DBusMessageIter *iter, DBusError *error, int first_arg_type, ...)
purple_dbus_message_iter_get_args	dbus-server.c	/^purple_dbus_message_iter_get_args(DBusMessageIter *iter,$/;"	f	signature:(DBusMessageIter *iter, DBusError *error, int first_arg_type, ...)
purple_dbus_message_iter_get_args_valist	dbus-bindings.h	/^purple_dbus_message_iter_get_args_valist (DBusMessageIter *iter,$/;"	p	signature:(DBusMessageIter *iter, DBusError *error, int first_arg_type, va_list var_args)
purple_dbus_message_iter_get_args_valist	dbus-server.c	/^purple_dbus_message_iter_get_args_valist(DBusMessageIter *iter,$/;"	f	signature:(DBusMessageIter *iter, DBusError *error, int first_arg_type, va_list var_args)
purple_dbus_owner_user_dir	core.c	/^static char *purple_dbus_owner_user_dir(void)$/;"	f	file:	signature:(void)
purple_dbus_pointer_to_id	dbus-bindings.h	/^gint purple_dbus_pointer_to_id(gconstpointer node);$/;"	p	signature:(gconstpointer node)
purple_dbus_pointer_to_id	dbus-server.c	/^purple_dbus_pointer_to_id(gconstpointer node)$/;"	f	signature:(gconstpointer node)
purple_dbus_pointer_to_id_error	dbus-bindings.h	/^gint  purple_dbus_pointer_to_id_error(gconstpointer ptr, DBusError *error);$/;"	p	signature:(gconstpointer ptr, DBusError *error)
purple_dbus_pointer_to_id_error	dbus-server.c	/^purple_dbus_pointer_to_id_error(gconstpointer ptr, DBusError *error)$/;"	f	signature:(gconstpointer ptr, DBusError *error)
purple_dbus_register_bindings	dbus-bindings.h	/^void purple_dbus_register_bindings(void *handle, PurpleDBusBinding *bindings);$/;"	p	signature:(void *handle, PurpleDBusBinding *bindings)
purple_dbus_register_bindings	dbus-server.c	/^purple_dbus_register_bindings(void *handle, PurpleDBusBinding *bindings)$/;"	f	signature:(void *handle, PurpleDBusBinding *bindings)
purple_dbus_register_pointer	dbus-server.c	/^purple_dbus_register_pointer(gpointer node, PurpleDBusType *type)$/;"	f	signature:(gpointer node, PurpleDBusType *type)
purple_dbus_register_pointer	dbus-server.h	/^void purple_dbus_register_pointer(gpointer node, PurpleDBusType *type);$/;"	p	signature:(gpointer node, PurpleDBusType *type)
purple_dbus_signal_emit_purple	dbus-server.c	/^purple_dbus_signal_emit_purple(const char *name, int num_values,$/;"	f	signature:(const char *name, int num_values, PurpleValue **values, va_list vargs)
purple_dbus_signal_emit_purple	dbus-server.h	/^void purple_dbus_signal_emit_purple(const char *name, int num_values,$/;"	p	signature:(const char *name, int num_values, PurpleValue **values, va_list vargs)
purple_dbus_uninit	dbus-server.c	/^purple_dbus_uninit(void)$/;"	f	signature:(void)
purple_dbus_uninit	dbus-server.h	/^void purple_dbus_uninit(void);$/;"	p	signature:(void)
purple_dbus_unregister_pointer	dbus-server.c	/^purple_dbus_unregister_pointer(gpointer node)$/;"	f	signature:(gpointer node)
purple_dbus_unregister_pointer	dbus-server.h	/^void purple_dbus_unregister_pointer(gpointer node);$/;"	p	signature:(gpointer node)
purple_dbusify_GList	dbus-bindings.h	/^dbus_int32_t* purple_dbusify_GList(GList *list, gboolean free_memory,$/;"	p	signature:(GList *list, gboolean free_memory, dbus_int32_t *len)
purple_dbusify_GList	dbus-server.c	/^purple_dbusify_GList(GList *list, gboolean free_memory, dbus_int32_t *len)$/;"	f	signature:(GList *list, gboolean free_memory, dbus_int32_t *len)
purple_dbusify_GSList	dbus-bindings.h	/^dbus_int32_t* purple_dbusify_GSList(GSList *list, gboolean free_memory,$/;"	p	signature:(GSList *list, gboolean free_memory, dbus_int32_t *len)
purple_dbusify_GSList	dbus-server.c	/^purple_dbusify_GSList(GSList *list, gboolean free_memory, dbus_int32_t *len)$/;"	f	signature:(GSList *list, gboolean free_memory, dbus_int32_t *len)
purple_debug	debug.c	/^purple_debug(PurpleDebugLevel level, const char *category,$/;"	f	signature:(PurpleDebugLevel level, const char *category, const char *format, ...)
purple_debug_error	debug.c	/^purple_debug_error(const char *category, const char *format, ...)$/;"	f	signature:(const char *category, const char *format, ...)
purple_debug_fatal	debug.c	/^purple_debug_fatal(const char *category, const char *format, ...)$/;"	f	signature:(const char *category, const char *format, ...)
purple_debug_get_ui_ops	debug.c	/^purple_debug_get_ui_ops(void)$/;"	f	signature:(void)
purple_debug_get_ui_ops	debug.h	/^PurpleDebugUiOps *purple_debug_get_ui_ops(void);$/;"	p	signature:(void)
purple_debug_info	debug.c	/^purple_debug_info(const char *category, const char *format, ...)$/;"	f	signature:(const char *category, const char *format, ...)
purple_debug_init	debug.c	/^purple_debug_init(void)$/;"	f	signature:(void)
purple_debug_init	debug.h	/^void purple_debug_init(void);$/;"	p	signature:(void)
purple_debug_is_enabled	debug.c	/^purple_debug_is_enabled()$/;"	f
purple_debug_is_enabled	debug.h	/^gboolean purple_debug_is_enabled(void);$/;"	p	signature:(void)
purple_debug_is_unsafe	debug.c	/^purple_debug_is_unsafe()$/;"	f
purple_debug_is_unsafe	debug.h	/^gboolean purple_debug_is_unsafe(void);$/;"	p	signature:(void)
purple_debug_is_verbose	debug.c	/^purple_debug_is_verbose()$/;"	f
purple_debug_is_verbose	debug.h	/^gboolean purple_debug_is_verbose(void);$/;"	p	signature:(void)
purple_debug_misc	debug.c	/^purple_debug_misc(const char *category, const char *format, ...)$/;"	f	signature:(const char *category, const char *format, ...)
purple_debug_set_enabled	debug.c	/^purple_debug_set_enabled(gboolean enabled)$/;"	f	signature:(gboolean enabled)
purple_debug_set_enabled	debug.h	/^void purple_debug_set_enabled(gboolean enabled);$/;"	p	signature:(gboolean enabled)
purple_debug_set_ui_ops	debug.c	/^purple_debug_set_ui_ops(PurpleDebugUiOps *ops)$/;"	f	signature:(PurpleDebugUiOps *ops)
purple_debug_set_ui_ops	debug.h	/^void purple_debug_set_ui_ops(PurpleDebugUiOps *ops);$/;"	p	signature:(PurpleDebugUiOps *ops)
purple_debug_set_unsafe	debug.c	/^purple_debug_set_unsafe(gboolean unsafe)$/;"	f	signature:(gboolean unsafe)
purple_debug_set_unsafe	debug.h	/^void purple_debug_set_unsafe(gboolean unsafe);$/;"	p	signature:(gboolean unsafe)
purple_debug_set_verbose	debug.c	/^purple_debug_set_verbose(gboolean verbose)$/;"	f	signature:(gboolean verbose)
purple_debug_set_verbose	debug.h	/^void purple_debug_set_verbose(gboolean verbose);$/;"	p	signature:(gboolean verbose)
purple_debug_vargs	debug.c	/^purple_debug_vargs(PurpleDebugLevel level, const char *category,$/;"	f	file:	signature:(PurpleDebugLevel level, const char *category, const char *format, va_list args)
purple_debug_warning	debug.c	/^purple_debug_warning(const char *category, const char *format, ...)$/;"	f	signature:(const char *category, const char *format, ...)
purple_des3_cipher_get_ops	cipher.c	/^PurpleCipherOps *purple_des3_cipher_get_ops();$/;"	p	file:
purple_des_cipher_get_ops	cipher.c	/^PurpleCipherOps *purple_des_cipher_get_ops();$/;"	p	file:
purple_desktop_item_copy	desktopitem.c	/^purple_desktop_item_copy (const PurpleDesktopItem *item)$/;"	f	signature:(const PurpleDesktopItem *item)
purple_desktop_item_copy	desktopitem.h	/^PurpleDesktopItem *purple_desktop_item_copy (const PurpleDesktopItem *item);$/;"	p	signature:(const PurpleDesktopItem *item)
purple_desktop_item_get_entry_type	desktopitem.c	/^purple_desktop_item_get_entry_type (const PurpleDesktopItem *item)$/;"	f	signature:(const PurpleDesktopItem *item)
purple_desktop_item_get_entry_type	desktopitem.h	/^PurpleDesktopItemType purple_desktop_item_get_entry_type (const PurpleDesktopItem *item);$/;"	p	signature:(const PurpleDesktopItem *item)
purple_desktop_item_get_string	desktopitem.c	/^purple_desktop_item_get_string (const PurpleDesktopItem *item,$/;"	f	signature:(const PurpleDesktopItem *item, const char *attr)
purple_desktop_item_get_string	desktopitem.h	/^const char *purple_desktop_item_get_string (const PurpleDesktopItem *item,$/;"	p	signature:(const PurpleDesktopItem *item, const char *attr)
purple_desktop_item_get_type	desktopitem.c	/^purple_desktop_item_get_type (void)$/;"	f	signature:(void)
purple_desktop_item_get_type	desktopitem.h	/^GType purple_desktop_item_get_type       (void);$/;"	p	signature:(void)
purple_desktop_item_new_from_file	desktopitem.c	/^purple_desktop_item_new_from_file (const char *filename)$/;"	f	signature:(const char *filename)
purple_desktop_item_new_from_file	desktopitem.h	/^PurpleDesktopItem *purple_desktop_item_new_from_file (const char *filename);$/;"	p	signature:(const char *filename)
purple_desktop_item_unref	desktopitem.c	/^purple_desktop_item_unref (PurpleDesktopItem *item)$/;"	f	signature:(PurpleDesktopItem *item)
purple_desktop_item_unref	desktopitem.h	/^void purple_desktop_item_unref (PurpleDesktopItem *item);$/;"	p	signature:(PurpleDesktopItem *item)
purple_dnsquery_a	dnsquery.c	/^purple_dnsquery_a(const char *hostname, int port,$/;"	f	signature:(const char *hostname, int port, PurpleDnsQueryConnectFunction callback, gpointer data)
purple_dnsquery_a	dnsquery.h	/^PurpleDnsQueryData *purple_dnsquery_a(const char *hostname, int port, PurpleDnsQueryConnectFunction callback, gpointer data);$/;"	p	signature:(const char *hostname, int port, PurpleDnsQueryConnectFunction callback, gpointer data)
purple_dnsquery_a_account	dnsquery.c	/^purple_dnsquery_a_account(PurpleAccount *account, const char *hostname, int port,$/;"	f	signature:(PurpleAccount *account, const char *hostname, int port, PurpleDnsQueryConnectFunction callback, gpointer data)
purple_dnsquery_a_account	dnsquery.h	/^PurpleDnsQueryData *purple_dnsquery_a_account(PurpleAccount *account, const char *hostname, int port, PurpleDnsQueryConnectFunction callback, gpointer data);$/;"	p	signature:(PurpleAccount *account, const char *hostname, int port, PurpleDnsQueryConnectFunction callback, gpointer data)
purple_dnsquery_destroy	dnsquery.c	/^purple_dnsquery_destroy(PurpleDnsQueryData *query_data)$/;"	f	signature:(PurpleDnsQueryData *query_data)
purple_dnsquery_destroy	dnsquery.h	/^void purple_dnsquery_destroy(PurpleDnsQueryData *query_data);$/;"	p	signature:(PurpleDnsQueryData *query_data)
purple_dnsquery_failed	dnsquery.c	/^purple_dnsquery_failed(PurpleDnsQueryData *query_data, const gchar *error_message)$/;"	f	file:	signature:(PurpleDnsQueryData *query_data, const gchar *error_message)
purple_dnsquery_get_host	dnsquery.c	/^purple_dnsquery_get_host(PurpleDnsQueryData *query_data)$/;"	f	signature:(PurpleDnsQueryData *query_data)
purple_dnsquery_get_host	dnsquery.h	/^char *purple_dnsquery_get_host(PurpleDnsQueryData *query_data);$/;"	p	signature:(PurpleDnsQueryData *query_data)
purple_dnsquery_get_port	dnsquery.c	/^purple_dnsquery_get_port(PurpleDnsQueryData *query_data)$/;"	f	signature:(PurpleDnsQueryData *query_data)
purple_dnsquery_get_port	dnsquery.h	/^unsigned short purple_dnsquery_get_port(PurpleDnsQueryData *query_data);$/;"	p	signature:(PurpleDnsQueryData *query_data)
purple_dnsquery_get_ui_ops	dnsquery.c	/^purple_dnsquery_get_ui_ops(void)$/;"	f	signature:(void)
purple_dnsquery_get_ui_ops	dnsquery.h	/^PurpleDnsQueryUiOps *purple_dnsquery_get_ui_ops(void);$/;"	p	signature:(void)
purple_dnsquery_init	dnsquery.c	/^purple_dnsquery_init(void)$/;"	f	signature:(void)
purple_dnsquery_init	dnsquery.h	/^void purple_dnsquery_init(void);$/;"	p	signature:(void)
purple_dnsquery_resolved	dnsquery.c	/^purple_dnsquery_resolved(PurpleDnsQueryData *query_data, GSList *hosts)$/;"	f	file:	signature:(PurpleDnsQueryData *query_data, GSList *hosts)
purple_dnsquery_resolver_destroy	dnsquery.c	/^purple_dnsquery_resolver_destroy(PurpleDnsQueryResolverProcess *resolver)$/;"	f	file:	signature:(PurpleDnsQueryResolverProcess *resolver)
purple_dnsquery_resolver_new	dnsquery.c	/^purple_dnsquery_resolver_new(gboolean show_debug)$/;"	f	file:	signature:(gboolean show_debug)
purple_dnsquery_resolver_run	dnsquery.c	/^purple_dnsquery_resolver_run(int child_out, int child_in, gboolean show_debug)$/;"	f	file:	signature:(int child_out, int child_in, gboolean show_debug)
purple_dnsquery_set_ui_ops	dnsquery.c	/^purple_dnsquery_set_ui_ops(PurpleDnsQueryUiOps *ops)$/;"	f	signature:(PurpleDnsQueryUiOps *ops)
purple_dnsquery_set_ui_ops	dnsquery.h	/^void purple_dnsquery_set_ui_ops(PurpleDnsQueryUiOps *ops);$/;"	p	signature:(PurpleDnsQueryUiOps *ops)
purple_dnsquery_ui_resolve	dnsquery.c	/^purple_dnsquery_ui_resolve(PurpleDnsQueryData *query_data)$/;"	f	file:	signature:(PurpleDnsQueryData *query_data)
purple_dnsquery_uninit	dnsquery.c	/^purple_dnsquery_uninit(void)$/;"	f	signature:(void)
purple_dnsquery_uninit	dnsquery.h	/^void purple_dnsquery_uninit(void);$/;"	p	signature:(void)
purple_email_is_valid	util.c	/^purple_email_is_valid(const char *address)$/;"	f	signature:(const char *address)
purple_email_is_valid	util.h	/^gboolean purple_email_is_valid(const char *address);$/;"	p	signature:(const char *address)
purple_escape_filename	util.c	/^purple_escape_filename(const char *str)$/;"	f	signature:(const char *str)
purple_escape_filename	util.h	/^const char *purple_escape_filename(const char *str);$/;"	p	signature:(const char *str)
purple_eventloop_get_ui_ops	eventloop.c	/^purple_eventloop_get_ui_ops(void)$/;"	f	signature:(void)
purple_eventloop_get_ui_ops	eventloop.h	/^PurpleEventLoopUiOps *purple_eventloop_get_ui_ops(void);$/;"	p	signature:(void)
purple_eventloop_set_ui_ops	eventloop.c	/^purple_eventloop_set_ui_ops(PurpleEventLoopUiOps *ops)$/;"	f	signature:(PurpleEventLoopUiOps *ops)
purple_eventloop_set_ui_ops	eventloop.h	/^void purple_eventloop_set_ui_ops(PurpleEventLoopUiOps *ops);$/;"	p	signature:(PurpleEventLoopUiOps *ops)
purple_fd_get_ip	util.c	/^purple_fd_get_ip(int fd)$/;"	f	signature:(int fd)
purple_fd_get_ip	util.h	/^char *purple_fd_get_ip(int fd);$/;"	p	signature:(int fd)
purple_find_buddies	blist.c	/^GSList *purple_find_buddies(PurpleAccount *account, const char *name)$/;"	f	signature:(PurpleAccount *account, const char *name)
purple_find_buddies	blist.h	/^GSList *purple_find_buddies(PurpleAccount *account, const char *name);$/;"	p	signature:(PurpleAccount *account, const char *name)
purple_find_buddy	blist.c	/^PurpleBuddy *purple_find_buddy(PurpleAccount *account, const char *name)$/;"	f	signature:(PurpleAccount *account, const char *name)
purple_find_buddy	blist.h	/^PurpleBuddy *purple_find_buddy(PurpleAccount *account, const char *name);$/;"	p	signature:(PurpleAccount *account, const char *name)
purple_find_buddy_in_group	blist.c	/^PurpleBuddy *purple_find_buddy_in_group(PurpleAccount *account, const char *name,$/;"	f	signature:(PurpleAccount *account, const char *name, PurpleGroup *group)
purple_find_buddy_in_group	blist.h	/^PurpleBuddy *purple_find_buddy_in_group(PurpleAccount *account, const char *name,$/;"	p	signature:(PurpleAccount *account, const char *name, PurpleGroup *group)
purple_find_chat	conversation.c	/^purple_find_chat(const PurpleConnection *gc, int id)$/;"	f	signature:(const PurpleConnection *gc, int id)
purple_find_chat	conversation.h	/^PurpleConversation *purple_find_chat(const PurpleConnection *gc, int id);$/;"	p	signature:(const PurpleConnection *gc, int id)
purple_find_conversation_with_account	conversation.c	/^purple_find_conversation_with_account(PurpleConversationType type,$/;"	f	signature:(PurpleConversationType type, const char *name, const PurpleAccount *account)
purple_find_conversation_with_account	conversation.h	/^PurpleConversation *purple_find_conversation_with_account($/;"	p	signature:( PurpleConversationType type, const char *name, const PurpleAccount *account)
purple_find_group	blist.c	/^PurpleGroup *purple_find_group(const char *name)$/;"	f	signature:(const char *name)
purple_find_group	blist.h	/^PurpleGroup *purple_find_group(const char *name);$/;"	p	signature:(const char *name)
purple_find_pounce	pounce.c	/^purple_find_pounce(const PurpleAccount *pouncer, const char *pouncee,$/;"	f	signature:(const PurpleAccount *pouncer, const char *pouncee, PurplePounceEvent events)
purple_find_pounce	pounce.h	/^PurplePounce *purple_find_pounce(const PurpleAccount *pouncer,$/;"	p	signature:(const PurpleAccount *pouncer, const char *pouncee, PurplePounceEvent events)
purple_find_prpl	prpl.c	/^purple_find_prpl(const char *id)$/;"	f	signature:(const char *id)
purple_find_prpl	prpl.h	/^PurplePlugin *purple_find_prpl(const char *id);$/;"	p	signature:(const char *id)
purple_gai_strerror	util.c	/^purple_gai_strerror(gint errnum)$/;"	f	signature:(gint errnum)
purple_gai_strerror	util.h	/^G_CONST_RETURN gchar *purple_gai_strerror(gint errnum);$/;"	p	signature:(gint errnum)
purple_get_attention_type_from_code	server.c	/^PurpleAttentionType *purple_get_attention_type_from_code(PurpleAccount *account, guint type_code)$/;"	f	signature:(PurpleAccount *account, guint type_code)
purple_get_attention_type_from_code	server.h	/^PurpleAttentionType *purple_get_attention_type_from_code(PurpleAccount *account, guint type_code);$/;"	p	signature:(PurpleAccount *account, guint type_code)
purple_get_blist	blist.c	/^purple_get_blist()$/;"	f
purple_get_blist	blist.h	/^PurpleBuddyList *purple_get_blist(void);$/;"	p	signature:(void)
purple_get_chats	conversation.c	/^purple_get_chats(void)$/;"	f	signature:(void)
purple_get_chats	conversation.h	/^GList *purple_get_chats(void);$/;"	p	signature:(void)
purple_get_conversations	conversation.c	/^purple_get_conversations(void)$/;"	f	signature:(void)
purple_get_conversations	conversation.h	/^GList *purple_get_conversations(void);$/;"	p	signature:(void)
purple_get_core	core.c	/^purple_get_core(void)$/;"	f	signature:(void)
purple_get_core	core.h	/^PurpleCore *purple_get_core(void);$/;"	p	signature:(void)
purple_get_host_name	util.c	/^purple_get_host_name(void)$/;"	f	signature:(void)
purple_get_host_name	util.h	/^const gchar *purple_get_host_name(void);$/;"	p	signature:(void)
purple_get_ims	conversation.c	/^purple_get_ims(void)$/;"	f	signature:(void)
purple_get_ims	conversation.h	/^GList *purple_get_ims(void);$/;"	p	signature:(void)
purple_get_tzoff_str	util.c	/^const char *purple_get_tzoff_str(const struct tm *tm, gboolean iso)$/;"	f	signature:(const struct tm *tm, gboolean iso)
purple_get_tzoff_str	util.h	/^const char *purple_get_tzoff_str(const struct tm *tm, gboolean iso);$/;"	p	signature:(const struct tm *tm, gboolean iso)
purple_global_proxy_get_info	proxy.c	/^purple_global_proxy_get_info(void)$/;"	f	signature:(void)
purple_global_proxy_get_info	proxy.h	/^PurpleProxyInfo *purple_global_proxy_get_info(void);$/;"	p	signature:(void)
purple_global_proxy_set_info	proxy.c	/^purple_global_proxy_set_info(PurpleProxyInfo *info)$/;"	f	signature:(PurpleProxyInfo *info)
purple_global_proxy_set_info	proxy.h	/^void purple_global_proxy_set_info(PurpleProxyInfo *info);$/;"	p	signature:(PurpleProxyInfo *info)
purple_gnome_proxy_get_info	proxy.c	/^purple_gnome_proxy_get_info(void)$/;"	f	file:	signature:(void)
purple_gnome_proxy_get_parameter	proxy.c	/^purple_gnome_proxy_get_parameter(guint8 parameter, guint8 gnome_version)$/;"	f	file:	signature:(guint8 parameter, guint8 gnome_version)
purple_got_protocol_handler_uri	util.c	/^void purple_got_protocol_handler_uri(const char *uri)$/;"	f	signature:(const char *uri)
purple_got_protocol_handler_uri	util.h	/^void purple_got_protocol_handler_uri(const char *uri);$/;"	p	signature:(const char *uri)
purple_group_destroy	blist.c	/^purple_group_destroy(PurpleGroup *group)$/;"	f	signature:(PurpleGroup *group)
purple_group_destroy	blist.h	/^void purple_group_destroy(PurpleGroup *group);$/;"	p	signature:(PurpleGroup *group)
purple_group_get_accounts	blist.c	/^GSList *purple_group_get_accounts(PurpleGroup *group)$/;"	f	signature:(PurpleGroup *group)
purple_group_get_accounts	blist.h	/^GSList *purple_group_get_accounts(PurpleGroup *g);$/;"	p	signature:(PurpleGroup *g)
purple_group_get_name	blist.c	/^const char *purple_group_get_name(PurpleGroup *group)$/;"	f	signature:(PurpleGroup *group)
purple_group_get_name	blist.h	/^const char *purple_group_get_name(PurpleGroup *group);$/;"	p	signature:(PurpleGroup *group)
purple_group_new	blist.c	/^PurpleGroup *purple_group_new(const char *name)$/;"	f	signature:(const char *name)
purple_group_new	blist.h	/^PurpleGroup *purple_group_new(const char *name);$/;"	p	signature:(const char *name)
purple_group_on_account	blist.c	/^gboolean purple_group_on_account(PurpleGroup *g, PurpleAccount *account)$/;"	f	signature:(PurpleGroup *g, PurpleAccount *account)
purple_group_on_account	blist.h	/^gboolean purple_group_on_account(PurpleGroup *g, PurpleAccount *account);$/;"	p	signature:(PurpleGroup *g, PurpleAccount *account)
purple_hmac_cipher_get_ops	cipher.c	/^PurpleCipherOps *purple_hmac_cipher_get_ops();$/;"	p	file:
purple_home_dir	util.c	/^purple_home_dir(void)$/;"	f	signature:(void)
purple_home_dir	util.h	/^const gchar *purple_home_dir(void);$/;"	p	signature:(void)
purple_idle_get_handle	idle.c	/^purple_idle_get_handle(void)$/;"	f	file:	signature:(void)
purple_idle_get_ui_ops	idle.c	/^purple_idle_get_ui_ops(void)$/;"	f	signature:(void)
purple_idle_get_ui_ops	idle.h	/^PurpleIdleUiOps *purple_idle_get_ui_ops(void);$/;"	p	signature:(void)
purple_idle_init	idle.c	/^purple_idle_init()$/;"	f
purple_idle_init	idle.h	/^void purple_idle_init(void);$/;"	p	signature:(void)
purple_idle_set	idle.c	/^purple_idle_set(time_t time)$/;"	f	signature:(time_t time)
purple_idle_set	idle.h	/^void purple_idle_set(time_t time);$/;"	p	signature:(time_t time)
purple_idle_set_ui_ops	idle.c	/^purple_idle_set_ui_ops(PurpleIdleUiOps *ops)$/;"	f	signature:(PurpleIdleUiOps *ops)
purple_idle_set_ui_ops	idle.h	/^void purple_idle_set_ui_ops(PurpleIdleUiOps *ops);$/;"	p	signature:(PurpleIdleUiOps *ops)
purple_idle_touch	idle.c	/^purple_idle_touch()$/;"	f
purple_idle_touch	idle.h	/^void purple_idle_touch(void);$/;"	p	signature:(void)
purple_idle_uninit	idle.c	/^purple_idle_uninit()$/;"	f
purple_idle_uninit	idle.h	/^void purple_idle_uninit(void);$/;"	p	signature:(void)
purple_imgstore_add	imgstore.c	/^purple_imgstore_add(gpointer data, size_t size, const char *filename)$/;"	f	signature:(gpointer data, size_t size, const char *filename)
purple_imgstore_add	imgstore.h	/^purple_imgstore_add(gpointer data, size_t size, const char *filename);$/;"	p	signature:(gpointer data, size_t size, const char *filename)
purple_imgstore_add_with_id	imgstore.c	/^purple_imgstore_add_with_id(gpointer data, size_t size, const char *filename)$/;"	f	signature:(gpointer data, size_t size, const char *filename)
purple_imgstore_add_with_id	imgstore.h	/^int purple_imgstore_add_with_id(gpointer data, size_t size, const char *filename);$/;"	p	signature:(gpointer data, size_t size, const char *filename)
purple_imgstore_find_by_id	imgstore.c	/^PurpleStoredImage *purple_imgstore_find_by_id(int id)$/;"	f	signature:(int id)
purple_imgstore_find_by_id	imgstore.h	/^PurpleStoredImage *purple_imgstore_find_by_id(int id);$/;"	p	signature:(int id)
purple_imgstore_get_data	imgstore.c	/^gconstpointer purple_imgstore_get_data(PurpleStoredImage *img)$/;"	f	signature:(PurpleStoredImage *img)
purple_imgstore_get_data	imgstore.h	/^gconstpointer purple_imgstore_get_data(PurpleStoredImage *img);$/;"	p	signature:(PurpleStoredImage *img)
purple_imgstore_get_extension	imgstore.c	/^const char *purple_imgstore_get_extension(PurpleStoredImage *img)$/;"	f	signature:(PurpleStoredImage *img)
purple_imgstore_get_extension	imgstore.h	/^const char *purple_imgstore_get_extension(PurpleStoredImage *img);$/;"	p	signature:(PurpleStoredImage *img)
purple_imgstore_get_filename	imgstore.c	/^const char *purple_imgstore_get_filename(const PurpleStoredImage *img)$/;"	f	signature:(const PurpleStoredImage *img)
purple_imgstore_get_filename	imgstore.h	/^const char *purple_imgstore_get_filename(const PurpleStoredImage *img);$/;"	p	signature:(const PurpleStoredImage *img)
purple_imgstore_get_handle	imgstore.c	/^purple_imgstore_get_handle()$/;"	f
purple_imgstore_get_handle	imgstore.h	/^void *purple_imgstore_get_handle(void);$/;"	p	signature:(void)
purple_imgstore_get_size	imgstore.c	/^size_t purple_imgstore_get_size(PurpleStoredImage *img)$/;"	f	signature:(PurpleStoredImage *img)
purple_imgstore_get_size	imgstore.h	/^size_t purple_imgstore_get_size(PurpleStoredImage *img);$/;"	p	signature:(PurpleStoredImage *img)
purple_imgstore_init	imgstore.c	/^purple_imgstore_init()$/;"	f
purple_imgstore_init	imgstore.h	/^void purple_imgstore_init(void);$/;"	p	signature:(void)
purple_imgstore_new_from_file	imgstore.c	/^purple_imgstore_new_from_file(const char *path)$/;"	f	signature:(const char *path)
purple_imgstore_new_from_file	imgstore.h	/^purple_imgstore_new_from_file(const char *path);$/;"	p	signature:(const char *path)
purple_imgstore_ref	imgstore.c	/^purple_imgstore_ref(PurpleStoredImage *img)$/;"	f	signature:(PurpleStoredImage *img)
purple_imgstore_ref	imgstore.h	/^purple_imgstore_ref(PurpleStoredImage *img);$/;"	p	signature:(PurpleStoredImage *img)
purple_imgstore_ref_by_id	imgstore.c	/^void purple_imgstore_ref_by_id(int id)$/;"	f	signature:(int id)
purple_imgstore_ref_by_id	imgstore.h	/^void purple_imgstore_ref_by_id(int id);$/;"	p	signature:(int id)
purple_imgstore_uninit	imgstore.c	/^purple_imgstore_uninit()$/;"	f
purple_imgstore_uninit	imgstore.h	/^void purple_imgstore_uninit(void);$/;"	p	signature:(void)
purple_imgstore_unref	imgstore.c	/^purple_imgstore_unref(PurpleStoredImage *img)$/;"	f	signature:(PurpleStoredImage *img)
purple_imgstore_unref	imgstore.h	/^purple_imgstore_unref(PurpleStoredImage *img);$/;"	p	signature:(PurpleStoredImage *img)
purple_imgstore_unref_by_id	imgstore.c	/^void purple_imgstore_unref_by_id(int id)$/;"	f	signature:(int id)
purple_imgstore_unref_by_id	imgstore.h	/^void purple_imgstore_unref_by_id(int id);$/;"	p	signature:(int id)
purple_init	purple-client.c	/^void purple_init(void)$/;"	f	signature:(void)
purple_init	purple-client.h	/^void purple_init(void);$/;"	p	signature:(void)
purple_input_add	eventloop.c	/^purple_input_add(int source, PurpleInputCondition condition, PurpleInputFunction func, gpointer user_data)$/;"	f	signature:(int source, PurpleInputCondition condition, PurpleInputFunction func, gpointer user_data)
purple_input_add	eventloop.h	/^guint purple_input_add(int fd, PurpleInputCondition cond,$/;"	p	signature:(int fd, PurpleInputCondition cond, PurpleInputFunction func, gpointer user_data)
purple_input_get_error	eventloop.c	/^purple_input_get_error(int fd, int *error)$/;"	f	signature:(int fd, int *error)
purple_input_get_error	eventloop.h	/^purple_input_get_error(int fd, int *error);$/;"	p	signature:(int fd, int *error)
purple_input_remove	eventloop.c	/^purple_input_remove(guint tag)$/;"	f	signature:(guint tag)
purple_input_remove	eventloop.h	/^gboolean purple_input_remove(guint handle);$/;"	p	signature:(guint handle)
purple_internal_strftime	util.c	/^static size_t purple_internal_strftime(char *s, size_t max, const char *format, const struct tm *tm)$/;"	f	file:	signature:(char *s, size_t max, const char *format, const struct tm *tm)
purple_internal_strftime	util.c	566;"	d	file:
purple_ip_address_is_valid	util.c	/^purple_ip_address_is_valid(const char *ip)$/;"	f	signature:(const char *ip)
purple_ip_address_is_valid	util.h	/^gboolean purple_ip_address_is_valid(const char *ip);$/;"	p	signature:(const char *ip)
purple_ipv4_address_is_valid	util.c	/^purple_ipv4_address_is_valid(const char *ip)$/;"	f	signature:(const char *ip)
purple_ipv4_address_is_valid	util.h	/^gboolean purple_ipv4_address_is_valid(const char *ip);$/;"	p	signature:(const char *ip)
purple_ipv6_address_is_valid	util.c	/^purple_ipv6_address_is_valid(const gchar *ip)$/;"	f	signature:(const gchar *ip)
purple_ipv6_address_is_valid	util.h	/^gboolean purple_ipv6_address_is_valid(const char *ip);$/;"	p	signature:(const char *ip)
purple_log_common_deleter	log.c	/^gboolean purple_log_common_deleter(PurpleLog *log)$/;"	f	signature:(PurpleLog *log)
purple_log_common_deleter	log.h	/^gboolean purple_log_common_deleter(PurpleLog *log);$/;"	p	signature:(PurpleLog *log)
purple_log_common_is_deletable	log.c	/^gboolean purple_log_common_is_deletable(PurpleLog *log)$/;"	f	signature:(PurpleLog *log)
purple_log_common_is_deletable	log.h	/^gboolean purple_log_common_is_deletable(PurpleLog *log);$/;"	p	signature:(PurpleLog *log)
purple_log_common_lister	log.c	/^GList *purple_log_common_lister(PurpleLogType type, const char *name, PurpleAccount *account, const char *ext, PurpleLogLogger *logger)$/;"	f	signature:(PurpleLogType type, const char *name, PurpleAccount *account, const char *ext, PurpleLogLogger *logger)
purple_log_common_lister	log.h	/^GList *purple_log_common_lister(PurpleLogType type, const char *name,$/;"	p	signature:(PurpleLogType type, const char *name, PurpleAccount *account, const char *ext, PurpleLogLogger *logger)
purple_log_common_sizer	log.c	/^int purple_log_common_sizer(PurpleLog *log)$/;"	f	signature:(PurpleLog *log)
purple_log_common_sizer	log.h	/^int purple_log_common_sizer(PurpleLog *log);$/;"	p	signature:(PurpleLog *log)
purple_log_common_total_sizer	log.c	/^int purple_log_common_total_sizer(PurpleLogType type, const char *name, PurpleAccount *account, const char *ext)$/;"	f	signature:(PurpleLogType type, const char *name, PurpleAccount *account, const char *ext)
purple_log_common_total_sizer	log.h	/^int purple_log_common_total_sizer(PurpleLogType type, const char *name,$/;"	p	signature:(PurpleLogType type, const char *name, PurpleAccount *account, const char *ext)
purple_log_common_writer	log.c	/^void purple_log_common_writer(PurpleLog *log, const char *ext)$/;"	f	signature:(PurpleLog *log, const char *ext)
purple_log_common_writer	log.h	/^void purple_log_common_writer(PurpleLog *log, const char *ext);$/;"	p	signature:(PurpleLog *log, const char *ext)
purple_log_compare	log.c	/^gint purple_log_compare(gconstpointer y, gconstpointer z)$/;"	f	signature:(gconstpointer y, gconstpointer z)
purple_log_compare	log.h	/^gint purple_log_compare(gconstpointer y, gconstpointer z);$/;"	p	signature:(gconstpointer y, gconstpointer z)
purple_log_delete	log.c	/^gboolean purple_log_delete(PurpleLog *log)$/;"	f	signature:(PurpleLog *log)
purple_log_delete	log.h	/^gboolean purple_log_delete(PurpleLog *log);$/;"	p	signature:(PurpleLog *log)
purple_log_free	log.c	/^void purple_log_free(PurpleLog *log)$/;"	f	signature:(PurpleLog *log)
purple_log_free	log.h	/^void purple_log_free(PurpleLog *log);$/;"	p	signature:(PurpleLog *log)
purple_log_get_activity_score	log.c	/^gint purple_log_get_activity_score(PurpleLogType type, const char *name, PurpleAccount *account)$/;"	f	signature:(PurpleLogType type, const char *name, PurpleAccount *account)
purple_log_get_activity_score	log.h	/^int purple_log_get_activity_score(PurpleLogType type, const char *name, PurpleAccount *account);$/;"	p	signature:(PurpleLogType type, const char *name, PurpleAccount *account)
purple_log_get_handle	log.c	/^purple_log_get_handle(void)$/;"	f	signature:(void)
purple_log_get_handle	log.h	/^void *purple_log_get_handle(void);$/;"	p	signature:(void)
purple_log_get_log_dir	log.c	/^purple_log_get_log_dir(PurpleLogType type, const char *name, PurpleAccount *account)$/;"	f	signature:(PurpleLogType type, const char *name, PurpleAccount *account)
purple_log_get_log_dir	log.h	/^char *purple_log_get_log_dir(PurpleLogType type, const char *name, PurpleAccount *account);$/;"	p	signature:(PurpleLogType type, const char *name, PurpleAccount *account)
purple_log_get_log_sets	log.c	/^GHashTable *purple_log_get_log_sets(void)$/;"	f	signature:(void)
purple_log_get_log_sets	log.h	/^GHashTable *purple_log_get_log_sets(void);$/;"	p	signature:(void)
purple_log_get_logs	log.c	/^GList *purple_log_get_logs(PurpleLogType type, const char *name, PurpleAccount *account)$/;"	f	signature:(PurpleLogType type, const char *name, PurpleAccount *account)
purple_log_get_logs	log.h	/^GList *purple_log_get_logs(PurpleLogType type, const char *name, PurpleAccount *account);$/;"	p	signature:(PurpleLogType type, const char *name, PurpleAccount *account)
purple_log_get_size	log.c	/^int purple_log_get_size(PurpleLog *log)$/;"	f	signature:(PurpleLog *log)
purple_log_get_size	log.h	/^int purple_log_get_size(PurpleLog *log);$/;"	p	signature:(PurpleLog *log)
purple_log_get_system_logs	log.c	/^GList *purple_log_get_system_logs(PurpleAccount *account)$/;"	f	signature:(PurpleAccount *account)
purple_log_get_system_logs	log.h	/^GList *purple_log_get_system_logs(PurpleAccount *account);$/;"	p	signature:(PurpleAccount *account)
purple_log_get_total_size	log.c	/^int purple_log_get_total_size(PurpleLogType type, const char *name, PurpleAccount *account)$/;"	f	signature:(PurpleLogType type, const char *name, PurpleAccount *account)
purple_log_get_total_size	log.h	/^int purple_log_get_total_size(PurpleLogType type, const char *name, PurpleAccount *account);$/;"	p	signature:(PurpleLogType type, const char *name, PurpleAccount *account)
purple_log_init	log.c	/^void purple_log_init(void)$/;"	f	signature:(void)
purple_log_init	log.h	/^void purple_log_init(void);$/;"	p	signature:(void)
purple_log_is_deletable	log.c	/^gboolean purple_log_is_deletable(PurpleLog *log)$/;"	f	signature:(PurpleLog *log)
purple_log_is_deletable	log.h	/^gboolean purple_log_is_deletable(PurpleLog *log);$/;"	p	signature:(PurpleLog *log)
purple_log_logger_add	log.c	/^void purple_log_logger_add (PurpleLogLogger *logger)$/;"	f	signature:(PurpleLogLogger *logger)
purple_log_logger_add	log.h	/^void purple_log_logger_add (PurpleLogLogger *logger);$/;"	p	signature:(PurpleLogLogger *logger)
purple_log_logger_free	log.c	/^void purple_log_logger_free(PurpleLogLogger *logger)$/;"	f	signature:(PurpleLogLogger *logger)
purple_log_logger_free	log.h	/^void purple_log_logger_free(PurpleLogLogger *logger);$/;"	p	signature:(PurpleLogLogger *logger)
purple_log_logger_get	log.c	/^PurpleLogLogger *purple_log_logger_get()$/;"	f
purple_log_logger_get	log.h	/^PurpleLogLogger *purple_log_logger_get (void);$/;"	p	signature:(void)
purple_log_logger_get_options	log.c	/^GList *purple_log_logger_get_options(void)$/;"	f	signature:(void)
purple_log_logger_get_options	log.h	/^GList *purple_log_logger_get_options(void);$/;"	p	signature:(void)
purple_log_logger_new	log.c	/^PurpleLogLogger *purple_log_logger_new(const char *id, const char *name, int functions, ...)$/;"	f	signature:(const char *id, const char *name, int functions, ...)
purple_log_logger_new	log.h	/^PurpleLogLogger *purple_log_logger_new(const char *id, const char *name, int functions, ...);$/;"	p	signature:(const char *id, const char *name, int functions, ...)
purple_log_logger_remove	log.c	/^void purple_log_logger_remove (PurpleLogLogger *logger)$/;"	f	signature:(PurpleLogLogger *logger)
purple_log_logger_remove	log.h	/^void purple_log_logger_remove (PurpleLogLogger *logger);$/;"	p	signature:(PurpleLogLogger *logger)
purple_log_logger_set	log.c	/^void purple_log_logger_set (PurpleLogLogger *logger)$/;"	f	signature:(PurpleLogLogger *logger)
purple_log_logger_set	log.h	/^void purple_log_logger_set (PurpleLogLogger *logger);$/;"	p	signature:(PurpleLogLogger *logger)
purple_log_new	log.c	/^PurpleLog *purple_log_new(PurpleLogType type, const char *name, PurpleAccount *account,$/;"	f	signature:(PurpleLogType type, const char *name, PurpleAccount *account, PurpleConversation *conv, time_t time, const struct tm *tm)
purple_log_new	log.h	/^PurpleLog *purple_log_new(PurpleLogType type, const char *name, PurpleAccount *account,$/;"	p	signature:(PurpleLogType type, const char *name, PurpleAccount *account, PurpleConversation *conv, time_t time, const struct tm *tm)
purple_log_read	log.c	/^char *purple_log_read(PurpleLog *log, PurpleLogReadFlags *flags)$/;"	f	signature:(PurpleLog *log, PurpleLogReadFlags *flags)
purple_log_read	log.h	/^char *purple_log_read(PurpleLog *log, PurpleLogReadFlags *flags);$/;"	p	signature:(PurpleLog *log, PurpleLogReadFlags *flags)
purple_log_set_compare	log.c	/^gint purple_log_set_compare(gconstpointer y, gconstpointer z)$/;"	f	signature:(gconstpointer y, gconstpointer z)
purple_log_set_compare	log.h	/^gint purple_log_set_compare(gconstpointer y, gconstpointer z);$/;"	p	signature:(gconstpointer y, gconstpointer z)
purple_log_set_free	log.c	/^void purple_log_set_free(PurpleLogSet *set)$/;"	f	signature:(PurpleLogSet *set)
purple_log_set_free	log.h	/^void purple_log_set_free(PurpleLogSet *set);$/;"	p	signature:(PurpleLogSet *set)
purple_log_uninit	log.c	/^purple_log_uninit(void)$/;"	f	signature:(void)
purple_log_uninit	log.h	/^void purple_log_uninit(void);$/;"	p	signature:(void)
purple_log_write	log.c	/^void purple_log_write(PurpleLog *log, PurpleMessageFlags type,$/;"	f	signature:(PurpleLog *log, PurpleMessageFlags type, const char *from, time_t time, const char *message)
purple_log_write	log.h	/^void purple_log_write(PurpleLog *log,$/;"	p	signature:(PurpleLog *log, PurpleMessageFlags type, const char *from, time_t time, const char *message)
purple_major_version	version.c	/^const guint purple_major_version = PURPLE_MAJOR_VERSION;$/;"	v
purple_markup_escape_text	util.c	/^gchar *purple_markup_escape_text(const gchar *text, gssize length)$/;"	f	signature:(const gchar *text, gssize length)
purple_markup_escape_text	util.h	/^gchar *purple_markup_escape_text(const gchar *text, gssize length);$/;"	p	signature:(const gchar *text, gssize length)
purple_markup_extract_info_field	util.c	/^purple_markup_extract_info_field(const char *str, int len, PurpleNotifyUserInfo *user_info,$/;"	f	signature:(const char *str, int len, PurpleNotifyUserInfo *user_info, const char *start_token, int skip, const char *end_token, char check_value, const char *no_value_token, const char *display_name, gboolean is_link, const char *link_prefix, PurpleInfoFieldFormatCallback format_cb)
purple_markup_extract_info_field	util.h	/^gboolean purple_markup_extract_info_field(const char *str, int len, PurpleNotifyUserInfo *user_info,$/;"	p	signature:(const char *str, int len, PurpleNotifyUserInfo *user_info, const char *start_token, int skip, const char *end_token, char check_value, const char *no_value_token, const char *display_name, gboolean is_link, const char *link_prefix, PurpleInfoFieldFormatCallback format_cb)
purple_markup_find_tag	util.c	/^purple_markup_find_tag(const char *needle, const char *haystack,$/;"	f	signature:(const char *needle, const char *haystack, const char **start, const char **end, GData **attributes)
purple_markup_find_tag	util.h	/^gboolean purple_markup_find_tag(const char *needle, const char *haystack,$/;"	p	signature:(const char *needle, const char *haystack, const char **start, const char **end, GData **attributes)
purple_markup_get_css_property	util.c	/^purple_markup_get_css_property(const gchar *style,$/;"	f	signature:(const gchar *style, const gchar *opt)
purple_markup_get_css_property	util.h	/^char * purple_markup_get_css_property(const gchar *style, const gchar *opt);$/;"	p	signature:(const gchar *style, const gchar *opt)
purple_markup_get_tag_name	util.c	/^purple_markup_get_tag_name(const char *tag)$/;"	f	signature:(const char *tag)
purple_markup_get_tag_name	util.h	/^char *purple_markup_get_tag_name(const char *tag);$/;"	p	signature:(const char *tag)
purple_markup_html_to_xhtml	util.c	/^purple_markup_html_to_xhtml(const char *html, char **xhtml_out,$/;"	f	signature:(const char *html, char **xhtml_out, char **plain_out)
purple_markup_html_to_xhtml	util.h	/^void purple_markup_html_to_xhtml(const char *html, char **dest_xhtml,$/;"	p	signature:(const char *html, char **dest_xhtml, char **dest_plain)
purple_markup_is_rtl	util.c	/^gboolean purple_markup_is_rtl(const char *html)$/;"	f	signature:(const char *html)
purple_markup_is_rtl	util.h	/^gboolean purple_markup_is_rtl(const char *html);$/;"	p	signature:(const char *html)
purple_markup_linkify	util.c	/^purple_markup_linkify(const char *text)$/;"	f	signature:(const char *text)
purple_markup_linkify	util.h	/^char *purple_markup_linkify(const char *str);$/;"	p	signature:(const char *str)
purple_markup_slice	util.c	/^purple_markup_slice(const char *str, guint x, guint y)$/;"	f	signature:(const char *str, guint x, guint y)
purple_markup_slice	util.h	/^char *purple_markup_slice(const char *str, guint x, guint y);$/;"	p	signature:(const char *str, guint x, guint y)
purple_markup_strip_html	util.c	/^purple_markup_strip_html(const char *str)$/;"	f	signature:(const char *str)
purple_markup_strip_html	util.h	/^char *purple_markup_strip_html(const char *str);$/;"	p	signature:(const char *str)
purple_markup_unescape_entity	util.c	/^purple_markup_unescape_entity(const char *text, int *length)$/;"	f	signature:(const char *text, int *length)
purple_markup_unescape_entity	util.h	/^const char * purple_markup_unescape_entity(const char *text, int *length);$/;"	p	signature:(const char *text, int *length)
purple_marshal_BOOLEAN__INT_POINTER	signals.c	/^purple_marshal_BOOLEAN__INT_POINTER(PurpleCallback cb, va_list args, void *data,$/;"	f	signature:(PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_BOOLEAN__INT_POINTER	signals.h	/^void purple_marshal_BOOLEAN__INT_POINTER($/;"	p	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_BOOLEAN__POINTER	signals.c	/^purple_marshal_BOOLEAN__POINTER(PurpleCallback cb, va_list args, void *data,$/;"	f	signature:(PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_BOOLEAN__POINTER	signals.h	/^void purple_marshal_BOOLEAN__POINTER($/;"	p	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_BOOLEAN__POINTER_BOOLEAN	signals.c	/^purple_marshal_BOOLEAN__POINTER_BOOLEAN(PurpleCallback cb, va_list args,$/;"	f	signature:(PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_BOOLEAN__POINTER_BOOLEAN	signals.h	/^void purple_marshal_BOOLEAN__POINTER_BOOLEAN($/;"	p	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_BOOLEAN__POINTER_POINTER	signals.c	/^purple_marshal_BOOLEAN__POINTER_POINTER(PurpleCallback cb, va_list args,$/;"	f	signature:(PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_BOOLEAN__POINTER_POINTER	signals.h	/^void purple_marshal_BOOLEAN__POINTER_POINTER($/;"	p	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_BOOLEAN__POINTER_POINTER_POINTER	signals.c	/^purple_marshal_BOOLEAN__POINTER_POINTER_POINTER(PurpleCallback cb, va_list args,$/;"	f	signature:(PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_BOOLEAN__POINTER_POINTER_POINTER	signals.h	/^void purple_marshal_BOOLEAN__POINTER_POINTER_POINTER($/;"	p	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_BOOLEAN__POINTER_POINTER_POINTER_POINTER	signals.c	/^purple_marshal_BOOLEAN__POINTER_POINTER_POINTER_POINTER(PurpleCallback cb,$/;"	f	signature:(PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_BOOLEAN__POINTER_POINTER_POINTER_POINTER	signals.h	/^void purple_marshal_BOOLEAN__POINTER_POINTER_POINTER_POINTER($/;"	p	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_BOOLEAN__POINTER_POINTER_POINTER_POINTER_POINTER	signals.c	/^purple_marshal_BOOLEAN__POINTER_POINTER_POINTER_POINTER_POINTER($/;"	f	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_BOOLEAN__POINTER_POINTER_POINTER_POINTER_POINTER	signals.h	/^void purple_marshal_BOOLEAN__POINTER_POINTER_POINTER_POINTER_POINTER($/;"	p	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_BOOLEAN__POINTER_POINTER_POINTER_POINTER_POINTER_POINTER	signals.c	/^purple_marshal_BOOLEAN__POINTER_POINTER_POINTER_POINTER_POINTER_POINTER($/;"	f	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_BOOLEAN__POINTER_POINTER_POINTER_POINTER_POINTER_POINTER	signals.h	/^void purple_marshal_BOOLEAN__POINTER_POINTER_POINTER_POINTER_POINTER_POINTER($/;"	p	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_BOOLEAN__POINTER_POINTER_POINTER_POINTER_UINT	signals.c	/^purple_marshal_BOOLEAN__POINTER_POINTER_POINTER_POINTER_UINT($/;"	f	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_BOOLEAN__POINTER_POINTER_POINTER_POINTER_UINT	signals.h	/^void purple_marshal_BOOLEAN__POINTER_POINTER_POINTER_POINTER_UINT($/;"	p	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_BOOLEAN__POINTER_POINTER_POINTER_UINT	signals.c	/^purple_marshal_BOOLEAN__POINTER_POINTER_POINTER_UINT(PurpleCallback cb,$/;"	f	signature:(PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_BOOLEAN__POINTER_POINTER_POINTER_UINT	signals.h	/^void purple_marshal_BOOLEAN__POINTER_POINTER_POINTER_UINT($/;"	p	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_BOOLEAN__POINTER_POINTER_UINT	signals.c	/^purple_marshal_BOOLEAN__POINTER_POINTER_UINT(PurpleCallback cb,$/;"	f	signature:(PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_BOOLEAN__POINTER_POINTER_UINT	signals.h	/^void purple_marshal_BOOLEAN__POINTER_POINTER_UINT($/;"	p	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_INT__INT	signals.c	/^purple_marshal_INT__INT(PurpleCallback cb, va_list args, void *data,$/;"	f	signature:(PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_INT__INT	signals.h	/^void purple_marshal_INT__INT($/;"	p	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_INT__INT_INT	signals.c	/^purple_marshal_INT__INT_INT(PurpleCallback cb, va_list args, void *data,$/;"	f	signature:(PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_INT__INT_INT	signals.h	/^void purple_marshal_INT__INT_INT($/;"	p	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_INT__POINTER_POINTER	signals.c	/^purple_marshal_INT__POINTER_POINTER(PurpleCallback cb, va_list args, void *data,$/;"	f	signature:(PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_INT__POINTER_POINTER	signals.h	/^void purple_marshal_INT__POINTER_POINTER($/;"	p	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_INT__POINTER_POINTER_POINTER	signals.c	/^purple_marshal_INT__POINTER_POINTER_POINTER($/;"	f	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_INT__POINTER_POINTER_POINTER	signals.h	/^void purple_marshal_INT__POINTER_POINTER_POINTER($/;"	p	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_INT__POINTER_POINTER_POINTER_POINTER_POINTER	signals.c	/^purple_marshal_INT__POINTER_POINTER_POINTER_POINTER_POINTER($/;"	f	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_INT__POINTER_POINTER_POINTER_POINTER_POINTER	signals.h	/^void purple_marshal_INT__POINTER_POINTER_POINTER_POINTER_POINTER($/;"	p	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_POINTER__POINTER	signals.c	/^purple_marshal_POINTER__POINTER($/;"	f	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_POINTER__POINTER	signals.h	/^void purple_marshal_POINTER__POINTER($/;"	p	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_POINTER__POINTER_INT	signals.c	/^purple_marshal_POINTER__POINTER_INT($/;"	f	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_POINTER__POINTER_INT	signals.h	/^void purple_marshal_POINTER__POINTER_INT($/;"	p	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_POINTER__POINTER_INT64	signals.c	/^purple_marshal_POINTER__POINTER_INT64($/;"	f	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_POINTER__POINTER_INT64	signals.h	/^void purple_marshal_POINTER__POINTER_INT64($/;"	p	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_POINTER__POINTER_INT64_BOOLEAN	signals.c	/^purple_marshal_POINTER__POINTER_INT64_BOOLEAN($/;"	f	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_POINTER__POINTER_INT64_BOOLEAN	signals.h	/^void purple_marshal_POINTER__POINTER_INT64_BOOLEAN($/;"	p	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_POINTER__POINTER_INT_BOOLEAN	signals.c	/^purple_marshal_POINTER__POINTER_INT_BOOLEAN($/;"	f	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_POINTER__POINTER_INT_BOOLEAN	signals.h	/^void purple_marshal_POINTER__POINTER_INT_BOOLEAN($/;"	p	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_POINTER__POINTER_POINTER	signals.c	/^purple_marshal_POINTER__POINTER_POINTER(PurpleCallback cb, va_list args, void *data,$/;"	f	signature:(PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_POINTER__POINTER_POINTER	signals.h	/^void purple_marshal_POINTER__POINTER_POINTER($/;"	p	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_VOID	signals.c	/^purple_marshal_VOID(PurpleCallback cb, va_list args, void *data,$/;"	f	signature:(PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_VOID	signals.h	/^void purple_marshal_VOID($/;"	p	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_VOID__INT	signals.c	/^purple_marshal_VOID__INT(PurpleCallback cb, va_list args, void *data,$/;"	f	signature:(PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_VOID__INT	signals.h	/^void purple_marshal_VOID__INT($/;"	p	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_VOID__INT_INT	signals.c	/^purple_marshal_VOID__INT_INT(PurpleCallback cb, va_list args, void *data,$/;"	f	signature:(PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_VOID__INT_INT	signals.h	/^void purple_marshal_VOID__INT_INT($/;"	p	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_VOID__POINTER	signals.c	/^purple_marshal_VOID__POINTER(PurpleCallback cb, va_list args, void *data,$/;"	f	signature:(PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_VOID__POINTER	signals.h	/^void purple_marshal_VOID__POINTER($/;"	p	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_VOID__POINTER_INT_INT	signals.c	/^void purple_marshal_VOID__POINTER_INT_INT(PurpleCallback cb, va_list args,$/;"	f	signature:(PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_VOID__POINTER_INT_INT	signals.h	/^void purple_marshal_VOID__POINTER_INT_INT($/;"	p	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_VOID__POINTER_INT_POINTER	signals.c	/^void purple_marshal_VOID__POINTER_INT_POINTER(PurpleCallback cb, va_list args,$/;"	f	signature:(PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_VOID__POINTER_INT_POINTER	signals.h	/^void purple_marshal_VOID__POINTER_INT_POINTER($/;"	p	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_VOID__POINTER_POINTER	signals.c	/^purple_marshal_VOID__POINTER_POINTER(PurpleCallback cb, va_list args,$/;"	f	signature:(PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_VOID__POINTER_POINTER	signals.h	/^void purple_marshal_VOID__POINTER_POINTER($/;"	p	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_VOID__POINTER_POINTER_POINTER	signals.c	/^purple_marshal_VOID__POINTER_POINTER_POINTER(PurpleCallback cb, va_list args,$/;"	f	signature:(PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_VOID__POINTER_POINTER_POINTER	signals.h	/^void purple_marshal_VOID__POINTER_POINTER_POINTER($/;"	p	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_VOID__POINTER_POINTER_POINTER_POINTER	signals.c	/^purple_marshal_VOID__POINTER_POINTER_POINTER_POINTER(PurpleCallback cb,$/;"	f	signature:(PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_VOID__POINTER_POINTER_POINTER_POINTER	signals.h	/^void purple_marshal_VOID__POINTER_POINTER_POINTER_POINTER($/;"	p	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_VOID__POINTER_POINTER_POINTER_POINTER_POINTER	signals.c	/^purple_marshal_VOID__POINTER_POINTER_POINTER_POINTER_POINTER(PurpleCallback cb,$/;"	f	signature:(PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_VOID__POINTER_POINTER_POINTER_POINTER_POINTER	signals.h	/^void purple_marshal_VOID__POINTER_POINTER_POINTER_POINTER_POINTER($/;"	p	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_VOID__POINTER_POINTER_POINTER_POINTER_UINT	signals.c	/^purple_marshal_VOID__POINTER_POINTER_POINTER_POINTER_UINT(PurpleCallback cb,$/;"	f	signature:(PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_VOID__POINTER_POINTER_POINTER_POINTER_UINT	signals.h	/^void purple_marshal_VOID__POINTER_POINTER_POINTER_POINTER_UINT($/;"	p	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_VOID__POINTER_POINTER_POINTER_UINT	signals.c	/^purple_marshal_VOID__POINTER_POINTER_POINTER_UINT(PurpleCallback cb,$/;"	f	signature:(PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_VOID__POINTER_POINTER_POINTER_UINT	signals.h	/^void purple_marshal_VOID__POINTER_POINTER_POINTER_UINT($/;"	p	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_VOID__POINTER_POINTER_POINTER_UINT_UINT	signals.c	/^purple_marshal_VOID__POINTER_POINTER_POINTER_UINT_UINT(PurpleCallback cb,$/;"	f	signature:(PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_VOID__POINTER_POINTER_POINTER_UINT_UINT	signals.h	/^void purple_marshal_VOID__POINTER_POINTER_POINTER_UINT_UINT($/;"	p	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_VOID__POINTER_POINTER_UINT	signals.c	/^purple_marshal_VOID__POINTER_POINTER_UINT(PurpleCallback cb, va_list args,$/;"	f	signature:(PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_VOID__POINTER_POINTER_UINT	signals.h	/^void purple_marshal_VOID__POINTER_POINTER_UINT($/;"	p	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_VOID__POINTER_POINTER_UINT_UINT	signals.c	/^purple_marshal_VOID__POINTER_POINTER_UINT_UINT(PurpleCallback cb, va_list args,$/;"	f	signature:(PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_VOID__POINTER_POINTER_UINT_UINT	signals.h	/^void purple_marshal_VOID__POINTER_POINTER_UINT_UINT($/;"	p	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_VOID__POINTER_UINT	signals.c	/^purple_marshal_VOID__POINTER_UINT(PurpleCallback cb, va_list args,$/;"	f	signature:(PurpleCallback cb, va_list args, void *data, void **return_val)
purple_marshal_VOID__POINTER_UINT	signals.h	/^void purple_marshal_VOID__POINTER_UINT($/;"	p	signature:( PurpleCallback cb, va_list args, void *data, void **return_val)
purple_md4_cipher_get_ops	cipher.c	/^PurpleCipherOps *purple_md4_cipher_get_ops();$/;"	p	file:
purple_md5_cipher_get_ops	cipher.c	/^PurpleCipherOps *purple_md5_cipher_get_ops();$/;"	p	file:
purple_media_accepted	media.c	/^purple_media_accepted(PurpleMedia *media, const gchar *sess_id,$/;"	f	signature:(PurpleMedia *media, const gchar *sess_id, const gchar *participant)
purple_media_accepted	media.h	/^gboolean purple_media_accepted(PurpleMedia *media, const gchar *sess_id,$/;"	p	signature:(PurpleMedia *media, const gchar *sess_id, const gchar *participant)
purple_media_add_remote_candidates	media.c	/^purple_media_add_remote_candidates(PurpleMedia *media, const gchar *sess_id,$/;"	f	signature:(PurpleMedia *media, const gchar *sess_id, const gchar *participant, GList *remote_candidates)
purple_media_add_remote_candidates	media.h	/^void purple_media_add_remote_candidates(PurpleMedia *media,$/;"	p	signature:(PurpleMedia *media, const gchar *sess_id, const gchar *participant, GList *remote_candidates)
purple_media_add_session	media.c	/^purple_media_add_session(PurpleMedia *media, PurpleMediaSession *session)$/;"	f	file:	signature:(PurpleMedia *media, PurpleMediaSession *session)
purple_media_add_stream	media.c	/^purple_media_add_stream(PurpleMedia *media, const gchar *sess_id,$/;"	f	signature:(PurpleMedia *media, const gchar *sess_id, const gchar *who, PurpleMediaSessionType type, gboolean initiator, const gchar *transmitter, guint num_params, GParameter *params)
purple_media_add_stream	media.h	/^gboolean purple_media_add_stream(PurpleMedia *media, const gchar *sess_id,$/;"	p	signature:(PurpleMedia *media, const gchar *sess_id, const gchar *who, PurpleMediaSessionType type, gboolean initiator, const gchar *transmitter, guint num_params, GParameter *params)
purple_media_backend_add_remote_candidates	media/backend-iface.c	/^purple_media_backend_add_remote_candidates(PurpleMediaBackend *self,$/;"	f	signature:(PurpleMediaBackend *self, const gchar *sess_id, const gchar *participant, GList *remote_candidates)
purple_media_backend_add_remote_candidates	media/backend-iface.h	/^void purple_media_backend_add_remote_candidates(PurpleMediaBackend *self,$/;"	p	signature:(PurpleMediaBackend *self, const gchar *sess_id, const gchar *participant, GList *remote_candidates)
purple_media_backend_add_stream	media/backend-iface.c	/^purple_media_backend_add_stream(PurpleMediaBackend *self,$/;"	f	signature:(PurpleMediaBackend *self, const gchar *sess_id, const gchar *who, PurpleMediaSessionType type, gboolean initiator, const gchar *transmitter, guint num_params, GParameter *params)
purple_media_backend_add_stream	media/backend-iface.h	/^gboolean purple_media_backend_add_stream(PurpleMediaBackend *self,$/;"	p	signature:(PurpleMediaBackend *self, const gchar *sess_id, const gchar *who, PurpleMediaSessionType type, gboolean initiator, const gchar *transmitter, guint num_params, GParameter *params)
purple_media_backend_base_init	media/backend-iface.c	/^purple_media_backend_base_init(gpointer iface)$/;"	f	file:	signature:(gpointer iface)
purple_media_backend_codecs_ready	media/backend-iface.c	/^purple_media_backend_codecs_ready(PurpleMediaBackend *self,$/;"	f	signature:(PurpleMediaBackend *self, const gchar *sess_id)
purple_media_backend_codecs_ready	media/backend-iface.h	/^gboolean purple_media_backend_codecs_ready(PurpleMediaBackend *self,$/;"	p	signature:(PurpleMediaBackend *self, const gchar *sess_id)
purple_media_backend_fs2_add_remote_candidates	media/backend-fs2.c	/^purple_media_backend_fs2_add_remote_candidates(PurpleMediaBackend *self,$/;"	f	file:	signature:(PurpleMediaBackend *self, const gchar *sess_id, const gchar *participant, GList *remote_candidates)
purple_media_backend_fs2_add_remote_candidates	media/backend-fs2.c	/^static void purple_media_backend_fs2_add_remote_candidates($/;"	p	file:	signature:( PurpleMediaBackend *self, const gchar *sess_id, const gchar *participant, GList *remote_candidates)
purple_media_backend_fs2_add_stream	media/backend-fs2.c	/^purple_media_backend_fs2_add_stream(PurpleMediaBackend *self,$/;"	f	file:	signature:(PurpleMediaBackend *self, const gchar *sess_id, const gchar *who, PurpleMediaSessionType type, gboolean initiator, const gchar *transmitter, guint num_params, GParameter *params)
purple_media_backend_fs2_add_stream	media/backend-fs2.c	/^static gboolean purple_media_backend_fs2_add_stream(PurpleMediaBackend *self,$/;"	p	file:	signature:(PurpleMediaBackend *self, const gchar *sess_id, const gchar *who, PurpleMediaSessionType type, gboolean initiator, const gchar *transmitter, guint num_params, GParameter *params)
purple_media_backend_fs2_class_init	media/backend-fs2.c	/^purple_media_backend_fs2_class_init(PurpleMediaBackendFs2Class *klass)$/;"	f	file:	signature:(PurpleMediaBackendFs2Class *klass)
purple_media_backend_fs2_codecs_ready	media/backend-fs2.c	/^purple_media_backend_fs2_codecs_ready(PurpleMediaBackend *self,$/;"	f	file:	signature:(PurpleMediaBackend *self, const gchar *sess_id)
purple_media_backend_fs2_codecs_ready	media/backend-fs2.c	/^static gboolean purple_media_backend_fs2_codecs_ready(PurpleMediaBackend *self,$/;"	p	file:	signature:(PurpleMediaBackend *self, const gchar *sess_id)
purple_media_backend_fs2_dispose	media/backend-fs2.c	/^purple_media_backend_fs2_dispose(GObject *obj)$/;"	f	file:	signature:(GObject *obj)
purple_media_backend_fs2_finalize	media/backend-fs2.c	/^purple_media_backend_fs2_finalize(GObject *obj)$/;"	f	file:	signature:(GObject *obj)
purple_media_backend_fs2_get_available_params	media/backend-fs2.c	/^purple_media_backend_fs2_get_available_params(void)$/;"	f	file:	signature:(void)
purple_media_backend_fs2_get_available_params	media/backend-fs2.c	/^static const gchar **purple_media_backend_fs2_get_available_params(void);$/;"	p	file:	signature:(void)
purple_media_backend_fs2_get_codecs	media/backend-fs2.c	/^purple_media_backend_fs2_get_codecs(PurpleMediaBackend *self,$/;"	f	file:	signature:(PurpleMediaBackend *self, const gchar *sess_id)
purple_media_backend_fs2_get_codecs	media/backend-fs2.c	/^static GList *purple_media_backend_fs2_get_codecs(PurpleMediaBackend *self,$/;"	p	file:	signature:(PurpleMediaBackend *self, const gchar *sess_id)
purple_media_backend_fs2_get_local_candidates	media/backend-fs2.c	/^purple_media_backend_fs2_get_local_candidates(PurpleMediaBackend *self,$/;"	f	file:	signature:(PurpleMediaBackend *self, const gchar *sess_id, const gchar *participant)
purple_media_backend_fs2_get_local_candidates	media/backend-fs2.c	/^static GList *purple_media_backend_fs2_get_local_candidates($/;"	p	file:	signature:( PurpleMediaBackend *self, const gchar *sess_id, const gchar *participant)
purple_media_backend_fs2_get_property	media/backend-fs2.c	/^purple_media_backend_fs2_get_property(GObject *object, guint prop_id,$/;"	f	file:	signature:(GObject *object, guint prop_id, GValue *value, GParamSpec *pspec)
purple_media_backend_fs2_get_src	media/backend-fs2.c	/^purple_media_backend_fs2_get_src(PurpleMediaBackendFs2 *self,$/;"	f	signature:(PurpleMediaBackendFs2 *self, const gchar *sess_id)
purple_media_backend_fs2_get_src	media/backend-fs2.h	/^GstElement *purple_media_backend_fs2_get_src($/;"	p	signature:( PurpleMediaBackendFs2 *self, const gchar *sess_id)
purple_media_backend_fs2_get_tee	media/backend-fs2.c	/^purple_media_backend_fs2_get_tee(PurpleMediaBackendFs2 *self,$/;"	f	signature:(PurpleMediaBackendFs2 *self, const gchar *sess_id, const gchar *who)
purple_media_backend_fs2_get_tee	media/backend-fs2.h	/^GstElement *purple_media_backend_fs2_get_tee($/;"	p	signature:( PurpleMediaBackendFs2 *self, const gchar *sess_id, const gchar *who)
purple_media_backend_fs2_get_type	media/backend-fs2.c	/^purple_media_backend_fs2_get_type(void)$/;"	f	signature:(void)
purple_media_backend_fs2_get_type	media/backend-fs2.h	/^GType purple_media_backend_fs2_get_type(void);$/;"	p	signature:(void)
purple_media_backend_fs2_init	media/backend-fs2.c	/^purple_media_backend_fs2_init(PurpleMediaBackendFs2 *self)$/;"	f	file:	signature:(PurpleMediaBackendFs2 *self)
purple_media_backend_fs2_set_input_volume	media/backend-fs2.c	/^purple_media_backend_fs2_set_input_volume(PurpleMediaBackendFs2 *self,$/;"	f	signature:(PurpleMediaBackendFs2 *self, const gchar *sess_id, double level)
purple_media_backend_fs2_set_input_volume	media/backend-fs2.h	/^void purple_media_backend_fs2_set_input_volume(PurpleMediaBackendFs2 *self,$/;"	p	signature:(PurpleMediaBackendFs2 *self, const gchar *sess_id, double level)
purple_media_backend_fs2_set_output_volume	media/backend-fs2.c	/^purple_media_backend_fs2_set_output_volume(PurpleMediaBackendFs2 *self,$/;"	f	signature:(PurpleMediaBackendFs2 *self, const gchar *sess_id, const gchar *who, double level)
purple_media_backend_fs2_set_output_volume	media/backend-fs2.h	/^void purple_media_backend_fs2_set_output_volume(PurpleMediaBackendFs2 *self,$/;"	p	signature:(PurpleMediaBackendFs2 *self, const gchar *sess_id, const gchar *who, double level)
purple_media_backend_fs2_set_params	media/backend-fs2.c	/^purple_media_backend_fs2_set_params(PurpleMediaBackend *self,$/;"	f	file:	signature:(PurpleMediaBackend *self, guint num_params, GParameter *params)
purple_media_backend_fs2_set_params	media/backend-fs2.c	/^static void purple_media_backend_fs2_set_params(PurpleMediaBackend *self,$/;"	p	file:	signature:(PurpleMediaBackend *self, guint num_params, GParameter *params)
purple_media_backend_fs2_set_property	media/backend-fs2.c	/^purple_media_backend_fs2_set_property(GObject *object, guint prop_id,$/;"	f	file:	signature:(GObject *object, guint prop_id, const GValue *value, GParamSpec *pspec)
purple_media_backend_fs2_set_remote_codecs	media/backend-fs2.c	/^purple_media_backend_fs2_set_remote_codecs(PurpleMediaBackend *self,$/;"	f	file:	signature:(PurpleMediaBackend *self, const gchar *sess_id, const gchar *participant, GList *codecs)
purple_media_backend_fs2_set_remote_codecs	media/backend-fs2.c	/^static gboolean purple_media_backend_fs2_set_remote_codecs($/;"	p	file:	signature:( PurpleMediaBackend *self, const gchar *sess_id, const gchar *participant, GList *codecs)
purple_media_backend_fs2_set_send_codec	media/backend-fs2.c	/^purple_media_backend_fs2_set_send_codec(PurpleMediaBackend *self,$/;"	f	file:	signature:(PurpleMediaBackend *self, const gchar *sess_id, PurpleMediaCodec *codec)
purple_media_backend_fs2_set_send_codec	media/backend-fs2.c	/^static gboolean purple_media_backend_fs2_set_send_codec($/;"	p	file:	signature:( PurpleMediaBackend *self, const gchar *sess_id, PurpleMediaCodec *codec)
purple_media_backend_get_available_params	media/backend-iface.c	/^purple_media_backend_get_available_params(PurpleMediaBackend *self)$/;"	f	signature:(PurpleMediaBackend *self)
purple_media_backend_get_available_params	media/backend-iface.h	/^const gchar **purple_media_backend_get_available_params(PurpleMediaBackend *self);$/;"	p	signature:(PurpleMediaBackend *self)
purple_media_backend_get_codecs	media/backend-iface.c	/^purple_media_backend_get_codecs(PurpleMediaBackend *self,$/;"	f	signature:(PurpleMediaBackend *self, const gchar *sess_id)
purple_media_backend_get_codecs	media/backend-iface.h	/^GList *purple_media_backend_get_codecs(PurpleMediaBackend *self,$/;"	p	signature:(PurpleMediaBackend *self, const gchar *sess_id)
purple_media_backend_get_local_candidates	media/backend-iface.c	/^purple_media_backend_get_local_candidates(PurpleMediaBackend *self,$/;"	f	signature:(PurpleMediaBackend *self, const gchar *sess_id, const gchar *participant)
purple_media_backend_get_local_candidates	media/backend-iface.h	/^GList *purple_media_backend_get_local_candidates(PurpleMediaBackend *self,$/;"	p	signature:(PurpleMediaBackend *self, const gchar *sess_id, const gchar *participant)
purple_media_backend_get_type	media/backend-iface.c	/^purple_media_backend_get_type(void)$/;"	f	signature:(void)
purple_media_backend_get_type	media/backend-iface.h	/^GType purple_media_backend_get_type(void);$/;"	p	signature:(void)
purple_media_backend_iface_init	media/backend-fs2.c	/^purple_media_backend_iface_init(PurpleMediaBackendIface *iface)$/;"	f	file:	signature:(PurpleMediaBackendIface *iface)
purple_media_backend_iface_init	media/backend-fs2.c	/^static void purple_media_backend_iface_init(PurpleMediaBackendIface *iface);$/;"	p	file:	signature:(PurpleMediaBackendIface *iface)
purple_media_backend_set_params	media/backend-iface.c	/^purple_media_backend_set_params(PurpleMediaBackend *self,$/;"	f	signature:(PurpleMediaBackend *self, guint num_params, GParameter *params)
purple_media_backend_set_params	media/backend-iface.h	/^void purple_media_backend_set_params(PurpleMediaBackend *self,$/;"	p	signature:(PurpleMediaBackend *self, guint num_params, GParameter *params)
purple_media_backend_set_remote_codecs	media/backend-iface.c	/^purple_media_backend_set_remote_codecs(PurpleMediaBackend *self,$/;"	f	signature:(PurpleMediaBackend *self, const gchar *sess_id, const gchar *participant, GList *codecs)
purple_media_backend_set_remote_codecs	media/backend-iface.h	/^gboolean purple_media_backend_set_remote_codecs(PurpleMediaBackend *self,$/;"	p	signature:(PurpleMediaBackend *self, const gchar *sess_id, const gchar *participant, GList *codecs)
purple_media_backend_set_send_codec	media/backend-iface.c	/^purple_media_backend_set_send_codec(PurpleMediaBackend *self,$/;"	f	signature:(PurpleMediaBackend *self, const gchar *sess_id, PurpleMediaCodec *codec)
purple_media_backend_set_send_codec	media/backend-iface.h	/^gboolean purple_media_backend_set_send_codec(PurpleMediaBackend *self,$/;"	p	signature:(PurpleMediaBackend *self, const gchar *sess_id, PurpleMediaCodec *codec)
purple_media_backend_signals	media/backend-iface.c	/^static guint purple_media_backend_signals[LAST_SIGNAL] = {0};$/;"	v	file:
purple_media_candidate_class_init	media/candidate.c	/^purple_media_candidate_class_init(PurpleMediaCandidateClass *klass)$/;"	f	file:	signature:(PurpleMediaCandidateClass *klass)
purple_media_candidate_copy	media/candidate.c	/^purple_media_candidate_copy(PurpleMediaCandidate *candidate)$/;"	f	signature:(PurpleMediaCandidate *candidate)
purple_media_candidate_copy	media/candidate.h	/^PurpleMediaCandidate *purple_media_candidate_copy($/;"	p	signature:( PurpleMediaCandidate *candidate)
purple_media_candidate_finalize	media/candidate.c	/^purple_media_candidate_finalize(GObject *info)$/;"	f	file:	signature:(GObject *info)
purple_media_candidate_get_base_ip	media/candidate.c	/^purple_media_candidate_get_base_ip(PurpleMediaCandidate *candidate)$/;"	f	signature:(PurpleMediaCandidate *candidate)
purple_media_candidate_get_base_ip	media/candidate.h	/^gchar *purple_media_candidate_get_base_ip(PurpleMediaCandidate *candidate);$/;"	p	signature:(PurpleMediaCandidate *candidate)
purple_media_candidate_get_base_port	media/candidate.c	/^purple_media_candidate_get_base_port(PurpleMediaCandidate *candidate)$/;"	f	signature:(PurpleMediaCandidate *candidate)
purple_media_candidate_get_base_port	media/candidate.h	/^guint16 purple_media_candidate_get_base_port(PurpleMediaCandidate *candidate);$/;"	p	signature:(PurpleMediaCandidate *candidate)
purple_media_candidate_get_candidate_type	media/candidate.c	/^purple_media_candidate_get_candidate_type(PurpleMediaCandidate *candidate)$/;"	f	signature:(PurpleMediaCandidate *candidate)
purple_media_candidate_get_candidate_type	media/candidate.h	/^PurpleMediaCandidateType purple_media_candidate_get_candidate_type($/;"	p	signature:( PurpleMediaCandidate *candidate)
purple_media_candidate_get_component_id	media/candidate.c	/^purple_media_candidate_get_component_id(PurpleMediaCandidate *candidate)$/;"	f	signature:(PurpleMediaCandidate *candidate)
purple_media_candidate_get_component_id	media/candidate.h	/^guint purple_media_candidate_get_component_id(PurpleMediaCandidate *candidate);$/;"	p	signature:(PurpleMediaCandidate *candidate)
purple_media_candidate_get_foundation	media/candidate.c	/^purple_media_candidate_get_foundation(PurpleMediaCandidate *candidate)$/;"	f	signature:(PurpleMediaCandidate *candidate)
purple_media_candidate_get_foundation	media/candidate.h	/^gchar *purple_media_candidate_get_foundation(PurpleMediaCandidate *candidate);$/;"	p	signature:(PurpleMediaCandidate *candidate)
purple_media_candidate_get_ip	media/candidate.c	/^purple_media_candidate_get_ip(PurpleMediaCandidate *candidate)$/;"	f	signature:(PurpleMediaCandidate *candidate)
purple_media_candidate_get_ip	media/candidate.h	/^gchar *purple_media_candidate_get_ip(PurpleMediaCandidate *candidate);$/;"	p	signature:(PurpleMediaCandidate *candidate)
purple_media_candidate_get_password	media/candidate.c	/^purple_media_candidate_get_password(PurpleMediaCandidate *candidate)$/;"	f	signature:(PurpleMediaCandidate *candidate)
purple_media_candidate_get_password	media/candidate.h	/^gchar *purple_media_candidate_get_password(PurpleMediaCandidate *candidate);$/;"	p	signature:(PurpleMediaCandidate *candidate)
purple_media_candidate_get_port	media/candidate.c	/^purple_media_candidate_get_port(PurpleMediaCandidate *candidate)$/;"	f	signature:(PurpleMediaCandidate *candidate)
purple_media_candidate_get_port	media/candidate.h	/^guint16 purple_media_candidate_get_port(PurpleMediaCandidate *candidate);$/;"	p	signature:(PurpleMediaCandidate *candidate)
purple_media_candidate_get_priority	media/candidate.c	/^purple_media_candidate_get_priority(PurpleMediaCandidate *candidate)$/;"	f	signature:(PurpleMediaCandidate *candidate)
purple_media_candidate_get_priority	media/candidate.h	/^guint32 purple_media_candidate_get_priority(PurpleMediaCandidate *candidate);$/;"	p	signature:(PurpleMediaCandidate *candidate)
purple_media_candidate_get_property	media/candidate.c	/^purple_media_candidate_get_property (GObject *object, guint prop_id,$/;"	f	file:	signature:(GObject *object, guint prop_id, GValue *value, GParamSpec *pspec)
purple_media_candidate_get_protocol	media/candidate.c	/^purple_media_candidate_get_protocol(PurpleMediaCandidate *candidate)$/;"	f	signature:(PurpleMediaCandidate *candidate)
purple_media_candidate_get_protocol	media/candidate.h	/^PurpleMediaNetworkProtocol purple_media_candidate_get_protocol($/;"	p	signature:( PurpleMediaCandidate *candidate)
purple_media_candidate_get_ttl	media/candidate.c	/^purple_media_candidate_get_ttl(PurpleMediaCandidate *candidate)$/;"	f	signature:(PurpleMediaCandidate *candidate)
purple_media_candidate_get_ttl	media/candidate.h	/^guint purple_media_candidate_get_ttl(PurpleMediaCandidate *candidate);$/;"	p	signature:(PurpleMediaCandidate *candidate)
purple_media_candidate_get_type	media/candidate.h	/^GType purple_media_candidate_get_type(void);$/;"	p	signature:(void)
purple_media_candidate_get_username	media/candidate.c	/^purple_media_candidate_get_username(PurpleMediaCandidate *candidate)$/;"	f	signature:(PurpleMediaCandidate *candidate)
purple_media_candidate_get_username	media/candidate.h	/^gchar *purple_media_candidate_get_username(PurpleMediaCandidate *candidate);$/;"	p	signature:(PurpleMediaCandidate *candidate)
purple_media_candidate_init	media/candidate.c	/^purple_media_candidate_init(PurpleMediaCandidate *info)$/;"	f	file:	signature:(PurpleMediaCandidate *info)
purple_media_candidate_list_copy	media/candidate.c	/^purple_media_candidate_list_copy(GList *candidates)$/;"	f	signature:(GList *candidates)
purple_media_candidate_list_copy	media/candidate.h	/^GList *purple_media_candidate_list_copy(GList *candidates);$/;"	p	signature:(GList *candidates)
purple_media_candidate_list_free	media/candidate.c	/^purple_media_candidate_list_free(GList *candidates)$/;"	f	signature:(GList *candidates)
purple_media_candidate_list_free	media/candidate.h	/^void purple_media_candidate_list_free(GList *candidates);$/;"	p	signature:(GList *candidates)
purple_media_candidate_new	media/candidate.c	/^purple_media_candidate_new(const gchar *foundation, guint component_id,$/;"	f	signature:(const gchar *foundation, guint component_id, PurpleMediaCandidateType type, PurpleMediaNetworkProtocol proto, const gchar *ip, guint port)
purple_media_candidate_new	media/candidate.h	/^PurpleMediaCandidate *purple_media_candidate_new($/;"	p	signature:( const gchar *foundation, guint component_id, PurpleMediaCandidateType type, PurpleMediaNetworkProtocol proto, const gchar *ip, guint port)
purple_media_candidate_pair_established_cb	media.c	/^purple_media_candidate_pair_established_cb(PurpleMediaBackend *backend,$/;"	f	file:	signature:(PurpleMediaBackend *backend, const gchar *sess_id, const gchar *name, PurpleMediaCandidate *local_candidate, PurpleMediaCandidate *remote_candidate, PurpleMedia *media)
purple_media_candidate_pair_established_cb	media.c	/^static void purple_media_candidate_pair_established_cb($/;"	p	file:	signature:( PurpleMediaBackend *backend, const gchar *sess_id, const gchar *name, PurpleMediaCandidate *local_candidate, PurpleMediaCandidate *remote_candidate, PurpleMedia *media)
purple_media_candidate_set_property	media/candidate.c	/^purple_media_candidate_set_property (GObject *object, guint prop_id,$/;"	f	file:	signature:(GObject *object, guint prop_id, const GValue *value, GParamSpec *pspec)
purple_media_candidate_type_get_type	media/enum-types.c	/^purple_media_candidate_type_get_type()$/;"	f
purple_media_candidate_type_get_type	media/enum-types.h	/^GType purple_media_candidate_type_get_type(void);$/;"	p	signature:(void)
purple_media_candidates_prepared	media.c	/^purple_media_candidates_prepared(PurpleMedia *media,$/;"	f	signature:(PurpleMedia *media, const gchar *session_id, const gchar *participant)
purple_media_candidates_prepared	media.h	/^gboolean purple_media_candidates_prepared(PurpleMedia *media,$/;"	p	signature:(PurpleMedia *media, const gchar *session_id, const gchar *participant)
purple_media_candidates_prepared_cb	media.c	/^purple_media_candidates_prepared_cb(PurpleMediaBackend *backend,$/;"	f	file:	signature:(PurpleMediaBackend *backend, const gchar *sess_id, const gchar *name, PurpleMedia *media)
purple_media_candidates_prepared_cb	media.c	/^static void purple_media_candidates_prepared_cb(PurpleMediaBackend *backend,$/;"	p	file:	signature:(PurpleMediaBackend *backend, const gchar *sess_id, const gchar *name, PurpleMedia *media)
purple_media_caps_get_type	media/enum-types.c	/^purple_media_caps_get_type()$/;"	f
purple_media_caps_get_type	media/enum-types.h	/^GType purple_media_caps_get_type(void);$/;"	p	signature:(void)
purple_media_class_init	media.c	/^purple_media_class_init (PurpleMediaClass *klass)$/;"	f	file:	signature:(PurpleMediaClass *klass)
purple_media_class_init	media.c	/^static void purple_media_class_init (PurpleMediaClass *klass);$/;"	p	file:	signature:(PurpleMediaClass *klass)
purple_media_codec_add_optional_parameter	media/codec.c	/^purple_media_codec_add_optional_parameter(PurpleMediaCodec *codec,$/;"	f	signature:(PurpleMediaCodec *codec, const gchar *name, const gchar *value)
purple_media_codec_add_optional_parameter	media/codec.h	/^void purple_media_codec_add_optional_parameter(PurpleMediaCodec *codec,$/;"	p	signature:(PurpleMediaCodec *codec, const gchar *name, const gchar *value)
purple_media_codec_class_init	media/codec.c	/^purple_media_codec_class_init(PurpleMediaCodecClass *klass)$/;"	f	file:	signature:(PurpleMediaCodecClass *klass)
purple_media_codec_copy	media/codec.c	/^purple_media_codec_copy(PurpleMediaCodec *codec)$/;"	f	signature:(PurpleMediaCodec *codec)
purple_media_codec_copy	media/codec.h	/^PurpleMediaCodec *purple_media_codec_copy(PurpleMediaCodec *codec);$/;"	p	signature:(PurpleMediaCodec *codec)
purple_media_codec_finalize	media/codec.c	/^purple_media_codec_finalize(GObject *info)$/;"	f	file:	signature:(GObject *info)
purple_media_codec_get_channels	media/codec.c	/^purple_media_codec_get_channels(PurpleMediaCodec *codec)$/;"	f	signature:(PurpleMediaCodec *codec)
purple_media_codec_get_channels	media/codec.h	/^guint purple_media_codec_get_channels(PurpleMediaCodec *codec);$/;"	p	signature:(PurpleMediaCodec *codec)
purple_media_codec_get_clock_rate	media/codec.c	/^purple_media_codec_get_clock_rate(PurpleMediaCodec *codec)$/;"	f	signature:(PurpleMediaCodec *codec)
purple_media_codec_get_clock_rate	media/codec.h	/^guint purple_media_codec_get_clock_rate(PurpleMediaCodec *codec);$/;"	p	signature:(PurpleMediaCodec *codec)
purple_media_codec_get_encoding_name	media/codec.c	/^purple_media_codec_get_encoding_name(PurpleMediaCodec *codec)$/;"	f	signature:(PurpleMediaCodec *codec)
purple_media_codec_get_encoding_name	media/codec.h	/^gchar *purple_media_codec_get_encoding_name(PurpleMediaCodec *codec);$/;"	p	signature:(PurpleMediaCodec *codec)
purple_media_codec_get_id	media/codec.c	/^purple_media_codec_get_id(PurpleMediaCodec *codec)$/;"	f	signature:(PurpleMediaCodec *codec)
purple_media_codec_get_id	media/codec.h	/^guint purple_media_codec_get_id(PurpleMediaCodec *codec);$/;"	p	signature:(PurpleMediaCodec *codec)
purple_media_codec_get_optional_parameter	media/codec.c	/^purple_media_codec_get_optional_parameter(PurpleMediaCodec *codec,$/;"	f	signature:(PurpleMediaCodec *codec, const gchar *name, const gchar *value)
purple_media_codec_get_optional_parameter	media/codec.h	/^PurpleKeyValuePair *purple_media_codec_get_optional_parameter($/;"	p	signature:( PurpleMediaCodec *codec, const gchar *name, const gchar *value)
purple_media_codec_get_optional_parameters	media/codec.c	/^purple_media_codec_get_optional_parameters(PurpleMediaCodec *codec)$/;"	f	signature:(PurpleMediaCodec *codec)
purple_media_codec_get_optional_parameters	media/codec.h	/^GList *purple_media_codec_get_optional_parameters(PurpleMediaCodec *codec);$/;"	p	signature:(PurpleMediaCodec *codec)
purple_media_codec_get_property	media/codec.c	/^purple_media_codec_get_property (GObject *object, guint prop_id,$/;"	f	file:	signature:(GObject *object, guint prop_id, GValue *value, GParamSpec *pspec)
purple_media_codec_get_type	media/codec.h	/^GType purple_media_codec_get_type(void);$/;"	p	signature:(void)
purple_media_codec_init	media/codec.c	/^purple_media_codec_init(PurpleMediaCodec *info)$/;"	f	file:	signature:(PurpleMediaCodec *info)
purple_media_codec_list_copy	media/codec.c	/^purple_media_codec_list_copy(GList *codecs)$/;"	f	signature:(GList *codecs)
purple_media_codec_list_copy	media/codec.h	/^GList *purple_media_codec_list_copy(GList *codecs);$/;"	p	signature:(GList *codecs)
purple_media_codec_list_free	media/codec.c	/^purple_media_codec_list_free(GList *codecs)$/;"	f	signature:(GList *codecs)
purple_media_codec_list_free	media/codec.h	/^void purple_media_codec_list_free(GList *codecs);$/;"	p	signature:(GList *codecs)
purple_media_codec_new	media/codec.c	/^purple_media_codec_new(int id, const char *encoding_name,$/;"	f	signature:(int id, const char *encoding_name, PurpleMediaSessionType media_type, guint clock_rate)
purple_media_codec_new	media/codec.h	/^PurpleMediaCodec *purple_media_codec_new(int id, const char *encoding_name,$/;"	p	signature:(int id, const char *encoding_name, PurpleMediaSessionType media_type, guint clock_rate)
purple_media_codec_remove_optional_parameter	media/codec.c	/^purple_media_codec_remove_optional_parameter(PurpleMediaCodec *codec,$/;"	f	signature:(PurpleMediaCodec *codec, PurpleKeyValuePair *param)
purple_media_codec_remove_optional_parameter	media/codec.h	/^void purple_media_codec_remove_optional_parameter(PurpleMediaCodec *codec,$/;"	p	signature:(PurpleMediaCodec *codec, PurpleKeyValuePair *param)
purple_media_codec_set_property	media/codec.c	/^purple_media_codec_set_property (GObject *object, guint prop_id,$/;"	f	file:	signature:(GObject *object, guint prop_id, const GValue *value, GParamSpec *pspec)
purple_media_codec_to_string	media/codec.c	/^purple_media_codec_to_string(const PurpleMediaCodec *codec)$/;"	f	signature:(const PurpleMediaCodec *codec)
purple_media_codec_to_string	media/codec.h	/^gchar *purple_media_codec_to_string(const PurpleMediaCodec *codec);$/;"	p	signature:(const PurpleMediaCodec *codec)
purple_media_codecs_changed_cb	media.c	/^purple_media_codecs_changed_cb(PurpleMediaBackend *backend,$/;"	f	file:	signature:(PurpleMediaBackend *backend, const gchar *sess_id, PurpleMedia *media)
purple_media_codecs_changed_cb	media.c	/^static void purple_media_codecs_changed_cb(PurpleMediaBackend *backend,$/;"	p	file:	signature:(PurpleMediaBackend *backend, const gchar *sess_id, PurpleMedia *media)
purple_media_codecs_ready	media.c	/^purple_media_codecs_ready(PurpleMedia *media, const gchar *sess_id)$/;"	f	signature:(PurpleMedia *media, const gchar *sess_id)
purple_media_codecs_ready	media.h	/^gboolean purple_media_codecs_ready(PurpleMedia *media, const gchar *sess_id);$/;"	p	signature:(PurpleMedia *media, const gchar *sess_id)
purple_media_dispose	media.c	/^purple_media_dispose(GObject *media)$/;"	f	file:	signature:(GObject *media)
purple_media_dispose	media.c	/^static void purple_media_dispose (GObject *object);$/;"	p	file:	signature:(GObject *object)
purple_media_element_info_call_create	media-gst.h	/^GstElement *purple_media_element_info_call_create($/;"	p	signature:( PurpleMediaElementInfo *info, PurpleMedia *media, const gchar *session_id, const gchar *participant)
purple_media_element_info_call_create	mediamanager.c	/^purple_media_element_info_call_create(PurpleMediaElementInfo *info,$/;"	f	signature:(PurpleMediaElementInfo *info, PurpleMedia *media, const gchar *session_id, const gchar *participant)
purple_media_element_info_class_init	mediamanager.c	/^purple_media_element_info_class_init(PurpleMediaElementInfoClass *klass)$/;"	f	file:	signature:(PurpleMediaElementInfoClass *klass)
purple_media_element_info_finalize	mediamanager.c	/^purple_media_element_info_finalize(GObject *info)$/;"	f	file:	signature:(GObject *info)
purple_media_element_info_get_element_type	media-gst.h	/^PurpleMediaElementType purple_media_element_info_get_element_type($/;"	p	signature:( PurpleMediaElementInfo *info)
purple_media_element_info_get_element_type	mediamanager.c	/^purple_media_element_info_get_element_type(PurpleMediaElementInfo *info)$/;"	f	signature:(PurpleMediaElementInfo *info)
purple_media_element_info_get_id	media-gst.h	/^gchar *purple_media_element_info_get_id(PurpleMediaElementInfo *info);$/;"	p	signature:(PurpleMediaElementInfo *info)
purple_media_element_info_get_id	mediamanager.c	/^purple_media_element_info_get_id(PurpleMediaElementInfo *info)$/;"	f	signature:(PurpleMediaElementInfo *info)
purple_media_element_info_get_name	media-gst.h	/^gchar *purple_media_element_info_get_name(PurpleMediaElementInfo *info);$/;"	p	signature:(PurpleMediaElementInfo *info)
purple_media_element_info_get_name	mediamanager.c	/^purple_media_element_info_get_name(PurpleMediaElementInfo *info)$/;"	f	signature:(PurpleMediaElementInfo *info)
purple_media_element_info_get_property	mediamanager.c	/^purple_media_element_info_get_property (GObject *object, guint prop_id,$/;"	f	file:	signature:(GObject *object, guint prop_id, GValue *value, GParamSpec *pspec)
purple_media_element_info_get_type	media-gst.h	/^GType purple_media_element_info_get_type(void);$/;"	p	signature:(void)
purple_media_element_info_get_type	mediamanager.c	/^purple_media_element_info_get_type()$/;"	f
purple_media_element_info_init	mediamanager.c	/^purple_media_element_info_init(PurpleMediaElementInfo *info)$/;"	f	file:	signature:(PurpleMediaElementInfo *info)
purple_media_element_info_set_property	mediamanager.c	/^purple_media_element_info_set_property (GObject *object, guint prop_id,$/;"	f	file:	signature:(GObject *object, guint prop_id, const GValue *value, GParamSpec *pspec)
purple_media_element_type_get_type	media-gst.h	/^GType purple_media_element_type_get_type(void);$/;"	p	signature:(void)
purple_media_element_type_get_type	mediamanager.c	/^purple_media_element_type_get_type()$/;"	f
purple_media_end	media.c	/^purple_media_end(PurpleMedia *media,$/;"	f	signature:(PurpleMedia *media, const gchar *session_id, const gchar *participant)
purple_media_end	media.h	/^void purple_media_end(PurpleMedia *media, const gchar *session_id,$/;"	p	signature:(PurpleMedia *media, const gchar *session_id, const gchar *participant)
purple_media_error	media.c	/^purple_media_error(PurpleMedia *media, const gchar *error, ...)$/;"	f	signature:(PurpleMedia *media, const gchar *error, ...)
purple_media_error	media.h	/^void purple_media_error(PurpleMedia *media, const gchar *error, ...);$/;"	p	signature:(PurpleMedia *media, const gchar *error, ...)
purple_media_finalize	media.c	/^purple_media_finalize(GObject *media)$/;"	f	file:	signature:(GObject *media)
purple_media_finalize	media.c	/^static void purple_media_finalize (GObject *object);$/;"	p	file:	signature:(GObject *object)
purple_media_get_account	media.c	/^purple_media_get_account(PurpleMedia *media)$/;"	f	signature:(PurpleMedia *media)
purple_media_get_account	media.h	/^PurpleAccount *purple_media_get_account(PurpleMedia *media);$/;"	p	signature:(PurpleMedia *media)
purple_media_get_active_local_candidates	media.c	/^purple_media_get_active_local_candidates(PurpleMedia *media,$/;"	f	signature:(PurpleMedia *media, const gchar *sess_id, const gchar *participant)
purple_media_get_active_local_candidates	media.h	/^GList *purple_media_get_active_local_candidates(PurpleMedia *media,$/;"	p	signature:(PurpleMedia *media, const gchar *sess_id, const gchar *participant)
purple_media_get_active_remote_candidates	media.c	/^purple_media_get_active_remote_candidates(PurpleMedia *media,$/;"	f	signature:(PurpleMedia *media, const gchar *sess_id, const gchar *participant)
purple_media_get_active_remote_candidates	media.h	/^GList *purple_media_get_active_remote_candidates(PurpleMedia *media,$/;"	p	signature:(PurpleMedia *media, const gchar *sess_id, const gchar *participant)
purple_media_get_available_params	media.c	/^purple_media_get_available_params(PurpleMedia *media)$/;"	f	signature:(PurpleMedia *media)
purple_media_get_available_params	media.h	/^const gchar **purple_media_get_available_params(PurpleMedia *media);$/;"	p	signature:(PurpleMedia *media)
purple_media_get_codecs	media.c	/^purple_media_get_codecs(PurpleMedia *media, const gchar *sess_id)$/;"	f	signature:(PurpleMedia *media, const gchar *sess_id)
purple_media_get_codecs	media.h	/^GList *purple_media_get_codecs(PurpleMedia *media, const gchar *sess_id);$/;"	p	signature:(PurpleMedia *media, const gchar *sess_id)
purple_media_get_local_candidates	media.c	/^purple_media_get_local_candidates(PurpleMedia *media, const gchar *sess_id,$/;"	f	signature:(PurpleMedia *media, const gchar *sess_id, const gchar *participant)
purple_media_get_local_candidates	media.h	/^GList *purple_media_get_local_candidates(PurpleMedia *media,$/;"	p	signature:(PurpleMedia *media, const gchar *sess_id, const gchar *participant)
purple_media_get_manager	media.c	/^purple_media_get_manager(PurpleMedia *media)$/;"	f	signature:(PurpleMedia *media)
purple_media_get_manager	media.h	/^struct _PurpleMediaManager *purple_media_get_manager(PurpleMedia *media);$/;"	p	signature:(PurpleMedia *media)
purple_media_get_property	media.c	/^purple_media_get_property (GObject *object, guint prop_id, GValue *value, GParamSpec *pspec)$/;"	f	file:	signature:(GObject *object, guint prop_id, GValue *value, GParamSpec *pspec)
purple_media_get_property	media.c	/^static void purple_media_get_property (GObject *object, guint prop_id, GValue *value, GParamSpec *pspec);$/;"	p	file:	signature:(GObject *object, guint prop_id, GValue *value, GParamSpec *pspec)
purple_media_get_prpl_data	media.c	/^purple_media_get_prpl_data(PurpleMedia *media)$/;"	f	signature:(PurpleMedia *media)
purple_media_get_prpl_data	media.h	/^gpointer purple_media_get_prpl_data(PurpleMedia *media);$/;"	p	signature:(PurpleMedia *media)
purple_media_get_session	media.c	/^purple_media_get_session(PurpleMedia *media, const gchar *sess_id)$/;"	f	file:	signature:(PurpleMedia *media, const gchar *sess_id)
purple_media_get_session_ids	media.c	/^purple_media_get_session_ids(PurpleMedia *media)$/;"	f	signature:(PurpleMedia *media)
purple_media_get_session_ids	media.h	/^GList *purple_media_get_session_ids(PurpleMedia *media);$/;"	p	signature:(PurpleMedia *media)
purple_media_get_session_type	media.c	/^purple_media_get_session_type(PurpleMedia *media, const gchar *sess_id)$/;"	f	signature:(PurpleMedia *media, const gchar *sess_id)
purple_media_get_session_type	media.h	/^PurpleMediaSessionType purple_media_get_session_type(PurpleMedia *media, const gchar *sess_id);$/;"	p	signature:(PurpleMedia *media, const gchar *sess_id)
purple_media_get_src	media-gst.h	/^GstElement *purple_media_get_src(PurpleMedia *media, const gchar *sess_id);$/;"	p	signature:(PurpleMedia *media, const gchar *sess_id)
purple_media_get_src	media.c	/^purple_media_get_src(PurpleMedia *media, const gchar *sess_id)$/;"	f	signature:(PurpleMedia *media, const gchar *sess_id)
purple_media_get_stream	media.c	/^purple_media_get_stream(PurpleMedia *media, const gchar *session, const gchar *participant)$/;"	f	file:	signature:(PurpleMedia *media, const gchar *session, const gchar *participant)
purple_media_get_streams	media.c	/^purple_media_get_streams(PurpleMedia *media, const gchar *session,$/;"	f	file:	signature:(PurpleMedia *media, const gchar *session, const gchar *participant)
purple_media_get_tee	media-gst.h	/^GstElement *purple_media_get_tee(PurpleMedia *media,$/;"	p	signature:(PurpleMedia *media, const gchar *session_id, const gchar *participant)
purple_media_get_tee	media.c	/^purple_media_get_tee(PurpleMedia *media,$/;"	f	signature:(PurpleMedia *media, const gchar *session_id, const gchar *participant)
purple_media_get_type	media.c	/^purple_media_get_type()$/;"	f
purple_media_get_type	media.h	/^GType purple_media_get_type(void);$/;"	p	signature:(void)
purple_media_info_type_get_type	media/enum-types.c	/^purple_media_info_type_get_type()$/;"	f
purple_media_info_type_get_type	media/enum-types.h	/^GType purple_media_info_type_get_type(void);$/;"	p	signature:(void)
purple_media_init	media.c	/^purple_media_init (PurpleMedia *media)$/;"	f	file:	signature:(PurpleMedia *media)
purple_media_init	media.c	/^static void purple_media_init (PurpleMedia *media);$/;"	p	file:	signature:(PurpleMedia *media)
purple_media_insert_local_candidate	media.c	/^purple_media_insert_local_candidate(PurpleMediaSession *session, const gchar *name,$/;"	f	file:	signature:(PurpleMediaSession *session, const gchar *name, PurpleMediaCandidate *candidate)
purple_media_insert_stream	media.c	/^purple_media_insert_stream(PurpleMediaSession *session,$/;"	f	file:	signature:(PurpleMediaSession *session, const gchar *name, gboolean initiator)
purple_media_is_initiator	media.c	/^purple_media_is_initiator(PurpleMedia *media,$/;"	f	signature:(PurpleMedia *media, const gchar *sess_id, const gchar *participant)
purple_media_is_initiator	media.h	/^gboolean purple_media_is_initiator(PurpleMedia *media,$/;"	p	signature:(PurpleMedia *media, const gchar *sess_id, const gchar *participant)
purple_media_manager_class_init	mediamanager.c	/^purple_media_manager_class_init (PurpleMediaManagerClass *klass)$/;"	f	file:	signature:(PurpleMediaManagerClass *klass)
purple_media_manager_class_init	mediamanager.c	/^static void purple_media_manager_class_init (PurpleMediaManagerClass *klass);$/;"	p	file:	signature:(PurpleMediaManagerClass *klass)
purple_media_manager_create_media	mediamanager.c	/^purple_media_manager_create_media(PurpleMediaManager *manager,$/;"	f	signature:(PurpleMediaManager *manager, PurpleAccount *account, const char *conference_type, const char *remote_user, gboolean initiator)
purple_media_manager_create_media	mediamanager.h	/^PurpleMedia *purple_media_manager_create_media(PurpleMediaManager *manager,$/;"	p	signature:(PurpleMediaManager *manager, PurpleAccount *account, const char *conference_type, const char *remote_user, gboolean initiator)
purple_media_manager_create_output_window	mediamanager.c	/^purple_media_manager_create_output_window(PurpleMediaManager *manager,$/;"	f	signature:(PurpleMediaManager *manager, PurpleMedia *media, const gchar *session_id, const gchar *participant)
purple_media_manager_create_output_window	mediamanager.h	/^gboolean purple_media_manager_create_output_window($/;"	p	signature:( PurpleMediaManager *manager, PurpleMedia *media, const gchar *session_id, const gchar *participant)
purple_media_manager_finalize	mediamanager.c	/^purple_media_manager_finalize (GObject *media)$/;"	f	file:	signature:(GObject *media)
purple_media_manager_finalize	mediamanager.c	/^static void purple_media_manager_finalize (GObject *object);$/;"	p	file:	signature:(GObject *object)
purple_media_manager_get	mediamanager.c	/^purple_media_manager_get()$/;"	f
purple_media_manager_get	mediamanager.h	/^PurpleMediaManager *purple_media_manager_get(void);$/;"	p	signature:(void)
purple_media_manager_get_active_element	media-gst.h	/^PurpleMediaElementInfo *purple_media_manager_get_active_element($/;"	p	signature:( PurpleMediaManager *manager, PurpleMediaElementType type)
purple_media_manager_get_active_element	mediamanager.c	/^purple_media_manager_get_active_element(PurpleMediaManager *manager,$/;"	f	signature:(PurpleMediaManager *manager, PurpleMediaElementType type)
purple_media_manager_get_backend_type	mediamanager.c	/^purple_media_manager_get_backend_type(PurpleMediaManager *manager)$/;"	f	signature:(PurpleMediaManager *manager)
purple_media_manager_get_backend_type	mediamanager.h	/^GType purple_media_manager_get_backend_type(PurpleMediaManager *manager);$/;"	p	signature:(PurpleMediaManager *manager)
purple_media_manager_get_element	media-gst.h	/^GstElement *purple_media_manager_get_element(PurpleMediaManager *manager,$/;"	p	signature:(PurpleMediaManager *manager, PurpleMediaSessionType type, PurpleMedia *media, const gchar *session_id, const gchar *participant)
purple_media_manager_get_element	mediamanager.c	/^purple_media_manager_get_element(PurpleMediaManager *manager,$/;"	f	signature:(PurpleMediaManager *manager, PurpleMediaSessionType type, PurpleMedia *media, const gchar *session_id, const gchar *participant)
purple_media_manager_get_element_info	media-gst.h	/^PurpleMediaElementInfo *purple_media_manager_get_element_info($/;"	p	signature:( PurpleMediaManager *manager, const gchar *name)
purple_media_manager_get_element_info	mediamanager.c	/^purple_media_manager_get_element_info(PurpleMediaManager *manager,$/;"	f	signature:(PurpleMediaManager *manager, const gchar *id)
purple_media_manager_get_media	mediamanager.c	/^purple_media_manager_get_media(PurpleMediaManager *manager)$/;"	f	signature:(PurpleMediaManager *manager)
purple_media_manager_get_media	mediamanager.h	/^GList *purple_media_manager_get_media(PurpleMediaManager *manager);$/;"	p	signature:(PurpleMediaManager *manager)
purple_media_manager_get_media_by_account	mediamanager.c	/^purple_media_manager_get_media_by_account(PurpleMediaManager *manager,$/;"	f	signature:(PurpleMediaManager *manager, PurpleAccount *account)
purple_media_manager_get_media_by_account	mediamanager.h	/^GList *purple_media_manager_get_media_by_account($/;"	p	signature:( PurpleMediaManager *manager, PurpleAccount *account)
purple_media_manager_get_pipeline	media-gst.h	/^GstElement *purple_media_manager_get_pipeline(PurpleMediaManager *manager);$/;"	p	signature:(PurpleMediaManager *manager)
purple_media_manager_get_pipeline	mediamanager.c	/^purple_media_manager_get_pipeline(PurpleMediaManager *manager)$/;"	f	signature:(PurpleMediaManager *manager)
purple_media_manager_get_type	mediamanager.c	/^purple_media_manager_get_type()$/;"	f
purple_media_manager_get_type	mediamanager.h	/^GType purple_media_manager_get_type(void);$/;"	p	signature:(void)
purple_media_manager_get_ui_caps	mediamanager.c	/^purple_media_manager_get_ui_caps(PurpleMediaManager *manager)$/;"	f	signature:(PurpleMediaManager *manager)
purple_media_manager_get_ui_caps	mediamanager.h	/^PurpleMediaCaps purple_media_manager_get_ui_caps(PurpleMediaManager *manager);$/;"	p	signature:(PurpleMediaManager *manager)
purple_media_manager_get_video_caps	media-gst.h	/^GstCaps *purple_media_manager_get_video_caps(PurpleMediaManager *manager);$/;"	p	signature:(PurpleMediaManager *manager)
purple_media_manager_get_video_caps	mediamanager.c	/^purple_media_manager_get_video_caps(PurpleMediaManager *manager)$/;"	f	signature:(PurpleMediaManager *manager)
purple_media_manager_init	mediamanager.c	/^purple_media_manager_init (PurpleMediaManager *media)$/;"	f	file:	signature:(PurpleMediaManager *media)
purple_media_manager_init	mediamanager.c	/^static void purple_media_manager_init (PurpleMediaManager *media);$/;"	p	file:	signature:(PurpleMediaManager *media)
purple_media_manager_register_element	media-gst.h	/^gboolean purple_media_manager_register_element(PurpleMediaManager *manager,$/;"	p	signature:(PurpleMediaManager *manager, PurpleMediaElementInfo *info)
purple_media_manager_register_element	mediamanager.c	/^purple_media_manager_register_element(PurpleMediaManager *manager,$/;"	f	signature:(PurpleMediaManager *manager, PurpleMediaElementInfo *info)
purple_media_manager_remove_media	mediamanager.c	/^purple_media_manager_remove_media(PurpleMediaManager *manager,$/;"	f	signature:(PurpleMediaManager *manager, PurpleMedia *media)
purple_media_manager_remove_media	mediamanager.h	/^purple_media_manager_remove_media(PurpleMediaManager *manager,$/;"	p	signature:(PurpleMediaManager *manager, PurpleMedia *media)
purple_media_manager_remove_output_window	mediamanager.c	/^purple_media_manager_remove_output_window(PurpleMediaManager *manager,$/;"	f	signature:(PurpleMediaManager *manager, gulong output_window_id)
purple_media_manager_remove_output_window	mediamanager.h	/^gboolean purple_media_manager_remove_output_window($/;"	p	signature:( PurpleMediaManager *manager, gulong output_window_id)
purple_media_manager_remove_output_windows	mediamanager.c	/^purple_media_manager_remove_output_windows(PurpleMediaManager *manager,$/;"	f	signature:(PurpleMediaManager *manager, PurpleMedia *media, const gchar *session_id, const gchar *participant)
purple_media_manager_remove_output_windows	mediamanager.h	/^void purple_media_manager_remove_output_windows($/;"	p	signature:( PurpleMediaManager *manager, PurpleMedia *media, const gchar *session_id, const gchar *participant)
purple_media_manager_set_active_element	media-gst.h	/^gboolean purple_media_manager_set_active_element(PurpleMediaManager *manager,$/;"	p	signature:(PurpleMediaManager *manager, PurpleMediaElementInfo *info)
purple_media_manager_set_active_element	mediamanager.c	/^purple_media_manager_set_active_element(PurpleMediaManager *manager,$/;"	f	signature:(PurpleMediaManager *manager, PurpleMediaElementInfo *info)
purple_media_manager_set_backend_type	mediamanager.c	/^purple_media_manager_set_backend_type(PurpleMediaManager *manager,$/;"	f	signature:(PurpleMediaManager *manager, GType backend_type)
purple_media_manager_set_backend_type	mediamanager.h	/^void purple_media_manager_set_backend_type(PurpleMediaManager *manager,$/;"	p	signature:(PurpleMediaManager *manager, GType backend_type)
purple_media_manager_set_output_window	mediamanager.c	/^purple_media_manager_set_output_window(PurpleMediaManager *manager,$/;"	f	signature:(PurpleMediaManager *manager, PurpleMedia *media, const gchar *session_id, const gchar *participant, gulong window_id)
purple_media_manager_set_output_window	mediamanager.h	/^gulong purple_media_manager_set_output_window(PurpleMediaManager *manager,$/;"	p	signature:(PurpleMediaManager *manager, PurpleMedia *media, const gchar *session_id, const gchar *participant, gulong window_id)
purple_media_manager_set_ui_caps	mediamanager.c	/^purple_media_manager_set_ui_caps(PurpleMediaManager *manager,$/;"	f	signature:(PurpleMediaManager *manager, PurpleMediaCaps caps)
purple_media_manager_set_ui_caps	mediamanager.h	/^void purple_media_manager_set_ui_caps(PurpleMediaManager *manager,$/;"	p	signature:(PurpleMediaManager *manager, PurpleMediaCaps caps)
purple_media_manager_set_video_caps	media-gst.h	/^void purple_media_manager_set_video_caps(PurpleMediaManager *manager,$/;"	p	signature:(PurpleMediaManager *manager, GstCaps *caps)
purple_media_manager_set_video_caps	mediamanager.c	/^purple_media_manager_set_video_caps(PurpleMediaManager *manager, GstCaps *caps)$/;"	f	signature:(PurpleMediaManager *manager, GstCaps *caps)
purple_media_manager_signals	mediamanager.c	/^static guint purple_media_manager_signals[LAST_SIGNAL] = {0};$/;"	v	file:
purple_media_manager_unregister_element	media-gst.h	/^gboolean purple_media_manager_unregister_element(PurpleMediaManager *manager,$/;"	p	signature:(PurpleMediaManager *manager, const gchar *name)
purple_media_manager_unregister_element	mediamanager.c	/^purple_media_manager_unregister_element(PurpleMediaManager *manager,$/;"	f	signature:(PurpleMediaManager *manager, const gchar *id)
purple_media_network_protocol_get_type	media/enum-types.c	/^purple_media_network_protocol_get_type()$/;"	f
purple_media_network_protocol_get_type	media/enum-types.h	/^GType purple_media_network_protocol_get_type(void);$/;"	p	signature:(void)
purple_media_new_local_candidate_cb	media.c	/^purple_media_new_local_candidate_cb(PurpleMediaBackend *backend,$/;"	f	file:	signature:(PurpleMediaBackend *backend, const gchar *sess_id, const gchar *participant, PurpleMediaCandidate *candidate, PurpleMedia *media)
purple_media_new_local_candidate_cb	media.c	/^static void purple_media_new_local_candidate_cb(PurpleMediaBackend *backend,$/;"	p	file:	signature:(PurpleMediaBackend *backend, const gchar *sess_id, const gchar *participant, PurpleMediaCandidate *candidate, PurpleMedia *media)
purple_media_param_is_supported	media.c	/^purple_media_param_is_supported(PurpleMedia *media, const gchar *param)$/;"	f	signature:(PurpleMedia *media, const gchar *param)
purple_media_param_is_supported	media.h	/^gboolean purple_media_param_is_supported(PurpleMedia *media, const gchar *param);$/;"	p	signature:(PurpleMedia *media, const gchar *param)
purple_media_remove_output_windows	media.c	/^purple_media_remove_output_windows(PurpleMedia *media)$/;"	f	signature:(PurpleMedia *media)
purple_media_remove_output_windows	media.h	/^void purple_media_remove_output_windows(PurpleMedia *media);$/;"	p	signature:(PurpleMedia *media)
purple_media_session_free	media.c	/^purple_media_session_free(PurpleMediaSession *session)$/;"	f	file:	signature:(PurpleMediaSession *session)
purple_media_session_type_get_type	media/enum-types.c	/^purple_media_session_type_get_type()$/;"	f
purple_media_session_type_get_type	media/enum-types.h	/^GType purple_media_session_type_get_type(void);$/;"	p	signature:(void)
purple_media_set_input_volume	media.c	/^void purple_media_set_input_volume(PurpleMedia *media,$/;"	f	signature:(PurpleMedia *media, const gchar *session_id, double level)
purple_media_set_input_volume	media.h	/^void purple_media_set_input_volume(PurpleMedia *media, const gchar *session_id, double level);$/;"	p	signature:(PurpleMedia *media, const gchar *session_id, double level)
purple_media_set_output_volume	media.c	/^void purple_media_set_output_volume(PurpleMedia *media,$/;"	f	signature:(PurpleMedia *media, const gchar *session_id, const gchar *participant, double level)
purple_media_set_output_volume	media.h	/^void purple_media_set_output_volume(PurpleMedia *media, const gchar *session_id,$/;"	p	signature:(PurpleMedia *media, const gchar *session_id, const gchar *participant, double level)
purple_media_set_output_window	media.c	/^purple_media_set_output_window(PurpleMedia *media, const gchar *session_id,$/;"	f	signature:(PurpleMedia *media, const gchar *session_id, const gchar *participant, gulong window_id)
purple_media_set_output_window	media.h	/^gulong purple_media_set_output_window(PurpleMedia *media,$/;"	p	signature:(PurpleMedia *media, const gchar *session_id, const gchar *participant, gulong window_id)
purple_media_set_params	media.c	/^purple_media_set_params(PurpleMedia *media,$/;"	f	signature:(PurpleMedia *media, guint num_params, GParameter *params)
purple_media_set_params	media.h	/^void purple_media_set_params(PurpleMedia *media,$/;"	p	signature:(PurpleMedia *media, guint num_params, GParameter *params)
purple_media_set_property	media.c	/^purple_media_set_property (GObject *object, guint prop_id, const GValue *value, GParamSpec *pspec)$/;"	f	file:	signature:(GObject *object, guint prop_id, const GValue *value, GParamSpec *pspec)
purple_media_set_property	media.c	/^static void purple_media_set_property (GObject *object, guint prop_id, const GValue *value, GParamSpec *pspec);$/;"	p	file:	signature:(GObject *object, guint prop_id, const GValue *value, GParamSpec *pspec)
purple_media_set_prpl_data	media.c	/^purple_media_set_prpl_data(PurpleMedia *media, gpointer prpl_data)$/;"	f	signature:(PurpleMedia *media, gpointer prpl_data)
purple_media_set_prpl_data	media.h	/^void purple_media_set_prpl_data(PurpleMedia *media, gpointer prpl_data);$/;"	p	signature:(PurpleMedia *media, gpointer prpl_data)
purple_media_set_remote_codecs	media.c	/^purple_media_set_remote_codecs(PurpleMedia *media, const gchar *sess_id,$/;"	f	signature:(PurpleMedia *media, const gchar *sess_id, const gchar *participant, GList *codecs)
purple_media_set_remote_codecs	media.h	/^gboolean purple_media_set_remote_codecs(PurpleMedia *media, const gchar *sess_id,$/;"	p	signature:(PurpleMedia *media, const gchar *sess_id, const gchar *participant, GList *codecs)
purple_media_set_send_codec	media.c	/^purple_media_set_send_codec(PurpleMedia *media, const gchar *sess_id, PurpleMediaCodec *codec)$/;"	f	signature:(PurpleMedia *media, const gchar *sess_id, PurpleMediaCodec *codec)
purple_media_set_send_codec	media.h	/^gboolean purple_media_set_send_codec(PurpleMedia *media, const gchar *sess_id, PurpleMediaCodec *codec);$/;"	p	signature:(PurpleMedia *media, const gchar *sess_id, PurpleMediaCodec *codec)
purple_media_signals	media.c	/^static guint purple_media_signals[LAST_SIGNAL] = {0};$/;"	v	file:
purple_media_state_changed_get_type	media/enum-types.c	/^purple_media_state_changed_get_type()$/;"	f
purple_media_state_changed_get_type	media/enum-types.h	/^GType purple_media_state_changed_get_type(void);$/;"	p	signature:(void)
purple_media_stream_free	media.c	/^purple_media_stream_free(PurpleMediaStream *stream)$/;"	f	file:	signature:(PurpleMediaStream *stream)
purple_media_stream_info	media.c	/^purple_media_stream_info(PurpleMedia *media, PurpleMediaInfoType type,$/;"	f	signature:(PurpleMedia *media, PurpleMediaInfoType type, const gchar *session_id, const gchar *participant, gboolean local)
purple_media_stream_info	media.h	/^void purple_media_stream_info(PurpleMedia *media, PurpleMediaInfoType type,$/;"	p	signature:(PurpleMedia *media, PurpleMediaInfoType type, const gchar *session_id, const gchar *participant, gboolean local)
purple_menu_action_free	util.c	/^purple_menu_action_free(PurpleMenuAction *act)$/;"	f	signature:(PurpleMenuAction *act)
purple_menu_action_free	util.h	/^void purple_menu_action_free(PurpleMenuAction *act);$/;"	p	signature:(PurpleMenuAction *act)
purple_menu_action_new	util.c	/^purple_menu_action_new(const char *label, PurpleCallback callback, gpointer data,$/;"	f	signature:(const char *label, PurpleCallback callback, gpointer data, GList *children)
purple_menu_action_new	util.h	/^PurpleMenuAction *purple_menu_action_new(const char *label, PurpleCallback callback,$/;"	p	signature:(const char *label, PurpleCallback callback, gpointer data, GList *children)
purple_message_meify	util.c	/^gboolean purple_message_meify(char *message, gssize len)$/;"	f	signature:(char *message, gssize len)
purple_message_meify	util.h	/^gboolean purple_message_meify(char *message, gssize len);$/;"	p	signature:(char *message, gssize len)
purple_micro_version	version.c	/^const guint purple_micro_version = PURPLE_MICRO_VERSION;$/;"	v
purple_mime_decode_field	util.c	/^purple_mime_decode_field(const char *str)$/;"	f	signature:(const char *str)
purple_mime_decode_field	util.h	/^char *purple_mime_decode_field(const char *str);$/;"	p	signature:(const char *str)
purple_mime_document_free	mime.c	/^purple_mime_document_free(PurpleMimeDocument *doc)$/;"	f	signature:(PurpleMimeDocument *doc)
purple_mime_document_free	mime.h	/^void purple_mime_document_free(PurpleMimeDocument *doc);$/;"	p	signature:(PurpleMimeDocument *doc)
purple_mime_document_get_field	mime.c	/^purple_mime_document_get_field(PurpleMimeDocument *doc, const char *field)$/;"	f	signature:(PurpleMimeDocument *doc, const char *field)
purple_mime_document_get_field	mime.h	/^const char *purple_mime_document_get_field(PurpleMimeDocument *doc,$/;"	p	signature:(PurpleMimeDocument *doc, const char *field)
purple_mime_document_get_fields	mime.c	/^purple_mime_document_get_fields(PurpleMimeDocument *doc)$/;"	f	signature:(PurpleMimeDocument *doc)
purple_mime_document_get_fields	mime.h	/^GList *purple_mime_document_get_fields(PurpleMimeDocument *doc);$/;"	p	signature:(PurpleMimeDocument *doc)
purple_mime_document_get_parts	mime.c	/^purple_mime_document_get_parts(PurpleMimeDocument *doc)$/;"	f	signature:(PurpleMimeDocument *doc)
purple_mime_document_get_parts	mime.h	/^GList *purple_mime_document_get_parts(PurpleMimeDocument *doc);$/;"	p	signature:(PurpleMimeDocument *doc)
purple_mime_document_new	mime.c	/^purple_mime_document_new()$/;"	f
purple_mime_document_new	mime.h	/^PurpleMimeDocument *purple_mime_document_new(void);$/;"	p	signature:(void)
purple_mime_document_parse	mime.c	/^purple_mime_document_parse(const char *buf)$/;"	f	signature:(const char *buf)
purple_mime_document_parse	mime.h	/^PurpleMimeDocument *purple_mime_document_parse(const char *buf);$/;"	p	signature:(const char *buf)
purple_mime_document_parsen	mime.c	/^purple_mime_document_parsen(const char *buf, gsize len)$/;"	f	signature:(const char *buf, gsize len)
purple_mime_document_parsen	mime.h	/^PurpleMimeDocument *purple_mime_document_parsen(const char *buf, gsize len);$/;"	p	signature:(const char *buf, gsize len)
purple_mime_document_set_field	mime.c	/^purple_mime_document_set_field(PurpleMimeDocument *doc, const char *field, const char *value)$/;"	f	signature:(PurpleMimeDocument *doc, const char *field, const char *value)
purple_mime_document_set_field	mime.h	/^void purple_mime_document_set_field(PurpleMimeDocument *doc,$/;"	p	signature:(PurpleMimeDocument *doc, const char *field, const char *value)
purple_mime_document_write	mime.c	/^purple_mime_document_write(PurpleMimeDocument *doc, GString *str)$/;"	f	signature:(PurpleMimeDocument *doc, GString *str)
purple_mime_document_write	mime.h	/^void purple_mime_document_write(PurpleMimeDocument *doc, GString *str);$/;"	p	signature:(PurpleMimeDocument *doc, GString *str)
purple_mime_part_get_data	mime.c	/^purple_mime_part_get_data(PurpleMimePart *part)$/;"	f	signature:(PurpleMimePart *part)
purple_mime_part_get_data	mime.h	/^const char *purple_mime_part_get_data(PurpleMimePart *part);$/;"	p	signature:(PurpleMimePart *part)
purple_mime_part_get_data_decoded	mime.c	/^purple_mime_part_get_data_decoded(PurpleMimePart *part, guchar **data, gsize *len)$/;"	f	signature:(PurpleMimePart *part, guchar **data, gsize *len)
purple_mime_part_get_data_decoded	mime.h	/^void purple_mime_part_get_data_decoded(PurpleMimePart *part,$/;"	p	signature:(PurpleMimePart *part, guchar **data, gsize *len)
purple_mime_part_get_field	mime.c	/^purple_mime_part_get_field(PurpleMimePart *part, const char *field)$/;"	f	signature:(PurpleMimePart *part, const char *field)
purple_mime_part_get_field	mime.h	/^const char *purple_mime_part_get_field(PurpleMimePart *part,$/;"	p	signature:(PurpleMimePart *part, const char *field)
purple_mime_part_get_field_decoded	mime.c	/^purple_mime_part_get_field_decoded(PurpleMimePart *part, const char *field)$/;"	f	signature:(PurpleMimePart *part, const char *field)
purple_mime_part_get_field_decoded	mime.h	/^char *purple_mime_part_get_field_decoded(PurpleMimePart *part,$/;"	p	signature:(PurpleMimePart *part, const char *field)
purple_mime_part_get_fields	mime.c	/^purple_mime_part_get_fields(PurpleMimePart *part)$/;"	f	signature:(PurpleMimePart *part)
purple_mime_part_get_fields	mime.h	/^GList *purple_mime_part_get_fields(PurpleMimePart *part);$/;"	p	signature:(PurpleMimePart *part)
purple_mime_part_get_length	mime.c	/^purple_mime_part_get_length(PurpleMimePart *part)$/;"	f	signature:(PurpleMimePart *part)
purple_mime_part_get_length	mime.h	/^gsize purple_mime_part_get_length(PurpleMimePart *part);$/;"	p	signature:(PurpleMimePart *part)
purple_mime_part_new	mime.c	/^purple_mime_part_new(PurpleMimeDocument *doc)$/;"	f	signature:(PurpleMimeDocument *doc)
purple_mime_part_new	mime.h	/^PurpleMimePart *purple_mime_part_new(PurpleMimeDocument *doc);$/;"	p	signature:(PurpleMimeDocument *doc)
purple_mime_part_set_data	mime.c	/^purple_mime_part_set_data(PurpleMimePart *part, const char *data)$/;"	f	signature:(PurpleMimePart *part, const char *data)
purple_mime_part_set_data	mime.h	/^void purple_mime_part_set_data(PurpleMimePart *part, const char *data);$/;"	p	signature:(PurpleMimePart *part, const char *data)
purple_mime_part_set_field	mime.c	/^purple_mime_part_set_field(PurpleMimePart *part, const char *field, const char *value)$/;"	f	signature:(PurpleMimePart *part, const char *field, const char *value)
purple_mime_part_set_field	mime.h	/^void purple_mime_part_set_field(PurpleMimePart *part,$/;"	p	signature:(PurpleMimePart *part, const char *field, const char *value)
purple_minor_version	version.c	/^const guint purple_minor_version = PURPLE_MINOR_VERSION;$/;"	v
purple_mkstemp	util.c	/^purple_mkstemp(char **fpath, gboolean binary)$/;"	f	signature:(char **fpath, gboolean binary)
purple_mkstemp	util.h	/^FILE *purple_mkstemp(char **path, gboolean binary);$/;"	p	signature:(char **path, gboolean binary)
purple_mkstemp_templ	util.c	/^static const char *purple_mkstemp_templ = {"purpleXXXXXX"};$/;"	v	file:
purple_network_convert_idn_to_ascii	network.c	/^int purple_network_convert_idn_to_ascii(const gchar *in, gchar **out)$/;"	f	signature:(const gchar *in, gchar **out)
purple_network_convert_idn_to_ascii	network.h	/^int purple_network_convert_idn_to_ascii(const gchar *in, gchar **out);$/;"	p	signature:(const gchar *in, gchar **out)
purple_network_do_listen	network.c	/^purple_network_do_listen(unsigned short port, int socket_family, int socket_type, PurpleNetworkListenCallback cb, gpointer cb_data)$/;"	f	file:	signature:(unsigned short port, int socket_family, int socket_type, PurpleNetworkListenCallback cb, gpointer cb_data)
purple_network_finish_pmp_map_cb	network.c	/^purple_network_finish_pmp_map_cb(gpointer data)$/;"	f	file:	signature:(gpointer data)
purple_network_force_online	network.c	/^purple_network_force_online()$/;"	f
purple_network_force_online	network.h	/^void purple_network_force_online(void);$/;"	p	signature:(void)
purple_network_get_all_local_system_ips	network.c	/^purple_network_get_all_local_system_ips(void)$/;"	f	signature:(void)
purple_network_get_all_local_system_ips	network.h	/^GList *purple_network_get_all_local_system_ips(void);$/;"	p	signature:(void)
purple_network_get_handle	network.c	/^purple_network_get_handle(void)$/;"	f	signature:(void)
purple_network_get_handle	network.h	/^void *purple_network_get_handle(void);$/;"	p	signature:(void)
purple_network_get_local_system_ip	network.c	/^purple_network_get_local_system_ip(int fd)$/;"	f	signature:(int fd)
purple_network_get_local_system_ip	network.h	/^const char *purple_network_get_local_system_ip(int fd);$/;"	p	signature:(int fd)
purple_network_get_my_ip	network.c	/^purple_network_get_my_ip(int fd)$/;"	f	signature:(int fd)
purple_network_get_my_ip	network.h	/^const char *purple_network_get_my_ip(int fd);$/;"	p	signature:(int fd)
purple_network_get_port_from_fd	network.c	/^purple_network_get_port_from_fd(int fd)$/;"	f	signature:(int fd)
purple_network_get_port_from_fd	network.h	/^unsigned short purple_network_get_port_from_fd(int fd);$/;"	p	signature:(int fd)
purple_network_get_public_ip	network.c	/^purple_network_get_public_ip(void)$/;"	f	signature:(void)
purple_network_get_public_ip	network.h	/^const char *purple_network_get_public_ip(void);$/;"	p	signature:(void)
purple_network_get_stun_ip	network.c	/^purple_network_get_stun_ip(void)$/;"	f	signature:(void)
purple_network_get_stun_ip	network.h	/^const gchar *purple_network_get_stun_ip(void);$/;"	p	signature:(void)
purple_network_get_turn_ip	network.c	/^purple_network_get_turn_ip(void)$/;"	f	signature:(void)
purple_network_get_turn_ip	network.h	/^const gchar *purple_network_get_turn_ip(void);$/;"	p	signature:(void)
purple_network_init	network.c	/^purple_network_init(void)$/;"	f	signature:(void)
purple_network_init	network.h	/^void purple_network_init(void);$/;"	p	signature:(void)
purple_network_ip_atoi	network.c	/^purple_network_ip_atoi(const char *ip)$/;"	f	signature:(const char *ip)
purple_network_ip_atoi	network.h	/^const unsigned char *purple_network_ip_atoi(const char *ip);$/;"	p	signature:(const char *ip)
purple_network_ip_lookup_cb	network.c	/^purple_network_ip_lookup_cb(GSList *hosts, gpointer data,$/;"	f	file:	signature:(GSList *hosts, gpointer data, const char *error_message)
purple_network_is_available	network.c	/^purple_network_is_available(void)$/;"	f	signature:(void)
purple_network_is_available	network.h	/^gboolean purple_network_is_available(void);$/;"	p	signature:(void)
purple_network_listen	network.c	/^purple_network_listen(unsigned short port, int socket_type,$/;"	f	signature:(unsigned short port, int socket_type, PurpleNetworkListenCallback cb, gpointer cb_data)
purple_network_listen	network.h	/^PurpleNetworkListenData *purple_network_listen(unsigned short port,$/;"	p	signature:(unsigned short port, int socket_type, PurpleNetworkListenCallback cb, gpointer cb_data)
purple_network_listen_cancel	network.c	/^void purple_network_listen_cancel(PurpleNetworkListenData *listen_data)$/;"	f	signature:(PurpleNetworkListenData *listen_data)
purple_network_listen_cancel	network.h	/^void purple_network_listen_cancel(PurpleNetworkListenData *listen_data);$/;"	p	signature:(PurpleNetworkListenData *listen_data)
purple_network_listen_family	network.c	/^purple_network_listen_family(unsigned short port, int socket_family,$/;"	f	signature:(unsigned short port, int socket_family, int socket_type, PurpleNetworkListenCallback cb, gpointer cb_data)
purple_network_listen_family	network.h	/^PurpleNetworkListenData *purple_network_listen_family(unsigned short port,$/;"	p	signature:(unsigned short port, int socket_family, int socket_type, PurpleNetworkListenCallback cb, gpointer cb_data)
purple_network_listen_map_external	network.c	/^void purple_network_listen_map_external(gboolean map_external)$/;"	f	signature:(gboolean map_external)
purple_network_listen_map_external	network.h	/^void purple_network_listen_map_external(gboolean map_external);$/;"	p	signature:(gboolean map_external)
purple_network_listen_range	network.c	/^purple_network_listen_range(unsigned short start, unsigned short end,$/;"	f	signature:(unsigned short start, unsigned short end, int socket_type, PurpleNetworkListenCallback cb, gpointer cb_data)
purple_network_listen_range	network.h	/^PurpleNetworkListenData *purple_network_listen_range(unsigned short start,$/;"	p	signature:(unsigned short start, unsigned short end, int socket_type, PurpleNetworkListenCallback cb, gpointer cb_data)
purple_network_listen_range_family	network.c	/^purple_network_listen_range_family(unsigned short start, unsigned short end,$/;"	f	signature:(unsigned short start, unsigned short end, int socket_family, int socket_type, PurpleNetworkListenCallback cb, gpointer cb_data)
purple_network_listen_range_family	network.h	/^PurpleNetworkListenData *purple_network_listen_range_family($/;"	p	signature:( unsigned short start, unsigned short end, int socket_family, int socket_type, PurpleNetworkListenCallback cb, gpointer cb_data)
purple_network_nat_pmp_mapping_remove	network.c	/^purple_network_nat_pmp_mapping_remove(gpointer key, gpointer value,$/;"	f	file:	signature:(gpointer key, gpointer value, gpointer user_data)
purple_network_remove_port_mapping	network.c	/^purple_network_remove_port_mapping(gint fd)$/;"	f	signature:(gint fd)
purple_network_remove_port_mapping	network.h	/^void purple_network_remove_port_mapping(gint fd);$/;"	p	signature:(gint fd)
purple_network_set_public_ip	network.c	/^purple_network_set_public_ip(const char *ip)$/;"	f	signature:(const char *ip)
purple_network_set_public_ip	network.h	/^void purple_network_set_public_ip(const char *ip);$/;"	p	signature:(const char *ip)
purple_network_set_stun_server	network.c	/^purple_network_set_stun_server(const gchar *stun_server)$/;"	f	signature:(const gchar *stun_server)
purple_network_set_stun_server	network.h	/^void purple_network_set_stun_server(const gchar *stun_server);$/;"	p	signature:(const gchar *stun_server)
purple_network_set_turn_server	network.c	/^purple_network_set_turn_server(const gchar *turn_server)$/;"	f	signature:(const gchar *turn_server)
purple_network_set_turn_server	network.h	/^void purple_network_set_turn_server(const gchar *turn_server);$/;"	p	signature:(const gchar *turn_server)
purple_network_set_upnp_port_mapping_cb	network.c	/^purple_network_set_upnp_port_mapping_cb(gboolean success, gpointer data)$/;"	f	file:	signature:(gboolean success, gpointer data)
purple_network_uninit	network.c	/^purple_network_uninit(void)$/;"	f	signature:(void)
purple_network_uninit	network.h	/^void purple_network_uninit(void);$/;"	p	signature:(void)
purple_network_upnp_mapping_remove	network.c	/^purple_network_upnp_mapping_remove(gpointer key, gpointer value,$/;"	f	file:	signature:(gpointer key, gpointer value, gpointer user_data)
purple_network_upnp_mapping_remove_cb	network.c	/^purple_network_upnp_mapping_remove_cb(gboolean sucess, gpointer data)$/;"	f	file:	signature:(gboolean sucess, gpointer data)
purple_normalize	util.c	/^purple_normalize(const PurpleAccount *account, const char *str)$/;"	f	signature:(const PurpleAccount *account, const char *str)
purple_normalize	util.h	/^const char *purple_normalize(const PurpleAccount *account, const char *str);$/;"	p	signature:(const PurpleAccount *account, const char *str)
purple_normalize_nocase	util.c	/^purple_normalize_nocase(const PurpleAccount *account, const char *str)$/;"	f	signature:(const PurpleAccount *account, const char *str)
purple_normalize_nocase	util.h	/^const char *purple_normalize_nocase(const PurpleAccount *account, const char *str);$/;"	p	signature:(const PurpleAccount *account, const char *str)
purple_notify_close	notify.c	/^purple_notify_close(PurpleNotifyType type, void *ui_handle)$/;"	f	signature:(PurpleNotifyType type, void *ui_handle)
purple_notify_close	notify.h	/^void purple_notify_close(PurpleNotifyType type, void *ui_handle);$/;"	p	signature:(PurpleNotifyType type, void *ui_handle)
purple_notify_close_with_handle	notify.c	/^purple_notify_close_with_handle(void *handle)$/;"	f	signature:(void *handle)
purple_notify_close_with_handle	notify.h	/^void purple_notify_close_with_handle(void *handle);$/;"	p	signature:(void *handle)
purple_notify_email	notify.c	/^purple_notify_email(void *handle, const char *subject, const char *from,$/;"	f	signature:(void *handle, const char *subject, const char *from, const char *to, const char *url, PurpleNotifyCloseCallback cb, gpointer user_data)
purple_notify_email	notify.h	/^void *purple_notify_email(void *handle, const char *subject,$/;"	p	signature:(void *handle, const char *subject, const char *from, const char *to, const char *url, PurpleNotifyCloseCallback cb, gpointer user_data)
purple_notify_emails	notify.c	/^purple_notify_emails(void *handle, size_t count, gboolean detailed,$/;"	f	signature:(void *handle, size_t count, gboolean detailed, const char **subjects, const char **froms, const char **tos, const char **urls, PurpleNotifyCloseCallback cb, gpointer user_data)
purple_notify_emails	notify.h	/^void *purple_notify_emails(void *handle, size_t count, gboolean detailed,$/;"	p	signature:(void *handle, size_t count, gboolean detailed, const char **subjects, const char **froms, const char **tos, const char **urls, PurpleNotifyCloseCallback cb, gpointer user_data)
purple_notify_error	notify.h	756;"	d
purple_notify_formatted	notify.c	/^purple_notify_formatted(void *handle, const char *title, const char *primary,$/;"	f	signature:(void *handle, const char *title, const char *primary, const char *secondary, const char *text, PurpleNotifyCloseCallback cb, gpointer user_data)
purple_notify_formatted	notify.h	/^void *purple_notify_formatted(void *handle, const char *title,$/;"	p	signature:(void *handle, const char *title, const char *primary, const char *secondary, const char *text, PurpleNotifyCloseCallback cb, gpointer user_data)
purple_notify_get_handle	notify.c	/^purple_notify_get_handle(void)$/;"	f	signature:(void)
purple_notify_get_handle	notify.h	/^void *purple_notify_get_handle(void);$/;"	p	signature:(void)
purple_notify_get_ui_ops	notify.c	/^purple_notify_get_ui_ops(void)$/;"	f	signature:(void)
purple_notify_get_ui_ops	notify.h	/^PurpleNotifyUiOps *purple_notify_get_ui_ops(void);$/;"	p	signature:(void)
purple_notify_info	notify.h	742;"	d
purple_notify_init	notify.c	/^purple_notify_init(void)$/;"	f	signature:(void)
purple_notify_init	notify.h	/^void purple_notify_init(void);$/;"	p	signature:(void)
purple_notify_message	notify.c	/^purple_notify_message(void *handle, PurpleNotifyMsgType type,$/;"	f	signature:(void *handle, PurpleNotifyMsgType type, const char *title, const char *primary, const char *secondary, PurpleNotifyCloseCallback cb, gpointer user_data)
purple_notify_message	notify.h	/^void *purple_notify_message(void *handle, PurpleNotifyMsgType type,$/;"	p	signature:(void *handle, PurpleNotifyMsgType type, const char *title, const char *primary, const char *secondary, PurpleNotifyCloseCallback cb, gpointer user_data)
purple_notify_searchresults	notify.c	/^purple_notify_searchresults(PurpleConnection *gc, const char *title,$/;"	f	signature:(PurpleConnection *gc, const char *title, const char *primary, const char *secondary, PurpleNotifySearchResults *results, PurpleNotifyCloseCallback cb, gpointer user_data)
purple_notify_searchresults	notify.h	/^void *purple_notify_searchresults(PurpleConnection *gc, const char *title,$/;"	p	signature:(PurpleConnection *gc, const char *title, const char *primary, const char *secondary, PurpleNotifySearchResults *results, PurpleNotifyCloseCallback cb, gpointer user_data)
purple_notify_searchresults_button_add	notify.c	/^purple_notify_searchresults_button_add(PurpleNotifySearchResults *results,$/;"	f	signature:(PurpleNotifySearchResults *results, PurpleNotifySearchButtonType type, PurpleNotifySearchResultsCallback cb)
purple_notify_searchresults_button_add	notify.h	/^void purple_notify_searchresults_button_add(PurpleNotifySearchResults *results,$/;"	p	signature:(PurpleNotifySearchResults *results, PurpleNotifySearchButtonType type, PurpleNotifySearchResultsCallback cb)
purple_notify_searchresults_button_add_labeled	notify.c	/^purple_notify_searchresults_button_add_labeled(PurpleNotifySearchResults *results,$/;"	f	signature:(PurpleNotifySearchResults *results, const char *label, PurpleNotifySearchResultsCallback cb)
purple_notify_searchresults_button_add_labeled	notify.h	/^void purple_notify_searchresults_button_add_labeled(PurpleNotifySearchResults *results,$/;"	p	signature:(PurpleNotifySearchResults *results, const char *label, PurpleNotifySearchResultsCallback cb)
purple_notify_searchresults_column_add	notify.c	/^purple_notify_searchresults_column_add(PurpleNotifySearchResults *results,$/;"	f	signature:(PurpleNotifySearchResults *results, PurpleNotifySearchColumn *column)
purple_notify_searchresults_column_add	notify.h	/^void purple_notify_searchresults_column_add(PurpleNotifySearchResults *results,$/;"	p	signature:(PurpleNotifySearchResults *results, PurpleNotifySearchColumn *column)
purple_notify_searchresults_column_get_title	notify.c	/^purple_notify_searchresults_column_get_title(PurpleNotifySearchResults *results,$/;"	f	signature:(PurpleNotifySearchResults *results, unsigned int column_id)
purple_notify_searchresults_column_get_title	notify.h	/^char *purple_notify_searchresults_column_get_title(PurpleNotifySearchResults *results,$/;"	p	signature:(PurpleNotifySearchResults *results, unsigned int column_id)
purple_notify_searchresults_column_new	notify.c	/^purple_notify_searchresults_column_new(const char *title)$/;"	f	signature:(const char *title)
purple_notify_searchresults_column_new	notify.h	/^PurpleNotifySearchColumn *purple_notify_searchresults_column_new(const char *title);$/;"	p	signature:(const char *title)
purple_notify_searchresults_free	notify.c	/^purple_notify_searchresults_free(PurpleNotifySearchResults *results)$/;"	f	signature:(PurpleNotifySearchResults *results)
purple_notify_searchresults_free	notify.h	/^void purple_notify_searchresults_free(PurpleNotifySearchResults *results);$/;"	p	signature:(PurpleNotifySearchResults *results)
purple_notify_searchresults_get_columns_count	notify.c	/^purple_notify_searchresults_get_columns_count(PurpleNotifySearchResults *results)$/;"	f	signature:(PurpleNotifySearchResults *results)
purple_notify_searchresults_get_columns_count	notify.h	/^guint purple_notify_searchresults_get_columns_count(PurpleNotifySearchResults *results);$/;"	p	signature:(PurpleNotifySearchResults *results)
purple_notify_searchresults_get_rows_count	notify.c	/^purple_notify_searchresults_get_rows_count(PurpleNotifySearchResults *results)$/;"	f	signature:(PurpleNotifySearchResults *results)
purple_notify_searchresults_get_rows_count	notify.h	/^guint purple_notify_searchresults_get_rows_count(PurpleNotifySearchResults *results);$/;"	p	signature:(PurpleNotifySearchResults *results)
purple_notify_searchresults_new	notify.c	/^purple_notify_searchresults_new()$/;"	f
purple_notify_searchresults_new	notify.h	/^PurpleNotifySearchResults *purple_notify_searchresults_new(void);$/;"	p	signature:(void)
purple_notify_searchresults_new_rows	notify.c	/^purple_notify_searchresults_new_rows(PurpleConnection *gc,$/;"	f	signature:(PurpleConnection *gc, PurpleNotifySearchResults *results, void *data)
purple_notify_searchresults_new_rows	notify.h	/^void purple_notify_searchresults_new_rows(PurpleConnection *gc,$/;"	p	signature:(PurpleConnection *gc, PurpleNotifySearchResults *results, void *data)
purple_notify_searchresults_row_add	notify.c	/^void purple_notify_searchresults_row_add(PurpleNotifySearchResults *results,$/;"	f	signature:(PurpleNotifySearchResults *results, GList *row)
purple_notify_searchresults_row_add	notify.h	/^void purple_notify_searchresults_row_add(PurpleNotifySearchResults *results,$/;"	p	signature:(PurpleNotifySearchResults *results, GList *row)
purple_notify_searchresults_row_get	notify.c	/^purple_notify_searchresults_row_get(PurpleNotifySearchResults *results,$/;"	f	signature:(PurpleNotifySearchResults *results, unsigned int row_id)
purple_notify_searchresults_row_get	notify.h	/^GList *purple_notify_searchresults_row_get(PurpleNotifySearchResults *results,$/;"	p	signature:(PurpleNotifySearchResults *results, unsigned int row_id)
purple_notify_set_ui_ops	notify.c	/^purple_notify_set_ui_ops(PurpleNotifyUiOps *ops)$/;"	f	signature:(PurpleNotifyUiOps *ops)
purple_notify_set_ui_ops	notify.h	/^void purple_notify_set_ui_ops(PurpleNotifyUiOps *ops);$/;"	p	signature:(PurpleNotifyUiOps *ops)
purple_notify_uninit	notify.c	/^purple_notify_uninit(void)$/;"	f	signature:(void)
purple_notify_uninit	notify.h	/^void purple_notify_uninit(void);$/;"	p	signature:(void)
purple_notify_uri	notify.c	/^purple_notify_uri(void *handle, const char *uri)$/;"	f	signature:(void *handle, const char *uri)
purple_notify_uri	notify.h	/^void *purple_notify_uri(void *handle, const char *uri);$/;"	p	signature:(void *handle, const char *uri)
purple_notify_user_info_add_pair	notify.c	/^purple_notify_user_info_add_pair(PurpleNotifyUserInfo *user_info, const char *label, const char *value)$/;"	f	signature:(PurpleNotifyUserInfo *user_info, const char *label, const char *value)
purple_notify_user_info_add_pair	notify.h	/^void purple_notify_user_info_add_pair(PurpleNotifyUserInfo *user_info, const char *label, const char *value);$/;"	p	signature:(PurpleNotifyUserInfo *user_info, const char *label, const char *value)
purple_notify_user_info_add_pair_plaintext	notify.c	/^purple_notify_user_info_add_pair_plaintext(PurpleNotifyUserInfo *user_info, const char *label, const char *value)$/;"	f	signature:(PurpleNotifyUserInfo *user_info, const char *label, const char *value)
purple_notify_user_info_add_pair_plaintext	notify.h	/^void purple_notify_user_info_add_pair_plaintext(PurpleNotifyUserInfo *user_info, const char *label, const char *value);$/;"	p	signature:(PurpleNotifyUserInfo *user_info, const char *label, const char *value)
purple_notify_user_info_add_section_break	notify.c	/^purple_notify_user_info_add_section_break(PurpleNotifyUserInfo *user_info)$/;"	f	signature:(PurpleNotifyUserInfo *user_info)
purple_notify_user_info_add_section_break	notify.h	/^void purple_notify_user_info_add_section_break(PurpleNotifyUserInfo *user_info);$/;"	p	signature:(PurpleNotifyUserInfo *user_info)
purple_notify_user_info_add_section_header	notify.c	/^purple_notify_user_info_add_section_header(PurpleNotifyUserInfo *user_info, const char *label)$/;"	f	signature:(PurpleNotifyUserInfo *user_info, const char *label)
purple_notify_user_info_add_section_header	notify.h	/^void purple_notify_user_info_add_section_header(PurpleNotifyUserInfo *user_info, const char *label);$/;"	p	signature:(PurpleNotifyUserInfo *user_info, const char *label)
purple_notify_user_info_destroy	notify.c	/^purple_notify_user_info_destroy(PurpleNotifyUserInfo *user_info)$/;"	f	signature:(PurpleNotifyUserInfo *user_info)
purple_notify_user_info_destroy	notify.h	/^void purple_notify_user_info_destroy(PurpleNotifyUserInfo *user_info);$/;"	p	signature:(PurpleNotifyUserInfo *user_info)
purple_notify_user_info_entry_destroy	notify.c	/^purple_notify_user_info_entry_destroy(PurpleNotifyUserInfoEntry *user_info_entry)$/;"	f	file:	signature:(PurpleNotifyUserInfoEntry *user_info_entry)
purple_notify_user_info_entry_get_label	notify.c	/^purple_notify_user_info_entry_get_label(PurpleNotifyUserInfoEntry *user_info_entry)$/;"	f	signature:(PurpleNotifyUserInfoEntry *user_info_entry)
purple_notify_user_info_entry_get_label	notify.h	/^const gchar *purple_notify_user_info_entry_get_label(PurpleNotifyUserInfoEntry *user_info_entry);$/;"	p	signature:(PurpleNotifyUserInfoEntry *user_info_entry)
purple_notify_user_info_entry_get_type	notify.c	/^purple_notify_user_info_entry_get_type(PurpleNotifyUserInfoEntry *user_info_entry)$/;"	f	signature:(PurpleNotifyUserInfoEntry *user_info_entry)
purple_notify_user_info_entry_get_type	notify.h	/^PurpleNotifyUserInfoEntryType purple_notify_user_info_entry_get_type(PurpleNotifyUserInfoEntry *user_info_entry);$/;"	p	signature:(PurpleNotifyUserInfoEntry *user_info_entry)
purple_notify_user_info_entry_get_value	notify.c	/^purple_notify_user_info_entry_get_value(PurpleNotifyUserInfoEntry *user_info_entry)$/;"	f	signature:(PurpleNotifyUserInfoEntry *user_info_entry)
purple_notify_user_info_entry_get_value	notify.h	/^const gchar *purple_notify_user_info_entry_get_value(PurpleNotifyUserInfoEntry *user_info_entry);$/;"	p	signature:(PurpleNotifyUserInfoEntry *user_info_entry)
purple_notify_user_info_entry_new	notify.c	/^purple_notify_user_info_entry_new(const char *label, const char *value)$/;"	f	signature:(const char *label, const char *value)
purple_notify_user_info_entry_new	notify.h	/^PurpleNotifyUserInfoEntry *purple_notify_user_info_entry_new(const char *label, const char *value);$/;"	p	signature:(const char *label, const char *value)
purple_notify_user_info_entry_set_label	notify.c	/^purple_notify_user_info_entry_set_label(PurpleNotifyUserInfoEntry *user_info_entry, const char *label)$/;"	f	signature:(PurpleNotifyUserInfoEntry *user_info_entry, const char *label)
purple_notify_user_info_entry_set_label	notify.h	/^void purple_notify_user_info_entry_set_label(PurpleNotifyUserInfoEntry *user_info_entry, const char *label);$/;"	p	signature:(PurpleNotifyUserInfoEntry *user_info_entry, const char *label)
purple_notify_user_info_entry_set_type	notify.c	/^purple_notify_user_info_entry_set_type(PurpleNotifyUserInfoEntry *user_info_entry, PurpleNotifyUserInfoEntryType type)$/;"	f	signature:(PurpleNotifyUserInfoEntry *user_info_entry, PurpleNotifyUserInfoEntryType type)
purple_notify_user_info_entry_set_type	notify.h	/^void purple_notify_user_info_entry_set_type(PurpleNotifyUserInfoEntry *user_info_entry,$/;"	p	signature:(PurpleNotifyUserInfoEntry *user_info_entry, PurpleNotifyUserInfoEntryType type)
purple_notify_user_info_entry_set_value	notify.c	/^purple_notify_user_info_entry_set_value(PurpleNotifyUserInfoEntry *user_info_entry, const char *value)$/;"	f	signature:(PurpleNotifyUserInfoEntry *user_info_entry, const char *value)
purple_notify_user_info_entry_set_value	notify.h	/^void purple_notify_user_info_entry_set_value(PurpleNotifyUserInfoEntry *user_info_entry, const char *value);$/;"	p	signature:(PurpleNotifyUserInfoEntry *user_info_entry, const char *value)
purple_notify_user_info_get_entries	notify.c	/^purple_notify_user_info_get_entries(PurpleNotifyUserInfo *user_info)$/;"	f	signature:(PurpleNotifyUserInfo *user_info)
purple_notify_user_info_get_entries	notify.h	/^GList *purple_notify_user_info_get_entries(PurpleNotifyUserInfo *user_info);$/;"	p	signature:(PurpleNotifyUserInfo *user_info)
purple_notify_user_info_get_text_with_newline	notify.c	/^purple_notify_user_info_get_text_with_newline(PurpleNotifyUserInfo *user_info, const char *newline)$/;"	f	signature:(PurpleNotifyUserInfo *user_info, const char *newline)
purple_notify_user_info_get_text_with_newline	notify.h	/^char *purple_notify_user_info_get_text_with_newline(PurpleNotifyUserInfo *user_info, const char *newline);$/;"	p	signature:(PurpleNotifyUserInfo *user_info, const char *newline)
purple_notify_user_info_new	notify.c	/^purple_notify_user_info_new()$/;"	f
purple_notify_user_info_new	notify.h	/^PurpleNotifyUserInfo *purple_notify_user_info_new(void);$/;"	p	signature:(void)
purple_notify_user_info_prepend_pair	notify.c	/^purple_notify_user_info_prepend_pair(PurpleNotifyUserInfo *user_info, const char *label, const char *value)$/;"	f	signature:(PurpleNotifyUserInfo *user_info, const char *label, const char *value)
purple_notify_user_info_prepend_pair	notify.h	/^void purple_notify_user_info_prepend_pair(PurpleNotifyUserInfo *user_info, const char *label, const char *value);$/;"	p	signature:(PurpleNotifyUserInfo *user_info, const char *label, const char *value)
purple_notify_user_info_prepend_section_break	notify.c	/^purple_notify_user_info_prepend_section_break(PurpleNotifyUserInfo *user_info)$/;"	f	signature:(PurpleNotifyUserInfo *user_info)
purple_notify_user_info_prepend_section_break	notify.h	/^void purple_notify_user_info_prepend_section_break(PurpleNotifyUserInfo *user_info);$/;"	p	signature:(PurpleNotifyUserInfo *user_info)
purple_notify_user_info_prepend_section_header	notify.c	/^purple_notify_user_info_prepend_section_header(PurpleNotifyUserInfo *user_info, const char *label)$/;"	f	signature:(PurpleNotifyUserInfo *user_info, const char *label)
purple_notify_user_info_prepend_section_header	notify.h	/^void purple_notify_user_info_prepend_section_header(PurpleNotifyUserInfo *user_info, const char *label);$/;"	p	signature:(PurpleNotifyUserInfo *user_info, const char *label)
purple_notify_user_info_remove_entry	notify.c	/^purple_notify_user_info_remove_entry(PurpleNotifyUserInfo *user_info, PurpleNotifyUserInfoEntry *entry)$/;"	f	signature:(PurpleNotifyUserInfo *user_info, PurpleNotifyUserInfoEntry *entry)
purple_notify_user_info_remove_entry	notify.h	/^void purple_notify_user_info_remove_entry(PurpleNotifyUserInfo *user_info, PurpleNotifyUserInfoEntry *user_info_entry);$/;"	p	signature:(PurpleNotifyUserInfo *user_info, PurpleNotifyUserInfoEntry *user_info_entry)
purple_notify_user_info_remove_last_item	notify.c	/^purple_notify_user_info_remove_last_item(PurpleNotifyUserInfo *user_info)$/;"	f	signature:(PurpleNotifyUserInfo *user_info)
purple_notify_user_info_remove_last_item	notify.h	/^void purple_notify_user_info_remove_last_item(PurpleNotifyUserInfo *user_info);$/;"	p	signature:(PurpleNotifyUserInfo *user_info)
purple_notify_userinfo	notify.c	/^purple_notify_userinfo(PurpleConnection *gc, const char *who,$/;"	f	signature:(PurpleConnection *gc, const char *who, PurpleNotifyUserInfo *user_info, PurpleNotifyCloseCallback cb, gpointer user_data)
purple_notify_userinfo	notify.h	/^void *purple_notify_userinfo(PurpleConnection *gc, const char *who,$/;"	p	signature:(PurpleConnection *gc, const char *who, PurpleNotifyUserInfo *user_info, PurpleNotifyCloseCallback cb, gpointer user_data)
purple_notify_warning	notify.h	749;"	d
purple_ntlm_gen_type1	ntlm.c	/^purple_ntlm_gen_type1(const gchar *hostname, const gchar *domain)$/;"	f	signature:(const gchar *hostname, const gchar *domain)
purple_ntlm_gen_type1	ntlm.h	/^gchar *purple_ntlm_gen_type1(const gchar *hostname, const gchar *domain);$/;"	p	signature:(const gchar *hostname, const gchar *domain)
purple_ntlm_gen_type3	ntlm.c	/^purple_ntlm_gen_type3(const gchar *username, const gchar *passw, const gchar *hostname, const gchar *domain, const guint8 *nonce, guint32 *flags)$/;"	f	signature:(const gchar *username, const gchar *passw, const gchar *hostname, const gchar *domain, const guint8 *nonce, guint32 *flags)
purple_ntlm_gen_type3	ntlm.h	/^gchar *purple_ntlm_gen_type3(const gchar *username, const gchar *passw, const gchar *hostname, const gchar *domain, const guint8 *nonce, guint32 *flags);$/;"	p	signature:(const gchar *username, const gchar *passw, const gchar *hostname, const gchar *domain, const guint8 *nonce, guint32 *flags)
purple_ntlm_parse_type2	ntlm.c	/^purple_ntlm_parse_type2(const gchar *type2, guint32 *flags)$/;"	f	signature:(const gchar *type2, guint32 *flags)
purple_ntlm_parse_type2	ntlm.h	/^guint8 *purple_ntlm_parse_type2(const gchar *type2, guint32 *flags);$/;"	p	signature:(const gchar *type2, guint32 *flags)
purple_parse_tag	util.c	/^struct purple_parse_tag {$/;"	s	file:
purple_parse_tag::dest_tag	util.c	/^	char *dest_tag;$/;"	m	struct:purple_parse_tag	file:	access:public
purple_parse_tag::ignore	util.c	/^	gboolean ignore;$/;"	m	struct:purple_parse_tag	file:	access:public
purple_parse_tag::src_tag	util.c	/^	char *src_tag;$/;"	m	struct:purple_parse_tag	file:	access:public
purple_plugin_action_free	plugin.c	/^purple_plugin_action_free(PurplePluginAction *action)$/;"	f	signature:(PurplePluginAction *action)
purple_plugin_action_free	plugin.h	/^void purple_plugin_action_free(PurplePluginAction *action);$/;"	p	signature:(PurplePluginAction *action)
purple_plugin_action_new	plugin.c	/^purple_plugin_action_new(const char* label, void (*callback)(PurplePluginAction *))$/;"	f	signature:(const char* label, void (*callback)(PurplePluginAction *))
purple_plugin_action_new	plugin.h	/^PurplePluginAction *purple_plugin_action_new(const char* label, void (*callback)(PurplePluginAction *));$/;"	p	signature:(const char* label, void (*callback)(PurplePluginAction *))
purple_plugin_destroy	plugin.c	/^purple_plugin_destroy(PurplePlugin *plugin)$/;"	f	signature:(PurplePlugin *plugin)
purple_plugin_destroy	plugin.h	/^void purple_plugin_destroy(PurplePlugin *plugin);$/;"	p	signature:(PurplePlugin *plugin)
purple_plugin_disable	plugin.c	/^purple_plugin_disable(PurplePlugin *plugin)$/;"	f	signature:(PurplePlugin *plugin)
purple_plugin_disable	plugin.h	/^void purple_plugin_disable(PurplePlugin *plugin);$/;"	p	signature:(PurplePlugin *plugin)
purple_plugin_get_author	plugin.c	/^purple_plugin_get_author(const PurplePlugin *plugin) {$/;"	f	signature:(const PurplePlugin *plugin)
purple_plugin_get_author	plugin.h	/^const gchar *purple_plugin_get_author(const PurplePlugin *plugin);$/;"	p	signature:(const PurplePlugin *plugin)
purple_plugin_get_basename	plugin.c	/^purple_plugin_get_basename(const char *filename)$/;"	f	file:	signature:(const char *filename)
purple_plugin_get_description	plugin.c	/^purple_plugin_get_description(const PurplePlugin *plugin) {$/;"	f	signature:(const PurplePlugin *plugin)
purple_plugin_get_description	plugin.h	/^const gchar *purple_plugin_get_description(const PurplePlugin *plugin);$/;"	p	signature:(const PurplePlugin *plugin)
purple_plugin_get_homepage	plugin.c	/^purple_plugin_get_homepage(const PurplePlugin *plugin) {$/;"	f	signature:(const PurplePlugin *plugin)
purple_plugin_get_homepage	plugin.h	/^const gchar *purple_plugin_get_homepage(const PurplePlugin *plugin);$/;"	p	signature:(const PurplePlugin *plugin)
purple_plugin_get_id	plugin.c	/^purple_plugin_get_id(const PurplePlugin *plugin) {$/;"	f	signature:(const PurplePlugin *plugin)
purple_plugin_get_id	plugin.h	/^const gchar *purple_plugin_get_id(const PurplePlugin *plugin);$/;"	p	signature:(const PurplePlugin *plugin)
purple_plugin_get_name	plugin.c	/^purple_plugin_get_name(const PurplePlugin *plugin) {$/;"	f	signature:(const PurplePlugin *plugin)
purple_plugin_get_name	plugin.h	/^const gchar *purple_plugin_get_name(const PurplePlugin *plugin);$/;"	p	signature:(const PurplePlugin *plugin)
purple_plugin_get_summary	plugin.c	/^purple_plugin_get_summary(const PurplePlugin *plugin) {$/;"	f	signature:(const PurplePlugin *plugin)
purple_plugin_get_summary	plugin.h	/^const gchar *purple_plugin_get_summary(const PurplePlugin *plugin);$/;"	p	signature:(const PurplePlugin *plugin)
purple_plugin_get_version	plugin.c	/^purple_plugin_get_version(const PurplePlugin *plugin) {$/;"	f	signature:(const PurplePlugin *plugin)
purple_plugin_get_version	plugin.h	/^const gchar *purple_plugin_get_version(const PurplePlugin *plugin);$/;"	p	signature:(const PurplePlugin *plugin)
purple_plugin_ipc_call	plugin.c	/^purple_plugin_ipc_call(PurplePlugin *plugin, const char *command,$/;"	f	signature:(PurplePlugin *plugin, const char *command, gboolean *ok, ...)
purple_plugin_ipc_call	plugin.h	/^void *purple_plugin_ipc_call(PurplePlugin *plugin, const char *command,$/;"	p	signature:(PurplePlugin *plugin, const char *command, gboolean *ok, ...)
purple_plugin_ipc_get_params	plugin.c	/^purple_plugin_ipc_get_params(PurplePlugin *plugin, const char *command,$/;"	f	signature:(PurplePlugin *plugin, const char *command, PurpleValue **ret_value, int *num_params, PurpleValue ***params)
purple_plugin_ipc_get_params	plugin.h	/^gboolean purple_plugin_ipc_get_params(PurplePlugin *plugin, const char *command,$/;"	p	signature:(PurplePlugin *plugin, const char *command, PurpleValue **ret_value, int *num_params, PurpleValue ***params)
purple_plugin_ipc_register	plugin.c	/^purple_plugin_ipc_register(PurplePlugin *plugin, const char *command,$/;"	f	signature:(PurplePlugin *plugin, const char *command, PurpleCallback func, PurpleSignalMarshalFunc marshal, PurpleValue *ret_value, int num_params, ...)
purple_plugin_ipc_register	plugin.h	/^gboolean purple_plugin_ipc_register(PurplePlugin *plugin, const char *command,$/;"	p	signature:(PurplePlugin *plugin, const char *command, PurpleCallback func, PurpleSignalMarshalFunc marshal, PurpleValue *ret_value, int num_params, ...)
purple_plugin_ipc_unregister	plugin.c	/^purple_plugin_ipc_unregister(PurplePlugin *plugin, const char *command)$/;"	f	signature:(PurplePlugin *plugin, const char *command)
purple_plugin_ipc_unregister	plugin.h	/^void purple_plugin_ipc_unregister(PurplePlugin *plugin, const char *command);$/;"	p	signature:(PurplePlugin *plugin, const char *command)
purple_plugin_ipc_unregister_all	plugin.c	/^purple_plugin_ipc_unregister_all(PurplePlugin *plugin)$/;"	f	signature:(PurplePlugin *plugin)
purple_plugin_ipc_unregister_all	plugin.h	/^void purple_plugin_ipc_unregister_all(PurplePlugin *plugin);$/;"	p	signature:(PurplePlugin *plugin)
purple_plugin_is_loaded	plugin.c	/^purple_plugin_is_loaded(const PurplePlugin *plugin)$/;"	f	signature:(const PurplePlugin *plugin)
purple_plugin_is_loaded	plugin.h	/^gboolean purple_plugin_is_loaded(const PurplePlugin *plugin);$/;"	p	signature:(const PurplePlugin *plugin)
purple_plugin_is_unloadable	plugin.c	/^purple_plugin_is_unloadable(const PurplePlugin *plugin)$/;"	f	signature:(const PurplePlugin *plugin)
purple_plugin_is_unloadable	plugin.h	/^gboolean purple_plugin_is_unloadable(const PurplePlugin *plugin);$/;"	p	signature:(const PurplePlugin *plugin)
purple_plugin_load	plugin.c	/^purple_plugin_load(PurplePlugin *plugin)$/;"	f	signature:(PurplePlugin *plugin)
purple_plugin_load	plugin.h	/^gboolean purple_plugin_load(PurplePlugin *plugin);$/;"	p	signature:(PurplePlugin *plugin)
purple_plugin_new	plugin.c	/^purple_plugin_new(gboolean native, const char *path)$/;"	f	signature:(gboolean native, const char *path)
purple_plugin_new	plugin.h	/^PurplePlugin *purple_plugin_new(gboolean native, const char *path);$/;"	p	signature:(gboolean native, const char *path)
purple_plugin_pref_add_choice	pluginpref.c	/^purple_plugin_pref_add_choice(PurplePluginPref *pref, const char *label, gpointer choice)$/;"	f	signature:(PurplePluginPref *pref, const char *label, gpointer choice)
purple_plugin_pref_add_choice	pluginpref.h	/^void purple_plugin_pref_add_choice(PurplePluginPref *pref, const char *label, gpointer choice);$/;"	p	signature:(PurplePluginPref *pref, const char *label, gpointer choice)
purple_plugin_pref_destroy	pluginpref.c	/^purple_plugin_pref_destroy(PurplePluginPref *pref)$/;"	f	signature:(PurplePluginPref *pref)
purple_plugin_pref_destroy	pluginpref.h	/^void purple_plugin_pref_destroy(PurplePluginPref *pref);$/;"	p	signature:(PurplePluginPref *pref)
purple_plugin_pref_frame_add	pluginpref.c	/^purple_plugin_pref_frame_add(PurplePluginPrefFrame *frame, PurplePluginPref *pref)$/;"	f	signature:(PurplePluginPrefFrame *frame, PurplePluginPref *pref)
purple_plugin_pref_frame_add	pluginpref.h	/^void purple_plugin_pref_frame_add(PurplePluginPrefFrame *frame, PurplePluginPref *pref);$/;"	p	signature:(PurplePluginPrefFrame *frame, PurplePluginPref *pref)
purple_plugin_pref_frame_destroy	pluginpref.c	/^purple_plugin_pref_frame_destroy(PurplePluginPrefFrame *frame)$/;"	f	signature:(PurplePluginPrefFrame *frame)
purple_plugin_pref_frame_destroy	pluginpref.h	/^void purple_plugin_pref_frame_destroy(PurplePluginPrefFrame *frame);$/;"	p	signature:(PurplePluginPrefFrame *frame)
purple_plugin_pref_frame_get_prefs	pluginpref.c	/^purple_plugin_pref_frame_get_prefs(PurplePluginPrefFrame *frame)$/;"	f	signature:(PurplePluginPrefFrame *frame)
purple_plugin_pref_frame_get_prefs	pluginpref.h	/^GList *purple_plugin_pref_frame_get_prefs(PurplePluginPrefFrame *frame);$/;"	p	signature:(PurplePluginPrefFrame *frame)
purple_plugin_pref_frame_new	pluginpref.c	/^purple_plugin_pref_frame_new()$/;"	f
purple_plugin_pref_frame_new	pluginpref.h	/^PurplePluginPrefFrame *purple_plugin_pref_frame_new(void);$/;"	p	signature:(void)
purple_plugin_pref_get_bounds	pluginpref.c	/^void purple_plugin_pref_get_bounds(PurplePluginPref *pref, int *min, int *max)$/;"	f	signature:(PurplePluginPref *pref, int *min, int *max)
purple_plugin_pref_get_bounds	pluginpref.h	/^void purple_plugin_pref_get_bounds(PurplePluginPref *pref, int *min, int *max);$/;"	p	signature:(PurplePluginPref *pref, int *min, int *max)
purple_plugin_pref_get_choices	pluginpref.c	/^purple_plugin_pref_get_choices(PurplePluginPref *pref)$/;"	f	signature:(PurplePluginPref *pref)
purple_plugin_pref_get_choices	pluginpref.h	/^GList *purple_plugin_pref_get_choices(PurplePluginPref *pref);$/;"	p	signature:(PurplePluginPref *pref)
purple_plugin_pref_get_format_type	pluginpref.c	/^purple_plugin_pref_get_format_type(PurplePluginPref *pref)$/;"	f	signature:(PurplePluginPref *pref)
purple_plugin_pref_get_format_type	pluginpref.h	/^PurpleStringFormatType purple_plugin_pref_get_format_type(PurplePluginPref *pref);$/;"	p	signature:(PurplePluginPref *pref)
purple_plugin_pref_get_label	pluginpref.c	/^purple_plugin_pref_get_label(PurplePluginPref *pref)$/;"	f	signature:(PurplePluginPref *pref)
purple_plugin_pref_get_label	pluginpref.h	/^const char *purple_plugin_pref_get_label(PurplePluginPref *pref);$/;"	p	signature:(PurplePluginPref *pref)
purple_plugin_pref_get_masked	pluginpref.c	/^purple_plugin_pref_get_masked(PurplePluginPref *pref)$/;"	f	signature:(PurplePluginPref *pref)
purple_plugin_pref_get_masked	pluginpref.h	/^gboolean purple_plugin_pref_get_masked(PurplePluginPref *pref);$/;"	p	signature:(PurplePluginPref *pref)
purple_plugin_pref_get_max_length	pluginpref.c	/^purple_plugin_pref_get_max_length(PurplePluginPref *pref)$/;"	f	signature:(PurplePluginPref *pref)
purple_plugin_pref_get_max_length	pluginpref.h	/^unsigned int purple_plugin_pref_get_max_length(PurplePluginPref *pref);$/;"	p	signature:(PurplePluginPref *pref)
purple_plugin_pref_get_name	pluginpref.c	/^purple_plugin_pref_get_name(PurplePluginPref *pref)$/;"	f	signature:(PurplePluginPref *pref)
purple_plugin_pref_get_name	pluginpref.h	/^const char *purple_plugin_pref_get_name(PurplePluginPref *pref);$/;"	p	signature:(PurplePluginPref *pref)
purple_plugin_pref_get_type	pluginpref.c	/^purple_plugin_pref_get_type(PurplePluginPref *pref)$/;"	f	signature:(PurplePluginPref *pref)
purple_plugin_pref_get_type	pluginpref.h	/^PurplePluginPrefType purple_plugin_pref_get_type(PurplePluginPref *pref);$/;"	p	signature:(PurplePluginPref *pref)
purple_plugin_pref_new	pluginpref.c	/^purple_plugin_pref_new()$/;"	f
purple_plugin_pref_new	pluginpref.h	/^PurplePluginPref *purple_plugin_pref_new(void);$/;"	p	signature:(void)
purple_plugin_pref_new_with_label	pluginpref.c	/^purple_plugin_pref_new_with_label(const char *label)$/;"	f	signature:(const char *label)
purple_plugin_pref_new_with_label	pluginpref.h	/^PurplePluginPref *purple_plugin_pref_new_with_label(const char *label);$/;"	p	signature:(const char *label)
purple_plugin_pref_new_with_name	pluginpref.c	/^purple_plugin_pref_new_with_name(const char *name)$/;"	f	signature:(const char *name)
purple_plugin_pref_new_with_name	pluginpref.h	/^PurplePluginPref *purple_plugin_pref_new_with_name(const char *name);$/;"	p	signature:(const char *name)
purple_plugin_pref_new_with_name_and_label	pluginpref.c	/^purple_plugin_pref_new_with_name_and_label(const char *name, const char *label)$/;"	f	signature:(const char *name, const char *label)
purple_plugin_pref_new_with_name_and_label	pluginpref.h	/^PurplePluginPref *purple_plugin_pref_new_with_name_and_label(const char *name, const char *label);$/;"	p	signature:(const char *name, const char *label)
purple_plugin_pref_set_bounds	pluginpref.c	/^purple_plugin_pref_set_bounds(PurplePluginPref *pref, int min, int max)$/;"	f	signature:(PurplePluginPref *pref, int min, int max)
purple_plugin_pref_set_bounds	pluginpref.h	/^void purple_plugin_pref_set_bounds(PurplePluginPref *pref, int min, int max);$/;"	p	signature:(PurplePluginPref *pref, int min, int max)
purple_plugin_pref_set_format_type	pluginpref.c	/^purple_plugin_pref_set_format_type(PurplePluginPref *pref, PurpleStringFormatType format)$/;"	f	signature:(PurplePluginPref *pref, PurpleStringFormatType format)
purple_plugin_pref_set_format_type	pluginpref.h	/^void purple_plugin_pref_set_format_type(PurplePluginPref *pref, PurpleStringFormatType format);$/;"	p	signature:(PurplePluginPref *pref, PurpleStringFormatType format)
purple_plugin_pref_set_label	pluginpref.c	/^purple_plugin_pref_set_label(PurplePluginPref *pref, const char *label)$/;"	f	signature:(PurplePluginPref *pref, const char *label)
purple_plugin_pref_set_label	pluginpref.h	/^void purple_plugin_pref_set_label(PurplePluginPref *pref, const char *label);$/;"	p	signature:(PurplePluginPref *pref, const char *label)
purple_plugin_pref_set_masked	pluginpref.c	/^purple_plugin_pref_set_masked(PurplePluginPref *pref, gboolean masked)$/;"	f	signature:(PurplePluginPref *pref, gboolean masked)
purple_plugin_pref_set_masked	pluginpref.h	/^void purple_plugin_pref_set_masked(PurplePluginPref *pref, gboolean mask);$/;"	p	signature:(PurplePluginPref *pref, gboolean mask)
purple_plugin_pref_set_max_length	pluginpref.c	/^purple_plugin_pref_set_max_length(PurplePluginPref *pref, unsigned int max_length)$/;"	f	signature:(PurplePluginPref *pref, unsigned int max_length)
purple_plugin_pref_set_max_length	pluginpref.h	/^void purple_plugin_pref_set_max_length(PurplePluginPref *pref, unsigned int max_length);$/;"	p	signature:(PurplePluginPref *pref, unsigned int max_length)
purple_plugin_pref_set_name	pluginpref.c	/^purple_plugin_pref_set_name(PurplePluginPref *pref, const char *name)$/;"	f	signature:(PurplePluginPref *pref, const char *name)
purple_plugin_pref_set_name	pluginpref.h	/^void purple_plugin_pref_set_name(PurplePluginPref *pref, const char *name);$/;"	p	signature:(PurplePluginPref *pref, const char *name)
purple_plugin_pref_set_type	pluginpref.c	/^purple_plugin_pref_set_type(PurplePluginPref *pref, PurplePluginPrefType type)$/;"	f	signature:(PurplePluginPref *pref, PurplePluginPrefType type)
purple_plugin_pref_set_type	pluginpref.h	/^void purple_plugin_pref_set_type(PurplePluginPref *pref, PurplePluginPrefType type);$/;"	p	signature:(PurplePluginPref *pref, PurplePluginPrefType type)
purple_plugin_probe	plugin.c	/^purple_plugin_probe(const char *filename)$/;"	f	signature:(const char *filename)
purple_plugin_probe	plugin.h	/^PurplePlugin *purple_plugin_probe(const char *filename);$/;"	p	signature:(const char *filename)
purple_plugin_register	plugin.c	/^purple_plugin_register(PurplePlugin *plugin)$/;"	f	signature:(PurplePlugin *plugin)
purple_plugin_register	plugin.h	/^gboolean purple_plugin_register(PurplePlugin *plugin);$/;"	p	signature:(PurplePlugin *plugin)
purple_plugin_reload	plugin.c	/^purple_plugin_reload(PurplePlugin *plugin)$/;"	f	signature:(PurplePlugin *plugin)
purple_plugin_reload	plugin.h	/^gboolean purple_plugin_reload(PurplePlugin *plugin);$/;"	p	signature:(PurplePlugin *plugin)
purple_plugin_unload	plugin.c	/^purple_plugin_unload(PurplePlugin *plugin)$/;"	f	signature:(PurplePlugin *plugin)
purple_plugin_unload	plugin.h	/^gboolean purple_plugin_unload(PurplePlugin *plugin);$/;"	p	signature:(PurplePlugin *plugin)
purple_plugins_add_search_path	plugin.c	/^purple_plugins_add_search_path(const char *path)$/;"	f	signature:(const char *path)
purple_plugins_add_search_path	plugin.h	/^void purple_plugins_add_search_path(const char *path);$/;"	p	signature:(const char *path)
purple_plugins_destroy_all	plugin.c	/^purple_plugins_destroy_all(void)$/;"	f	signature:(void)
purple_plugins_destroy_all	plugin.h	/^void purple_plugins_destroy_all(void);$/;"	p	signature:(void)
purple_plugins_enabled	plugin.c	/^purple_plugins_enabled(void)$/;"	f	signature:(void)
purple_plugins_enabled	plugin.h	/^gboolean purple_plugins_enabled(void);$/;"	p	signature:(void)
purple_plugins_find_with_basename	plugin.c	/^purple_plugins_find_with_basename(const char *basename)$/;"	f	signature:(const char *basename)
purple_plugins_find_with_basename	plugin.h	/^PurplePlugin *purple_plugins_find_with_basename(const char *basename);$/;"	p	signature:(const char *basename)
purple_plugins_find_with_filename	plugin.c	/^purple_plugins_find_with_filename(const char *filename)$/;"	f	signature:(const char *filename)
purple_plugins_find_with_filename	plugin.h	/^PurplePlugin *purple_plugins_find_with_filename(const char *filename);$/;"	p	signature:(const char *filename)
purple_plugins_find_with_id	plugin.c	/^purple_plugins_find_with_id(const char *id)$/;"	f	signature:(const char *id)
purple_plugins_find_with_id	plugin.h	/^PurplePlugin *purple_plugins_find_with_id(const char *id);$/;"	p	signature:(const char *id)
purple_plugins_find_with_name	plugin.c	/^purple_plugins_find_with_name(const char *name)$/;"	f	signature:(const char *name)
purple_plugins_find_with_name	plugin.h	/^PurplePlugin *purple_plugins_find_with_name(const char *name);$/;"	p	signature:(const char *name)
purple_plugins_get_all	plugin.c	/^purple_plugins_get_all(void)$/;"	f	signature:(void)
purple_plugins_get_all	plugin.h	/^GList *purple_plugins_get_all(void);$/;"	p	signature:(void)
purple_plugins_get_handle	plugin.c	/^purple_plugins_get_handle(void) {$/;"	f	signature:(void)
purple_plugins_get_handle	plugin.h	/^void *purple_plugins_get_handle(void);$/;"	p	signature:(void)
purple_plugins_get_loaded	plugin.c	/^purple_plugins_get_loaded(void)$/;"	f	signature:(void)
purple_plugins_get_loaded	plugin.h	/^GList *purple_plugins_get_loaded(void);$/;"	p	signature:(void)
purple_plugins_get_protocols	plugin.c	/^purple_plugins_get_protocols(void)$/;"	f	signature:(void)
purple_plugins_get_protocols	plugin.h	/^GList *purple_plugins_get_protocols(void);$/;"	p	signature:(void)
purple_plugins_get_search_paths	plugin.c	/^purple_plugins_get_search_paths()$/;"	f
purple_plugins_get_search_paths	plugin.h	/^GList *purple_plugins_get_search_paths(void);$/;"	p	signature:(void)
purple_plugins_init	plugin.c	/^purple_plugins_init(void) {$/;"	f	signature:(void)
purple_plugins_init	plugin.h	/^void purple_plugins_init(void);$/;"	p	signature:(void)
purple_plugins_load_saved	plugin.c	/^purple_plugins_load_saved(const char *key)$/;"	f	signature:(const char *key)
purple_plugins_load_saved	plugin.h	/^void purple_plugins_load_saved(const char *key);$/;"	p	signature:(const char *key)
purple_plugins_probe	plugin.c	/^purple_plugins_probe(const char *ext)$/;"	f	signature:(const char *ext)
purple_plugins_probe	plugin.h	/^void purple_plugins_probe(const char *ext);$/;"	p	signature:(const char *ext)
purple_plugins_register_load_notify_cb	plugin.c	/^purple_plugins_register_load_notify_cb(void (*func)(PurplePlugin *, void *),$/;"	f	signature:(void (*func)(PurplePlugin *, void *), void *data)
purple_plugins_register_load_notify_cb	plugin.h	/^void purple_plugins_register_load_notify_cb(void (*func)(PurplePlugin *, void *),$/;"	p	signature:(void (*func)(PurplePlugin *, void *), void *data)
purple_plugins_register_probe_notify_cb	plugin.c	/^purple_plugins_register_probe_notify_cb(void (*func)(void *), void *data)$/;"	f	signature:(void (*func)(void *), void *data)
purple_plugins_register_probe_notify_cb	plugin.h	/^void purple_plugins_register_probe_notify_cb(void (*func)(void *), void *data);$/;"	p	signature:(void (*func)(void *), void *data)
purple_plugins_register_unload_notify_cb	plugin.c	/^purple_plugins_register_unload_notify_cb(void (*func)(PurplePlugin *, void *),$/;"	f	signature:(void (*func)(PurplePlugin *, void *), void *data)
purple_plugins_register_unload_notify_cb	plugin.h	/^void purple_plugins_register_unload_notify_cb(void (*func)(PurplePlugin *, void *),$/;"	p	signature:(void (*func)(PurplePlugin *, void *), void *data)
purple_plugins_save_loaded	plugin.c	/^purple_plugins_save_loaded(const char *key)$/;"	f	signature:(const char *key)
purple_plugins_save_loaded	plugin.h	/^void purple_plugins_save_loaded(const char *key);$/;"	p	signature:(const char *key)
purple_plugins_uninit	plugin.c	/^purple_plugins_uninit(void)$/;"	f	signature:(void)
purple_plugins_uninit	plugin.h	/^void purple_plugins_uninit(void);$/;"	p	signature:(void)
purple_plugins_unload	plugin.c	/^purple_plugins_unload(PurplePluginType type)$/;"	f	signature:(PurplePluginType type)
purple_plugins_unload	plugin.h	/^void purple_plugins_unload(PurplePluginType type);$/;"	p	signature:(PurplePluginType type)
purple_plugins_unload_all	plugin.c	/^purple_plugins_unload_all(void)$/;"	f	signature:(void)
purple_plugins_unload_all	plugin.h	/^void purple_plugins_unload_all(void);$/;"	p	signature:(void)
purple_plugins_unregister_load_notify_cb	plugin.c	/^purple_plugins_unregister_load_notify_cb(void (*func)(PurplePlugin *, void *))$/;"	f	signature:(void (*func)(PurplePlugin *, void *))
purple_plugins_unregister_load_notify_cb	plugin.h	/^void purple_plugins_unregister_load_notify_cb(void (*func)(PurplePlugin *, void *));$/;"	p	signature:(void (*func)(PurplePlugin *, void *))
purple_plugins_unregister_probe_notify_cb	plugin.c	/^purple_plugins_unregister_probe_notify_cb(void (*func)(void *))$/;"	f	signature:(void (*func)(void *))
purple_plugins_unregister_probe_notify_cb	plugin.h	/^void purple_plugins_unregister_probe_notify_cb(void (*func)(void *));$/;"	p	signature:(void (*func)(void *))
purple_plugins_unregister_unload_notify_cb	plugin.c	/^purple_plugins_unregister_unload_notify_cb(void (*func)(PurplePlugin *, void *))$/;"	f	signature:(void (*func)(PurplePlugin *, void *))
purple_plugins_unregister_unload_notify_cb	plugin.h	/^void purple_plugins_unregister_unload_notify_cb(void (*func)(PurplePlugin *,$/;"	p	signature:(void (*func)(PurplePlugin *, void *))
purple_pmp_create_map	nat-pmp.c	/^purple_pmp_create_map(PurplePmpType type, unsigned short privateport, unsigned short publicport, int lifetime)$/;"	f	signature:(PurplePmpType type, unsigned short privateport, unsigned short publicport, int lifetime)
purple_pmp_create_map	nat-pmp.h	/^gboolean purple_pmp_create_map(PurplePmpType type, unsigned short privateport, unsigned short publicport, int lifetime);$/;"	p	signature:(PurplePmpType type, unsigned short privateport, unsigned short publicport, int lifetime)
purple_pmp_destroy_map	nat-pmp.c	/^purple_pmp_destroy_map(PurplePmpType type, unsigned short privateport)$/;"	f	signature:(PurplePmpType type, unsigned short privateport)
purple_pmp_destroy_map	nat-pmp.h	/^gboolean purple_pmp_destroy_map(PurplePmpType type, unsigned short privateport);$/;"	p	signature:(PurplePmpType type, unsigned short privateport)
purple_pmp_get_handle	nat-pmp.c	/^purple_pmp_get_handle(void)$/;"	f	file:	signature:(void)
purple_pmp_get_public_ip	nat-pmp.c	/^purple_pmp_get_public_ip()$/;"	f
purple_pmp_get_public_ip	nat-pmp.h	/^char *purple_pmp_get_public_ip(void);$/;"	p	signature:(void)
purple_pmp_init	nat-pmp.c	/^purple_pmp_init()$/;"	f
purple_pmp_init	nat-pmp.h	/^void purple_pmp_init(void);$/;"	p	signature:(void)
purple_pmp_network_config_changed_cb	nat-pmp.c	/^purple_pmp_network_config_changed_cb(void *data)$/;"	f	file:	signature:(void *data)
purple_pounce_action_get_attribute	pounce.c	/^purple_pounce_action_get_attribute(const PurplePounce *pounce,$/;"	f	signature:(const PurplePounce *pounce, const char *action, const char *attr)
purple_pounce_action_get_attribute	pounce.h	/^const char *purple_pounce_action_get_attribute(const PurplePounce *pounce,$/;"	p	signature:(const PurplePounce *pounce, const char *action, const char *attr)
purple_pounce_action_is_enabled	pounce.c	/^purple_pounce_action_is_enabled(const PurplePounce *pounce, const char *action)$/;"	f	signature:(const PurplePounce *pounce, const char *action)
purple_pounce_action_is_enabled	pounce.h	/^gboolean purple_pounce_action_is_enabled(const PurplePounce *pounce,$/;"	p	signature:(const PurplePounce *pounce, const char *action)
purple_pounce_action_register	pounce.c	/^purple_pounce_action_register(PurplePounce *pounce, const char *name)$/;"	f	signature:(PurplePounce *pounce, const char *name)
purple_pounce_action_register	pounce.h	/^void purple_pounce_action_register(PurplePounce *pounce, const char *name);$/;"	p	signature:(PurplePounce *pounce, const char *name)
purple_pounce_action_set_attribute	pounce.c	/^purple_pounce_action_set_attribute(PurplePounce *pounce, const char *action,$/;"	f	signature:(PurplePounce *pounce, const char *action, const char *attr, const char *value)
purple_pounce_action_set_attribute	pounce.h	/^void purple_pounce_action_set_attribute(PurplePounce *pounce, const char *action,$/;"	p	signature:(PurplePounce *pounce, const char *action, const char *attr, const char *value)
purple_pounce_action_set_enabled	pounce.c	/^purple_pounce_action_set_enabled(PurplePounce *pounce, const char *action,$/;"	f	signature:(PurplePounce *pounce, const char *action, gboolean enabled)
purple_pounce_action_set_enabled	pounce.h	/^void purple_pounce_action_set_enabled(PurplePounce *pounce, const char *action,$/;"	p	signature:(PurplePounce *pounce, const char *action, gboolean enabled)
purple_pounce_destroy	pounce.c	/^purple_pounce_destroy(PurplePounce *pounce)$/;"	f	signature:(PurplePounce *pounce)
purple_pounce_destroy	pounce.h	/^void purple_pounce_destroy(PurplePounce *pounce);$/;"	p	signature:(PurplePounce *pounce)
purple_pounce_destroy_all_by_account	pounce.c	/^purple_pounce_destroy_all_by_account(PurpleAccount *account)$/;"	f	signature:(PurpleAccount *account)
purple_pounce_destroy_all_by_account	pounce.h	/^void purple_pounce_destroy_all_by_account(PurpleAccount *account);$/;"	p	signature:(PurpleAccount *account)
purple_pounce_destroy_all_by_buddy	pounce.c	/^purple_pounce_destroy_all_by_buddy(PurpleBuddy *buddy)$/;"	f	signature:(PurpleBuddy *buddy)
purple_pounce_destroy_all_by_buddy	pounce.h	/^void purple_pounce_destroy_all_by_buddy(PurpleBuddy *buddy);$/;"	p	signature:(PurpleBuddy *buddy)
purple_pounce_execute	pounce.c	/^purple_pounce_execute(const PurpleAccount *pouncer, const char *pouncee,$/;"	f	signature:(const PurpleAccount *pouncer, const char *pouncee, PurplePounceEvent events)
purple_pounce_execute	pounce.h	/^void purple_pounce_execute(const PurpleAccount *pouncer, const char *pouncee,$/;"	p	signature:(const PurpleAccount *pouncer, const char *pouncee, PurplePounceEvent events)
purple_pounce_get_data	pounce.c	/^purple_pounce_get_data(const PurplePounce *pounce)$/;"	f	signature:(const PurplePounce *pounce)
purple_pounce_get_data	pounce.h	/^void *purple_pounce_get_data(const PurplePounce *pounce);$/;"	p	signature:(const PurplePounce *pounce)
purple_pounce_get_events	pounce.c	/^purple_pounce_get_events(const PurplePounce *pounce)$/;"	f	signature:(const PurplePounce *pounce)
purple_pounce_get_events	pounce.h	/^PurplePounceEvent purple_pounce_get_events(const PurplePounce *pounce);$/;"	p	signature:(const PurplePounce *pounce)
purple_pounce_get_options	pounce.c	/^purple_pounce_get_options(const PurplePounce *pounce)$/;"	f	signature:(const PurplePounce *pounce)
purple_pounce_get_options	pounce.h	/^PurplePounceOption purple_pounce_get_options(const PurplePounce *pounce);$/;"	p	signature:(const PurplePounce *pounce)
purple_pounce_get_pouncee	pounce.c	/^purple_pounce_get_pouncee(const PurplePounce *pounce)$/;"	f	signature:(const PurplePounce *pounce)
purple_pounce_get_pouncee	pounce.h	/^const char *purple_pounce_get_pouncee(const PurplePounce *pounce);$/;"	p	signature:(const PurplePounce *pounce)
purple_pounce_get_pouncer	pounce.c	/^purple_pounce_get_pouncer(const PurplePounce *pounce)$/;"	f	signature:(const PurplePounce *pounce)
purple_pounce_get_pouncer	pounce.h	/^PurpleAccount *purple_pounce_get_pouncer(const PurplePounce *pounce);$/;"	p	signature:(const PurplePounce *pounce)
purple_pounce_get_save	pounce.c	/^purple_pounce_get_save(const PurplePounce *pounce)$/;"	f	signature:(const PurplePounce *pounce)
purple_pounce_get_save	pounce.h	/^gboolean purple_pounce_get_save(const PurplePounce *pounce);$/;"	p	signature:(const PurplePounce *pounce)
purple_pounce_new	pounce.c	/^purple_pounce_new(const char *ui_type, PurpleAccount *pouncer,$/;"	f	signature:(const char *ui_type, PurpleAccount *pouncer, const char *pouncee, PurplePounceEvent event, PurplePounceOption option)
purple_pounce_new	pounce.h	/^PurplePounce *purple_pounce_new(const char *ui_type, PurpleAccount *pouncer,$/;"	p	signature:(const char *ui_type, PurpleAccount *pouncer, const char *pouncee, PurplePounceEvent event, PurplePounceOption option)
purple_pounce_set_data	pounce.c	/^purple_pounce_set_data(PurplePounce *pounce, void *data)$/;"	f	signature:(PurplePounce *pounce, void *data)
purple_pounce_set_data	pounce.h	/^void purple_pounce_set_data(PurplePounce *pounce, void *data);$/;"	p	signature:(PurplePounce *pounce, void *data)
purple_pounce_set_events	pounce.c	/^purple_pounce_set_events(PurplePounce *pounce, PurplePounceEvent events)$/;"	f	signature:(PurplePounce *pounce, PurplePounceEvent events)
purple_pounce_set_events	pounce.h	/^void purple_pounce_set_events(PurplePounce *pounce, PurplePounceEvent events);$/;"	p	signature:(PurplePounce *pounce, PurplePounceEvent events)
purple_pounce_set_options	pounce.c	/^purple_pounce_set_options(PurplePounce *pounce, PurplePounceOption options)$/;"	f	signature:(PurplePounce *pounce, PurplePounceOption options)
purple_pounce_set_options	pounce.h	/^void purple_pounce_set_options(PurplePounce *pounce, PurplePounceOption options);$/;"	p	signature:(PurplePounce *pounce, PurplePounceOption options)
purple_pounce_set_pouncee	pounce.c	/^purple_pounce_set_pouncee(PurplePounce *pounce, const char *pouncee)$/;"	f	signature:(PurplePounce *pounce, const char *pouncee)
purple_pounce_set_pouncee	pounce.h	/^void purple_pounce_set_pouncee(PurplePounce *pounce, const char *pouncee);$/;"	p	signature:(PurplePounce *pounce, const char *pouncee)
purple_pounce_set_pouncer	pounce.c	/^purple_pounce_set_pouncer(PurplePounce *pounce, PurpleAccount *pouncer)$/;"	f	signature:(PurplePounce *pounce, PurpleAccount *pouncer)
purple_pounce_set_pouncer	pounce.h	/^void purple_pounce_set_pouncer(PurplePounce *pounce, PurpleAccount *pouncer);$/;"	p	signature:(PurplePounce *pounce, PurpleAccount *pouncer)
purple_pounce_set_save	pounce.c	/^purple_pounce_set_save(PurplePounce *pounce, gboolean save)$/;"	f	signature:(PurplePounce *pounce, gboolean save)
purple_pounce_set_save	pounce.h	/^void purple_pounce_set_save(PurplePounce *pounce, gboolean save);$/;"	p	signature:(PurplePounce *pounce, gboolean save)
purple_pounces_get_all	pounce.c	/^purple_pounces_get_all(void)$/;"	f	signature:(void)
purple_pounces_get_all	pounce.h	/^GList *purple_pounces_get_all(void);$/;"	p	signature:(void)
purple_pounces_get_all_for_ui	pounce.c	/^GList *purple_pounces_get_all_for_ui(const char *ui)$/;"	f	signature:(const char *ui)
purple_pounces_get_all_for_ui	pounce.h	/^GList *purple_pounces_get_all_for_ui(const char *ui);$/;"	p	signature:(const char *ui)
purple_pounces_get_handle	pounce.c	/^purple_pounces_get_handle(void)$/;"	f	signature:(void)
purple_pounces_get_handle	pounce.h	/^void *purple_pounces_get_handle(void);$/;"	p	signature:(void)
purple_pounces_init	pounce.c	/^purple_pounces_init(void)$/;"	f	signature:(void)
purple_pounces_init	pounce.h	/^void purple_pounces_init(void);$/;"	p	signature:(void)
purple_pounces_load	pounce.c	/^purple_pounces_load(void)$/;"	f	signature:(void)
purple_pounces_load	pounce.h	/^gboolean purple_pounces_load(void);$/;"	p	signature:(void)
purple_pounces_register_handler	pounce.c	/^purple_pounces_register_handler(const char *ui, PurplePounceCb cb,$/;"	f	signature:(const char *ui, PurplePounceCb cb, void (*new_pounce)(PurplePounce *pounce), void (*free_pounce)(PurplePounce *pounce))
purple_pounces_register_handler	pounce.h	/^void purple_pounces_register_handler(const char *ui, PurplePounceCb cb,$/;"	p	signature:(const char *ui, PurplePounceCb cb, void (*new_pounce)(PurplePounce *pounce), void (*free_pounce)(PurplePounce *pounce))
purple_pounces_uninit	pounce.c	/^purple_pounces_uninit()$/;"	f
purple_pounces_uninit	pounce.h	/^void purple_pounces_uninit(void);$/;"	p	signature:(void)
purple_pounces_unregister_handler	pounce.c	/^purple_pounces_unregister_handler(const char *ui)$/;"	f	signature:(const char *ui)
purple_pounces_unregister_handler	pounce.h	/^void purple_pounces_unregister_handler(const char *ui);$/;"	p	signature:(const char *ui)
purple_pref	prefs.c	/^struct purple_pref {$/;"	s	file:
purple_pref::__anon15::boolean	prefs.c	/^		gboolean boolean;$/;"	m	union:purple_pref::__anon15	file:	access:public
purple_pref::__anon15::generic	prefs.c	/^		gpointer generic;$/;"	m	union:purple_pref::__anon15	file:	access:public
purple_pref::__anon15::integer	prefs.c	/^		int integer;$/;"	m	union:purple_pref::__anon15	file:	access:public
purple_pref::__anon15::string	prefs.c	/^		char *string;$/;"	m	union:purple_pref::__anon15	file:	access:public
purple_pref::__anon15::stringlist	prefs.c	/^		GList *stringlist;$/;"	m	union:purple_pref::__anon15	file:	access:public
purple_pref::callbacks	prefs.c	/^	GSList *callbacks;$/;"	m	struct:purple_pref	file:	access:public
purple_pref::first_child	prefs.c	/^	struct purple_pref *first_child;$/;"	m	struct:purple_pref	typeref:struct:purple_pref::purple_pref	file:	access:public
purple_pref::name	prefs.c	/^	char *name;$/;"	m	struct:purple_pref	file:	access:public
purple_pref::parent	prefs.c	/^	struct purple_pref *parent;$/;"	m	struct:purple_pref	typeref:struct:purple_pref::purple_pref	file:	access:public
purple_pref::sibling	prefs.c	/^	struct purple_pref *sibling;$/;"	m	struct:purple_pref	typeref:struct:purple_pref::purple_pref	file:	access:public
purple_pref::type	prefs.c	/^	PurplePrefType type;$/;"	m	struct:purple_pref	file:	access:public
purple_pref::value	prefs.c	/^	} value;$/;"	m	struct:purple_pref	typeref:union:purple_pref::__anon15	file:	access:public
purple_prefs_add_bool	prefs.c	/^purple_prefs_add_bool(const char *name, gboolean value)$/;"	f	signature:(const char *name, gboolean value)
purple_prefs_add_bool	prefs.h	/^void purple_prefs_add_bool(const char *name, gboolean value);$/;"	p	signature:(const char *name, gboolean value)
purple_prefs_add_int	prefs.c	/^purple_prefs_add_int(const char *name, int value)$/;"	f	signature:(const char *name, int value)
purple_prefs_add_int	prefs.h	/^void purple_prefs_add_int(const char *name, int value);$/;"	p	signature:(const char *name, int value)
purple_prefs_add_none	prefs.c	/^purple_prefs_add_none(const char *name)$/;"	f	signature:(const char *name)
purple_prefs_add_none	prefs.h	/^void purple_prefs_add_none(const char *name);$/;"	p	signature:(const char *name)
purple_prefs_add_path	prefs.c	/^purple_prefs_add_path(const char *name, const char *value)$/;"	f	signature:(const char *name, const char *value)
purple_prefs_add_path	prefs.h	/^void purple_prefs_add_path(const char *name, const char *value);$/;"	p	signature:(const char *name, const char *value)
purple_prefs_add_path_list	prefs.c	/^purple_prefs_add_path_list(const char *name, GList *value)$/;"	f	signature:(const char *name, GList *value)
purple_prefs_add_path_list	prefs.h	/^void purple_prefs_add_path_list(const char *name, GList *value);$/;"	p	signature:(const char *name, GList *value)
purple_prefs_add_string	prefs.c	/^purple_prefs_add_string(const char *name, const char *value)$/;"	f	signature:(const char *name, const char *value)
purple_prefs_add_string	prefs.h	/^void purple_prefs_add_string(const char *name, const char *value);$/;"	p	signature:(const char *name, const char *value)
purple_prefs_add_string_list	prefs.c	/^purple_prefs_add_string_list(const char *name, GList *value)$/;"	f	signature:(const char *name, GList *value)
purple_prefs_add_string_list	prefs.h	/^void purple_prefs_add_string_list(const char *name, GList *value);$/;"	p	signature:(const char *name, GList *value)
purple_prefs_connect_callback	prefs.c	/^purple_prefs_connect_callback(void *handle, const char *name, PurplePrefCallback func, gpointer data)$/;"	f	signature:(void *handle, const char *name, PurplePrefCallback func, gpointer data)
purple_prefs_connect_callback	prefs.h	/^guint purple_prefs_connect_callback(void *handle, const char *name, PurplePrefCallback cb,$/;"	p	signature:(void *handle, const char *name, PurplePrefCallback cb, gpointer data)
purple_prefs_destroy	prefs.c	/^purple_prefs_destroy()$/;"	f
purple_prefs_destroy	prefs.h	/^void purple_prefs_destroy(void);$/;"	p	signature:(void)
purple_prefs_disconnect_by_handle	prefs.c	/^purple_prefs_disconnect_by_handle(void *handle)$/;"	f	signature:(void *handle)
purple_prefs_disconnect_by_handle	prefs.h	/^void purple_prefs_disconnect_by_handle(void *handle);$/;"	p	signature:(void *handle)
purple_prefs_disconnect_callback	prefs.c	/^purple_prefs_disconnect_callback(guint callback_id)$/;"	f	signature:(guint callback_id)
purple_prefs_disconnect_callback	prefs.h	/^void purple_prefs_disconnect_callback(guint callback_id);$/;"	p	signature:(guint callback_id)
purple_prefs_exists	prefs.c	/^purple_prefs_exists(const char *name)$/;"	f	signature:(const char *name)
purple_prefs_exists	prefs.h	/^gboolean purple_prefs_exists(const char *name);$/;"	p	signature:(const char *name)
purple_prefs_get_bool	prefs.c	/^purple_prefs_get_bool(const char *name)$/;"	f	signature:(const char *name)
purple_prefs_get_bool	prefs.h	/^gboolean purple_prefs_get_bool(const char *name);$/;"	p	signature:(const char *name)
purple_prefs_get_children_names	prefs.c	/^purple_prefs_get_children_names(const char *name)$/;"	f	signature:(const char *name)
purple_prefs_get_children_names	prefs.h	/^GList *purple_prefs_get_children_names(const char *name);$/;"	p	signature:(const char *name)
purple_prefs_get_handle	prefs.c	/^purple_prefs_get_handle(void)$/;"	f	signature:(void)
purple_prefs_get_handle	prefs.h	/^void *purple_prefs_get_handle(void);$/;"	p	signature:(void)
purple_prefs_get_int	prefs.c	/^purple_prefs_get_int(const char *name)$/;"	f	signature:(const char *name)
purple_prefs_get_int	prefs.h	/^int purple_prefs_get_int(const char *name);$/;"	p	signature:(const char *name)
purple_prefs_get_path	prefs.c	/^purple_prefs_get_path(const char *name)$/;"	f	signature:(const char *name)
purple_prefs_get_path	prefs.h	/^const char *purple_prefs_get_path(const char *name);$/;"	p	signature:(const char *name)
purple_prefs_get_path_list	prefs.c	/^purple_prefs_get_path_list(const char *name)$/;"	f	signature:(const char *name)
purple_prefs_get_path_list	prefs.h	/^GList *purple_prefs_get_path_list(const char *name);$/;"	p	signature:(const char *name)
purple_prefs_get_string	prefs.c	/^purple_prefs_get_string(const char *name)$/;"	f	signature:(const char *name)
purple_prefs_get_string	prefs.h	/^const char *purple_prefs_get_string(const char *name);$/;"	p	signature:(const char *name)
purple_prefs_get_string_list	prefs.c	/^purple_prefs_get_string_list(const char *name)$/;"	f	signature:(const char *name)
purple_prefs_get_string_list	prefs.h	/^GList *purple_prefs_get_string_list(const char *name);$/;"	p	signature:(const char *name)
purple_prefs_get_type	prefs.c	/^purple_prefs_get_type(const char *name)$/;"	f	signature:(const char *name)
purple_prefs_get_type	prefs.h	/^PurplePrefType purple_prefs_get_type(const char *name);$/;"	p	signature:(const char *name)
purple_prefs_init	prefs.c	/^purple_prefs_init(void)$/;"	f	signature:(void)
purple_prefs_init	prefs.h	/^void purple_prefs_init(void);$/;"	p	signature:(void)
purple_prefs_load	prefs.c	/^purple_prefs_load()$/;"	f
purple_prefs_load	prefs.h	/^gboolean purple_prefs_load(void);$/;"	p	signature:(void)
purple_prefs_remove	prefs.c	/^purple_prefs_remove(const char *name)$/;"	f	signature:(const char *name)
purple_prefs_remove	prefs.h	/^void purple_prefs_remove(const char *name);$/;"	p	signature:(const char *name)
purple_prefs_rename	prefs.c	/^purple_prefs_rename(const char *oldname, const char *newname)$/;"	f	signature:(const char *oldname, const char *newname)
purple_prefs_rename	prefs.h	/^void purple_prefs_rename(const char *oldname, const char *newname);$/;"	p	signature:(const char *oldname, const char *newname)
purple_prefs_rename_boolean_toggle	prefs.c	/^purple_prefs_rename_boolean_toggle(const char *oldname, const char *newname)$/;"	f	signature:(const char *oldname, const char *newname)
purple_prefs_rename_boolean_toggle	prefs.h	/^void purple_prefs_rename_boolean_toggle(const char *oldname, const char *newname);$/;"	p	signature:(const char *oldname, const char *newname)
purple_prefs_rename_node	prefs.c	/^purple_prefs_rename_node(struct purple_pref *oldpref, struct purple_pref *newpref)$/;"	f	file:	signature:(struct purple_pref *oldpref, struct purple_pref *newpref)
purple_prefs_set_bool	prefs.c	/^purple_prefs_set_bool(const char *name, gboolean value)$/;"	f	signature:(const char *name, gboolean value)
purple_prefs_set_bool	prefs.h	/^void purple_prefs_set_bool(const char *name, gboolean value);$/;"	p	signature:(const char *name, gboolean value)
purple_prefs_set_generic	prefs.c	/^purple_prefs_set_generic(const char *name, gpointer value)$/;"	f	signature:(const char *name, gpointer value)
purple_prefs_set_generic	prefs.h	/^void purple_prefs_set_generic(const char *name, gpointer value);$/;"	p	signature:(const char *name, gpointer value)
purple_prefs_set_int	prefs.c	/^purple_prefs_set_int(const char *name, int value)$/;"	f	signature:(const char *name, int value)
purple_prefs_set_int	prefs.h	/^void purple_prefs_set_int(const char *name, int value);$/;"	p	signature:(const char *name, int value)
purple_prefs_set_path	prefs.c	/^purple_prefs_set_path(const char *name, const char *value)$/;"	f	signature:(const char *name, const char *value)
purple_prefs_set_path	prefs.h	/^void purple_prefs_set_path(const char *name, const char *value);$/;"	p	signature:(const char *name, const char *value)
purple_prefs_set_path_list	prefs.c	/^purple_prefs_set_path_list(const char *name, GList *value)$/;"	f	signature:(const char *name, GList *value)
purple_prefs_set_path_list	prefs.h	/^void purple_prefs_set_path_list(const char *name, GList *value);$/;"	p	signature:(const char *name, GList *value)
purple_prefs_set_string	prefs.c	/^purple_prefs_set_string(const char *name, const char *value)$/;"	f	signature:(const char *name, const char *value)
purple_prefs_set_string	prefs.h	/^void purple_prefs_set_string(const char *name, const char *value);$/;"	p	signature:(const char *name, const char *value)
purple_prefs_set_string_list	prefs.c	/^purple_prefs_set_string_list(const char *name, GList *value)$/;"	f	signature:(const char *name, GList *value)
purple_prefs_set_string_list	prefs.h	/^void purple_prefs_set_string_list(const char *name, GList *value);$/;"	p	signature:(const char *name, GList *value)
purple_prefs_trigger_callback	prefs.c	/^purple_prefs_trigger_callback(const char *name)$/;"	f	signature:(const char *name)
purple_prefs_trigger_callback	prefs.h	/^void purple_prefs_trigger_callback(const char *name);$/;"	p	signature:(const char *name)
purple_prefs_uninit	prefs.c	/^purple_prefs_uninit()$/;"	f
purple_prefs_uninit	prefs.h	/^void purple_prefs_uninit(void);$/;"	p	signature:(void)
purple_prefs_update_old	prefs.c	/^purple_prefs_update_old()$/;"	f
purple_prefs_update_old	prefs.h	/^void purple_prefs_update_old(void);$/;"	p	signature:(void)
purple_presence_add_list	status.c	/^purple_presence_add_list(PurplePresence *presence, GList *source_list)$/;"	f	signature:(PurplePresence *presence, GList *source_list)
purple_presence_add_list	status.h	/^void purple_presence_add_list(PurplePresence *presence, GList *source_list);$/;"	p	signature:(PurplePresence *presence, GList *source_list)
purple_presence_add_status	status.c	/^purple_presence_add_status(PurplePresence *presence, PurpleStatus *status)$/;"	f	signature:(PurplePresence *presence, PurpleStatus *status)
purple_presence_add_status	status.h	/^void purple_presence_add_status(PurplePresence *presence, PurpleStatus *status);$/;"	p	signature:(PurplePresence *presence, PurpleStatus *status)
purple_presence_compare	status.c	/^purple_presence_compare(const PurplePresence *presence1,$/;"	f	signature:(const PurplePresence *presence1, const PurplePresence *presence2)
purple_presence_compare	status.h	/^gint purple_presence_compare(const PurplePresence *presence1,$/;"	p	signature:(const PurplePresence *presence1, const PurplePresence *presence2)
purple_presence_compute_score	status.c	/^purple_presence_compute_score(const PurplePresence *presence)$/;"	f	file:	signature:(const PurplePresence *presence)
purple_presence_destroy	status.c	/^purple_presence_destroy(PurplePresence *presence)$/;"	f	signature:(PurplePresence *presence)
purple_presence_destroy	status.h	/^void purple_presence_destroy(PurplePresence *presence);$/;"	p	signature:(PurplePresence *presence)
purple_presence_get_account	status.c	/^purple_presence_get_account(const PurplePresence *presence)$/;"	f	signature:(const PurplePresence *presence)
purple_presence_get_account	status.h	/^PurpleAccount *purple_presence_get_account(const PurplePresence *presence);$/;"	p	signature:(const PurplePresence *presence)
purple_presence_get_active_status	status.c	/^purple_presence_get_active_status(const PurplePresence *presence)$/;"	f	signature:(const PurplePresence *presence)
purple_presence_get_active_status	status.h	/^PurpleStatus *purple_presence_get_active_status(const PurplePresence *presence);$/;"	p	signature:(const PurplePresence *presence)
purple_presence_get_buddy	status.c	/^purple_presence_get_buddy(const PurplePresence *presence)$/;"	f	signature:(const PurplePresence *presence)
purple_presence_get_buddy	status.h	/^PurpleBuddy *purple_presence_get_buddy(const PurplePresence *presence);$/;"	p	signature:(const PurplePresence *presence)
purple_presence_get_chat_user	status.c	/^purple_presence_get_chat_user(const PurplePresence *presence)$/;"	f	signature:(const PurplePresence *presence)
purple_presence_get_chat_user	status.h	/^const char *purple_presence_get_chat_user(const PurplePresence *presence);$/;"	p	signature:(const PurplePresence *presence)
purple_presence_get_context	status.c	/^purple_presence_get_context(const PurplePresence *presence)$/;"	f	signature:(const PurplePresence *presence)
purple_presence_get_context	status.h	/^PurplePresenceContext purple_presence_get_context(const PurplePresence *presence);$/;"	p	signature:(const PurplePresence *presence)
purple_presence_get_conversation	status.c	/^purple_presence_get_conversation(const PurplePresence *presence)$/;"	f	signature:(const PurplePresence *presence)
purple_presence_get_conversation	status.h	/^PurpleConversation *purple_presence_get_conversation(const PurplePresence *presence);$/;"	p	signature:(const PurplePresence *presence)
purple_presence_get_idle_time	status.c	/^purple_presence_get_idle_time(const PurplePresence *presence)$/;"	f	signature:(const PurplePresence *presence)
purple_presence_get_idle_time	status.h	/^time_t purple_presence_get_idle_time(const PurplePresence *presence);$/;"	p	signature:(const PurplePresence *presence)
purple_presence_get_login_time	status.c	/^purple_presence_get_login_time(const PurplePresence *presence)$/;"	f	signature:(const PurplePresence *presence)
purple_presence_get_login_time	status.h	/^time_t purple_presence_get_login_time(const PurplePresence *presence);$/;"	p	signature:(const PurplePresence *presence)
purple_presence_get_status	status.c	/^purple_presence_get_status(const PurplePresence *presence, const char *status_id)$/;"	f	signature:(const PurplePresence *presence, const char *status_id)
purple_presence_get_status	status.h	/^PurpleStatus *purple_presence_get_status(const PurplePresence *presence,$/;"	p	signature:(const PurplePresence *presence, const char *status_id)
purple_presence_get_statuses	status.c	/^purple_presence_get_statuses(const PurplePresence *presence)$/;"	f	signature:(const PurplePresence *presence)
purple_presence_get_statuses	status.h	/^GList *purple_presence_get_statuses(const PurplePresence *presence);$/;"	p	signature:(const PurplePresence *presence)
purple_presence_is_available	status.c	/^purple_presence_is_available(const PurplePresence *presence)$/;"	f	signature:(const PurplePresence *presence)
purple_presence_is_available	status.h	/^gboolean purple_presence_is_available(const PurplePresence *presence);$/;"	p	signature:(const PurplePresence *presence)
purple_presence_is_idle	status.c	/^purple_presence_is_idle(const PurplePresence *presence)$/;"	f	signature:(const PurplePresence *presence)
purple_presence_is_idle	status.h	/^gboolean purple_presence_is_idle(const PurplePresence *presence);$/;"	p	signature:(const PurplePresence *presence)
purple_presence_is_online	status.c	/^purple_presence_is_online(const PurplePresence *presence)$/;"	f	signature:(const PurplePresence *presence)
purple_presence_is_online	status.h	/^gboolean purple_presence_is_online(const PurplePresence *presence);$/;"	p	signature:(const PurplePresence *presence)
purple_presence_is_status_active	status.c	/^purple_presence_is_status_active(const PurplePresence *presence,$/;"	f	signature:(const PurplePresence *presence, const char *status_id)
purple_presence_is_status_active	status.h	/^gboolean purple_presence_is_status_active(const PurplePresence *presence,$/;"	p	signature:(const PurplePresence *presence, const char *status_id)
purple_presence_is_status_primitive_active	status.c	/^purple_presence_is_status_primitive_active(const PurplePresence *presence,$/;"	f	signature:(const PurplePresence *presence, PurpleStatusPrimitive primitive)
purple_presence_is_status_primitive_active	status.h	/^gboolean purple_presence_is_status_primitive_active($/;"	p	signature:( const PurplePresence *presence, PurpleStatusPrimitive primitive)
purple_presence_new	status.c	/^purple_presence_new(PurplePresenceContext context)$/;"	f	signature:(PurplePresenceContext context)
purple_presence_new	status.h	/^PurplePresence *purple_presence_new(PurplePresenceContext context);$/;"	p	signature:(PurplePresenceContext context)
purple_presence_new_for_account	status.c	/^purple_presence_new_for_account(PurpleAccount *account)$/;"	f	signature:(PurpleAccount *account)
purple_presence_new_for_account	status.h	/^PurplePresence *purple_presence_new_for_account(PurpleAccount *account);$/;"	p	signature:(PurpleAccount *account)
purple_presence_new_for_buddy	status.c	/^purple_presence_new_for_buddy(PurpleBuddy *buddy)$/;"	f	signature:(PurpleBuddy *buddy)
purple_presence_new_for_buddy	status.h	/^PurplePresence *purple_presence_new_for_buddy(PurpleBuddy *buddy);$/;"	p	signature:(PurpleBuddy *buddy)
purple_presence_new_for_conv	status.c	/^purple_presence_new_for_conv(PurpleConversation *conv)$/;"	f	signature:(PurpleConversation *conv)
purple_presence_new_for_conv	status.h	/^PurplePresence *purple_presence_new_for_conv(PurpleConversation *conv);$/;"	p	signature:(PurpleConversation *conv)
purple_presence_set_idle	status.c	/^purple_presence_set_idle(PurplePresence *presence, gboolean idle, time_t idle_time)$/;"	f	signature:(PurplePresence *presence, gboolean idle, time_t idle_time)
purple_presence_set_idle	status.h	/^void purple_presence_set_idle(PurplePresence *presence, gboolean idle,$/;"	p	signature:(PurplePresence *presence, gboolean idle, time_t idle_time)
purple_presence_set_login_time	status.c	/^purple_presence_set_login_time(PurplePresence *presence, time_t login_time)$/;"	f	signature:(PurplePresence *presence, time_t login_time)
purple_presence_set_login_time	status.h	/^void purple_presence_set_login_time(PurplePresence *presence, time_t login_time);$/;"	p	signature:(PurplePresence *presence, time_t login_time)
purple_presence_set_status_active	status.c	/^purple_presence_set_status_active(PurplePresence *presence, const char *status_id,$/;"	f	signature:(PurplePresence *presence, const char *status_id, gboolean active)
purple_presence_set_status_active	status.h	/^void purple_presence_set_status_active(PurplePresence *presence,$/;"	p	signature:(PurplePresence *presence, const char *status_id, gboolean active)
purple_presence_switch_status	status.c	/^purple_presence_switch_status(PurplePresence *presence, const char *status_id)$/;"	f	signature:(PurplePresence *presence, const char *status_id)
purple_presence_switch_status	status.h	/^void purple_presence_switch_status(PurplePresence *presence,$/;"	p	signature:(PurplePresence *presence, const char *status_id)
purple_primitive_get_id_from_type	status.c	/^purple_primitive_get_id_from_type(PurpleStatusPrimitive type)$/;"	f	signature:(PurpleStatusPrimitive type)
purple_primitive_get_id_from_type	status.h	/^const char *purple_primitive_get_id_from_type(PurpleStatusPrimitive type);$/;"	p	signature:(PurpleStatusPrimitive type)
purple_primitive_get_name_from_type	status.c	/^purple_primitive_get_name_from_type(PurpleStatusPrimitive type)$/;"	f	signature:(PurpleStatusPrimitive type)
purple_primitive_get_name_from_type	status.h	/^const char *purple_primitive_get_name_from_type(PurpleStatusPrimitive type);$/;"	p	signature:(PurpleStatusPrimitive type)
purple_primitive_get_type_from_id	status.c	/^purple_primitive_get_type_from_id(const char *id)$/;"	f	signature:(const char *id)
purple_primitive_get_type_from_id	status.h	/^PurpleStatusPrimitive purple_primitive_get_type_from_id(const char *id);$/;"	p	signature:(const char *id)
purple_print_utf8_to_console	util.c	/^purple_print_utf8_to_console(FILE *filestream, char *message)$/;"	f	signature:(FILE *filestream, char *message)
purple_print_utf8_to_console	util.h	/^void purple_print_utf8_to_console(FILE *filestream, char *message);$/;"	p	signature:(FILE *filestream, char *message)
purple_privacy_allow	privacy.c	/^purple_privacy_allow(PurpleAccount *account, const char *who, gboolean local,$/;"	f	signature:(PurpleAccount *account, const char *who, gboolean local, gboolean restore)
purple_privacy_allow	privacy.h	/^void purple_privacy_allow(PurpleAccount *account, const char *who, gboolean local,$/;"	p	signature:(PurpleAccount *account, const char *who, gboolean local, gboolean restore)
purple_privacy_check	privacy.c	/^purple_privacy_check(PurpleAccount *account, const char *who)$/;"	f	signature:(PurpleAccount *account, const char *who)
purple_privacy_check	privacy.h	/^gboolean purple_privacy_check(PurpleAccount *account, const char *who);$/;"	p	signature:(PurpleAccount *account, const char *who)
purple_privacy_deny	privacy.c	/^purple_privacy_deny(PurpleAccount *account, const char *who, gboolean local,$/;"	f	signature:(PurpleAccount *account, const char *who, gboolean local, gboolean restore)
purple_privacy_deny	privacy.h	/^void purple_privacy_deny(PurpleAccount *account, const char *who, gboolean local,$/;"	p	signature:(PurpleAccount *account, const char *who, gboolean local, gboolean restore)
purple_privacy_deny_add	privacy.c	/^purple_privacy_deny_add(PurpleAccount *account, const char *who,$/;"	f	signature:(PurpleAccount *account, const char *who, gboolean local_only)
purple_privacy_deny_add	privacy.h	/^gboolean purple_privacy_deny_add(PurpleAccount *account, const char *name,$/;"	p	signature:(PurpleAccount *account, const char *name, gboolean local_only)
purple_privacy_deny_remove	privacy.c	/^purple_privacy_deny_remove(PurpleAccount *account, const char *who,$/;"	f	signature:(PurpleAccount *account, const char *who, gboolean local_only)
purple_privacy_deny_remove	privacy.h	/^gboolean purple_privacy_deny_remove(PurpleAccount *account, const char *name,$/;"	p	signature:(PurpleAccount *account, const char *name, gboolean local_only)
purple_privacy_get_ui_ops	privacy.c	/^purple_privacy_get_ui_ops(void)$/;"	f	signature:(void)
purple_privacy_get_ui_ops	privacy.h	/^PurplePrivacyUiOps *purple_privacy_get_ui_ops(void);$/;"	p	signature:(void)
purple_privacy_init	privacy.c	/^purple_privacy_init(void)$/;"	f	signature:(void)
purple_privacy_init	privacy.h	/^void purple_privacy_init(void);$/;"	p	signature:(void)
purple_privacy_permit_add	privacy.c	/^purple_privacy_permit_add(PurpleAccount *account, const char *who,$/;"	f	signature:(PurpleAccount *account, const char *who, gboolean local_only)
purple_privacy_permit_add	privacy.h	/^gboolean purple_privacy_permit_add(PurpleAccount *account, const char *name,$/;"	p	signature:(PurpleAccount *account, const char *name, gboolean local_only)
purple_privacy_permit_remove	privacy.c	/^purple_privacy_permit_remove(PurpleAccount *account, const char *who,$/;"	f	signature:(PurpleAccount *account, const char *who, gboolean local_only)
purple_privacy_permit_remove	privacy.h	/^gboolean purple_privacy_permit_remove(PurpleAccount *account, const char *name,$/;"	p	signature:(PurpleAccount *account, const char *name, gboolean local_only)
purple_privacy_set_ui_ops	privacy.c	/^purple_privacy_set_ui_ops(PurplePrivacyUiOps *ops)$/;"	f	signature:(PurplePrivacyUiOps *ops)
purple_privacy_set_ui_ops	privacy.h	/^void purple_privacy_set_ui_ops(PurplePrivacyUiOps *ops);$/;"	p	signature:(PurplePrivacyUiOps *ops)
purple_program_is_valid	util.c	/^purple_program_is_valid(const char *program)$/;"	f	signature:(const char *program)
purple_program_is_valid	util.h	/^gboolean purple_program_is_valid(const char *program);$/;"	p	signature:(const char *program)
purple_proxy	purple-client.c	/^static DBusGProxy *purple_proxy;$/;"	v	file:
purple_proxy_connect	proxy.c	/^purple_proxy_connect(void *handle, PurpleAccount *account,$/;"	f	signature:(void *handle, PurpleAccount *account, const char *host, int port, PurpleProxyConnectFunction connect_cb, gpointer data)
purple_proxy_connect	proxy.h	/^PurpleProxyConnectData *purple_proxy_connect(void *handle,$/;"	p	signature:(void *handle, PurpleAccount *account, const char *host, int port, PurpleProxyConnectFunction connect_cb, gpointer data)
purple_proxy_connect_cancel	proxy.c	/^purple_proxy_connect_cancel(PurpleProxyConnectData *connect_data)$/;"	f	signature:(PurpleProxyConnectData *connect_data)
purple_proxy_connect_cancel	proxy.h	/^void purple_proxy_connect_cancel(PurpleProxyConnectData *connect_data);$/;"	p	signature:(PurpleProxyConnectData *connect_data)
purple_proxy_connect_cancel_with_handle	proxy.c	/^purple_proxy_connect_cancel_with_handle(void *handle)$/;"	f	signature:(void *handle)
purple_proxy_connect_cancel_with_handle	proxy.h	/^void purple_proxy_connect_cancel_with_handle(void *handle);$/;"	p	signature:(void *handle)
purple_proxy_connect_data_connected	proxy.c	/^purple_proxy_connect_data_connected(PurpleProxyConnectData *connect_data)$/;"	f	file:	signature:(PurpleProxyConnectData *connect_data)
purple_proxy_connect_data_destroy	proxy.c	/^purple_proxy_connect_data_destroy(PurpleProxyConnectData *connect_data)$/;"	f	file:	signature:(PurpleProxyConnectData *connect_data)
purple_proxy_connect_data_disconnect	proxy.c	/^purple_proxy_connect_data_disconnect(PurpleProxyConnectData *connect_data, const gchar *error_message)$/;"	f	file:	signature:(PurpleProxyConnectData *connect_data, const gchar *error_message)
purple_proxy_connect_data_disconnect_formatted	proxy.c	/^purple_proxy_connect_data_disconnect_formatted(PurpleProxyConnectData *connect_data, const char *format, ...)$/;"	f	file:	signature:(PurpleProxyConnectData *connect_data, const char *format, ...)
purple_proxy_connect_socks5	proxy.c	/^purple_proxy_connect_socks5(void *handle, PurpleProxyInfo *gpi,$/;"	f	signature:(void *handle, PurpleProxyInfo *gpi, const char *host, int port, PurpleProxyConnectFunction connect_cb, gpointer data)
purple_proxy_connect_socks5	proxy.h	/^PurpleProxyConnectData *purple_proxy_connect_socks5(void *handle,$/;"	p	signature:(void *handle, PurpleProxyInfo *gpi, const char *host, int port, PurpleProxyConnectFunction connect_cb, gpointer data)
purple_proxy_connect_socks5_account	proxy.c	/^purple_proxy_connect_socks5_account(void *handle, PurpleAccount *account,$/;"	f	signature:(void *handle, PurpleAccount *account, PurpleProxyInfo *gpi, const char *host, int port, PurpleProxyConnectFunction connect_cb, gpointer data)
purple_proxy_connect_socks5_account	proxy.h	/^PurpleProxyConnectData *purple_proxy_connect_socks5_account(void *handle,$/;"	p	signature:(void *handle, PurpleAccount *account, PurpleProxyInfo *gpi, const char *host, int port, PurpleProxyConnectFunction connect_cb, gpointer data)
purple_proxy_connect_udp	proxy.c	/^purple_proxy_connect_udp(void *handle, PurpleAccount *account,$/;"	f	signature:(void *handle, PurpleAccount *account, const char *host, int port, PurpleProxyConnectFunction connect_cb, gpointer data)
purple_proxy_connect_udp	proxy.h	/^PurpleProxyConnectData *purple_proxy_connect_udp(void *handle,$/;"	p	signature:(void *handle, PurpleAccount *account, const char *host, int port, PurpleProxyConnectFunction connect_cb, gpointer data)
purple_proxy_get_handle	proxy.c	/^purple_proxy_get_handle()$/;"	f
purple_proxy_get_handle	proxy.h	/^void *purple_proxy_get_handle(void);$/;"	p	signature:(void)
purple_proxy_get_setup	proxy.c	/^purple_proxy_get_setup(PurpleAccount *account)$/;"	f	signature:(PurpleAccount *account)
purple_proxy_get_setup	proxy.h	/^PurpleProxyInfo *purple_proxy_get_setup(PurpleAccount *account);$/;"	p	signature:(PurpleAccount *account)
purple_proxy_info_destroy	proxy.c	/^purple_proxy_info_destroy(PurpleProxyInfo *info)$/;"	f	signature:(PurpleProxyInfo *info)
purple_proxy_info_destroy	proxy.h	/^void purple_proxy_info_destroy(PurpleProxyInfo *info);$/;"	p	signature:(PurpleProxyInfo *info)
purple_proxy_info_get_host	proxy.c	/^purple_proxy_info_get_host(const PurpleProxyInfo *info)$/;"	f	signature:(const PurpleProxyInfo *info)
purple_proxy_info_get_host	proxy.h	/^const char *purple_proxy_info_get_host(const PurpleProxyInfo *info);$/;"	p	signature:(const PurpleProxyInfo *info)
purple_proxy_info_get_password	proxy.c	/^purple_proxy_info_get_password(const PurpleProxyInfo *info)$/;"	f	signature:(const PurpleProxyInfo *info)
purple_proxy_info_get_password	proxy.h	/^const char *purple_proxy_info_get_password(const PurpleProxyInfo *info);$/;"	p	signature:(const PurpleProxyInfo *info)
purple_proxy_info_get_port	proxy.c	/^purple_proxy_info_get_port(const PurpleProxyInfo *info)$/;"	f	signature:(const PurpleProxyInfo *info)
purple_proxy_info_get_port	proxy.h	/^int purple_proxy_info_get_port(const PurpleProxyInfo *info);$/;"	p	signature:(const PurpleProxyInfo *info)
purple_proxy_info_get_type	proxy.c	/^purple_proxy_info_get_type(const PurpleProxyInfo *info)$/;"	f	signature:(const PurpleProxyInfo *info)
purple_proxy_info_get_type	proxy.h	/^PurpleProxyType purple_proxy_info_get_type(const PurpleProxyInfo *info);$/;"	p	signature:(const PurpleProxyInfo *info)
purple_proxy_info_get_username	proxy.c	/^purple_proxy_info_get_username(const PurpleProxyInfo *info)$/;"	f	signature:(const PurpleProxyInfo *info)
purple_proxy_info_get_username	proxy.h	/^const char *purple_proxy_info_get_username(const PurpleProxyInfo *info);$/;"	p	signature:(const PurpleProxyInfo *info)
purple_proxy_info_new	proxy.c	/^purple_proxy_info_new(void)$/;"	f	signature:(void)
purple_proxy_info_new	proxy.h	/^PurpleProxyInfo *purple_proxy_info_new(void);$/;"	p	signature:(void)
purple_proxy_info_set_host	proxy.c	/^purple_proxy_info_set_host(PurpleProxyInfo *info, const char *host)$/;"	f	signature:(PurpleProxyInfo *info, const char *host)
purple_proxy_info_set_host	proxy.h	/^void purple_proxy_info_set_host(PurpleProxyInfo *info, const char *host);$/;"	p	signature:(PurpleProxyInfo *info, const char *host)
purple_proxy_info_set_password	proxy.c	/^purple_proxy_info_set_password(PurpleProxyInfo *info, const char *password)$/;"	f	signature:(PurpleProxyInfo *info, const char *password)
purple_proxy_info_set_password	proxy.h	/^void purple_proxy_info_set_password(PurpleProxyInfo *info, const char *password);$/;"	p	signature:(PurpleProxyInfo *info, const char *password)
purple_proxy_info_set_port	proxy.c	/^purple_proxy_info_set_port(PurpleProxyInfo *info, int port)$/;"	f	signature:(PurpleProxyInfo *info, int port)
purple_proxy_info_set_port	proxy.h	/^void purple_proxy_info_set_port(PurpleProxyInfo *info, int port);$/;"	p	signature:(PurpleProxyInfo *info, int port)
purple_proxy_info_set_type	proxy.c	/^purple_proxy_info_set_type(PurpleProxyInfo *info, PurpleProxyType type)$/;"	f	signature:(PurpleProxyInfo *info, PurpleProxyType type)
purple_proxy_info_set_type	proxy.h	/^void purple_proxy_info_set_type(PurpleProxyInfo *info, PurpleProxyType type);$/;"	p	signature:(PurpleProxyInfo *info, PurpleProxyType type)
purple_proxy_info_set_username	proxy.c	/^purple_proxy_info_set_username(PurpleProxyInfo *info, const char *username)$/;"	f	signature:(PurpleProxyInfo *info, const char *username)
purple_proxy_info_set_username	proxy.h	/^void purple_proxy_info_set_username(PurpleProxyInfo *info, const char *username);$/;"	p	signature:(PurpleProxyInfo *info, const char *username)
purple_proxy_init	proxy.c	/^purple_proxy_init(void)$/;"	f	signature:(void)
purple_proxy_init	proxy.h	/^void purple_proxy_init(void);$/;"	p	signature:(void)
purple_proxy_uninit	proxy.c	/^purple_proxy_uninit(void)$/;"	f	signature:(void)
purple_proxy_uninit	proxy.h	/^void purple_proxy_uninit(void);$/;"	p	signature:(void)
purple_prpl_attention	prpl.c	/^purple_prpl_attention(PurpleConversation *conv, const char *who,$/;"	f	file:	signature:(PurpleConversation *conv, const char *who, guint type, PurpleMessageFlags flags, time_t mtime)
purple_prpl_change_account_status	prpl.c	/^purple_prpl_change_account_status(PurpleAccount *account,$/;"	f	signature:(PurpleAccount *account, PurpleStatus *old_status, PurpleStatus *new_status)
purple_prpl_change_account_status	prpl.h	/^void purple_prpl_change_account_status(PurpleAccount *account,$/;"	p	signature:(PurpleAccount *account, PurpleStatus *old_status, PurpleStatus *new_status)
purple_prpl_get_media_caps	prpl.c	/^purple_prpl_get_media_caps(PurpleAccount *account, const char *who)$/;"	f	signature:(PurpleAccount *account, const char *who)
purple_prpl_get_media_caps	prpl.h	/^PurpleMediaCaps purple_prpl_get_media_caps(PurpleAccount *account,$/;"	p	signature:(PurpleAccount *account, const char *who)
purple_prpl_get_statuses	prpl.c	/^purple_prpl_get_statuses(PurpleAccount *account, PurplePresence *presence)$/;"	f	signature:(PurpleAccount *account, PurplePresence *presence)
purple_prpl_get_statuses	prpl.h	/^GList *purple_prpl_get_statuses(PurpleAccount *account, PurplePresence *presence);$/;"	p	signature:(PurpleAccount *account, PurplePresence *presence)
purple_prpl_got_account_actions	prpl.c	/^purple_prpl_got_account_actions(PurpleAccount *account)$/;"	f	signature:(PurpleAccount *account)
purple_prpl_got_account_actions	prpl.h	/^void purple_prpl_got_account_actions(PurpleAccount *account);$/;"	p	signature:(PurpleAccount *account)
purple_prpl_got_account_idle	prpl.c	/^purple_prpl_got_account_idle(PurpleAccount *account, gboolean idle,$/;"	f	signature:(PurpleAccount *account, gboolean idle, time_t idle_time)
purple_prpl_got_account_idle	prpl.h	/^void purple_prpl_got_account_idle(PurpleAccount *account, gboolean idle,$/;"	p	signature:(PurpleAccount *account, gboolean idle, time_t idle_time)
purple_prpl_got_account_login_time	prpl.c	/^purple_prpl_got_account_login_time(PurpleAccount *account, time_t login_time)$/;"	f	signature:(PurpleAccount *account, time_t login_time)
purple_prpl_got_account_login_time	prpl.h	/^void purple_prpl_got_account_login_time(PurpleAccount *account, time_t login_time);$/;"	p	signature:(PurpleAccount *account, time_t login_time)
purple_prpl_got_account_status	prpl.c	/^purple_prpl_got_account_status(PurpleAccount *account, const char *status_id, ...)$/;"	f	signature:(PurpleAccount *account, const char *status_id, ...)
purple_prpl_got_attention	prpl.c	/^purple_prpl_got_attention(PurpleConnection *gc, const char *who, guint type_code)$/;"	f	signature:(PurpleConnection *gc, const char *who, guint type_code)
purple_prpl_got_attention	prpl.h	/^void purple_prpl_got_attention(PurpleConnection *gc, const char *who, guint type_code);$/;"	p	signature:(PurpleConnection *gc, const char *who, guint type_code)
purple_prpl_got_attention_in_chat	prpl.c	/^purple_prpl_got_attention_in_chat(PurpleConnection *gc, int id, const char *who, guint type_code)$/;"	f	signature:(PurpleConnection *gc, int id, const char *who, guint type_code)
purple_prpl_got_attention_in_chat	prpl.h	/^void purple_prpl_got_attention_in_chat(PurpleConnection *gc, int id, const char *who, guint type_code);$/;"	p	signature:(PurpleConnection *gc, int id, const char *who, guint type_code)
purple_prpl_got_media_caps	prpl.c	/^purple_prpl_got_media_caps(PurpleAccount *account, const char *name)$/;"	f	signature:(PurpleAccount *account, const char *name)
purple_prpl_got_media_caps	prpl.h	/^void purple_prpl_got_media_caps(PurpleAccount *account, const char *who);$/;"	p	signature:(PurpleAccount *account, const char *who)
purple_prpl_got_user_idle	prpl.c	/^purple_prpl_got_user_idle(PurpleAccount *account, const char *name,$/;"	f	signature:(PurpleAccount *account, const char *name, gboolean idle, time_t idle_time)
purple_prpl_got_user_idle	prpl.h	/^void purple_prpl_got_user_idle(PurpleAccount *account, const char *name,$/;"	p	signature:(PurpleAccount *account, const char *name, gboolean idle, time_t idle_time)
purple_prpl_got_user_login_time	prpl.c	/^purple_prpl_got_user_login_time(PurpleAccount *account, const char *name,$/;"	f	signature:(PurpleAccount *account, const char *name, time_t login_time)
purple_prpl_got_user_login_time	prpl.h	/^void purple_prpl_got_user_login_time(PurpleAccount *account, const char *name,$/;"	p	signature:(PurpleAccount *account, const char *name, time_t login_time)
purple_prpl_got_user_status	prpl.c	/^purple_prpl_got_user_status(PurpleAccount *account, const char *name,$/;"	f	signature:(PurpleAccount *account, const char *name, const char *status_id, ...)
purple_prpl_got_user_status_deactive	prpl.c	/^void purple_prpl_got_user_status_deactive(PurpleAccount *account, const char *name,$/;"	f	signature:(PurpleAccount *account, const char *name, const char *status_id)
purple_prpl_got_user_status_deactive	prpl.h	/^void purple_prpl_got_user_status_deactive(PurpleAccount *account, const char *name,$/;"	p	signature:(PurpleAccount *account, const char *name, const char *status_id)
purple_prpl_initiate_media	prpl.c	/^purple_prpl_initiate_media(PurpleAccount *account,$/;"	f	signature:(PurpleAccount *account, const char *who, PurpleMediaSessionType type)
purple_prpl_initiate_media	prpl.h	/^gboolean purple_prpl_initiate_media(PurpleAccount *account,$/;"	p	signature:(PurpleAccount *account, const char *who, PurpleMediaSessionType type)
purple_prpl_send_attention	prpl.c	/^purple_prpl_send_attention(PurpleConnection *gc, const char *who, guint type_code)$/;"	f	signature:(PurpleConnection *gc, const char *who, guint type_code)
purple_prpl_send_attention	prpl.h	/^void purple_prpl_send_attention(PurpleConnection *gc, const char *who, guint type_code);$/;"	p	signature:(PurpleConnection *gc, const char *who, guint type_code)
purple_quotedp_decode	util.c	/^purple_quotedp_decode(const char *str, gsize *ret_len)$/;"	f	signature:(const char *str, gsize *ret_len)
purple_quotedp_decode	util.h	/^guchar *purple_quotedp_decode(const char *str, gsize *ret_len);$/;"	p	signature:(const char *str, gsize *ret_len)
purple_rc4_cipher_get_ops	cipher.c	/^PurpleCipherOps *purple_rc4_cipher_get_ops();$/;"	p	file:
purple_request_accept_cancel	request.h	1503;"	d
purple_request_accept_cancel_with_icon	request.h	1514;"	d
purple_request_action	request.c	/^purple_request_action(void *handle, const char *title, const char *primary,$/;"	f	signature:(void *handle, const char *title, const char *primary, const char *secondary, int default_action, PurpleAccount *account, const char *who, PurpleConversation *conv, void *user_data, size_t action_count, ...)
purple_request_action	request.h	/^void *purple_request_action(void *handle, const char *title, const char *primary,$/;"	p	signature:(void *handle, const char *title, const char *primary, const char *secondary, int default_action, PurpleAccount *account, const char *who, PurpleConversation *conv, void *user_data, size_t action_count, ...)
purple_request_action_varg	request.c	/^purple_request_action_varg(void *handle, const char *title,$/;"	f	signature:(void *handle, const char *title, const char *primary, const char *secondary, int default_action, PurpleAccount *account, const char *who, PurpleConversation *conv, void *user_data, size_t action_count, va_list actions)
purple_request_action_varg	request.h	/^void *purple_request_action_varg(void *handle, const char *title,$/;"	p	signature:(void *handle, const char *title, const char *primary, const char *secondary, int default_action, PurpleAccount *account, const char *who, PurpleConversation *conv, void *user_data, size_t action_count, va_list actions)
purple_request_action_with_icon	request.c	/^purple_request_action_with_icon(void *handle, const char *title,$/;"	f	signature:(void *handle, const char *title, const char *primary, const char *secondary, int default_action, PurpleAccount *account, const char *who, PurpleConversation *conv, gconstpointer icon_data, gsize icon_size, void *user_data, size_t action_count, ...)
purple_request_action_with_icon	request.h	/^void *purple_request_action_with_icon(void *handle, const char *title,$/;"	p	signature:(void *handle, const char *title, const char *primary, const char *secondary, int default_action, PurpleAccount *account, const char *who, PurpleConversation *conv, gconstpointer icon_data, gsize icon_size, void *user_data, size_t action_count, ...)
purple_request_action_with_icon_varg	request.c	/^purple_request_action_with_icon_varg(void *handle, const char *title,$/;"	f	signature:(void *handle, const char *title, const char *primary, const char *secondary, int default_action, PurpleAccount *account, const char *who, PurpleConversation *conv, gconstpointer icon_data, gsize icon_size, void *user_data, size_t action_count, va_list actions)
purple_request_action_with_icon_varg	request.h	/^void *purple_request_action_with_icon_varg(void *handle, const char *title,$/;"	p	signature:(void *handle, const char *title, const char *primary, const char *secondary, int default_action, PurpleAccount *account, const char *who, PurpleConversation *conv, gconstpointer icon_data, gsize icon_size, void *user_data, size_t action_count, va_list actions)
purple_request_choice	request.c	/^purple_request_choice(void *handle, const char *title, const char *primary,$/;"	f	signature:(void *handle, const char *title, const char *primary, const char *secondary, int default_value, const char *ok_text, GCallback ok_cb, const char *cancel_text, GCallback cancel_cb, PurpleAccount *account, const char *who, PurpleConversation *conv, void *user_data, ...)
purple_request_choice_varg	request.c	/^purple_request_choice_varg(void *handle, const char *title,$/;"	f	signature:(void *handle, const char *title, const char *primary, const char *secondary, int default_value, const char *ok_text, GCallback ok_cb, const char *cancel_text, GCallback cancel_cb, PurpleAccount *account, const char *who, PurpleConversation *conv, void *user_data, va_list choices)
purple_request_choice_varg	request.h	/^void *purple_request_choice_varg(void *handle, const char *title,$/;"	p	signature:(void *handle, const char *title, const char *primary, const char *secondary, int default_value, const char *ok_text, GCallback ok_cb, const char *cancel_text, GCallback cancel_cb, PurpleAccount *account, const char *who, PurpleConversation *conv, void *user_data, va_list choices)
purple_request_close	request.c	/^purple_request_close(PurpleRequestType type, void *ui_handle)$/;"	f	signature:(PurpleRequestType type, void *ui_handle)
purple_request_close	request.h	/^void purple_request_close(PurpleRequestType type, void *uihandle);$/;"	p	signature:(PurpleRequestType type, void *uihandle)
purple_request_close_info	request.c	/^purple_request_close_info(PurpleRequestInfo *info)$/;"	f	file:	signature:(PurpleRequestInfo *info)
purple_request_close_with_handle	request.c	/^purple_request_close_with_handle(void *handle)$/;"	f	signature:(void *handle)
purple_request_close_with_handle	request.h	/^void purple_request_close_with_handle(void *handle);$/;"	p	signature:(void *handle)
purple_request_field_account_get_default_value	request.c	/^purple_request_field_account_get_default_value(const PurpleRequestField *field)$/;"	f	signature:(const PurpleRequestField *field)
purple_request_field_account_get_default_value	request.h	/^PurpleAccount *purple_request_field_account_get_default_value($/;"	p	signature:( const PurpleRequestField *field)
purple_request_field_account_get_filter	request.c	/^purple_request_field_account_get_filter(const PurpleRequestField *field)$/;"	f	signature:(const PurpleRequestField *field)
purple_request_field_account_get_filter	request.h	/^PurpleFilterAccountFunc purple_request_field_account_get_filter($/;"	p	signature:( const PurpleRequestField *field)
purple_request_field_account_get_show_all	request.c	/^purple_request_field_account_get_show_all(const PurpleRequestField *field)$/;"	f	signature:(const PurpleRequestField *field)
purple_request_field_account_get_show_all	request.h	/^gboolean purple_request_field_account_get_show_all($/;"	p	signature:( const PurpleRequestField *field)
purple_request_field_account_get_value	request.c	/^purple_request_field_account_get_value(const PurpleRequestField *field)$/;"	f	signature:(const PurpleRequestField *field)
purple_request_field_account_get_value	request.h	/^PurpleAccount *purple_request_field_account_get_value($/;"	p	signature:( const PurpleRequestField *field)
purple_request_field_account_new	request.c	/^purple_request_field_account_new(const char *id, const char *text,$/;"	f	signature:(const char *id, const char *text, PurpleAccount *account)
purple_request_field_account_new	request.h	/^PurpleRequestField *purple_request_field_account_new(const char *id,$/;"	p	signature:(const char *id, const char *text, PurpleAccount *account)
purple_request_field_account_set_default_value	request.c	/^purple_request_field_account_set_default_value(PurpleRequestField *field,$/;"	f	signature:(PurpleRequestField *field, PurpleAccount *default_value)
purple_request_field_account_set_default_value	request.h	/^void purple_request_field_account_set_default_value(PurpleRequestField *field,$/;"	p	signature:(PurpleRequestField *field, PurpleAccount *default_value)
purple_request_field_account_set_filter	request.c	/^purple_request_field_account_set_filter(PurpleRequestField *field,$/;"	f	signature:(PurpleRequestField *field, PurpleFilterAccountFunc filter_func)
purple_request_field_account_set_filter	request.h	/^void purple_request_field_account_set_filter(PurpleRequestField *field,$/;"	p	signature:(PurpleRequestField *field, PurpleFilterAccountFunc filter_func)
purple_request_field_account_set_show_all	request.c	/^purple_request_field_account_set_show_all(PurpleRequestField *field,$/;"	f	signature:(PurpleRequestField *field, gboolean show_all)
purple_request_field_account_set_show_all	request.h	/^void purple_request_field_account_set_show_all(PurpleRequestField *field,$/;"	p	signature:(PurpleRequestField *field, gboolean show_all)
purple_request_field_account_set_value	request.c	/^purple_request_field_account_set_value(PurpleRequestField *field,$/;"	f	signature:(PurpleRequestField *field, PurpleAccount *value)
purple_request_field_account_set_value	request.h	/^void purple_request_field_account_set_value(PurpleRequestField *field,$/;"	p	signature:(PurpleRequestField *field, PurpleAccount *value)
purple_request_field_bool_get_default_value	request.c	/^purple_request_field_bool_get_default_value(const PurpleRequestField *field)$/;"	f	signature:(const PurpleRequestField *field)
purple_request_field_bool_get_default_value	request.h	/^gboolean purple_request_field_bool_get_default_value($/;"	p	signature:( const PurpleRequestField *field)
purple_request_field_bool_get_value	request.c	/^purple_request_field_bool_get_value(const PurpleRequestField *field)$/;"	f	signature:(const PurpleRequestField *field)
purple_request_field_bool_get_value	request.h	/^gboolean purple_request_field_bool_get_value(const PurpleRequestField *field);$/;"	p	signature:(const PurpleRequestField *field)
purple_request_field_bool_new	request.c	/^purple_request_field_bool_new(const char *id, const char *text,$/;"	f	signature:(const char *id, const char *text, gboolean default_value)
purple_request_field_bool_new	request.h	/^PurpleRequestField *purple_request_field_bool_new(const char *id,$/;"	p	signature:(const char *id, const char *text, gboolean default_value)
purple_request_field_bool_set_default_value	request.c	/^purple_request_field_bool_set_default_value(PurpleRequestField *field,$/;"	f	signature:(PurpleRequestField *field, gboolean default_value)
purple_request_field_bool_set_default_value	request.h	/^void purple_request_field_bool_set_default_value(PurpleRequestField *field,$/;"	p	signature:(PurpleRequestField *field, gboolean default_value)
purple_request_field_bool_set_value	request.c	/^purple_request_field_bool_set_value(PurpleRequestField *field, gboolean value)$/;"	f	signature:(PurpleRequestField *field, gboolean value)
purple_request_field_bool_set_value	request.h	/^void purple_request_field_bool_set_value(PurpleRequestField *field,$/;"	p	signature:(PurpleRequestField *field, gboolean value)
purple_request_field_choice_add	request.c	/^purple_request_field_choice_add(PurpleRequestField *field, const char *label)$/;"	f	signature:(PurpleRequestField *field, const char *label)
purple_request_field_choice_add	request.h	/^void purple_request_field_choice_add(PurpleRequestField *field,$/;"	p	signature:(PurpleRequestField *field, const char *label)
purple_request_field_choice_get_default_value	request.c	/^purple_request_field_choice_get_default_value(const PurpleRequestField *field)$/;"	f	signature:(const PurpleRequestField *field)
purple_request_field_choice_get_default_value	request.h	/^int purple_request_field_choice_get_default_value(const PurpleRequestField *field);$/;"	p	signature:(const PurpleRequestField *field)
purple_request_field_choice_get_labels	request.c	/^purple_request_field_choice_get_labels(const PurpleRequestField *field)$/;"	f	signature:(const PurpleRequestField *field)
purple_request_field_choice_get_labels	request.h	/^GList *purple_request_field_choice_get_labels(const PurpleRequestField *field);$/;"	p	signature:(const PurpleRequestField *field)
purple_request_field_choice_get_value	request.c	/^purple_request_field_choice_get_value(const PurpleRequestField *field)$/;"	f	signature:(const PurpleRequestField *field)
purple_request_field_choice_get_value	request.h	/^int purple_request_field_choice_get_value(const PurpleRequestField *field);$/;"	p	signature:(const PurpleRequestField *field)
purple_request_field_choice_new	request.c	/^purple_request_field_choice_new(const char *id, const char *text,$/;"	f	signature:(const char *id, const char *text, int default_value)
purple_request_field_choice_new	request.h	/^PurpleRequestField *purple_request_field_choice_new(const char *id,$/;"	p	signature:(const char *id, const char *text, int default_value)
purple_request_field_choice_set_default_value	request.c	/^purple_request_field_choice_set_default_value(PurpleRequestField *field,$/;"	f	signature:(PurpleRequestField *field, int default_value)
purple_request_field_choice_set_default_value	request.h	/^void purple_request_field_choice_set_default_value(PurpleRequestField *field,$/;"	p	signature:(PurpleRequestField *field, int default_value)
purple_request_field_choice_set_value	request.c	/^purple_request_field_choice_set_value(PurpleRequestField *field,$/;"	f	signature:(PurpleRequestField *field, int value)
purple_request_field_choice_set_value	request.h	/^void purple_request_field_choice_set_value(PurpleRequestField *field, int value);$/;"	p	signature:(PurpleRequestField *field, int value)
purple_request_field_destroy	request.c	/^purple_request_field_destroy(PurpleRequestField *field)$/;"	f	signature:(PurpleRequestField *field)
purple_request_field_destroy	request.h	/^void purple_request_field_destroy(PurpleRequestField *field);$/;"	p	signature:(PurpleRequestField *field)
purple_request_field_get_group	request.c	/^purple_request_field_get_group(const PurpleRequestField *field)$/;"	f	signature:(const PurpleRequestField *field)
purple_request_field_get_group	request.h	/^PurpleRequestFieldGroup *purple_request_field_get_group(const PurpleRequestField *field);$/;"	p	signature:(const PurpleRequestField *field)
purple_request_field_get_id	request.c	/^purple_request_field_get_id(const PurpleRequestField *field)$/;"	f	signature:(const PurpleRequestField *field)
purple_request_field_get_id	request.h	/^const char *purple_request_field_get_id(const PurpleRequestField *field);$/;"	p	signature:(const PurpleRequestField *field)
purple_request_field_get_label	request.c	/^purple_request_field_get_label(const PurpleRequestField *field)$/;"	f	signature:(const PurpleRequestField *field)
purple_request_field_get_label	request.h	/^const char *purple_request_field_get_label(const PurpleRequestField *field);$/;"	p	signature:(const PurpleRequestField *field)
purple_request_field_get_type	request.c	/^purple_request_field_get_type(const PurpleRequestField *field)$/;"	f	signature:(const PurpleRequestField *field)
purple_request_field_get_type	request.h	/^PurpleRequestFieldType purple_request_field_get_type(const PurpleRequestField *field);$/;"	p	signature:(const PurpleRequestField *field)
purple_request_field_get_type_hint	request.c	/^purple_request_field_get_type_hint(const PurpleRequestField *field)$/;"	f	signature:(const PurpleRequestField *field)
purple_request_field_get_type_hint	request.h	/^const char *purple_request_field_get_type_hint(const PurpleRequestField *field);$/;"	p	signature:(const PurpleRequestField *field)
purple_request_field_get_ui_data	request.c	/^purple_request_field_get_ui_data(const PurpleRequestField *field)$/;"	f	signature:(const PurpleRequestField *field)
purple_request_field_get_ui_data	request.h	/^gpointer purple_request_field_get_ui_data(const PurpleRequestField *field);$/;"	p	signature:(const PurpleRequestField *field)
purple_request_field_group_add_field	request.c	/^purple_request_field_group_add_field(PurpleRequestFieldGroup *group,$/;"	f	signature:(PurpleRequestFieldGroup *group, PurpleRequestField *field)
purple_request_field_group_add_field	request.h	/^void purple_request_field_group_add_field(PurpleRequestFieldGroup *group,$/;"	p	signature:(PurpleRequestFieldGroup *group, PurpleRequestField *field)
purple_request_field_group_destroy	request.c	/^purple_request_field_group_destroy(PurpleRequestFieldGroup *group)$/;"	f	signature:(PurpleRequestFieldGroup *group)
purple_request_field_group_destroy	request.h	/^void purple_request_field_group_destroy(PurpleRequestFieldGroup *group);$/;"	p	signature:(PurpleRequestFieldGroup *group)
purple_request_field_group_get_fields	request.c	/^purple_request_field_group_get_fields(const PurpleRequestFieldGroup *group)$/;"	f	signature:(const PurpleRequestFieldGroup *group)
purple_request_field_group_get_fields	request.h	/^GList *purple_request_field_group_get_fields($/;"	p	signature:( const PurpleRequestFieldGroup *group)
purple_request_field_group_get_title	request.c	/^purple_request_field_group_get_title(const PurpleRequestFieldGroup *group)$/;"	f	signature:(const PurpleRequestFieldGroup *group)
purple_request_field_group_get_title	request.h	/^const char *purple_request_field_group_get_title($/;"	p	signature:( const PurpleRequestFieldGroup *group)
purple_request_field_group_new	request.c	/^purple_request_field_group_new(const char *title)$/;"	f	signature:(const char *title)
purple_request_field_group_new	request.h	/^PurpleRequestFieldGroup *purple_request_field_group_new(const char *title);$/;"	p	signature:(const char *title)
purple_request_field_image_get_buffer	request.c	/^purple_request_field_image_get_buffer(PurpleRequestField *field)$/;"	f	signature:(PurpleRequestField *field)
purple_request_field_image_get_buffer	request.h	/^const char *purple_request_field_image_get_buffer(PurpleRequestField *field);$/;"	p	signature:(PurpleRequestField *field)
purple_request_field_image_get_scale_x	request.c	/^purple_request_field_image_get_scale_x(PurpleRequestField *field)$/;"	f	signature:(PurpleRequestField *field)
purple_request_field_image_get_scale_x	request.h	/^unsigned int purple_request_field_image_get_scale_x(PurpleRequestField *field);$/;"	p	signature:(PurpleRequestField *field)
purple_request_field_image_get_scale_y	request.c	/^purple_request_field_image_get_scale_y(PurpleRequestField *field)$/;"	f	signature:(PurpleRequestField *field)
purple_request_field_image_get_scale_y	request.h	/^unsigned int purple_request_field_image_get_scale_y(PurpleRequestField *field);$/;"	p	signature:(PurpleRequestField *field)
purple_request_field_image_get_size	request.c	/^purple_request_field_image_get_size(PurpleRequestField *field)$/;"	f	signature:(PurpleRequestField *field)
purple_request_field_image_get_size	request.h	/^gsize purple_request_field_image_get_size(PurpleRequestField *field);$/;"	p	signature:(PurpleRequestField *field)
purple_request_field_image_new	request.c	/^purple_request_field_image_new(const char *id, const char *text, const char *buf, gsize size)$/;"	f	signature:(const char *id, const char *text, const char *buf, gsize size)
purple_request_field_image_new	request.h	/^PurpleRequestField *purple_request_field_image_new(const char *id, const char *text,$/;"	p	signature:(const char *id, const char *text, const char *buf, gsize size)
purple_request_field_image_set_scale	request.c	/^purple_request_field_image_set_scale(PurpleRequestField *field, unsigned int x, unsigned int y)$/;"	f	signature:(PurpleRequestField *field, unsigned int x, unsigned int y)
purple_request_field_image_set_scale	request.h	/^void purple_request_field_image_set_scale(PurpleRequestField *field, unsigned int x, unsigned int y);$/;"	p	signature:(PurpleRequestField *field, unsigned int x, unsigned int y)
purple_request_field_int_get_default_value	request.c	/^purple_request_field_int_get_default_value(const PurpleRequestField *field)$/;"	f	signature:(const PurpleRequestField *field)
purple_request_field_int_get_default_value	request.h	/^int purple_request_field_int_get_default_value(const PurpleRequestField *field);$/;"	p	signature:(const PurpleRequestField *field)
purple_request_field_int_get_value	request.c	/^purple_request_field_int_get_value(const PurpleRequestField *field)$/;"	f	signature:(const PurpleRequestField *field)
purple_request_field_int_get_value	request.h	/^int purple_request_field_int_get_value(const PurpleRequestField *field);$/;"	p	signature:(const PurpleRequestField *field)
purple_request_field_int_new	request.c	/^purple_request_field_int_new(const char *id, const char *text,$/;"	f	signature:(const char *id, const char *text, int default_value)
purple_request_field_int_new	request.h	/^PurpleRequestField *purple_request_field_int_new(const char *id,$/;"	p	signature:(const char *id, const char *text, int default_value)
purple_request_field_int_set_default_value	request.c	/^purple_request_field_int_set_default_value(PurpleRequestField *field,$/;"	f	signature:(PurpleRequestField *field, int default_value)
purple_request_field_int_set_default_value	request.h	/^void purple_request_field_int_set_default_value(PurpleRequestField *field,$/;"	p	signature:(PurpleRequestField *field, int default_value)
purple_request_field_int_set_value	request.c	/^purple_request_field_int_set_value(PurpleRequestField *field, int value)$/;"	f	signature:(PurpleRequestField *field, int value)
purple_request_field_int_set_value	request.h	/^void purple_request_field_int_set_value(PurpleRequestField *field, int value);$/;"	p	signature:(PurpleRequestField *field, int value)
purple_request_field_is_required	request.c	/^purple_request_field_is_required(const PurpleRequestField *field)$/;"	f	signature:(const PurpleRequestField *field)
purple_request_field_is_required	request.h	/^gboolean purple_request_field_is_required(const PurpleRequestField *field);$/;"	p	signature:(const PurpleRequestField *field)
purple_request_field_is_visible	request.c	/^purple_request_field_is_visible(const PurpleRequestField *field)$/;"	f	signature:(const PurpleRequestField *field)
purple_request_field_is_visible	request.h	/^gboolean purple_request_field_is_visible(const PurpleRequestField *field);$/;"	p	signature:(const PurpleRequestField *field)
purple_request_field_label_new	request.c	/^purple_request_field_label_new(const char *id, const char *text)$/;"	f	signature:(const char *id, const char *text)
purple_request_field_label_new	request.h	/^PurpleRequestField *purple_request_field_label_new(const char *id,$/;"	p	signature:(const char *id, const char *text)
purple_request_field_list_add	request.c	/^purple_request_field_list_add(PurpleRequestField *field, const char *item,$/;"	f	signature:(PurpleRequestField *field, const char *item, void *data)
purple_request_field_list_add	request.h	/^void purple_request_field_list_add(PurpleRequestField *field,$/;"	p	signature:(PurpleRequestField *field, const char *item, void *data)
purple_request_field_list_add_icon	request.c	/^purple_request_field_list_add_icon(PurpleRequestField *field, const char *item, const char* icon_path,$/;"	f	signature:(PurpleRequestField *field, const char *item, const char* icon_path, void *data)
purple_request_field_list_add_icon	request.h	/^void purple_request_field_list_add_icon(PurpleRequestField *field,$/;"	p	signature:(PurpleRequestField *field, const char *item, const char* icon_path, void* data)
purple_request_field_list_add_selected	request.c	/^purple_request_field_list_add_selected(PurpleRequestField *field, const char *item)$/;"	f	signature:(PurpleRequestField *field, const char *item)
purple_request_field_list_add_selected	request.h	/^void purple_request_field_list_add_selected(PurpleRequestField *field,$/;"	p	signature:(PurpleRequestField *field, const char *item)
purple_request_field_list_clear_selected	request.c	/^purple_request_field_list_clear_selected(PurpleRequestField *field)$/;"	f	signature:(PurpleRequestField *field)
purple_request_field_list_clear_selected	request.h	/^void purple_request_field_list_clear_selected(PurpleRequestField *field);$/;"	p	signature:(PurpleRequestField *field)
purple_request_field_list_get_data	request.c	/^purple_request_field_list_get_data(const PurpleRequestField *field,$/;"	f	signature:(const PurpleRequestField *field, const char *text)
purple_request_field_list_get_data	request.h	/^void *purple_request_field_list_get_data(const PurpleRequestField *field,$/;"	p	signature:(const PurpleRequestField *field, const char *text)
purple_request_field_list_get_icons	request.c	/^purple_request_field_list_get_icons(const PurpleRequestField *field)$/;"	f	signature:(const PurpleRequestField *field)
purple_request_field_list_get_icons	request.h	/^GList *purple_request_field_list_get_icons(const PurpleRequestField *field);$/;"	p	signature:(const PurpleRequestField *field)
purple_request_field_list_get_items	request.c	/^purple_request_field_list_get_items(const PurpleRequestField *field)$/;"	f	signature:(const PurpleRequestField *field)
purple_request_field_list_get_items	request.h	/^GList *purple_request_field_list_get_items(const PurpleRequestField *field);$/;"	p	signature:(const PurpleRequestField *field)
purple_request_field_list_get_multi_select	request.c	/^purple_request_field_list_get_multi_select(const PurpleRequestField *field)$/;"	f	signature:(const PurpleRequestField *field)
purple_request_field_list_get_multi_select	request.h	/^gboolean purple_request_field_list_get_multi_select($/;"	p	signature:( const PurpleRequestField *field)
purple_request_field_list_get_selected	request.c	/^purple_request_field_list_get_selected(const PurpleRequestField *field)$/;"	f	signature:(const PurpleRequestField *field)
purple_request_field_list_get_selected	request.h	/^GList *purple_request_field_list_get_selected($/;"	p	signature:( const PurpleRequestField *field)
purple_request_field_list_is_selected	request.c	/^purple_request_field_list_is_selected(const PurpleRequestField *field,$/;"	f	signature:(const PurpleRequestField *field, const char *item)
purple_request_field_list_is_selected	request.h	/^gboolean purple_request_field_list_is_selected(const PurpleRequestField *field,$/;"	p	signature:(const PurpleRequestField *field, const char *item)
purple_request_field_list_new	request.c	/^purple_request_field_list_new(const char *id, const char *text)$/;"	f	signature:(const char *id, const char *text)
purple_request_field_list_new	request.h	/^PurpleRequestField *purple_request_field_list_new(const char *id, const char *text);$/;"	p	signature:(const char *id, const char *text)
purple_request_field_list_set_multi_select	request.c	/^purple_request_field_list_set_multi_select(PurpleRequestField *field,$/;"	f	signature:(PurpleRequestField *field, gboolean multi_select)
purple_request_field_list_set_multi_select	request.h	/^void purple_request_field_list_set_multi_select(PurpleRequestField *field,$/;"	p	signature:(PurpleRequestField *field, gboolean multi_select)
purple_request_field_list_set_selected	request.c	/^purple_request_field_list_set_selected(PurpleRequestField *field, GList *items)$/;"	f	signature:(PurpleRequestField *field, GList *items)
purple_request_field_list_set_selected	request.h	/^void purple_request_field_list_set_selected(PurpleRequestField *field,$/;"	p	signature:(PurpleRequestField *field, GList *items)
purple_request_field_new	request.c	/^purple_request_field_new(const char *id, const char *text,$/;"	f	signature:(const char *id, const char *text, PurpleRequestFieldType type)
purple_request_field_new	request.h	/^PurpleRequestField *purple_request_field_new(const char *id, const char *text,$/;"	p	signature:(const char *id, const char *text, PurpleRequestFieldType type)
purple_request_field_set_label	request.c	/^purple_request_field_set_label(PurpleRequestField *field, const char *label)$/;"	f	signature:(PurpleRequestField *field, const char *label)
purple_request_field_set_label	request.h	/^void purple_request_field_set_label(PurpleRequestField *field, const char *label);$/;"	p	signature:(PurpleRequestField *field, const char *label)
purple_request_field_set_required	request.c	/^purple_request_field_set_required(PurpleRequestField *field, gboolean required)$/;"	f	signature:(PurpleRequestField *field, gboolean required)
purple_request_field_set_required	request.h	/^void purple_request_field_set_required(PurpleRequestField *field,$/;"	p	signature:(PurpleRequestField *field, gboolean required)
purple_request_field_set_type_hint	request.c	/^purple_request_field_set_type_hint(PurpleRequestField *field,$/;"	f	signature:(PurpleRequestField *field, const char *type_hint)
purple_request_field_set_type_hint	request.h	/^void purple_request_field_set_type_hint(PurpleRequestField *field,$/;"	p	signature:(PurpleRequestField *field, const char *type_hint)
purple_request_field_set_ui_data	request.c	/^purple_request_field_set_ui_data(PurpleRequestField *field,$/;"	f	signature:(PurpleRequestField *field, gpointer ui_data)
purple_request_field_set_ui_data	request.h	/^void purple_request_field_set_ui_data(PurpleRequestField *field,$/;"	p	signature:(PurpleRequestField *field, gpointer ui_data)
purple_request_field_set_visible	request.c	/^purple_request_field_set_visible(PurpleRequestField *field, gboolean visible)$/;"	f	signature:(PurpleRequestField *field, gboolean visible)
purple_request_field_set_visible	request.h	/^void purple_request_field_set_visible(PurpleRequestField *field, gboolean visible);$/;"	p	signature:(PurpleRequestField *field, gboolean visible)
purple_request_field_string_get_default_value	request.c	/^purple_request_field_string_get_default_value(const PurpleRequestField *field)$/;"	f	signature:(const PurpleRequestField *field)
purple_request_field_string_get_default_value	request.h	/^const char *purple_request_field_string_get_default_value($/;"	p	signature:( const PurpleRequestField *field)
purple_request_field_string_get_value	request.c	/^purple_request_field_string_get_value(const PurpleRequestField *field)$/;"	f	signature:(const PurpleRequestField *field)
purple_request_field_string_get_value	request.h	/^const char *purple_request_field_string_get_value(const PurpleRequestField *field);$/;"	p	signature:(const PurpleRequestField *field)
purple_request_field_string_is_editable	request.c	/^purple_request_field_string_is_editable(const PurpleRequestField *field)$/;"	f	signature:(const PurpleRequestField *field)
purple_request_field_string_is_editable	request.h	/^gboolean purple_request_field_string_is_editable(const PurpleRequestField *field);$/;"	p	signature:(const PurpleRequestField *field)
purple_request_field_string_is_masked	request.c	/^purple_request_field_string_is_masked(const PurpleRequestField *field)$/;"	f	signature:(const PurpleRequestField *field)
purple_request_field_string_is_masked	request.h	/^gboolean purple_request_field_string_is_masked(const PurpleRequestField *field);$/;"	p	signature:(const PurpleRequestField *field)
purple_request_field_string_is_multiline	request.c	/^purple_request_field_string_is_multiline(const PurpleRequestField *field)$/;"	f	signature:(const PurpleRequestField *field)
purple_request_field_string_is_multiline	request.h	/^gboolean purple_request_field_string_is_multiline(const PurpleRequestField *field);$/;"	p	signature:(const PurpleRequestField *field)
purple_request_field_string_new	request.c	/^purple_request_field_string_new(const char *id, const char *text,$/;"	f	signature:(const char *id, const char *text, const char *default_value, gboolean multiline)
purple_request_field_string_new	request.h	/^PurpleRequestField *purple_request_field_string_new(const char *id,$/;"	p	signature:(const char *id, const char *text, const char *default_value, gboolean multiline)
purple_request_field_string_set_default_value	request.c	/^purple_request_field_string_set_default_value(PurpleRequestField *field,$/;"	f	signature:(PurpleRequestField *field, const char *default_value)
purple_request_field_string_set_default_value	request.h	/^void purple_request_field_string_set_default_value(PurpleRequestField *field,$/;"	p	signature:(PurpleRequestField *field, const char *default_value)
purple_request_field_string_set_editable	request.c	/^purple_request_field_string_set_editable(PurpleRequestField *field,$/;"	f	signature:(PurpleRequestField *field, gboolean editable)
purple_request_field_string_set_editable	request.h	/^void purple_request_field_string_set_editable(PurpleRequestField *field,$/;"	p	signature:(PurpleRequestField *field, gboolean editable)
purple_request_field_string_set_masked	request.c	/^purple_request_field_string_set_masked(PurpleRequestField *field, gboolean masked)$/;"	f	signature:(PurpleRequestField *field, gboolean masked)
purple_request_field_string_set_masked	request.h	/^void purple_request_field_string_set_masked(PurpleRequestField *field,$/;"	p	signature:(PurpleRequestField *field, gboolean masked)
purple_request_field_string_set_value	request.c	/^purple_request_field_string_set_value(PurpleRequestField *field, const char *value)$/;"	f	signature:(PurpleRequestField *field, const char *value)
purple_request_field_string_set_value	request.h	/^void purple_request_field_string_set_value(PurpleRequestField *field,$/;"	p	signature:(PurpleRequestField *field, const char *value)
purple_request_fields	request.c	/^purple_request_fields(void *handle, const char *title, const char *primary,$/;"	f	signature:(void *handle, const char *title, const char *primary, const char *secondary, PurpleRequestFields *fields, const char *ok_text, GCallback ok_cb, const char *cancel_text, GCallback cancel_cb, PurpleAccount *account, const char *who, PurpleConversation *conv, void *user_data)
purple_request_fields	request.h	/^void *purple_request_fields(void *handle, const char *title, const char *primary,$/;"	p	signature:(void *handle, const char *title, const char *primary, const char *secondary, PurpleRequestFields *fields, const char *ok_text, GCallback ok_cb, const char *cancel_text, GCallback cancel_cb, PurpleAccount *account, const char *who, PurpleConversation *conv, void *user_data)
purple_request_fields_add_group	request.c	/^purple_request_fields_add_group(PurpleRequestFields *fields,$/;"	f	signature:(PurpleRequestFields *fields, PurpleRequestFieldGroup *group)
purple_request_fields_add_group	request.h	/^void purple_request_fields_add_group(PurpleRequestFields *fields,$/;"	p	signature:(PurpleRequestFields *fields, PurpleRequestFieldGroup *group)
purple_request_fields_all_required_filled	request.c	/^purple_request_fields_all_required_filled(const PurpleRequestFields *fields)$/;"	f	signature:(const PurpleRequestFields *fields)
purple_request_fields_all_required_filled	request.h	/^gboolean purple_request_fields_all_required_filled($/;"	p	signature:( const PurpleRequestFields *fields)
purple_request_fields_destroy	request.c	/^purple_request_fields_destroy(PurpleRequestFields *fields)$/;"	f	signature:(PurpleRequestFields *fields)
purple_request_fields_destroy	request.h	/^void purple_request_fields_destroy(PurpleRequestFields *fields);$/;"	p	signature:(PurpleRequestFields *fields)
purple_request_fields_exists	request.c	/^purple_request_fields_exists(const PurpleRequestFields *fields, const char *id)$/;"	f	signature:(const PurpleRequestFields *fields, const char *id)
purple_request_fields_exists	request.h	/^gboolean purple_request_fields_exists(const PurpleRequestFields *fields,$/;"	p	signature:(const PurpleRequestFields *fields, const char *id)
purple_request_fields_get_account	request.c	/^purple_request_fields_get_account(const PurpleRequestFields *fields,$/;"	f	signature:(const PurpleRequestFields *fields, const char *id)
purple_request_fields_get_account	request.h	/^PurpleAccount *purple_request_fields_get_account(const PurpleRequestFields *fields,$/;"	p	signature:(const PurpleRequestFields *fields, const char *id)
purple_request_fields_get_bool	request.c	/^purple_request_fields_get_bool(const PurpleRequestFields *fields, const char *id)$/;"	f	signature:(const PurpleRequestFields *fields, const char *id)
purple_request_fields_get_bool	request.h	/^gboolean purple_request_fields_get_bool(const PurpleRequestFields *fields,$/;"	p	signature:(const PurpleRequestFields *fields, const char *id)
purple_request_fields_get_choice	request.c	/^purple_request_fields_get_choice(const PurpleRequestFields *fields, const char *id)$/;"	f	signature:(const PurpleRequestFields *fields, const char *id)
purple_request_fields_get_choice	request.h	/^int purple_request_fields_get_choice(const PurpleRequestFields *fields,$/;"	p	signature:(const PurpleRequestFields *fields, const char *id)
purple_request_fields_get_field	request.c	/^purple_request_fields_get_field(const PurpleRequestFields *fields, const char *id)$/;"	f	signature:(const PurpleRequestFields *fields, const char *id)
purple_request_fields_get_field	request.h	/^PurpleRequestField *purple_request_fields_get_field($/;"	p	signature:( const PurpleRequestFields *fields, const char *id)
purple_request_fields_get_groups	request.c	/^purple_request_fields_get_groups(const PurpleRequestFields *fields)$/;"	f	signature:(const PurpleRequestFields *fields)
purple_request_fields_get_groups	request.h	/^GList *purple_request_fields_get_groups(const PurpleRequestFields *fields);$/;"	p	signature:(const PurpleRequestFields *fields)
purple_request_fields_get_integer	request.c	/^purple_request_fields_get_integer(const PurpleRequestFields *fields,$/;"	f	signature:(const PurpleRequestFields *fields, const char *id)
purple_request_fields_get_integer	request.h	/^int purple_request_fields_get_integer(const PurpleRequestFields *fields,$/;"	p	signature:(const PurpleRequestFields *fields, const char *id)
purple_request_fields_get_required	request.c	/^purple_request_fields_get_required(const PurpleRequestFields *fields)$/;"	f	signature:(const PurpleRequestFields *fields)
purple_request_fields_get_required	request.h	/^GList *purple_request_fields_get_required(const PurpleRequestFields *fields);$/;"	p	signature:(const PurpleRequestFields *fields)
purple_request_fields_get_string	request.c	/^purple_request_fields_get_string(const PurpleRequestFields *fields, const char *id)$/;"	f	signature:(const PurpleRequestFields *fields, const char *id)
purple_request_fields_get_string	request.h	/^const char *purple_request_fields_get_string(const PurpleRequestFields *fields,$/;"	p	signature:(const PurpleRequestFields *fields, const char *id)
purple_request_fields_is_field_required	request.c	/^purple_request_fields_is_field_required(const PurpleRequestFields *fields,$/;"	f	signature:(const PurpleRequestFields *fields, const char *id)
purple_request_fields_is_field_required	request.h	/^gboolean purple_request_fields_is_field_required(const PurpleRequestFields *fields,$/;"	p	signature:(const PurpleRequestFields *fields, const char *id)
purple_request_fields_new	request.c	/^purple_request_fields_new(void)$/;"	f	signature:(void)
purple_request_fields_new	request.h	/^PurpleRequestFields *purple_request_fields_new(void);$/;"	p	signature:(void)
purple_request_file	request.c	/^purple_request_file(void *handle, const char *title, const char *filename,$/;"	f	signature:(void *handle, const char *title, const char *filename, gboolean savedialog, GCallback ok_cb, GCallback cancel_cb, PurpleAccount *account, const char *who, PurpleConversation *conv, void *user_data)
purple_request_file	request.h	/^void *purple_request_file(void *handle, const char *title, const char *filename,$/;"	p	signature:(void *handle, const char *title, const char *filename, gboolean savedialog, GCallback ok_cb, GCallback cancel_cb, PurpleAccount *account, const char *who, PurpleConversation *conv, void *user_data)
purple_request_folder	request.c	/^purple_request_folder(void *handle, const char *title, const char *dirname,$/;"	f	signature:(void *handle, const char *title, const char *dirname, GCallback ok_cb, GCallback cancel_cb, PurpleAccount *account, const char *who, PurpleConversation *conv, void *user_data)
purple_request_folder	request.h	/^void *purple_request_folder(void *handle, const char *title, const char *dirname,$/;"	p	signature:(void *handle, const char *title, const char *dirname, GCallback ok_cb, GCallback cancel_cb, PurpleAccount *account, const char *who, PurpleConversation *conv, void *user_data)
purple_request_get_ui_ops	request.c	/^purple_request_get_ui_ops(void)$/;"	f	signature:(void)
purple_request_get_ui_ops	request.h	/^PurpleRequestUiOps *purple_request_get_ui_ops(void);$/;"	p	signature:(void)
purple_request_input	request.c	/^purple_request_input(void *handle, const char *title, const char *primary,$/;"	f	signature:(void *handle, const char *title, const char *primary, const char *secondary, const char *default_value, gboolean multiline, gboolean masked, gchar *hint, const char *ok_text, GCallback ok_cb, const char *cancel_text, GCallback cancel_cb, PurpleAccount *account, const char *who, PurpleConversation *conv, void *user_data)
purple_request_input	request.h	/^void *purple_request_input(void *handle, const char *title, const char *primary,$/;"	p	signature:(void *handle, const char *title, const char *primary, const char *secondary, const char *default_value, gboolean multiline, gboolean masked, gchar *hint, const char *ok_text, GCallback ok_cb, const char *cancel_text, GCallback cancel_cb, PurpleAccount *account, const char *who, PurpleConversation *conv, void *user_data)
purple_request_ok_cancel	request.h	1493;"	d
purple_request_set_ui_ops	request.c	/^purple_request_set_ui_ops(PurpleRequestUiOps *ops)$/;"	f	signature:(PurpleRequestUiOps *ops)
purple_request_set_ui_ops	request.h	/^void purple_request_set_ui_ops(PurpleRequestUiOps *ops);$/;"	p	signature:(PurpleRequestUiOps *ops)
purple_request_yes_no	request.h	1483;"	d
purple_restore_default_signal_handlers	util.c	/^void purple_restore_default_signal_handlers(void)$/;"	f	signature:(void)
purple_restore_default_signal_handlers	util.h	/^void purple_restore_default_signal_handlers(void);$/;"	p	signature:(void)
purple_roomlist_cancel_get_list	roomlist.c	/^void purple_roomlist_cancel_get_list(PurpleRoomlist *list)$/;"	f	signature:(PurpleRoomlist *list)
purple_roomlist_cancel_get_list	roomlist.h	/^void purple_roomlist_cancel_get_list(PurpleRoomlist *list);$/;"	p	signature:(PurpleRoomlist *list)
purple_roomlist_destroy	roomlist.c	/^static void purple_roomlist_destroy(PurpleRoomlist *list)$/;"	f	file:	signature:(PurpleRoomlist *list)
purple_roomlist_expand_category	roomlist.c	/^void purple_roomlist_expand_category(PurpleRoomlist *list, PurpleRoomlistRoom *category)$/;"	f	signature:(PurpleRoomlist *list, PurpleRoomlistRoom *category)
purple_roomlist_expand_category	roomlist.h	/^void purple_roomlist_expand_category(PurpleRoomlist *list, PurpleRoomlistRoom *category);$/;"	p	signature:(PurpleRoomlist *list, PurpleRoomlistRoom *category)
purple_roomlist_field_destroy	roomlist.c	/^static void purple_roomlist_field_destroy(PurpleRoomlistField *f)$/;"	f	file:	signature:(PurpleRoomlistField *f)
purple_roomlist_field_get_hidden	roomlist.c	/^gboolean purple_roomlist_field_get_hidden(PurpleRoomlistField *field)$/;"	f	signature:(PurpleRoomlistField *field)
purple_roomlist_field_get_hidden	roomlist.h	/^gboolean purple_roomlist_field_get_hidden(PurpleRoomlistField *field);$/;"	p	signature:(PurpleRoomlistField *field)
purple_roomlist_field_get_label	roomlist.c	/^const char * purple_roomlist_field_get_label(PurpleRoomlistField *field)$/;"	f	signature:(PurpleRoomlistField *field)
purple_roomlist_field_get_label	roomlist.h	/^const char * purple_roomlist_field_get_label(PurpleRoomlistField *field);$/;"	p	signature:(PurpleRoomlistField *field)
purple_roomlist_field_get_type	roomlist.c	/^PurpleRoomlistFieldType purple_roomlist_field_get_type(PurpleRoomlistField *field)$/;"	f	signature:(PurpleRoomlistField *field)
purple_roomlist_field_get_type	roomlist.h	/^PurpleRoomlistFieldType purple_roomlist_field_get_type(PurpleRoomlistField *field);$/;"	p	signature:(PurpleRoomlistField *field)
purple_roomlist_field_new	roomlist.c	/^PurpleRoomlistField *purple_roomlist_field_new(PurpleRoomlistFieldType type,$/;"	f	signature:(PurpleRoomlistFieldType type, const gchar *label, const gchar *name, gboolean hidden)
purple_roomlist_field_new	roomlist.h	/^PurpleRoomlistField *purple_roomlist_field_new(PurpleRoomlistFieldType type,$/;"	p	signature:(PurpleRoomlistFieldType type, const gchar *label, const gchar *name, gboolean hidden)
purple_roomlist_get_fields	roomlist.c	/^GList * purple_roomlist_get_fields(PurpleRoomlist *list)$/;"	f	signature:(PurpleRoomlist *list)
purple_roomlist_get_fields	roomlist.h	/^GList * purple_roomlist_get_fields(PurpleRoomlist *roomlist);$/;"	p	signature:(PurpleRoomlist *roomlist)
purple_roomlist_get_in_progress	roomlist.c	/^gboolean purple_roomlist_get_in_progress(PurpleRoomlist *list)$/;"	f	signature:(PurpleRoomlist *list)
purple_roomlist_get_in_progress	roomlist.h	/^gboolean purple_roomlist_get_in_progress(PurpleRoomlist *list);$/;"	p	signature:(PurpleRoomlist *list)
purple_roomlist_get_list	roomlist.c	/^PurpleRoomlist *purple_roomlist_get_list(PurpleConnection *gc)$/;"	f	signature:(PurpleConnection *gc)
purple_roomlist_get_list	roomlist.h	/^PurpleRoomlist *purple_roomlist_get_list(PurpleConnection *gc);$/;"	p	signature:(PurpleConnection *gc)
purple_roomlist_get_ui_ops	roomlist.c	/^PurpleRoomlistUiOps *purple_roomlist_get_ui_ops(void)$/;"	f	signature:(void)
purple_roomlist_get_ui_ops	roomlist.h	/^PurpleRoomlistUiOps *purple_roomlist_get_ui_ops(void);$/;"	p	signature:(void)
purple_roomlist_new	roomlist.c	/^PurpleRoomlist *purple_roomlist_new(PurpleAccount *account)$/;"	f	signature:(PurpleAccount *account)
purple_roomlist_new	roomlist.h	/^PurpleRoomlist *purple_roomlist_new(PurpleAccount *account);$/;"	p	signature:(PurpleAccount *account)
purple_roomlist_ref	roomlist.c	/^void purple_roomlist_ref(PurpleRoomlist *list)$/;"	f	signature:(PurpleRoomlist *list)
purple_roomlist_ref	roomlist.h	/^void purple_roomlist_ref(PurpleRoomlist *list);$/;"	p	signature:(PurpleRoomlist *list)
purple_roomlist_room_add	roomlist.c	/^void purple_roomlist_room_add(PurpleRoomlist *list, PurpleRoomlistRoom *room)$/;"	f	signature:(PurpleRoomlist *list, PurpleRoomlistRoom *room)
purple_roomlist_room_add	roomlist.h	/^void purple_roomlist_room_add(PurpleRoomlist *list, PurpleRoomlistRoom *room);$/;"	p	signature:(PurpleRoomlist *list, PurpleRoomlistRoom *room)
purple_roomlist_room_add_field	roomlist.c	/^void purple_roomlist_room_add_field(PurpleRoomlist *list, PurpleRoomlistRoom *room, gconstpointer field)$/;"	f	signature:(PurpleRoomlist *list, PurpleRoomlistRoom *room, gconstpointer field)
purple_roomlist_room_add_field	roomlist.h	/^void purple_roomlist_room_add_field(PurpleRoomlist *list, PurpleRoomlistRoom *room, gconstpointer field);$/;"	p	signature:(PurpleRoomlist *list, PurpleRoomlistRoom *room, gconstpointer field)
purple_roomlist_room_destroy	roomlist.c	/^static void purple_roomlist_room_destroy(PurpleRoomlist *list, PurpleRoomlistRoom *r)$/;"	f	file:	signature:(PurpleRoomlist *list, PurpleRoomlistRoom *r)
purple_roomlist_room_get_fields	roomlist.c	/^GList * purple_roomlist_room_get_fields(PurpleRoomlistRoom *room)$/;"	f	signature:(PurpleRoomlistRoom *room)
purple_roomlist_room_get_fields	roomlist.h	/^GList * purple_roomlist_room_get_fields(PurpleRoomlistRoom *room);$/;"	p	signature:(PurpleRoomlistRoom *room)
purple_roomlist_room_get_name	roomlist.c	/^const char * purple_roomlist_room_get_name(PurpleRoomlistRoom *room)$/;"	f	signature:(PurpleRoomlistRoom *room)
purple_roomlist_room_get_name	roomlist.h	/^const char * purple_roomlist_room_get_name(PurpleRoomlistRoom *room);$/;"	p	signature:(PurpleRoomlistRoom *room)
purple_roomlist_room_get_parent	roomlist.c	/^PurpleRoomlistRoom * purple_roomlist_room_get_parent(PurpleRoomlistRoom *room)$/;"	f	signature:(PurpleRoomlistRoom *room)
purple_roomlist_room_get_parent	roomlist.h	/^PurpleRoomlistRoom * purple_roomlist_room_get_parent(PurpleRoomlistRoom *room);$/;"	p	signature:(PurpleRoomlistRoom *room)
purple_roomlist_room_get_type	roomlist.c	/^PurpleRoomlistRoomType purple_roomlist_room_get_type(PurpleRoomlistRoom *room)$/;"	f	signature:(PurpleRoomlistRoom *room)
purple_roomlist_room_get_type	roomlist.h	/^PurpleRoomlistRoomType purple_roomlist_room_get_type(PurpleRoomlistRoom *room);$/;"	p	signature:(PurpleRoomlistRoom *room)
purple_roomlist_room_join	roomlist.c	/^void purple_roomlist_room_join(PurpleRoomlist *list, PurpleRoomlistRoom *room)$/;"	f	signature:(PurpleRoomlist *list, PurpleRoomlistRoom *room)
purple_roomlist_room_join	roomlist.h	/^void purple_roomlist_room_join(PurpleRoomlist *list, PurpleRoomlistRoom *room);$/;"	p	signature:(PurpleRoomlist *list, PurpleRoomlistRoom *room)
purple_roomlist_room_new	roomlist.c	/^PurpleRoomlistRoom *purple_roomlist_room_new(PurpleRoomlistRoomType type, const gchar *name,$/;"	f	signature:(PurpleRoomlistRoomType type, const gchar *name, PurpleRoomlistRoom *parent)
purple_roomlist_room_new	roomlist.h	/^PurpleRoomlistRoom *purple_roomlist_room_new(PurpleRoomlistRoomType type, const gchar *name,$/;"	p	signature:(PurpleRoomlistRoomType type, const gchar *name, PurpleRoomlistRoom *parent)
purple_roomlist_set_fields	roomlist.c	/^void purple_roomlist_set_fields(PurpleRoomlist *list, GList *fields)$/;"	f	signature:(PurpleRoomlist *list, GList *fields)
purple_roomlist_set_fields	roomlist.h	/^void purple_roomlist_set_fields(PurpleRoomlist *list, GList *fields);$/;"	p	signature:(PurpleRoomlist *list, GList *fields)
purple_roomlist_set_in_progress	roomlist.c	/^void purple_roomlist_set_in_progress(PurpleRoomlist *list, gboolean in_progress)$/;"	f	signature:(PurpleRoomlist *list, gboolean in_progress)
purple_roomlist_set_in_progress	roomlist.h	/^void purple_roomlist_set_in_progress(PurpleRoomlist *list, gboolean in_progress);$/;"	p	signature:(PurpleRoomlist *list, gboolean in_progress)
purple_roomlist_set_ui_ops	roomlist.c	/^void purple_roomlist_set_ui_ops(PurpleRoomlistUiOps *ui_ops)$/;"	f	signature:(PurpleRoomlistUiOps *ui_ops)
purple_roomlist_set_ui_ops	roomlist.h	/^void purple_roomlist_set_ui_ops(PurpleRoomlistUiOps *ops);$/;"	p	signature:(PurpleRoomlistUiOps *ops)
purple_roomlist_show_with_account	roomlist.c	/^void purple_roomlist_show_with_account(PurpleAccount *account)$/;"	f	signature:(PurpleAccount *account)
purple_roomlist_show_with_account	roomlist.h	/^void purple_roomlist_show_with_account(PurpleAccount *account);$/;"	p	signature:(PurpleAccount *account)
purple_roomlist_unref	roomlist.c	/^void purple_roomlist_unref(PurpleRoomlist *list)$/;"	f	signature:(PurpleRoomlist *list)
purple_roomlist_unref	roomlist.h	/^void purple_roomlist_unref(PurpleRoomlist *list);$/;"	p	signature:(PurpleRoomlist *list)
purple_running_gnome	util.c	/^purple_running_gnome(void)$/;"	f	signature:(void)
purple_running_gnome	util.h	/^gboolean purple_running_gnome(void);$/;"	p	signature:(void)
purple_running_kde	util.c	/^purple_running_kde(void)$/;"	f	signature:(void)
purple_running_kde	util.h	/^gboolean purple_running_kde(void);$/;"	p	signature:(void)
purple_running_osx	util.c	/^purple_running_osx(void)$/;"	f	signature:(void)
purple_running_osx	util.h	/^gboolean purple_running_osx(void);$/;"	p	signature:(void)
purple_savedstatus_activate	savedstatuses.c	/^purple_savedstatus_activate(PurpleSavedStatus *saved_status)$/;"	f	signature:(PurpleSavedStatus *saved_status)
purple_savedstatus_activate	savedstatuses.h	/^void purple_savedstatus_activate(PurpleSavedStatus *saved_status);$/;"	p	signature:(PurpleSavedStatus *saved_status)
purple_savedstatus_activate_for_account	savedstatuses.c	/^purple_savedstatus_activate_for_account(const PurpleSavedStatus *saved_status,$/;"	f	signature:(const PurpleSavedStatus *saved_status, PurpleAccount *account)
purple_savedstatus_activate_for_account	savedstatuses.h	/^void purple_savedstatus_activate_for_account(const PurpleSavedStatus *saved_status, PurpleAccount *account);$/;"	p	signature:(const PurpleSavedStatus *saved_status, PurpleAccount *account)
purple_savedstatus_delete	savedstatuses.c	/^purple_savedstatus_delete(const char *title)$/;"	f	signature:(const char *title)
purple_savedstatus_delete	savedstatuses.h	/^gboolean purple_savedstatus_delete(const char *title);$/;"	p	signature:(const char *title)
purple_savedstatus_delete_by_status	savedstatuses.c	/^purple_savedstatus_delete_by_status(PurpleSavedStatus *status)$/;"	f	signature:(PurpleSavedStatus *status)
purple_savedstatus_delete_by_status	savedstatuses.h	/^void purple_savedstatus_delete_by_status(PurpleSavedStatus *saved_status);$/;"	p	signature:(PurpleSavedStatus *saved_status)
purple_savedstatus_find	savedstatuses.c	/^purple_savedstatus_find(const char *title)$/;"	f	signature:(const char *title)
purple_savedstatus_find	savedstatuses.h	/^PurpleSavedStatus *purple_savedstatus_find(const char *title);$/;"	p	signature:(const char *title)
purple_savedstatus_find_by_creation_time	savedstatuses.c	/^purple_savedstatus_find_by_creation_time(time_t creation_time)$/;"	f	signature:(time_t creation_time)
purple_savedstatus_find_by_creation_time	savedstatuses.h	/^PurpleSavedStatus *purple_savedstatus_find_by_creation_time(time_t creation_time);$/;"	p	signature:(time_t creation_time)
purple_savedstatus_find_transient_by_type_and_message	savedstatuses.c	/^purple_savedstatus_find_transient_by_type_and_message(PurpleStatusPrimitive type,$/;"	f	signature:(PurpleStatusPrimitive type, const char *message)
purple_savedstatus_find_transient_by_type_and_message	savedstatuses.h	/^PurpleSavedStatus *purple_savedstatus_find_transient_by_type_and_message(PurpleStatusPrimitive type, const char *message);$/;"	p	signature:(PurpleStatusPrimitive type, const char *message)
purple_savedstatus_get_creation_time	savedstatuses.c	/^purple_savedstatus_get_creation_time(const PurpleSavedStatus *saved_status)$/;"	f	signature:(const PurpleSavedStatus *saved_status)
purple_savedstatus_get_creation_time	savedstatuses.h	/^time_t purple_savedstatus_get_creation_time(const PurpleSavedStatus *saved_status);$/;"	p	signature:(const PurpleSavedStatus *saved_status)
purple_savedstatus_get_current	savedstatuses.c	/^purple_savedstatus_get_current(void)$/;"	f	signature:(void)
purple_savedstatus_get_current	savedstatuses.h	/^PurpleSavedStatus *purple_savedstatus_get_current(void);$/;"	p	signature:(void)
purple_savedstatus_get_default	savedstatuses.c	/^purple_savedstatus_get_default()$/;"	f
purple_savedstatus_get_default	savedstatuses.h	/^PurpleSavedStatus *purple_savedstatus_get_default(void);$/;"	p	signature:(void)
purple_savedstatus_get_idleaway	savedstatuses.c	/^purple_savedstatus_get_idleaway()$/;"	f
purple_savedstatus_get_idleaway	savedstatuses.h	/^PurpleSavedStatus *purple_savedstatus_get_idleaway(void);$/;"	p	signature:(void)
purple_savedstatus_get_message	savedstatuses.c	/^purple_savedstatus_get_message(const PurpleSavedStatus *saved_status)$/;"	f	signature:(const PurpleSavedStatus *saved_status)
purple_savedstatus_get_message	savedstatuses.h	/^const char *purple_savedstatus_get_message(const PurpleSavedStatus *saved_status);$/;"	p	signature:(const PurpleSavedStatus *saved_status)
purple_savedstatus_get_startup	savedstatuses.c	/^purple_savedstatus_get_startup()$/;"	f
purple_savedstatus_get_startup	savedstatuses.h	/^PurpleSavedStatus *purple_savedstatus_get_startup(void);$/;"	p	signature:(void)
purple_savedstatus_get_substatus	savedstatuses.c	/^purple_savedstatus_get_substatus(const PurpleSavedStatus *saved_status,$/;"	f	signature:(const PurpleSavedStatus *saved_status, const PurpleAccount *account)
purple_savedstatus_get_substatus	savedstatuses.h	/^PurpleSavedStatusSub *purple_savedstatus_get_substatus($/;"	p	signature:( const PurpleSavedStatus *saved_status, const PurpleAccount *account)
purple_savedstatus_get_title	savedstatuses.c	/^purple_savedstatus_get_title(const PurpleSavedStatus *saved_status)$/;"	f	signature:(const PurpleSavedStatus *saved_status)
purple_savedstatus_get_title	savedstatuses.h	/^const char *purple_savedstatus_get_title(const PurpleSavedStatus *saved_status);$/;"	p	signature:(const PurpleSavedStatus *saved_status)
purple_savedstatus_get_type	savedstatuses.c	/^purple_savedstatus_get_type(const PurpleSavedStatus *saved_status)$/;"	f	signature:(const PurpleSavedStatus *saved_status)
purple_savedstatus_get_type	savedstatuses.h	/^PurpleStatusPrimitive purple_savedstatus_get_type(const PurpleSavedStatus *saved_status);$/;"	p	signature:(const PurpleSavedStatus *saved_status)
purple_savedstatus_has_substatuses	savedstatuses.c	/^purple_savedstatus_has_substatuses(const PurpleSavedStatus *saved_status)$/;"	f	signature:(const PurpleSavedStatus *saved_status)
purple_savedstatus_has_substatuses	savedstatuses.h	/^gboolean purple_savedstatus_has_substatuses(const PurpleSavedStatus *saved_status);$/;"	p	signature:(const PurpleSavedStatus *saved_status)
purple_savedstatus_is_idleaway	savedstatuses.c	/^purple_savedstatus_is_idleaway()$/;"	f
purple_savedstatus_is_idleaway	savedstatuses.h	/^gboolean purple_savedstatus_is_idleaway(void);$/;"	p	signature:(void)
purple_savedstatus_is_transient	savedstatuses.c	/^purple_savedstatus_is_transient(const PurpleSavedStatus *saved_status)$/;"	f	signature:(const PurpleSavedStatus *saved_status)
purple_savedstatus_is_transient	savedstatuses.h	/^gboolean purple_savedstatus_is_transient(const PurpleSavedStatus *saved_status);$/;"	p	signature:(const PurpleSavedStatus *saved_status)
purple_savedstatus_new	savedstatuses.c	/^purple_savedstatus_new(const char *title, PurpleStatusPrimitive type)$/;"	f	signature:(const char *title, PurpleStatusPrimitive type)
purple_savedstatus_new	savedstatuses.h	/^PurpleSavedStatus *purple_savedstatus_new(const char *title,$/;"	p	signature:(const char *title, PurpleStatusPrimitive type)
purple_savedstatus_set_idleaway	savedstatuses.c	/^purple_savedstatus_set_idleaway(gboolean idleaway)$/;"	f	signature:(gboolean idleaway)
purple_savedstatus_set_idleaway	savedstatuses.h	/^void purple_savedstatus_set_idleaway(gboolean idleaway);$/;"	p	signature:(gboolean idleaway)
purple_savedstatus_set_message	savedstatuses.c	/^purple_savedstatus_set_message(PurpleSavedStatus *status, const char *message)$/;"	f	signature:(PurpleSavedStatus *status, const char *message)
purple_savedstatus_set_message	savedstatuses.h	/^void purple_savedstatus_set_message(PurpleSavedStatus *status,$/;"	p	signature:(PurpleSavedStatus *status, const char *message)
purple_savedstatus_set_substatus	savedstatuses.c	/^purple_savedstatus_set_substatus(PurpleSavedStatus *saved_status,$/;"	f	signature:(PurpleSavedStatus *saved_status, const PurpleAccount *account, const PurpleStatusType *type, const char *message)
purple_savedstatus_set_substatus	savedstatuses.h	/^void purple_savedstatus_set_substatus(PurpleSavedStatus *status,$/;"	p	signature:(PurpleSavedStatus *status, const PurpleAccount *account, const PurpleStatusType *type, const char *message)
purple_savedstatus_set_title	savedstatuses.c	/^purple_savedstatus_set_title(PurpleSavedStatus *status, const char *title)$/;"	f	signature:(PurpleSavedStatus *status, const char *title)
purple_savedstatus_set_title	savedstatuses.h	/^void purple_savedstatus_set_title(PurpleSavedStatus *status,$/;"	p	signature:(PurpleSavedStatus *status, const char *title)
purple_savedstatus_set_type	savedstatuses.c	/^purple_savedstatus_set_type(PurpleSavedStatus *status, PurpleStatusPrimitive type)$/;"	f	signature:(PurpleSavedStatus *status, PurpleStatusPrimitive type)
purple_savedstatus_set_type	savedstatuses.h	/^void purple_savedstatus_set_type(PurpleSavedStatus *status,$/;"	p	signature:(PurpleSavedStatus *status, PurpleStatusPrimitive type)
purple_savedstatus_substatus_get_message	savedstatuses.c	/^purple_savedstatus_substatus_get_message(const PurpleSavedStatusSub *substatus)$/;"	f	signature:(const PurpleSavedStatusSub *substatus)
purple_savedstatus_substatus_get_message	savedstatuses.h	/^const char *purple_savedstatus_substatus_get_message(const PurpleSavedStatusSub *substatus);$/;"	p	signature:(const PurpleSavedStatusSub *substatus)
purple_savedstatus_substatus_get_type	savedstatuses.c	/^purple_savedstatus_substatus_get_type(const PurpleSavedStatusSub *substatus)$/;"	f	signature:(const PurpleSavedStatusSub *substatus)
purple_savedstatus_substatus_get_type	savedstatuses.h	/^const PurpleStatusType *purple_savedstatus_substatus_get_type(const PurpleSavedStatusSub *substatus);$/;"	p	signature:(const PurpleSavedStatusSub *substatus)
purple_savedstatus_unset_all_substatuses	savedstatuses.c	/^purple_savedstatus_unset_all_substatuses(const PurpleAccount *account,$/;"	f	file:	signature:(const PurpleAccount *account, gpointer user_data)
purple_savedstatus_unset_substatus	savedstatuses.c	/^purple_savedstatus_unset_substatus(PurpleSavedStatus *saved_status,$/;"	f	signature:(PurpleSavedStatus *saved_status, const PurpleAccount *account)
purple_savedstatus_unset_substatus	savedstatuses.h	/^void purple_savedstatus_unset_substatus(PurpleSavedStatus *saved_status,$/;"	p	signature:(PurpleSavedStatus *saved_status, const PurpleAccount *account)
purple_savedstatuses_get_all	savedstatuses.c	/^purple_savedstatuses_get_all(void)$/;"	f	signature:(void)
purple_savedstatuses_get_all	savedstatuses.h	/^GList *purple_savedstatuses_get_all(void);$/;"	p	signature:(void)
purple_savedstatuses_get_handle	savedstatuses.c	/^purple_savedstatuses_get_handle(void)$/;"	f	signature:(void)
purple_savedstatuses_get_handle	savedstatuses.h	/^void *purple_savedstatuses_get_handle(void);$/;"	p	signature:(void)
purple_savedstatuses_get_popular	savedstatuses.c	/^purple_savedstatuses_get_popular(unsigned int how_many)$/;"	f	signature:(unsigned int how_many)
purple_savedstatuses_get_popular	savedstatuses.h	/^GList *purple_savedstatuses_get_popular(unsigned int how_many);$/;"	p	signature:(unsigned int how_many)
purple_savedstatuses_init	savedstatuses.c	/^purple_savedstatuses_init(void)$/;"	f	signature:(void)
purple_savedstatuses_init	savedstatuses.h	/^void purple_savedstatuses_init(void);$/;"	p	signature:(void)
purple_savedstatuses_uninit	savedstatuses.c	/^purple_savedstatuses_uninit(void)$/;"	f	signature:(void)
purple_savedstatuses_uninit	savedstatuses.h	/^void purple_savedstatuses_uninit(void);$/;"	p	signature:(void)
purple_serv_got_join_chat_failed	server.c	/^void purple_serv_got_join_chat_failed(PurpleConnection *gc, GHashTable *data)$/;"	f	signature:(PurpleConnection *gc, GHashTable *data)
purple_serv_got_join_chat_failed	server.h	/^void purple_serv_got_join_chat_failed(PurpleConnection *gc, GHashTable *data);$/;"	p	signature:(PurpleConnection *gc, GHashTable *data)
purple_serv_got_private_alias	server.c	/^purple_serv_got_private_alias(PurpleConnection *gc, const char *who, const char *alias)$/;"	f	signature:(PurpleConnection *gc, const char *who, const char *alias)
purple_serv_got_private_alias	server.h	/^void purple_serv_got_private_alias(PurpleConnection *gc, const char *who, const char *alias);$/;"	p	signature:(PurpleConnection *gc, const char *who, const char *alias)
purple_set_blist	blist.c	/^purple_set_blist(PurpleBuddyList *list)$/;"	f	signature:(PurpleBuddyList *list)
purple_set_blist	blist.h	/^void purple_set_blist(PurpleBuddyList *blist);$/;"	p	signature:(PurpleBuddyList *blist)
purple_sha1_cipher_get_ops	cipher.c	/^PurpleCipherOps *purple_sha1_cipher_get_ops();$/;"	p	file:
purple_sha256_cipher_get_ops	cipher.c	/^PurpleCipherOps *purple_sha256_cipher_get_ops();$/;"	p	file:
purple_signal_connect	signals.c	/^purple_signal_connect(void *instance, const char *signal, void *handle,$/;"	f	signature:(void *instance, const char *signal, void *handle, PurpleCallback func, void *data)
purple_signal_connect	signals.h	/^gulong purple_signal_connect(void *instance, const char *signal,$/;"	p	signature:(void *instance, const char *signal, void *handle, PurpleCallback func, void *data)
purple_signal_connect_priority	signals.c	/^purple_signal_connect_priority(void *instance, const char *signal, void *handle,$/;"	f	signature:(void *instance, const char *signal, void *handle, PurpleCallback func, void *data, int priority)
purple_signal_connect_priority	signals.h	/^gulong purple_signal_connect_priority(void *instance, const char *signal,$/;"	p	signature:(void *instance, const char *signal, void *handle, PurpleCallback func, void *data, int priority)
purple_signal_connect_priority_vargs	signals.c	/^purple_signal_connect_priority_vargs(void *instance, const char *signal, void *handle,$/;"	f	signature:(void *instance, const char *signal, void *handle, PurpleCallback func, void *data, int priority)
purple_signal_connect_priority_vargs	signals.h	/^gulong purple_signal_connect_priority_vargs(void *instance, const char *signal,$/;"	p	signature:(void *instance, const char *signal, void *handle, PurpleCallback func, void *data, int priority)
purple_signal_connect_vargs	signals.c	/^purple_signal_connect_vargs(void *instance, const char *signal, void *handle,$/;"	f	signature:(void *instance, const char *signal, void *handle, PurpleCallback func, void *data)
purple_signal_connect_vargs	signals.h	/^gulong purple_signal_connect_vargs(void *instance, const char *signal,$/;"	p	signature:(void *instance, const char *signal, void *handle, PurpleCallback func, void *data)
purple_signal_disconnect	signals.c	/^purple_signal_disconnect(void *instance, const char *signal,$/;"	f	signature:(void *instance, const char *signal, void *handle, PurpleCallback func)
purple_signal_disconnect	signals.h	/^void purple_signal_disconnect(void *instance, const char *signal,$/;"	p	signature:(void *instance, const char *signal, void *handle, PurpleCallback func)
purple_signal_emit	signals.c	/^purple_signal_emit(void *instance, const char *signal, ...)$/;"	f	signature:(void *instance, const char *signal, ...)
purple_signal_emit	signals.h	/^void purple_signal_emit(void *instance, const char *signal, ...);$/;"	p	signature:(void *instance, const char *signal, ...)
purple_signal_emit_return_1	signals.c	/^purple_signal_emit_return_1(void *instance, const char *signal, ...)$/;"	f	signature:(void *instance, const char *signal, ...)
purple_signal_emit_return_1	signals.h	/^void *purple_signal_emit_return_1(void *instance, const char *signal, ...);$/;"	p	signature:(void *instance, const char *signal, ...)
purple_signal_emit_vargs	signals.c	/^purple_signal_emit_vargs(void *instance, const char *signal, va_list args)$/;"	f	signature:(void *instance, const char *signal, va_list args)
purple_signal_emit_vargs	signals.h	/^void purple_signal_emit_vargs(void *instance, const char *signal, va_list args);$/;"	p	signature:(void *instance, const char *signal, va_list args)
purple_signal_emit_vargs_return_1	signals.c	/^purple_signal_emit_vargs_return_1(void *instance, const char *signal,$/;"	f	signature:(void *instance, const char *signal, va_list args)
purple_signal_emit_vargs_return_1	signals.h	/^void *purple_signal_emit_vargs_return_1(void *instance, const char *signal,$/;"	p	signature:(void *instance, const char *signal, va_list args)
purple_signal_get_values	signals.c	/^purple_signal_get_values(void *instance, const char *signal,$/;"	f	signature:(void *instance, const char *signal, PurpleValue **ret_value, int *num_values, PurpleValue ***values)
purple_signal_get_values	signals.h	/^void purple_signal_get_values(void *instance, const char *signal,$/;"	p	signature:(void *instance, const char *signal, PurpleValue **ret_value, int *num_values, PurpleValue ***values)
purple_signal_register	signals.c	/^purple_signal_register(void *instance, const char *signal,$/;"	f	signature:(void *instance, const char *signal, PurpleSignalMarshalFunc marshal, PurpleValue *ret_value, int num_values, ...)
purple_signal_register	signals.h	/^gulong purple_signal_register(void *instance, const char *signal,$/;"	p	signature:(void *instance, const char *signal, PurpleSignalMarshalFunc marshal, PurpleValue *ret_value, int num_values, ...)
purple_signal_unregister	signals.c	/^purple_signal_unregister(void *instance, const char *signal)$/;"	f	signature:(void *instance, const char *signal)
purple_signal_unregister	signals.h	/^void purple_signal_unregister(void *instance, const char *signal);$/;"	p	signature:(void *instance, const char *signal)
purple_signals_disconnect_by_handle	signals.c	/^purple_signals_disconnect_by_handle(void *handle)$/;"	f	signature:(void *handle)
purple_signals_disconnect_by_handle	signals.h	/^void purple_signals_disconnect_by_handle(void *handle);$/;"	p	signature:(void *handle)
purple_signals_init	signals.c	/^purple_signals_init()$/;"	f
purple_signals_init	signals.h	/^void purple_signals_init(void);$/;"	p	signature:(void)
purple_signals_uninit	signals.c	/^purple_signals_uninit()$/;"	f
purple_signals_uninit	signals.h	/^void purple_signals_uninit(void);$/;"	p	signature:(void)
purple_signals_unregister_by_instance	signals.c	/^purple_signals_unregister_by_instance(void *instance)$/;"	f	signature:(void *instance)
purple_signals_unregister_by_instance	signals.h	/^void purple_signals_unregister_by_instance(void *instance);$/;"	p	signature:(void *instance)
purple_smarshal_BOOLEAN__OBJECT_POINTER_STRING	marshallers.c	/^purple_smarshal_BOOLEAN__OBJECT_POINTER_STRING (GClosure     *closure,$/;"	f	signature:(GClosure *closure, GValue *return_value G_GNUC_UNUSED, guint n_param_values, const GValue *param_values, gpointer invocation_hint G_GNUC_UNUSED, gpointer marshal_data)
purple_smarshal_BOOLEAN__OBJECT_POINTER_STRING	marshallers.h	/^extern void purple_smarshal_BOOLEAN__OBJECT_POINTER_STRING (GClosure     *closure,$/;"	p	signature:(GClosure *closure, GValue *return_value, guint n_param_values, const GValue *param_values, gpointer invocation_hint, gpointer marshal_data)
purple_smarshal_VOID__ENUM_STRING_STRING	marshallers.c	/^purple_smarshal_VOID__ENUM_STRING_STRING (GClosure     *closure,$/;"	f	signature:(GClosure *closure, GValue *return_value G_GNUC_UNUSED, guint n_param_values, const GValue *param_values, gpointer invocation_hint G_GNUC_UNUSED, gpointer marshal_data)
purple_smarshal_VOID__ENUM_STRING_STRING	marshallers.h	/^extern void purple_smarshal_VOID__ENUM_STRING_STRING (GClosure     *closure,$/;"	p	signature:(GClosure *closure, GValue *return_value, guint n_param_values, const GValue *param_values, gpointer invocation_hint, gpointer marshal_data)
purple_smarshal_VOID__ENUM_STRING_STRING_BOOLEAN	marshallers.c	/^purple_smarshal_VOID__ENUM_STRING_STRING_BOOLEAN (GClosure     *closure,$/;"	f	signature:(GClosure *closure, GValue *return_value G_GNUC_UNUSED, guint n_param_values, const GValue *param_values, gpointer invocation_hint G_GNUC_UNUSED, gpointer marshal_data)
purple_smarshal_VOID__ENUM_STRING_STRING_BOOLEAN	marshallers.h	/^extern void purple_smarshal_VOID__ENUM_STRING_STRING_BOOLEAN (GClosure     *closure,$/;"	p	signature:(GClosure *closure, GValue *return_value, guint n_param_values, const GValue *param_values, gpointer invocation_hint, gpointer marshal_data)
purple_smarshal_VOID__FLAGS_FLAGS	marshallers.c	/^purple_smarshal_VOID__FLAGS_FLAGS (GClosure     *closure,$/;"	f	signature:(GClosure *closure, GValue *return_value G_GNUC_UNUSED, guint n_param_values, const GValue *param_values, gpointer invocation_hint G_GNUC_UNUSED, gpointer marshal_data)
purple_smarshal_VOID__FLAGS_FLAGS	marshallers.h	/^extern void purple_smarshal_VOID__FLAGS_FLAGS (GClosure     *closure,$/;"	p	signature:(GClosure *closure, GValue *return_value, guint n_param_values, const GValue *param_values, gpointer invocation_hint, gpointer marshal_data)
purple_smarshal_VOID__POINTER_POINTER_OBJECT	marshallers.c	/^purple_smarshal_VOID__POINTER_POINTER_OBJECT (GClosure     *closure,$/;"	f	signature:(GClosure *closure, GValue *return_value G_GNUC_UNUSED, guint n_param_values, const GValue *param_values, gpointer invocation_hint G_GNUC_UNUSED, gpointer marshal_data)
purple_smarshal_VOID__POINTER_POINTER_OBJECT	marshallers.h	/^extern void purple_smarshal_VOID__POINTER_POINTER_OBJECT (GClosure     *closure,$/;"	p	signature:(GClosure *closure, GValue *return_value, guint n_param_values, const GValue *param_values, gpointer invocation_hint, gpointer marshal_data)
purple_smarshal_VOID__STRING_STRING	marshallers.c	/^purple_smarshal_VOID__STRING_STRING (GClosure     *closure,$/;"	f	signature:(GClosure *closure, GValue *return_value G_GNUC_UNUSED, guint n_param_values, const GValue *param_values, gpointer invocation_hint G_GNUC_UNUSED, gpointer marshal_data)
purple_smarshal_VOID__STRING_STRING	marshallers.h	/^extern void purple_smarshal_VOID__STRING_STRING (GClosure     *closure,$/;"	p	signature:(GClosure *closure, GValue *return_value, guint n_param_values, const GValue *param_values, gpointer invocation_hint, gpointer marshal_data)
purple_smarshal_VOID__STRING_STRING_DOUBLE	marshallers.c	/^purple_smarshal_VOID__STRING_STRING_DOUBLE (GClosure     *closure,$/;"	f	signature:(GClosure *closure, GValue *return_value G_GNUC_UNUSED, guint n_param_values, const GValue *param_values, gpointer invocation_hint G_GNUC_UNUSED, gpointer marshal_data)
purple_smarshal_VOID__STRING_STRING_DOUBLE	marshallers.h	/^extern void purple_smarshal_VOID__STRING_STRING_DOUBLE (GClosure     *closure,$/;"	p	signature:(GClosure *closure, GValue *return_value, guint n_param_values, const GValue *param_values, gpointer invocation_hint, gpointer marshal_data)
purple_smarshal_VOID__STRING_STRING_OBJECT_OBJECT	marshallers.c	/^purple_smarshal_VOID__STRING_STRING_OBJECT_OBJECT (GClosure     *closure,$/;"	f	signature:(GClosure *closure, GValue *return_value G_GNUC_UNUSED, guint n_param_values, const GValue *param_values, gpointer invocation_hint G_GNUC_UNUSED, gpointer marshal_data)
purple_smarshal_VOID__STRING_STRING_OBJECT_OBJECT	marshallers.h	/^extern void purple_smarshal_VOID__STRING_STRING_OBJECT_OBJECT (GClosure     *closure,$/;"	p	signature:(GClosure *closure, GValue *return_value, guint n_param_values, const GValue *param_values, gpointer invocation_hint, gpointer marshal_data)
purple_smiley_class_init	smiley.c	/^purple_smiley_class_init(PurpleSmileyClass *klass)$/;"	f	file:	signature:(PurpleSmileyClass *klass)
purple_smiley_create	smiley.c	/^purple_smiley_create(const char *shortcut)$/;"	f	file:	signature:(const char *shortcut)
purple_smiley_create	smiley.c	/^static PurpleSmiley *purple_smiley_create(const char *shortcut);$/;"	p	file:	signature:(const char *shortcut)
purple_smiley_data_new	smiley.c	/^purple_smiley_data_new(guchar *smiley_data, size_t smiley_data_len)$/;"	f	file:	signature:(guchar *smiley_data, size_t smiley_data_len)
purple_smiley_data_store	smiley.c	/^purple_smiley_data_store(PurpleStoredImage *stored_img)$/;"	f	file:	signature:(PurpleStoredImage *stored_img)
purple_smiley_data_store	smiley.c	/^purple_smiley_data_store(PurpleStoredImage *stored_img);$/;"	p	file:	signature:(PurpleStoredImage *stored_img)
purple_smiley_data_unstore	smiley.c	/^purple_smiley_data_unstore(const char *filename)$/;"	f	file:	signature:(const char *filename)
purple_smiley_data_unstore	smiley.c	/^purple_smiley_data_unstore(const char *filename);$/;"	p	file:	signature:(const char *filename)
purple_smiley_delete	smiley.c	/^purple_smiley_delete(PurpleSmiley *smiley)$/;"	f	signature:(PurpleSmiley *smiley)
purple_smiley_delete	smiley.h	/^purple_smiley_delete(PurpleSmiley *smiley);$/;"	p	signature:(PurpleSmiley *smiley)
purple_smiley_dispose	smiley.c	/^purple_smiley_dispose(GObject *gobj)$/;"	f	file:	signature:(GObject *gobj)
purple_smiley_finalize	smiley.c	/^purple_smiley_finalize(GObject *obj)$/;"	f	file:	signature:(GObject *obj)
purple_smiley_get_checksum	smiley.c	/^purple_smiley_get_checksum(const PurpleSmiley *smiley)$/;"	f	signature:(const PurpleSmiley *smiley)
purple_smiley_get_checksum	smiley.h	/^const char *purple_smiley_get_checksum(const PurpleSmiley *smiley);$/;"	p	signature:(const PurpleSmiley *smiley)
purple_smiley_get_data	smiley.c	/^purple_smiley_get_data(const PurpleSmiley *smiley, size_t *len)$/;"	f	signature:(const PurpleSmiley *smiley, size_t *len)
purple_smiley_get_data	smiley.h	/^gconstpointer purple_smiley_get_data(const PurpleSmiley *smiley, size_t *len);$/;"	p	signature:(const PurpleSmiley *smiley, size_t *len)
purple_smiley_get_extension	smiley.c	/^purple_smiley_get_extension(const PurpleSmiley *smiley)$/;"	f	signature:(const PurpleSmiley *smiley)
purple_smiley_get_extension	smiley.h	/^const char *purple_smiley_get_extension(const PurpleSmiley *smiley);$/;"	p	signature:(const PurpleSmiley *smiley)
purple_smiley_get_full_path	smiley.c	/^char *purple_smiley_get_full_path(PurpleSmiley *smiley)$/;"	f	signature:(PurpleSmiley *smiley)
purple_smiley_get_full_path	smiley.h	/^char *purple_smiley_get_full_path(PurpleSmiley *smiley);$/;"	p	signature:(PurpleSmiley *smiley)
purple_smiley_get_property	smiley.c	/^purple_smiley_get_property(GObject *object, guint param_id, GValue *value,$/;"	f	file:	signature:(GObject *object, guint param_id, GValue *value, GParamSpec *spec)
purple_smiley_get_shortcut	smiley.c	/^const char *purple_smiley_get_shortcut(const PurpleSmiley *smiley)$/;"	f	signature:(const PurpleSmiley *smiley)
purple_smiley_get_shortcut	smiley.h	/^const char *purple_smiley_get_shortcut(const PurpleSmiley *smiley);$/;"	p	signature:(const PurpleSmiley *smiley)
purple_smiley_get_stored_image	smiley.c	/^purple_smiley_get_stored_image(const PurpleSmiley *smiley)$/;"	f	signature:(const PurpleSmiley *smiley)
purple_smiley_get_stored_image	smiley.h	/^PurpleStoredImage *purple_smiley_get_stored_image(const PurpleSmiley *smiley);$/;"	p	signature:(const PurpleSmiley *smiley)
purple_smiley_get_type	smiley.c	/^purple_smiley_get_type(void)$/;"	f	signature:(void)
purple_smiley_get_type	smiley.h	/^GType purple_smiley_get_type(void);$/;"	p	signature:(void)
purple_smiley_init	smiley.c	/^purple_smiley_init(GTypeInstance *instance, gpointer klass)$/;"	f	file:	signature:(GTypeInstance *instance, gpointer klass)
purple_smiley_load_file	smiley.c	/^purple_smiley_load_file(const char *shortcut, const char *checksum, const char *filename)$/;"	f	file:	signature:(const char *shortcut, const char *checksum, const char *filename)
purple_smiley_load_file	smiley.c	/^static PurpleSmiley *purple_smiley_load_file(const char *shortcut, const char *checksum,$/;"	p	file:	signature:(const char *shortcut, const char *checksum, const char *filename)
purple_smiley_new	smiley.c	/^purple_smiley_new(PurpleStoredImage *img, const char *shortcut)$/;"	f	signature:(PurpleStoredImage *img, const char *shortcut)
purple_smiley_new	smiley.h	/^purple_smiley_new(PurpleStoredImage *img, const char *shortcut);$/;"	p	signature:(PurpleStoredImage *img, const char *shortcut)
purple_smiley_new_from_file	smiley.c	/^purple_smiley_new_from_file(const char *shortcut, const char *filepath)$/;"	f	signature:(const char *shortcut, const char *filepath)
purple_smiley_new_from_file	smiley.h	/^purple_smiley_new_from_file(const char *shortcut, const char *filepath);$/;"	p	signature:(const char *shortcut, const char *filepath)
purple_smiley_new_from_stream	smiley.c	/^purple_smiley_new_from_stream(const char *shortcut, guchar *smiley_data,$/;"	f	file:	signature:(const char *shortcut, guchar *smiley_data, size_t smiley_data_len)
purple_smiley_set_data	smiley.c	/^purple_smiley_set_data(PurpleSmiley *smiley, guchar *smiley_data,$/;"	f	signature:(PurpleSmiley *smiley, guchar *smiley_data, size_t smiley_data_len)
purple_smiley_set_data	smiley.h	/^purple_smiley_set_data(PurpleSmiley *smiley, guchar *smiley_data,$/;"	p	signature:(PurpleSmiley *smiley, guchar *smiley_data, size_t smiley_data_len)
purple_smiley_set_data_impl	smiley.c	/^purple_smiley_set_data_impl(PurpleSmiley *smiley, guchar *smiley_data,$/;"	f	file:	signature:(PurpleSmiley *smiley, guchar *smiley_data, size_t smiley_data_len)
purple_smiley_set_data_impl	smiley.c	/^purple_smiley_set_data_impl(PurpleSmiley *smiley, guchar *smiley_data,$/;"	p	file:	signature:(PurpleSmiley *smiley, guchar *smiley_data, size_t smiley_data_len)
purple_smiley_set_property	smiley.c	/^purple_smiley_set_property(GObject *object, guint param_id, const GValue *value,$/;"	f	file:	signature:(GObject *object, guint param_id, const GValue *value, GParamSpec *spec)
purple_smiley_set_shortcut	smiley.c	/^purple_smiley_set_shortcut(PurpleSmiley *smiley, const char *shortcut)$/;"	f	signature:(PurpleSmiley *smiley, const char *shortcut)
purple_smiley_set_shortcut	smiley.h	/^purple_smiley_set_shortcut(PurpleSmiley *smiley, const char *shortcut);$/;"	p	signature:(PurpleSmiley *smiley, const char *shortcut)
purple_smileys_find_by_checksum	smiley.c	/^purple_smileys_find_by_checksum(const char *checksum)$/;"	f	signature:(const char *checksum)
purple_smileys_find_by_checksum	smiley.h	/^purple_smileys_find_by_checksum(const char *checksum);$/;"	p	signature:(const char *checksum)
purple_smileys_find_by_shortcut	smiley.c	/^purple_smileys_find_by_shortcut(const char *shortcut)$/;"	f	signature:(const char *shortcut)
purple_smileys_find_by_shortcut	smiley.h	/^purple_smileys_find_by_shortcut(const char *shortcut);$/;"	p	signature:(const char *shortcut)
purple_smileys_get_all	smiley.c	/^purple_smileys_get_all(void)$/;"	f	signature:(void)
purple_smileys_get_all	smiley.h	/^purple_smileys_get_all(void);$/;"	p	signature:(void)
purple_smileys_get_storing_dir	smiley.c	/^purple_smileys_get_storing_dir(void)$/;"	f	signature:(void)
purple_smileys_get_storing_dir	smiley.h	/^const char *purple_smileys_get_storing_dir(void);$/;"	p	signature:(void)
purple_smileys_init	smiley.c	/^purple_smileys_init(void)$/;"	f	signature:(void)
purple_smileys_init	smiley.h	/^void purple_smileys_init(void);$/;"	p	signature:(void)
purple_smileys_load	smiley.c	/^purple_smileys_load(void)$/;"	f	file:	signature:(void)
purple_smileys_save	smiley.c	/^purple_smileys_save(void)$/;"	f	file:	signature:(void)
purple_smileys_uninit	smiley.c	/^purple_smileys_uninit(void)$/;"	f	signature:(void)
purple_smileys_uninit	smiley.h	/^void purple_smileys_uninit(void);$/;"	p	signature:(void)
purple_sockaddr	util.c	/^typedef union purple_sockaddr {$/;"	u	file:
purple_sockaddr::sa	util.c	/^	struct sockaddr         sa;$/;"	m	union:purple_sockaddr	typeref:struct:purple_sockaddr::sockaddr	file:	access:public
purple_sockaddr::sa_in	util.c	/^	struct sockaddr_in      sa_in;$/;"	m	union:purple_sockaddr	typeref:struct:purple_sockaddr::sockaddr_in	file:	access:public
purple_sockaddr::sa_in6	util.c	/^	struct sockaddr_in6     sa_in6;$/;"	m	union:purple_sockaddr	typeref:struct:purple_sockaddr::sockaddr_in6	file:	access:public
purple_sockaddr::sa_stor	util.c	/^	struct sockaddr_storage sa_stor;$/;"	m	union:purple_sockaddr	typeref:struct:purple_sockaddr::sockaddr_storage	file:	access:public
purple_socket_get_family	util.c	/^purple_socket_get_family(int fd)$/;"	f	signature:(int fd)
purple_socket_get_family	util.h	/^int purple_socket_get_family(int fd);$/;"	p	signature:(int fd)
purple_socket_speaks_ipv4	util.c	/^purple_socket_speaks_ipv4(int fd)$/;"	f	signature:(int fd)
purple_socket_speaks_ipv4	util.h	/^gboolean purple_socket_speaks_ipv4(int fd);$/;"	p	signature:(int fd)
purple_sound_get_ui_ops	sound.c	/^purple_sound_get_ui_ops(void)$/;"	f	signature:(void)
purple_sound_get_ui_ops	sound.h	/^PurpleSoundUiOps *purple_sound_get_ui_ops(void);$/;"	p	signature:(void)
purple_sound_init	sound.c	/^purple_sound_init()$/;"	f
purple_sound_init	sound.h	/^void purple_sound_init(void);$/;"	p	signature:(void)
purple_sound_loader_build	sound-theme-loader.c	/^purple_sound_loader_build(const gchar *dir)$/;"	f	file:	signature:(const gchar *dir)
purple_sound_play_event	sound.c	/^purple_sound_play_event(PurpleSoundEventID event, const PurpleAccount *account)$/;"	f	signature:(PurpleSoundEventID event, const PurpleAccount *account)
purple_sound_play_event	sound.h	/^void purple_sound_play_event(PurpleSoundEventID event, const PurpleAccount *account);$/;"	p	signature:(PurpleSoundEventID event, const PurpleAccount *account)
purple_sound_play_file	sound.c	/^purple_sound_play_file(const char *filename, const PurpleAccount *account)$/;"	f	signature:(const char *filename, const PurpleAccount *account)
purple_sound_play_file	sound.h	/^void purple_sound_play_file(const char *filename, const PurpleAccount *account);$/;"	p	signature:(const char *filename, const PurpleAccount *account)
purple_sound_play_required	sound.c	/^purple_sound_play_required(const PurpleAccount *account)$/;"	f	file:	signature:(const PurpleAccount *account)
purple_sound_set_ui_ops	sound.c	/^purple_sound_set_ui_ops(PurpleSoundUiOps *ops)$/;"	f	signature:(PurpleSoundUiOps *ops)
purple_sound_set_ui_ops	sound.h	/^void purple_sound_set_ui_ops(PurpleSoundUiOps *ops);$/;"	p	signature:(PurpleSoundUiOps *ops)
purple_sound_theme_class_init	sound-theme.c	/^purple_sound_theme_class_init(PurpleSoundThemeClass *klass)$/;"	f	file:	signature:(PurpleSoundThemeClass *klass)
purple_sound_theme_finalize	sound-theme.c	/^purple_sound_theme_finalize(GObject *obj)$/;"	f	file:	signature:(GObject *obj)
purple_sound_theme_get_file	sound-theme.c	/^purple_sound_theme_get_file(PurpleSoundTheme *theme,$/;"	f	signature:(PurpleSoundTheme *theme, const gchar *event)
purple_sound_theme_get_file	sound-theme.h	/^const gchar *purple_sound_theme_get_file(PurpleSoundTheme *theme,$/;"	p	signature:(PurpleSoundTheme *theme, const gchar *event)
purple_sound_theme_get_file_full	sound-theme.c	/^purple_sound_theme_get_file_full(PurpleSoundTheme *theme,$/;"	f	signature:(PurpleSoundTheme *theme, const gchar *event)
purple_sound_theme_get_file_full	sound-theme.h	/^gchar *purple_sound_theme_get_file_full(PurpleSoundTheme *theme,$/;"	p	signature:(PurpleSoundTheme *theme, const gchar *event)
purple_sound_theme_get_type	sound-theme.c	/^purple_sound_theme_get_type(void)$/;"	f	signature:(void)
purple_sound_theme_get_type	sound-theme.h	/^GType purple_sound_theme_get_type(void);$/;"	p	signature:(void)
purple_sound_theme_init	sound-theme.c	/^purple_sound_theme_init(GTypeInstance *instance,$/;"	f	file:	signature:(GTypeInstance *instance, gpointer klass)
purple_sound_theme_loader_class_init	sound-theme-loader.c	/^purple_sound_theme_loader_class_init(PurpleSoundThemeLoaderClass *klass)$/;"	f	file:	signature:(PurpleSoundThemeLoaderClass *klass)
purple_sound_theme_loader_get_type	sound-theme-loader.c	/^purple_sound_theme_loader_get_type(void)$/;"	f	signature:(void)
purple_sound_theme_loader_get_type	sound-theme-loader.h	/^GType purple_sound_theme_loader_get_type(void);$/;"	p	signature:(void)
purple_sound_theme_set_file	sound-theme.c	/^purple_sound_theme_set_file(PurpleSoundTheme *theme,$/;"	f	signature:(PurpleSoundTheme *theme, const gchar *event, const gchar *filename)
purple_sound_theme_set_file	sound-theme.h	/^void purple_sound_theme_set_file(PurpleSoundTheme *theme,$/;"	p	signature:(PurpleSoundTheme *theme, const gchar *event, const gchar *filename)
purple_sound_uninit	sound.c	/^purple_sound_uninit()$/;"	f
purple_sound_uninit	sound.h	/^void purple_sound_uninit(void);$/;"	p	signature:(void)
purple_sounds_get_handle	sound.c	/^purple_sounds_get_handle()$/;"	f
purple_sounds_get_handle	sound.h	/^void *purple_sounds_get_handle(void);$/;"	p	signature:(void)
purple_srv_cancel	dnssrv.c	/^purple_srv_cancel(PurpleSrvTxtQueryData *query_data)$/;"	f	signature:(PurpleSrvTxtQueryData *query_data)
purple_srv_cancel	dnssrv.h	/^void purple_srv_cancel(PurpleSrvTxtQueryData *query_data);$/;"	p	signature:(PurpleSrvTxtQueryData *query_data)
purple_srv_query_failed	dnssrv.c	/^purple_srv_query_failed(PurpleSrvTxtQueryData *query_data, const gchar *error_message)$/;"	f	file:	signature:(PurpleSrvTxtQueryData *query_data, const gchar *error_message)
purple_srv_query_resolved	dnssrv.c	/^purple_srv_query_resolved(PurpleSrvTxtQueryData *query_data, GList *records)$/;"	f	file:	signature:(PurpleSrvTxtQueryData *query_data, GList *records)
purple_srv_resolve	dnssrv.c	/^purple_srv_resolve(const char *protocol, const char *transport,$/;"	f	signature:(const char *protocol, const char *transport, const char *domain, PurpleSrvCallback cb, gpointer extradata)
purple_srv_resolve	dnssrv.h	/^PurpleSrvTxtQueryData *purple_srv_resolve(const char *protocol, const char *transport, const char *domain, PurpleSrvCallback cb, gpointer extradata);$/;"	p	signature:(const char *protocol, const char *transport, const char *domain, PurpleSrvCallback cb, gpointer extradata)
purple_srv_resolve_account	dnssrv.c	/^purple_srv_resolve_account(PurpleAccount *account, const char *protocol,$/;"	f	signature:(PurpleAccount *account, const char *protocol, const char *transport, const char *domain, PurpleSrvCallback cb, gpointer extradata)
purple_srv_resolve_account	dnssrv.h	/^PurpleSrvTxtQueryData *purple_srv_resolve_account(PurpleAccount *account, const char *protocol, const char *transport, const char *domain, PurpleSrvCallback cb, gpointer extradata);$/;"	p	signature:(PurpleAccount *account, const char *protocol, const char *transport, const char *domain, PurpleSrvCallback cb, gpointer extradata)
purple_srv_sort	dnssrv.c	/^purple_srv_sort(GList *list)$/;"	f	file:	signature:(GList *list)
purple_srv_txt_query_destroy	dnssrv.c	/^purple_srv_txt_query_destroy(PurpleSrvTxtQueryData *query_data)$/;"	f	signature:(PurpleSrvTxtQueryData *query_data)
purple_srv_txt_query_destroy	dnssrv.h	/^void purple_srv_txt_query_destroy(PurpleSrvTxtQueryData *query_data);$/;"	p	signature:(PurpleSrvTxtQueryData *query_data)
purple_srv_txt_query_get_query	dnssrv.c	/^purple_srv_txt_query_get_query(PurpleSrvTxtQueryData *query_data)$/;"	f	signature:(PurpleSrvTxtQueryData *query_data)
purple_srv_txt_query_get_query	dnssrv.h	/^char *purple_srv_txt_query_get_query(PurpleSrvTxtQueryData *query_data);$/;"	p	signature:(PurpleSrvTxtQueryData *query_data)
purple_srv_txt_query_get_type	dnssrv.c	/^purple_srv_txt_query_get_type(PurpleSrvTxtQueryData *query_data)$/;"	f	signature:(PurpleSrvTxtQueryData *query_data)
purple_srv_txt_query_get_type	dnssrv.h	/^int purple_srv_txt_query_get_type(PurpleSrvTxtQueryData *query_data);$/;"	p	signature:(PurpleSrvTxtQueryData *query_data)
purple_srv_txt_query_get_ui_ops	dnssrv.c	/^purple_srv_txt_query_get_ui_ops(void)$/;"	f	signature:(void)
purple_srv_txt_query_get_ui_ops	dnssrv.h	/^PurpleSrvTxtQueryUiOps *purple_srv_txt_query_get_ui_ops(void);$/;"	p	signature:(void)
purple_srv_txt_query_set_ui_ops	dnssrv.c	/^purple_srv_txt_query_set_ui_ops(PurpleSrvTxtQueryUiOps *ops)$/;"	f	signature:(PurpleSrvTxtQueryUiOps *ops)
purple_srv_txt_query_set_ui_ops	dnssrv.h	/^void purple_srv_txt_query_set_ui_ops(PurpleSrvTxtQueryUiOps *ops);$/;"	p	signature:(PurpleSrvTxtQueryUiOps *ops)
purple_srv_txt_query_ui_resolve	dnssrv.c	/^purple_srv_txt_query_ui_resolve(PurpleSrvTxtQueryData *query_data)$/;"	f	file:	signature:(PurpleSrvTxtQueryData *query_data)
purple_srv_txt_query_ui_resolve	dnssrv.c	/^static gboolean purple_srv_txt_query_ui_resolve(PurpleSrvTxtQueryData *query_data);$/;"	p	file:	signature:(PurpleSrvTxtQueryData *query_data)
purple_ssl_close	sslconn.c	/^purple_ssl_close(PurpleSslConnection *gsc)$/;"	f	signature:(PurpleSslConnection *gsc)
purple_ssl_close	sslconn.h	/^void purple_ssl_close(PurpleSslConnection *gsc);$/;"	p	signature:(PurpleSslConnection *gsc)
purple_ssl_connect	sslconn.c	/^purple_ssl_connect(PurpleAccount *account, const char *host, int port,$/;"	f	signature:(PurpleAccount *account, const char *host, int port, PurpleSslInputFunction func, PurpleSslErrorFunction error_func, void *data)
purple_ssl_connect	sslconn.h	/^PurpleSslConnection *purple_ssl_connect(PurpleAccount *account, const char *host,$/;"	p	signature:(PurpleAccount *account, const char *host, int port, PurpleSslInputFunction func, PurpleSslErrorFunction error_func, void *data)
purple_ssl_connect_cb	sslconn.c	/^purple_ssl_connect_cb(gpointer data, gint source, const gchar *error_message)$/;"	f	file:	signature:(gpointer data, gint source, const gchar *error_message)
purple_ssl_connect_fd	sslconn.c	/^purple_ssl_connect_fd(PurpleAccount *account, int fd,$/;"	f	signature:(PurpleAccount *account, int fd, PurpleSslInputFunction func, PurpleSslErrorFunction error_func, void *data)
purple_ssl_connect_fd	sslconn.h	/^PurpleSslConnection *purple_ssl_connect_fd(PurpleAccount *account, int fd,$/;"	p	signature:(PurpleAccount *account, int fd, PurpleSslInputFunction func, PurpleSslErrorFunction error_func, void *data)
purple_ssl_connect_with_host_fd	sslconn.c	/^purple_ssl_connect_with_host_fd(PurpleAccount *account, int fd,$/;"	f	signature:(PurpleAccount *account, int fd, PurpleSslInputFunction func, PurpleSslErrorFunction error_func, const char *host, void *data)
purple_ssl_connect_with_host_fd	sslconn.h	/^PurpleSslConnection *purple_ssl_connect_with_host_fd(PurpleAccount *account, int fd,$/;"	p	signature:(PurpleAccount *account, int fd, PurpleSslInputFunction func, PurpleSslErrorFunction error_func, const char *host, void *data)
purple_ssl_connect_with_ssl_cn	sslconn.c	/^purple_ssl_connect_with_ssl_cn(PurpleAccount *account, const char *host, int port,$/;"	f	signature:(PurpleAccount *account, const char *host, int port, PurpleSslInputFunction func, PurpleSslErrorFunction error_func, const char *ssl_cn, void *data)
purple_ssl_connect_with_ssl_cn	sslconn.h	/^PurpleSslConnection *purple_ssl_connect_with_ssl_cn(PurpleAccount *account, const char *host,$/;"	p	signature:(PurpleAccount *account, const char *host, int port, PurpleSslInputFunction func, PurpleSslErrorFunction error_func, const char *ssl_host, void *data)
purple_ssl_get_ops	sslconn.c	/^purple_ssl_get_ops(void)$/;"	f	signature:(void)
purple_ssl_get_ops	sslconn.h	/^PurpleSslOps *purple_ssl_get_ops(void);$/;"	p	signature:(void)
purple_ssl_get_peer_certificates	sslconn.c	/^purple_ssl_get_peer_certificates(PurpleSslConnection *gsc)$/;"	f	signature:(PurpleSslConnection *gsc)
purple_ssl_get_peer_certificates	sslconn.h	/^GList * purple_ssl_get_peer_certificates(PurpleSslConnection *gsc);$/;"	p	signature:(PurpleSslConnection *gsc)
purple_ssl_init	sslconn.c	/^purple_ssl_init(void)$/;"	f	signature:(void)
purple_ssl_init	sslconn.h	/^void purple_ssl_init(void);$/;"	p	signature:(void)
purple_ssl_input_add	sslconn.c	/^purple_ssl_input_add(PurpleSslConnection *gsc, PurpleSslInputFunction func,$/;"	f	signature:(PurpleSslConnection *gsc, PurpleSslInputFunction func, void *data)
purple_ssl_input_add	sslconn.h	/^void purple_ssl_input_add(PurpleSslConnection *gsc, PurpleSslInputFunction func,$/;"	p	signature:(PurpleSslConnection *gsc, PurpleSslInputFunction func, void *data)
purple_ssl_is_supported	sslconn.c	/^purple_ssl_is_supported(void)$/;"	f	signature:(void)
purple_ssl_is_supported	sslconn.h	/^gboolean purple_ssl_is_supported(void);$/;"	p	signature:(void)
purple_ssl_read	sslconn.c	/^purple_ssl_read(PurpleSslConnection *gsc, void *data, size_t len)$/;"	f	signature:(PurpleSslConnection *gsc, void *data, size_t len)
purple_ssl_read	sslconn.h	/^size_t purple_ssl_read(PurpleSslConnection *gsc, void *buffer, size_t len);$/;"	p	signature:(PurpleSslConnection *gsc, void *buffer, size_t len)
purple_ssl_set_ops	sslconn.c	/^purple_ssl_set_ops(PurpleSslOps *ops)$/;"	f	signature:(PurpleSslOps *ops)
purple_ssl_set_ops	sslconn.h	/^void purple_ssl_set_ops(PurpleSslOps *ops);$/;"	p	signature:(PurpleSslOps *ops)
purple_ssl_strerror	sslconn.c	/^purple_ssl_strerror(PurpleSslErrorType error)$/;"	f	signature:(PurpleSslErrorType error)
purple_ssl_strerror	sslconn.h	/^const gchar * purple_ssl_strerror(PurpleSslErrorType error);$/;"	p	signature:(PurpleSslErrorType error)
purple_ssl_uninit	sslconn.c	/^purple_ssl_uninit(void)$/;"	f	signature:(void)
purple_ssl_uninit	sslconn.h	/^void purple_ssl_uninit(void);$/;"	p	signature:(void)
purple_ssl_write	sslconn.c	/^purple_ssl_write(PurpleSslConnection *gsc, const void *data, size_t len)$/;"	f	signature:(PurpleSslConnection *gsc, const void *data, size_t len)
purple_ssl_write	sslconn.h	/^size_t purple_ssl_write(PurpleSslConnection *gsc, const void *buffer, size_t len);$/;"	p	signature:(PurpleSslConnection *gsc, const void *buffer, size_t len)
purple_status_attr_destroy	status.c	/^purple_status_attr_destroy(PurpleStatusAttr *attr)$/;"	f	signature:(PurpleStatusAttr *attr)
purple_status_attr_destroy	status.h	/^void purple_status_attr_destroy(PurpleStatusAttr *attr);$/;"	p	signature:(PurpleStatusAttr *attr)
purple_status_attr_get_id	status.c	/^purple_status_attr_get_id(const PurpleStatusAttr *attr)$/;"	f	signature:(const PurpleStatusAttr *attr)
purple_status_attr_get_id	status.h	/^const char *purple_status_attr_get_id(const PurpleStatusAttr *attr);$/;"	p	signature:(const PurpleStatusAttr *attr)
purple_status_attr_get_name	status.c	/^purple_status_attr_get_name(const PurpleStatusAttr *attr)$/;"	f	signature:(const PurpleStatusAttr *attr)
purple_status_attr_get_name	status.h	/^const char *purple_status_attr_get_name(const PurpleStatusAttr *attr);$/;"	p	signature:(const PurpleStatusAttr *attr)
purple_status_attr_get_value	status.c	/^purple_status_attr_get_value(const PurpleStatusAttr *attr)$/;"	f	signature:(const PurpleStatusAttr *attr)
purple_status_attr_get_value	status.h	/^PurpleValue *purple_status_attr_get_value(const PurpleStatusAttr *attr);$/;"	p	signature:(const PurpleStatusAttr *attr)
purple_status_attr_new	status.c	/^purple_status_attr_new(const char *id, const char *name, PurpleValue *value_type)$/;"	f	signature:(const char *id, const char *name, PurpleValue *value_type)
purple_status_attr_new	status.h	/^PurpleStatusAttr *purple_status_attr_new(const char *id, const char *name,$/;"	p	signature:(const char *id, const char *name, PurpleValue *value_type)
purple_status_compare	status.c	/^purple_status_compare(const PurpleStatus *status1, const PurpleStatus *status2)$/;"	f	signature:(const PurpleStatus *status1, const PurpleStatus *status2)
purple_status_compare	status.h	/^gint purple_status_compare(const PurpleStatus *status1, const PurpleStatus *status2);$/;"	p	signature:(const PurpleStatus *status1, const PurpleStatus *status2)
purple_status_destroy	status.c	/^purple_status_destroy(PurpleStatus *status)$/;"	f	signature:(PurpleStatus *status)
purple_status_destroy	status.h	/^void purple_status_destroy(PurpleStatus *status);$/;"	p	signature:(PurpleStatus *status)
purple_status_get_attr_boolean	status.c	/^purple_status_get_attr_boolean(const PurpleStatus *status, const char *id)$/;"	f	signature:(const PurpleStatus *status, const char *id)
purple_status_get_attr_boolean	status.h	/^gboolean purple_status_get_attr_boolean(const PurpleStatus *status,$/;"	p	signature:(const PurpleStatus *status, const char *id)
purple_status_get_attr_int	status.c	/^purple_status_get_attr_int(const PurpleStatus *status, const char *id)$/;"	f	signature:(const PurpleStatus *status, const char *id)
purple_status_get_attr_int	status.h	/^int purple_status_get_attr_int(const PurpleStatus *status, const char *id);$/;"	p	signature:(const PurpleStatus *status, const char *id)
purple_status_get_attr_string	status.c	/^purple_status_get_attr_string(const PurpleStatus *status, const char *id)$/;"	f	signature:(const PurpleStatus *status, const char *id)
purple_status_get_attr_string	status.h	/^const char *purple_status_get_attr_string(const PurpleStatus *status,$/;"	p	signature:(const PurpleStatus *status, const char *id)
purple_status_get_attr_value	status.c	/^purple_status_get_attr_value(const PurpleStatus *status, const char *id)$/;"	f	signature:(const PurpleStatus *status, const char *id)
purple_status_get_attr_value	status.h	/^PurpleValue *purple_status_get_attr_value(const PurpleStatus *status,$/;"	p	signature:(const PurpleStatus *status, const char *id)
purple_status_get_handle	status.c	/^purple_status_get_handle(void) {$/;"	f	signature:(void)
purple_status_get_handle	status.h	/^void *purple_status_get_handle(void);$/;"	p	signature:(void)
purple_status_get_id	status.c	/^purple_status_get_id(const PurpleStatus *status)$/;"	f	signature:(const PurpleStatus *status)
purple_status_get_id	status.h	/^const char *purple_status_get_id(const PurpleStatus *status);$/;"	p	signature:(const PurpleStatus *status)
purple_status_get_name	status.c	/^purple_status_get_name(const PurpleStatus *status)$/;"	f	signature:(const PurpleStatus *status)
purple_status_get_name	status.h	/^const char *purple_status_get_name(const PurpleStatus *status);$/;"	p	signature:(const PurpleStatus *status)
purple_status_get_presence	status.c	/^purple_status_get_presence(const PurpleStatus *status)$/;"	f	signature:(const PurpleStatus *status)
purple_status_get_presence	status.h	/^PurplePresence *purple_status_get_presence(const PurpleStatus *status);$/;"	p	signature:(const PurpleStatus *status)
purple_status_get_type	status.c	/^purple_status_get_type(const PurpleStatus *status)$/;"	f	signature:(const PurpleStatus *status)
purple_status_get_type	status.h	/^PurpleStatusType *purple_status_get_type(const PurpleStatus *status);$/;"	p	signature:(const PurpleStatus *status)
purple_status_init	status.c	/^purple_status_init(void)$/;"	f	signature:(void)
purple_status_init	status.h	/^void purple_status_init(void);$/;"	p	signature:(void)
purple_status_is_active	status.c	/^purple_status_is_active(const PurpleStatus *status)$/;"	f	signature:(const PurpleStatus *status)
purple_status_is_active	status.h	/^gboolean purple_status_is_active(const PurpleStatus *status);$/;"	p	signature:(const PurpleStatus *status)
purple_status_is_available	status.c	/^purple_status_is_available(const PurpleStatus *status)$/;"	f	signature:(const PurpleStatus *status)
purple_status_is_available	status.h	/^gboolean purple_status_is_available(const PurpleStatus *status);$/;"	p	signature:(const PurpleStatus *status)
purple_status_is_exclusive	status.c	/^purple_status_is_exclusive(const PurpleStatus *status)$/;"	f	signature:(const PurpleStatus *status)
purple_status_is_exclusive	status.h	/^gboolean purple_status_is_exclusive(const PurpleStatus *status);$/;"	p	signature:(const PurpleStatus *status)
purple_status_is_independent	status.c	/^purple_status_is_independent(const PurpleStatus *status)$/;"	f	signature:(const PurpleStatus *status)
purple_status_is_independent	status.h	/^gboolean purple_status_is_independent(const PurpleStatus *status);$/;"	p	signature:(const PurpleStatus *status)
purple_status_is_online	status.c	/^purple_status_is_online(const PurpleStatus *status)$/;"	f	signature:(const PurpleStatus *status)
purple_status_is_online	status.h	/^gboolean purple_status_is_online(const PurpleStatus *status);$/;"	p	signature:(const PurpleStatus *status)
purple_status_new	status.c	/^purple_status_new(PurpleStatusType *status_type, PurplePresence *presence)$/;"	f	signature:(PurpleStatusType *status_type, PurplePresence *presence)
purple_status_new	status.h	/^PurpleStatus *purple_status_new(PurpleStatusType *status_type,$/;"	p	signature:(PurpleStatusType *status_type, PurplePresence *presence)
purple_status_set_active	status.c	/^purple_status_set_active(PurpleStatus *status, gboolean active)$/;"	f	signature:(PurpleStatus *status, gboolean active)
purple_status_set_active	status.h	/^void purple_status_set_active(PurpleStatus *status, gboolean active);$/;"	p	signature:(PurpleStatus *status, gboolean active)
purple_status_set_active_with_attrs	status.c	/^purple_status_set_active_with_attrs(PurpleStatus *status, gboolean active, va_list args)$/;"	f	signature:(PurpleStatus *status, gboolean active, va_list args)
purple_status_set_active_with_attrs	status.h	/^void purple_status_set_active_with_attrs(PurpleStatus *status, gboolean active,$/;"	p	signature:(PurpleStatus *status, gboolean active, va_list args)
purple_status_set_active_with_attrs_list	status.c	/^purple_status_set_active_with_attrs_list(PurpleStatus *status, gboolean active,$/;"	f	signature:(PurpleStatus *status, gboolean active, GList *attrs)
purple_status_set_active_with_attrs_list	status.h	/^void purple_status_set_active_with_attrs_list(PurpleStatus *status, gboolean active,$/;"	p	signature:(PurpleStatus *status, gboolean active, GList *attrs)
purple_status_set_attr_boolean	status.c	/^purple_status_set_attr_boolean(PurpleStatus *status, const char *id,$/;"	f	signature:(PurpleStatus *status, const char *id, gboolean value)
purple_status_set_attr_boolean	status.h	/^void purple_status_set_attr_boolean(PurpleStatus *status, const char *id,$/;"	p	signature:(PurpleStatus *status, const char *id, gboolean value)
purple_status_set_attr_int	status.c	/^purple_status_set_attr_int(PurpleStatus *status, const char *id, int value)$/;"	f	signature:(PurpleStatus *status, const char *id, int value)
purple_status_set_attr_int	status.h	/^void purple_status_set_attr_int(PurpleStatus *status, const char *id,$/;"	p	signature:(PurpleStatus *status, const char *id, int value)
purple_status_set_attr_string	status.c	/^purple_status_set_attr_string(PurpleStatus *status, const char *id,$/;"	f	signature:(PurpleStatus *status, const char *id, const char *value)
purple_status_set_attr_string	status.h	/^void purple_status_set_attr_string(PurpleStatus *status, const char *id,$/;"	p	signature:(PurpleStatus *status, const char *id, const char *value)
purple_status_type_add_attr	status.c	/^purple_status_type_add_attr(PurpleStatusType *status_type, const char *id,$/;"	f	signature:(PurpleStatusType *status_type, const char *id, const char *name, PurpleValue *value)
purple_status_type_add_attr	status.h	/^void purple_status_type_add_attr(PurpleStatusType *status_type, const char *id,$/;"	p	signature:(PurpleStatusType *status_type, const char *id, const char *name, PurpleValue *value)
purple_status_type_add_attrs	status.c	/^purple_status_type_add_attrs(PurpleStatusType *status_type, const char *id,$/;"	f	signature:(PurpleStatusType *status_type, const char *id, const char *name, PurpleValue *value, ...)
purple_status_type_add_attrs_vargs	status.c	/^purple_status_type_add_attrs_vargs(PurpleStatusType *status_type, va_list args)$/;"	f	signature:(PurpleStatusType *status_type, va_list args)
purple_status_type_add_attrs_vargs	status.h	/^void purple_status_type_add_attrs_vargs(PurpleStatusType *status_type,$/;"	p	signature:(PurpleStatusType *status_type, va_list args)
purple_status_type_destroy	status.c	/^purple_status_type_destroy(PurpleStatusType *status_type)$/;"	f	signature:(PurpleStatusType *status_type)
purple_status_type_destroy	status.h	/^void purple_status_type_destroy(PurpleStatusType *status_type);$/;"	p	signature:(PurpleStatusType *status_type)
purple_status_type_find_with_id	status.c	/^purple_status_type_find_with_id(GList *status_types, const char *id)$/;"	f	signature:(GList *status_types, const char *id)
purple_status_type_find_with_id	status.h	/^const PurpleStatusType *purple_status_type_find_with_id(GList *status_types,$/;"	p	signature:(GList *status_types, const char *id)
purple_status_type_get_attr	status.c	/^purple_status_type_get_attr(const PurpleStatusType *status_type, const char *id)$/;"	f	signature:(const PurpleStatusType *status_type, const char *id)
purple_status_type_get_attr	status.h	/^PurpleStatusAttr *purple_status_type_get_attr(const PurpleStatusType *status_type,$/;"	p	signature:(const PurpleStatusType *status_type, const char *id)
purple_status_type_get_attrs	status.c	/^purple_status_type_get_attrs(const PurpleStatusType *status_type)$/;"	f	signature:(const PurpleStatusType *status_type)
purple_status_type_get_attrs	status.h	/^GList *purple_status_type_get_attrs(const PurpleStatusType *status_type);$/;"	p	signature:(const PurpleStatusType *status_type)
purple_status_type_get_id	status.c	/^purple_status_type_get_id(const PurpleStatusType *status_type)$/;"	f	signature:(const PurpleStatusType *status_type)
purple_status_type_get_id	status.h	/^const char *purple_status_type_get_id(const PurpleStatusType *status_type);$/;"	p	signature:(const PurpleStatusType *status_type)
purple_status_type_get_name	status.c	/^purple_status_type_get_name(const PurpleStatusType *status_type)$/;"	f	signature:(const PurpleStatusType *status_type)
purple_status_type_get_name	status.h	/^const char *purple_status_type_get_name(const PurpleStatusType *status_type);$/;"	p	signature:(const PurpleStatusType *status_type)
purple_status_type_get_primary_attr	status.c	/^purple_status_type_get_primary_attr(const PurpleStatusType *status_type)$/;"	f	signature:(const PurpleStatusType *status_type)
purple_status_type_get_primary_attr	status.h	/^const char *purple_status_type_get_primary_attr(const PurpleStatusType *type);$/;"	p	signature:(const PurpleStatusType *type)
purple_status_type_get_primitive	status.c	/^purple_status_type_get_primitive(const PurpleStatusType *status_type)$/;"	f	signature:(const PurpleStatusType *status_type)
purple_status_type_get_primitive	status.h	/^PurpleStatusPrimitive purple_status_type_get_primitive($/;"	p	signature:( const PurpleStatusType *status_type)
purple_status_type_is_available	status.c	/^purple_status_type_is_available(const PurpleStatusType *status_type)$/;"	f	signature:(const PurpleStatusType *status_type)
purple_status_type_is_available	status.h	/^gboolean purple_status_type_is_available(const PurpleStatusType *status_type);$/;"	p	signature:(const PurpleStatusType *status_type)
purple_status_type_is_exclusive	status.c	/^purple_status_type_is_exclusive(const PurpleStatusType *status_type)$/;"	f	signature:(const PurpleStatusType *status_type)
purple_status_type_is_exclusive	status.h	/^gboolean purple_status_type_is_exclusive(const PurpleStatusType *status_type);$/;"	p	signature:(const PurpleStatusType *status_type)
purple_status_type_is_independent	status.c	/^purple_status_type_is_independent(const PurpleStatusType *status_type)$/;"	f	signature:(const PurpleStatusType *status_type)
purple_status_type_is_independent	status.h	/^gboolean purple_status_type_is_independent(const PurpleStatusType *status_type);$/;"	p	signature:(const PurpleStatusType *status_type)
purple_status_type_is_saveable	status.c	/^purple_status_type_is_saveable(const PurpleStatusType *status_type)$/;"	f	signature:(const PurpleStatusType *status_type)
purple_status_type_is_saveable	status.h	/^gboolean purple_status_type_is_saveable(const PurpleStatusType *status_type);$/;"	p	signature:(const PurpleStatusType *status_type)
purple_status_type_is_user_settable	status.c	/^purple_status_type_is_user_settable(const PurpleStatusType *status_type)$/;"	f	signature:(const PurpleStatusType *status_type)
purple_status_type_is_user_settable	status.h	/^gboolean purple_status_type_is_user_settable(const PurpleStatusType *status_type);$/;"	p	signature:(const PurpleStatusType *status_type)
purple_status_type_new	status.c	/^purple_status_type_new(PurpleStatusPrimitive primitive, const char *id,$/;"	f	signature:(PurpleStatusPrimitive primitive, const char *id, const char *name, gboolean user_settable)
purple_status_type_new	status.h	/^PurpleStatusType *purple_status_type_new(PurpleStatusPrimitive primitive,$/;"	p	signature:(PurpleStatusPrimitive primitive, const char *id, const char *name, gboolean user_settable)
purple_status_type_new_full	status.c	/^purple_status_type_new_full(PurpleStatusPrimitive primitive, const char *id,$/;"	f	signature:(PurpleStatusPrimitive primitive, const char *id, const char *name, gboolean saveable, gboolean user_settable, gboolean independent)
purple_status_type_new_full	status.h	/^PurpleStatusType *purple_status_type_new_full(PurpleStatusPrimitive primitive,$/;"	p	signature:(PurpleStatusPrimitive primitive, const char *id, const char *name, gboolean saveable, gboolean user_settable, gboolean independent)
purple_status_type_new_with_attrs	status.c	/^purple_status_type_new_with_attrs(PurpleStatusPrimitive primitive,$/;"	f	signature:(PurpleStatusPrimitive primitive, const char *id, const char *name, gboolean saveable, gboolean user_settable, gboolean independent, const char *attr_id, const char *attr_name, PurpleValue *attr_value, ...)
purple_status_type_set_primary_attr	status.c	/^purple_status_type_set_primary_attr(PurpleStatusType *status_type, const char *id)$/;"	f	signature:(PurpleStatusType *status_type, const char *id)
purple_status_type_set_primary_attr	status.h	/^void purple_status_type_set_primary_attr(PurpleStatusType *status_type,$/;"	p	signature:(PurpleStatusType *status_type, const char *attr_id)
purple_status_uninit	status.c	/^purple_status_uninit(void)$/;"	f	signature:(void)
purple_status_uninit	status.h	/^void purple_status_uninit(void);$/;"	p	signature:(void)
purple_str_add_cr	util.c	/^purple_str_add_cr(const char *text)$/;"	f	signature:(const char *text)
purple_str_add_cr	util.h	/^char *purple_str_add_cr(const char *str);$/;"	p	signature:(const char *str)
purple_str_binary_to_ascii	util.c	/^purple_str_binary_to_ascii(const unsigned char *binary, guint len)$/;"	f	signature:(const unsigned char *binary, guint len)
purple_str_binary_to_ascii	util.h	/^char *purple_str_binary_to_ascii(const unsigned char *binary, guint len);$/;"	p	signature:(const unsigned char *binary, guint len)
purple_str_has_prefix	util.c	/^purple_str_has_prefix(const char *s, const char *p)$/;"	f	signature:(const char *s, const char *p)
purple_str_has_prefix	util.h	/^gboolean purple_str_has_prefix(const char *s, const char *p);$/;"	p	signature:(const char *s, const char *p)
purple_str_has_suffix	util.c	/^purple_str_has_suffix(const char *s, const char *x)$/;"	f	signature:(const char *s, const char *x)
purple_str_has_suffix	util.h	/^gboolean purple_str_has_suffix(const char *s, const char *x);$/;"	p	signature:(const char *s, const char *x)
purple_str_seconds_to_string	util.c	/^purple_str_seconds_to_string(guint secs)$/;"	f	signature:(guint secs)
purple_str_seconds_to_string	util.h	/^char *purple_str_seconds_to_string(guint sec);$/;"	p	signature:(guint sec)
purple_str_size_to_units	util.c	/^purple_str_size_to_units(size_t size)$/;"	f	signature:(size_t size)
purple_str_size_to_units	util.h	/^char *purple_str_size_to_units(size_t size);$/;"	p	signature:(size_t size)
purple_str_strip_char	util.c	/^purple_str_strip_char(char *text, char thechar)$/;"	f	signature:(char *text, char thechar)
purple_str_strip_char	util.h	/^void purple_str_strip_char(char *str, char thechar);$/;"	p	signature:(char *str, char thechar)
purple_str_to_time	util.c	/^purple_str_to_time(const char *timestamp, gboolean utc,$/;"	f	signature:(const char *timestamp, gboolean utc, struct tm *tm, long *tz_off, const char **rest)
purple_str_to_time	util.h	/^time_t purple_str_to_time(const char *timestamp, gboolean utc,$/;"	p	signature:(const char *timestamp, gboolean utc, struct tm *tm, long *tz_off, const char **rest)
purple_strcasereplace	util.c	/^purple_strcasereplace(const char *string, const char *delimiter,$/;"	f	signature:(const char *string, const char *delimiter, const char *replacement)
purple_strcasereplace	util.h	/^gchar *purple_strcasereplace(const char *string, const char *delimiter,$/;"	p	signature:(const char *string, const char *delimiter, const char *replacement)
purple_strcasestr	util.c	/^purple_strcasestr(const char *haystack, const char *needle)$/;"	f	signature:(const char *haystack, const char *needle)
purple_strcasestr	util.h	/^const char *purple_strcasestr(const char *haystack, const char *needle);$/;"	p	signature:(const char *haystack, const char *needle)
purple_strdup_withhtml	util.c	/^purple_strdup_withhtml(const gchar *src)$/;"	f	signature:(const gchar *src)
purple_strdup_withhtml	util.h	/^gchar *purple_strdup_withhtml(const gchar *src);$/;"	p	signature:(const gchar *src)
purple_strequal	util.c	/^purple_strequal(const gchar *left, const gchar *right)$/;"	f	signature:(const gchar *left, const gchar *right)
purple_strequal	util.h	/^gboolean purple_strequal(const gchar *left, const gchar *right);$/;"	p	signature:(const gchar *left, const gchar *right)
purple_stringref_cmp	stringref.c	/^int purple_stringref_cmp(const PurpleStringref *s1, const PurpleStringref *s2)$/;"	f	signature:(const PurpleStringref *s1, const PurpleStringref *s2)
purple_stringref_cmp	stringref.h	/^int purple_stringref_cmp(const PurpleStringref *s1, const PurpleStringref *s2);$/;"	p	signature:(const PurpleStringref *s1, const PurpleStringref *s2)
purple_stringref_len	stringref.c	/^size_t purple_stringref_len(const PurpleStringref *stringref)$/;"	f	signature:(const PurpleStringref *stringref)
purple_stringref_len	stringref.h	/^size_t purple_stringref_len(const PurpleStringref *stringref);$/;"	p	signature:(const PurpleStringref *stringref)
purple_stringref_new	stringref.c	/^PurpleStringref *purple_stringref_new(const char *value)$/;"	f	signature:(const char *value)
purple_stringref_new	stringref.h	/^PurpleStringref *purple_stringref_new(const char *value);$/;"	p	signature:(const char *value)
purple_stringref_new_noref	stringref.c	/^PurpleStringref *purple_stringref_new_noref(const char *value)$/;"	f	signature:(const char *value)
purple_stringref_new_noref	stringref.h	/^PurpleStringref *purple_stringref_new_noref(const char *value);$/;"	p	signature:(const char *value)
purple_stringref_printf	stringref.c	/^PurpleStringref *purple_stringref_printf(const char *format, ...)$/;"	f	signature:(const char *format, ...)
purple_stringref_printf	stringref.h	/^PurpleStringref *purple_stringref_printf(const char *format, ...);$/;"	p	signature:(const char *format, ...)
purple_stringref_ref	stringref.c	/^PurpleStringref *purple_stringref_ref(PurpleStringref *stringref)$/;"	f	signature:(PurpleStringref *stringref)
purple_stringref_ref	stringref.h	/^PurpleStringref *purple_stringref_ref(PurpleStringref *stringref);$/;"	p	signature:(PurpleStringref *stringref)
purple_stringref_unref	stringref.c	/^void purple_stringref_unref(PurpleStringref *stringref)$/;"	f	signature:(PurpleStringref *stringref)
purple_stringref_unref	stringref.h	/^void purple_stringref_unref(PurpleStringref *stringref);$/;"	p	signature:(PurpleStringref *stringref)
purple_stringref_value	stringref.c	/^const char *purple_stringref_value(const PurpleStringref *stringref)$/;"	f	signature:(const PurpleStringref *stringref)
purple_stringref_value	stringref.h	/^const char *purple_stringref_value(const PurpleStringref *stringref);$/;"	p	signature:(const PurpleStringref *stringref)
purple_strings_are_different	blist.c	/^purple_strings_are_different(const char *one, const char *two)$/;"	f	file:	signature:(const char *one, const char *two)
purple_strlcat	internal.h	158;"	d
purple_strlcpy	internal.h	157;"	d
purple_strreplace	util.c	/^purple_strreplace(const char *string, const char *delimiter,$/;"	f	signature:(const char *string, const char *delimiter, const char *replacement)
purple_strreplace	util.h	/^gchar *purple_strreplace(const char *string, const char *delimiter,$/;"	p	signature:(const char *string, const char *delimiter, const char *replacement)
purple_stun_discover	stun.c	/^PurpleStunNatDiscovery *purple_stun_discover(StunCallback cb) {$/;"	f	signature:(StunCallback cb)
purple_stun_discover	stun.h	/^PurpleStunNatDiscovery *purple_stun_discover(StunCallback cb);$/;"	p	signature:(StunCallback cb)
purple_stun_init	stun.c	/^void purple_stun_init() {$/;"	f
purple_stun_init	stun.h	/^void purple_stun_init(void);$/;"	p	signature:(void)
purple_text_strip_mnemonic	util.c	/^char *purple_text_strip_mnemonic(const char *in)$/;"	f	signature:(const char *in)
purple_text_strip_mnemonic	util.h	/^char *purple_text_strip_mnemonic(const char *in);$/;"	p	signature:(const char *in)
purple_theme_class_init	theme.c	/^purple_theme_class_init(PurpleThemeClass *klass)$/;"	f	file:	signature:(PurpleThemeClass *klass)
purple_theme_finalize	theme.c	/^purple_theme_finalize(GObject *obj)$/;"	f	file:	signature:(GObject *obj)
purple_theme_get_author	theme.c	/^purple_theme_get_author(PurpleTheme *theme)$/;"	f	signature:(PurpleTheme *theme)
purple_theme_get_author	theme.h	/^const gchar *purple_theme_get_author(PurpleTheme *theme);$/;"	p	signature:(PurpleTheme *theme)
purple_theme_get_description	theme.c	/^purple_theme_get_description(PurpleTheme *theme)$/;"	f	signature:(PurpleTheme *theme)
purple_theme_get_description	theme.h	/^const gchar *purple_theme_get_description(PurpleTheme *theme);$/;"	p	signature:(PurpleTheme *theme)
purple_theme_get_dir	theme.c	/^purple_theme_get_dir(PurpleTheme *theme)$/;"	f	signature:(PurpleTheme *theme)
purple_theme_get_dir	theme.h	/^const gchar *purple_theme_get_dir(PurpleTheme *theme);$/;"	p	signature:(PurpleTheme *theme)
purple_theme_get_image	theme.c	/^purple_theme_get_image(PurpleTheme *theme)$/;"	f	signature:(PurpleTheme *theme)
purple_theme_get_image	theme.h	/^const gchar *purple_theme_get_image(PurpleTheme *theme);$/;"	p	signature:(PurpleTheme *theme)
purple_theme_get_image_full	theme.c	/^purple_theme_get_image_full(PurpleTheme *theme)$/;"	f	signature:(PurpleTheme *theme)
purple_theme_get_image_full	theme.h	/^gchar *purple_theme_get_image_full(PurpleTheme *theme);$/;"	p	signature:(PurpleTheme *theme)
purple_theme_get_name	theme.c	/^purple_theme_get_name(PurpleTheme *theme)$/;"	f	signature:(PurpleTheme *theme)
purple_theme_get_name	theme.h	/^const gchar *purple_theme_get_name(PurpleTheme *theme);$/;"	p	signature:(PurpleTheme *theme)
purple_theme_get_property	theme.c	/^purple_theme_get_property(GObject *obj, guint param_id, GValue *value,$/;"	f	file:	signature:(GObject *obj, guint param_id, GValue *value, GParamSpec *psec)
purple_theme_get_type	theme.c	/^purple_theme_get_type(void)$/;"	f	signature:(void)
purple_theme_get_type	theme.h	/^GType purple_theme_get_type(void);$/;"	p	signature:(void)
purple_theme_get_type_string	theme.c	/^purple_theme_get_type_string(PurpleTheme *theme)$/;"	f	signature:(PurpleTheme *theme)
purple_theme_get_type_string	theme.h	/^const gchar *purple_theme_get_type_string(PurpleTheme *theme);$/;"	p	signature:(PurpleTheme *theme)
purple_theme_init	theme.c	/^purple_theme_init(GTypeInstance *instance,$/;"	f	file:	signature:(GTypeInstance *instance, gpointer klass)
purple_theme_loader_build	theme-loader.c	/^purple_theme_loader_build(PurpleThemeLoader *loader, const gchar *dir)$/;"	f	signature:(PurpleThemeLoader *loader, const gchar *dir)
purple_theme_loader_build	theme-loader.h	/^PurpleTheme *purple_theme_loader_build(PurpleThemeLoader *loader, const gchar *dir);$/;"	p	signature:(PurpleThemeLoader *loader, const gchar *dir)
purple_theme_loader_class_init	theme-loader.c	/^purple_theme_loader_class_init(PurpleThemeLoaderClass *klass)$/;"	f	file:	signature:(PurpleThemeLoaderClass *klass)
purple_theme_loader_finalize	theme-loader.c	/^purple_theme_loader_finalize(GObject *obj)$/;"	f	file:	signature:(GObject *obj)
purple_theme_loader_get_property	theme-loader.c	/^purple_theme_loader_get_property(GObject *obj, guint param_id, GValue *value,$/;"	f	file:	signature:(GObject *obj, guint param_id, GValue *value, GParamSpec *psec)
purple_theme_loader_get_type	theme-loader.c	/^purple_theme_loader_get_type(void)$/;"	f	signature:(void)
purple_theme_loader_get_type	theme-loader.h	/^GType purple_theme_loader_get_type(void);$/;"	p	signature:(void)
purple_theme_loader_get_type_string	theme-loader.c	/^purple_theme_loader_get_type_string(PurpleThemeLoader *theme_loader)$/;"	f	signature:(PurpleThemeLoader *theme_loader)
purple_theme_loader_get_type_string	theme-loader.h	/^const gchar *purple_theme_loader_get_type_string(PurpleThemeLoader *self);$/;"	p	signature:(PurpleThemeLoader *self)
purple_theme_loader_init	theme-loader.c	/^purple_theme_loader_init(GTypeInstance *instance,$/;"	f	file:	signature:(GTypeInstance *instance, gpointer klass)
purple_theme_loader_set_property	theme-loader.c	/^purple_theme_loader_set_property(GObject *obj, guint param_id, const GValue *value,$/;"	f	file:	signature:(GObject *obj, guint param_id, const GValue *value, GParamSpec *psec)
purple_theme_loader_set_type_string	theme-loader.c	/^purple_theme_loader_set_type_string(PurpleThemeLoader *loader, const gchar *type)$/;"	f	signature:(PurpleThemeLoader *loader, const gchar *type)
purple_theme_loader_set_type_string	theme-loader.c	/^void purple_theme_loader_set_type_string(PurpleThemeLoader *loader, const gchar *type);$/;"	p	file:	signature:(PurpleThemeLoader *loader, const gchar *type)
purple_theme_manager_add_theme	theme-manager.c	/^purple_theme_manager_add_theme(PurpleTheme *theme)$/;"	f	signature:(PurpleTheme *theme)
purple_theme_manager_add_theme	theme-manager.h	/^void purple_theme_manager_add_theme(PurpleTheme *theme);$/;"	p	signature:(PurpleTheme *theme)
purple_theme_manager_build_dir	theme-manager.c	/^purple_theme_manager_build_dir(const gchar *root)$/;"	f	file:	signature:(const gchar *root)
purple_theme_manager_find_theme	theme-manager.c	/^purple_theme_manager_find_theme(const gchar *name,$/;"	f	signature:(const gchar *name, const gchar *type)
purple_theme_manager_find_theme	theme-manager.h	/^PurpleTheme *purple_theme_manager_find_theme(const gchar *name, const gchar *type);$/;"	p	signature:(const gchar *name, const gchar *type)
purple_theme_manager_for_each_theme	theme-manager.c	/^purple_theme_manager_for_each_theme(PTFunc func)$/;"	f	signature:(PTFunc func)
purple_theme_manager_for_each_theme	theme-manager.h	/^void purple_theme_manager_for_each_theme(PTFunc func);$/;"	p	signature:(PTFunc func)
purple_theme_manager_function_wrapper	theme-manager.c	/^purple_theme_manager_function_wrapper(gchar *key,$/;"	f	file:	signature:(gchar *key, gpointer value, PTFunc user_data)
purple_theme_manager_get_type	theme-manager.c	/^purple_theme_manager_get_type(void)$/;"	f	signature:(void)
purple_theme_manager_get_type	theme-manager.h	/^GType purple_theme_manager_get_type(void);$/;"	p	signature:(void)
purple_theme_manager_init	theme-manager.c	/^purple_theme_manager_init(void)$/;"	f	signature:(void)
purple_theme_manager_init	theme-manager.h	/^void purple_theme_manager_init(void);$/;"	p	signature:(void)
purple_theme_manager_is_theme	theme-manager.c	/^purple_theme_manager_is_theme(gchar *key,$/;"	f	file:	signature:(gchar *key, gpointer value, gchar *user_data)
purple_theme_manager_is_theme_type	theme-manager.c	/^purple_theme_manager_is_theme_type(gchar *key,$/;"	f	file:	signature:(gchar *key, gpointer value, gchar *user_data)
purple_theme_manager_load_theme	theme-manager.c	/^purple_theme_manager_load_theme(const gchar *theme_dir, const gchar *type)$/;"	f	signature:(const gchar *theme_dir, const gchar *type)
purple_theme_manager_load_theme	theme-manager.h	/^PurpleTheme *purple_theme_manager_load_theme(const gchar *theme_dir, const gchar *type);$/;"	p	signature:(const gchar *theme_dir, const gchar *type)
purple_theme_manager_make_key	theme-manager.c	/^purple_theme_manager_make_key(const gchar *name, const gchar *type)$/;"	f	file:	signature:(const gchar *name, const gchar *type)
purple_theme_manager_refresh	theme-manager.c	/^purple_theme_manager_refresh(void)$/;"	f	signature:(void)
purple_theme_manager_refresh	theme-manager.h	/^void purple_theme_manager_refresh(void);$/;"	p	signature:(void)
purple_theme_manager_register_type	theme-manager.c	/^purple_theme_manager_register_type(PurpleThemeLoader *loader)$/;"	f	signature:(PurpleThemeLoader *loader)
purple_theme_manager_register_type	theme-manager.h	/^void purple_theme_manager_register_type(PurpleThemeLoader *loader);$/;"	p	signature:(PurpleThemeLoader *loader)
purple_theme_manager_remove_theme	theme-manager.c	/^purple_theme_manager_remove_theme(PurpleTheme *theme)$/;"	f	signature:(PurpleTheme *theme)
purple_theme_manager_remove_theme	theme-manager.h	/^void purple_theme_manager_remove_theme(PurpleTheme *theme);$/;"	p	signature:(PurpleTheme *theme)
purple_theme_manager_uninit	theme-manager.c	/^purple_theme_manager_uninit(void)$/;"	f	signature:(void)
purple_theme_manager_uninit	theme-manager.h	/^void purple_theme_manager_uninit(void);$/;"	p	signature:(void)
purple_theme_manager_unregister_type	theme-manager.c	/^purple_theme_manager_unregister_type(PurpleThemeLoader *loader)$/;"	f	signature:(PurpleThemeLoader *loader)
purple_theme_manager_unregister_type	theme-manager.h	/^void purple_theme_manager_unregister_type(PurpleThemeLoader *loader);$/;"	p	signature:(PurpleThemeLoader *loader)
purple_theme_set_author	theme.c	/^purple_theme_set_author(PurpleTheme *theme, const gchar *author)$/;"	f	signature:(PurpleTheme *theme, const gchar *author)
purple_theme_set_author	theme.h	/^void purple_theme_set_author(PurpleTheme *theme, const gchar *author);$/;"	p	signature:(PurpleTheme *theme, const gchar *author)
purple_theme_set_description	theme.c	/^purple_theme_set_description(PurpleTheme *theme, const gchar *description)$/;"	f	signature:(PurpleTheme *theme, const gchar *description)
purple_theme_set_description	theme.h	/^void purple_theme_set_description(PurpleTheme *theme, const gchar *description);$/;"	p	signature:(PurpleTheme *theme, const gchar *description)
purple_theme_set_dir	theme.c	/^purple_theme_set_dir(PurpleTheme *theme, const gchar *dir)$/;"	f	signature:(PurpleTheme *theme, const gchar *dir)
purple_theme_set_dir	theme.h	/^void purple_theme_set_dir(PurpleTheme *theme, const gchar *dir);$/;"	p	signature:(PurpleTheme *theme, const gchar *dir)
purple_theme_set_image	theme.c	/^purple_theme_set_image(PurpleTheme *theme, const gchar *img)$/;"	f	signature:(PurpleTheme *theme, const gchar *img)
purple_theme_set_image	theme.h	/^void purple_theme_set_image(PurpleTheme *theme, const gchar *img);$/;"	p	signature:(PurpleTheme *theme, const gchar *img)
purple_theme_set_name	theme.c	/^purple_theme_set_name(PurpleTheme *theme, const gchar *name)$/;"	f	signature:(PurpleTheme *theme, const gchar *name)
purple_theme_set_name	theme.h	/^void purple_theme_set_name(PurpleTheme *theme, const gchar *name);$/;"	p	signature:(PurpleTheme *theme, const gchar *name)
purple_theme_set_property	theme.c	/^purple_theme_set_property(GObject *obj, guint param_id, const GValue *value,$/;"	f	file:	signature:(GObject *obj, guint param_id, const GValue *value, GParamSpec *psec)
purple_theme_set_type_string	theme.c	/^purple_theme_set_type_string(PurpleTheme *theme, const gchar *type)$/;"	f	signature:(PurpleTheme *theme, const gchar *type)
purple_theme_set_type_string	theme.c	/^void purple_theme_set_type_string(PurpleTheme *theme, const gchar *type);$/;"	p	file:	signature:(PurpleTheme *theme, const gchar *type)
purple_time_build	util.c	/^purple_time_build(int year, int month, int day, int hour, int min, int sec)$/;"	f	signature:(int year, int month, int day, int hour, int min, int sec)
purple_time_build	util.h	/^time_t purple_time_build(int year, int month, int day, int hour,$/;"	p	signature:(int year, int month, int day, int hour, int min, int sec)
purple_time_format	util.c	/^purple_time_format(const struct tm *tm)$/;"	f	signature:(const struct tm *tm)
purple_time_format	util.h	/^const char *purple_time_format(const struct tm *tm);$/;"	p	signature:(const struct tm *tm)
purple_timeout_add	eventloop.c	/^purple_timeout_add(guint interval, GSourceFunc function, gpointer data)$/;"	f	signature:(guint interval, GSourceFunc function, gpointer data)
purple_timeout_add	eventloop.h	/^guint purple_timeout_add(guint interval, GSourceFunc function, gpointer data);$/;"	p	signature:(guint interval, GSourceFunc function, gpointer data)
purple_timeout_add_seconds	eventloop.c	/^purple_timeout_add_seconds(guint interval, GSourceFunc function, gpointer data)$/;"	f	signature:(guint interval, GSourceFunc function, gpointer data)
purple_timeout_add_seconds	eventloop.h	/^guint purple_timeout_add_seconds(guint interval, GSourceFunc function, gpointer data);$/;"	p	signature:(guint interval, GSourceFunc function, gpointer data)
purple_timeout_remove	eventloop.c	/^purple_timeout_remove(guint tag)$/;"	f	signature:(guint tag)
purple_timeout_remove	eventloop.h	/^gboolean purple_timeout_remove(guint handle);$/;"	p	signature:(guint handle)
purple_txt_cancel	dnssrv.c	/^purple_txt_cancel(PurpleSrvTxtQueryData *query_data)$/;"	f	signature:(PurpleSrvTxtQueryData *query_data)
purple_txt_cancel	dnssrv.h	/^void purple_txt_cancel(PurpleSrvTxtQueryData *query_data);$/;"	p	signature:(PurpleSrvTxtQueryData *query_data)
purple_txt_query_resolved	dnssrv.c	/^purple_txt_query_resolved(PurpleSrvTxtQueryData *query_data, GList *entries)$/;"	f	file:	signature:(PurpleSrvTxtQueryData *query_data, GList *entries)
purple_txt_resolve	dnssrv.c	/^PurpleSrvTxtQueryData *purple_txt_resolve(const char *owner,$/;"	f	signature:(const char *owner, const char *domain, PurpleTxtCallback cb, gpointer extradata)
purple_txt_resolve	dnssrv.h	/^PurpleSrvTxtQueryData *purple_txt_resolve(const char *owner, const char *domain, PurpleTxtCallback cb, gpointer extradata);$/;"	p	signature:(const char *owner, const char *domain, PurpleTxtCallback cb, gpointer extradata)
purple_txt_resolve_account	dnssrv.c	/^PurpleSrvTxtQueryData *purple_txt_resolve_account(PurpleAccount *account,$/;"	f	signature:(PurpleAccount *account, const char *owner, const char *domain, PurpleTxtCallback cb, gpointer extradata)
purple_txt_resolve_account	dnssrv.h	/^PurpleSrvTxtQueryData *purple_txt_resolve_account(PurpleAccount *account, const char *owner, const char *domain, PurpleTxtCallback cb, gpointer extradata);$/;"	p	signature:(PurpleAccount *account, const char *owner, const char *domain, PurpleTxtCallback cb, gpointer extradata)
purple_txt_response_destroy	dnssrv.c	/^void purple_txt_response_destroy(PurpleTxtResponse *resp)$/;"	f	signature:(PurpleTxtResponse *resp)
purple_txt_response_destroy	dnssrv.h	/^void purple_txt_response_destroy(PurpleTxtResponse *response);$/;"	p	signature:(PurpleTxtResponse *response)
purple_txt_response_get_content	dnssrv.c	/^purple_txt_response_get_content(PurpleTxtResponse *resp)$/;"	f	signature:(PurpleTxtResponse *resp)
purple_txt_response_get_content	dnssrv.h	/^const gchar *purple_txt_response_get_content(PurpleTxtResponse *response);$/;"	p	signature:(PurpleTxtResponse *response)
purple_unescape_filename	util.c	/^const char* purple_unescape_filename(const char *escaped) {$/;"	f	signature:(const char *escaped)
purple_unescape_filename	util.h	/^const char *purple_unescape_filename(const char *str);$/;"	p	signature:(const char *str)
purple_unescape_html	util.c	/^char *purple_unescape_html(const char *html)$/;"	f	signature:(const char *html)
purple_unescape_html	util.h	/^char *purple_unescape_html(const char *html);$/;"	p	signature:(const char *html)
purple_unescape_text	util.c	/^char *purple_unescape_text(const char *in)$/;"	f	signature:(const char *in)
purple_unescape_text	util.h	/^char *purple_unescape_text(const char *text);$/;"	p	signature:(const char *text)
purple_upnp_cancel_port_mapping	upnp.c	/^void purple_upnp_cancel_port_mapping(UPnPMappingAddRemove *ar)$/;"	f	signature:(UPnPMappingAddRemove *ar)
purple_upnp_cancel_port_mapping	upnp.h	/^void purple_upnp_cancel_port_mapping(UPnPMappingAddRemove *mapping_data);$/;"	p	signature:(UPnPMappingAddRemove *mapping_data)
purple_upnp_compare_device	upnp.c	/^purple_upnp_compare_device(const xmlnode* device, const gchar* deviceType)$/;"	f	file:	signature:(const xmlnode* device, const gchar* deviceType)
purple_upnp_compare_service	upnp.c	/^purple_upnp_compare_service(const xmlnode* service, const gchar* serviceType)$/;"	f	file:	signature:(const xmlnode* service, const gchar* serviceType)
purple_upnp_discover	upnp.c	/^purple_upnp_discover(PurpleUPnPCallback cb, gpointer cb_data)$/;"	f	signature:(PurpleUPnPCallback cb, gpointer cb_data)
purple_upnp_discover	upnp.h	/^void purple_upnp_discover(PurpleUPnPCallback cb, gpointer cb_data);$/;"	p	signature:(PurpleUPnPCallback cb, gpointer cb_data)
purple_upnp_discover_send_broadcast	upnp.c	/^purple_upnp_discover_send_broadcast(UPnPDiscoveryData *dd)$/;"	f	file:	signature:(UPnPDiscoveryData *dd)
purple_upnp_discover_send_broadcast	upnp.c	/^static void purple_upnp_discover_send_broadcast(UPnPDiscoveryData *dd);$/;"	p	file:	signature:(UPnPDiscoveryData *dd)
purple_upnp_discover_timeout	upnp.c	/^purple_upnp_discover_timeout(gpointer data)$/;"	f	file:	signature:(gpointer data)
purple_upnp_discover_udp_read	upnp.c	/^purple_upnp_discover_udp_read(gpointer data, gint sock, PurpleInputCondition cond)$/;"	f	file:	signature:(gpointer data, gint sock, PurpleInputCondition cond)
purple_upnp_generate_action_message_and_send	upnp.c	/^purple_upnp_generate_action_message_and_send(const gchar* actionName,$/;"	f	file:	signature:(const gchar* actionName, const gchar* actionParams, PurpleUtilFetchUrlCallback cb, gpointer cb_data)
purple_upnp_get_handle	upnp.c	/^purple_upnp_get_handle(void)$/;"	f	file:	signature:(void)
purple_upnp_get_internal_ip	upnp.c	/^purple_upnp_get_internal_ip(void)$/;"	f	file:	signature:(void)
purple_upnp_get_public_ip	upnp.c	/^purple_upnp_get_public_ip()$/;"	f
purple_upnp_get_public_ip	upnp.h	/^const gchar* purple_upnp_get_public_ip(void);$/;"	p	signature:(void)
purple_upnp_init	upnp.c	/^purple_upnp_init()$/;"	f
purple_upnp_init	upnp.h	/^void purple_upnp_init(void);$/;"	p	signature:(void)
purple_upnp_network_config_changed_cb	upnp.c	/^purple_upnp_network_config_changed_cb(void *data)$/;"	f	file:	signature:(void *data)
purple_upnp_parse_description	upnp.c	/^purple_upnp_parse_description(const gchar* descriptionURL, UPnPDiscoveryData *dd)$/;"	f	file:	signature:(const gchar* descriptionURL, UPnPDiscoveryData *dd)
purple_upnp_parse_description_response	upnp.c	/^purple_upnp_parse_description_response(const gchar* httpResponse, gsize len,$/;"	f	file:	signature:(const gchar* httpResponse, gsize len, const gchar* httpURL, const gchar* serviceType)
purple_upnp_parse_discover_response	upnp.c	/^purple_upnp_parse_discover_response(const gchar* buf, unsigned int buf_len,$/;"	f	file:	signature:(const gchar* buf, unsigned int buf_len, UPnPDiscoveryData *dd)
purple_upnp_remove_port_mapping	upnp.c	/^purple_upnp_remove_port_mapping(unsigned short portmap, const char* protocol,$/;"	f	signature:(unsigned short portmap, const char* protocol, PurpleUPnPCallback cb, gpointer cb_data)
purple_upnp_remove_port_mapping	upnp.h	/^UPnPMappingAddRemove *purple_upnp_remove_port_mapping(unsigned short portmap,$/;"	p	signature:(unsigned short portmap, const gchar* protocol, PurpleUPnPCallback cb, gpointer cb_data)
purple_upnp_set_port_mapping	upnp.c	/^purple_upnp_set_port_mapping(unsigned short portmap, const gchar* protocol,$/;"	f	signature:(unsigned short portmap, const gchar* protocol, PurpleUPnPCallback cb, gpointer cb_data)
purple_upnp_set_port_mapping	upnp.h	/^UPnPMappingAddRemove *purple_upnp_set_port_mapping(unsigned short portmap, const gchar* protocol,$/;"	p	signature:(unsigned short portmap, const gchar* protocol, PurpleUPnPCallback cb, gpointer cb_data)
purple_uri_list_extract_filenames	util.c	/^purple_uri_list_extract_filenames(const gchar *uri_list)$/;"	f	signature:(const gchar *uri_list)
purple_uri_list_extract_filenames	util.h	/^GList *purple_uri_list_extract_filenames(const gchar *uri_list);$/;"	p	signature:(const gchar *uri_list)
purple_uri_list_extract_uris	util.c	/^purple_uri_list_extract_uris(const gchar *uri_list)$/;"	f	signature:(const gchar *uri_list)
purple_uri_list_extract_uris	util.h	/^GList *purple_uri_list_extract_uris(const gchar *uri_list);$/;"	p	signature:(const gchar *uri_list)
purple_url_decode	util.c	/^purple_url_decode(const char *str)$/;"	f	signature:(const char *str)
purple_url_decode	util.h	/^const char *purple_url_decode(const char *str);$/;"	p	signature:(const char *str)
purple_url_encode	util.c	/^purple_url_encode(const char *str)$/;"	f	signature:(const char *str)
purple_url_encode	util.h	/^const char *purple_url_encode(const char *str);$/;"	p	signature:(const char *str)
purple_url_parse	util.c	/^purple_url_parse(const char *url, char **ret_host, int *ret_port,$/;"	f	signature:(const char *url, char **ret_host, int *ret_port, char **ret_path, char **ret_user, char **ret_passwd)
purple_url_parse	util.h	/^gboolean purple_url_parse(const char *url, char **ret_host, int *ret_port,$/;"	p	signature:(const char *url, char **ret_host, int *ret_port, char **ret_path, char **ret_user, char **ret_passwd)
purple_user_dir	util.c	/^purple_user_dir(void)$/;"	f	signature:(void)
purple_user_dir	util.h	/^const char *purple_user_dir(void);$/;"	p	signature:(void)
purple_utf8_has_word	util.c	/^purple_utf8_has_word(const char *haystack, const char *needle)$/;"	f	signature:(const char *haystack, const char *needle)
purple_utf8_has_word	util.h	/^gboolean purple_utf8_has_word(const char *haystack, const char *needle);$/;"	p	signature:(const char *haystack, const char *needle)
purple_utf8_ncr_decode	util.c	/^purple_utf8_ncr_decode(const char *str)$/;"	f	signature:(const char *str)
purple_utf8_ncr_decode	util.h	/^char *purple_utf8_ncr_decode(const char *in);$/;"	p	signature:(const char *in)
purple_utf8_ncr_encode	util.c	/^purple_utf8_ncr_encode(const char *str)$/;"	f	signature:(const char *str)
purple_utf8_ncr_encode	util.h	/^char *purple_utf8_ncr_encode(const char *in);$/;"	p	signature:(const char *in)
purple_utf8_salvage	util.c	/^purple_utf8_salvage(const char *str)$/;"	f	signature:(const char *str)
purple_utf8_salvage	util.h	/^gchar *purple_utf8_salvage(const char *str);$/;"	p	signature:(const char *str)
purple_utf8_strcasecmp	util.c	/^purple_utf8_strcasecmp(const char *a, const char *b)$/;"	f	signature:(const char *a, const char *b)
purple_utf8_strcasecmp	util.h	/^int purple_utf8_strcasecmp(const char *a, const char *b);$/;"	p	signature:(const char *a, const char *b)
purple_utf8_strftime	util.c	/^purple_utf8_strftime(const char *format, const struct tm *tm)$/;"	f	signature:(const char *format, const struct tm *tm)
purple_utf8_strftime	util.h	/^const char *purple_utf8_strftime(const char *format, const struct tm *tm);$/;"	p	signature:(const char *format, const struct tm *tm)
purple_utf8_strip_unprintables	util.c	/^purple_utf8_strip_unprintables(const gchar *str)$/;"	f	signature:(const gchar *str)
purple_utf8_strip_unprintables	util.h	/^gchar *purple_utf8_strip_unprintables(const gchar *str);$/;"	p	signature:(const gchar *str)
purple_utf8_try_convert	util.c	/^purple_utf8_try_convert(const char *str)$/;"	f	signature:(const char *str)
purple_utf8_try_convert	util.h	/^gchar *purple_utf8_try_convert(const char *str);$/;"	p	signature:(const char *str)
purple_util_chrreplace	util.c	/^purple_util_chrreplace(char *string, char delimiter,$/;"	f	signature:(char *string, char delimiter, char replacement)
purple_util_chrreplace	util.h	/^void purple_util_chrreplace(char *string, char delimiter,$/;"	p	signature:(char *string, char delimiter, char replacement)
purple_util_fetch_url	util.h	1123;"	d
purple_util_fetch_url_cancel	util.c	/^purple_util_fetch_url_cancel(PurpleUtilFetchUrlData *gfud)$/;"	f	signature:(PurpleUtilFetchUrlData *gfud)
purple_util_fetch_url_cancel	util.h	/^void purple_util_fetch_url_cancel(PurpleUtilFetchUrlData *url_data);$/;"	p	signature:(PurpleUtilFetchUrlData *url_data)
purple_util_fetch_url_error	util.c	/^purple_util_fetch_url_error(PurpleUtilFetchUrlData *gfud, const char *format, ...)$/;"	f	file:	signature:(PurpleUtilFetchUrlData *gfud, const char *format, ...)
purple_util_fetch_url_len	util.h	1140;"	d
purple_util_fetch_url_request	util.c	/^purple_util_fetch_url_request(const char *url, gboolean full,$/;"	f	signature:(const char *url, gboolean full, const char *user_agent, gboolean http11, const char *request, gboolean include_headers, PurpleUtilFetchUrlCallback callback, void *user_data)
purple_util_fetch_url_request	util.h	/^PurpleUtilFetchUrlData *purple_util_fetch_url_request(const gchar *url,$/;"	p	signature:(const gchar *url, gboolean full, const gchar *user_agent, gboolean http11, const gchar *request, gboolean include_headers, PurpleUtilFetchUrlCallback callback, gpointer data)
purple_util_fetch_url_request_len	util.c	/^purple_util_fetch_url_request_len(const char *url, gboolean full,$/;"	f	signature:(const char *url, gboolean full, const char *user_agent, gboolean http11, const char *request, gboolean include_headers, gssize max_len, PurpleUtilFetchUrlCallback callback, void *user_data)
purple_util_fetch_url_request_len	util.h	/^PurpleUtilFetchUrlData *purple_util_fetch_url_request_len(const gchar *url,$/;"	p	signature:(const gchar *url, gboolean full, const gchar *user_agent, gboolean http11, const gchar *request, gboolean include_headers, gssize max_len, PurpleUtilFetchUrlCallback callback, gpointer data)
purple_util_fetch_url_request_len_with_account	util.c	/^purple_util_fetch_url_request_len_with_account(PurpleAccount *account,$/;"	f	signature:(PurpleAccount *account, const char *url, gboolean full, const char *user_agent, gboolean http11, const char *request, gboolean include_headers, gssize max_len, PurpleUtilFetchUrlCallback callback, void *user_data)
purple_util_fetch_url_request_len_with_account	util.h	/^PurpleUtilFetchUrlData *purple_util_fetch_url_request_len_with_account($/;"	p	signature:( PurpleAccount *account, const gchar *url, gboolean full, const gchar *user_agent, gboolean http11, const gchar *request, gboolean include_headers, gssize max_len, PurpleUtilFetchUrlCallback callback, gpointer data)
purple_util_format_song_info	util.c	/^char * purple_util_format_song_info(const char *title, const char *artist, const char *album, gpointer unused)$/;"	f	signature:(const char *title, const char *artist, const char *album, gpointer unused)
purple_util_format_song_info	util.h	/^char * purple_util_format_song_info(const char *title, const char *artist,$/;"	p	signature:(const char *title, const char *artist, const char *album, gpointer unused)
purple_util_get_image_checksum	util.c	/^purple_util_get_image_checksum(gconstpointer image_data, size_t image_len)$/;"	f	signature:(gconstpointer image_data, size_t image_len)
purple_util_get_image_checksum	util.h	/^char *purple_util_get_image_checksum(gconstpointer image_data, size_t image_len);$/;"	p	signature:(gconstpointer image_data, size_t image_len)
purple_util_get_image_extension	util.c	/^purple_util_get_image_extension(gconstpointer data, size_t len)$/;"	f	signature:(gconstpointer data, size_t len)
purple_util_get_image_extension	util.h	/^purple_util_get_image_extension(gconstpointer data, size_t len);$/;"	p	signature:(gconstpointer data, size_t len)
purple_util_get_image_filename	util.c	/^purple_util_get_image_filename(gconstpointer image_data, size_t image_len)$/;"	f	signature:(gconstpointer image_data, size_t image_len)
purple_util_get_image_filename	util.h	/^char *purple_util_get_image_filename(gconstpointer image_data, size_t image_len);$/;"	p	signature:(gconstpointer image_data, size_t image_len)
purple_util_init	util.c	/^purple_util_init(void)$/;"	f	signature:(void)
purple_util_init	util.h	/^void purple_util_init(void);$/;"	p	signature:(void)
purple_util_read_xml_from_file	util.c	/^purple_util_read_xml_from_file(const char *filename, const char *description)$/;"	f	signature:(const char *filename, const char *description)
purple_util_read_xml_from_file	util.h	/^xmlnode *purple_util_read_xml_from_file(const char *filename,$/;"	p	signature:(const char *filename, const char *description)
purple_util_set_current_song	util.c	/^void purple_util_set_current_song(const char *title, const char *artist, const char *album)$/;"	f	signature:(const char *title, const char *artist, const char *album)
purple_util_set_current_song	util.h	/^void purple_util_set_current_song(const char *title, const char *artist,$/;"	p	signature:(const char *title, const char *artist, const char *album)
purple_util_set_user_dir	util.c	/^void purple_util_set_user_dir(const char *dir)$/;"	f	signature:(const char *dir)
purple_util_set_user_dir	util.h	/^void purple_util_set_user_dir(const char *dir);$/;"	p	signature:(const char *dir)
purple_util_uninit	util.c	/^purple_util_uninit(void)$/;"	f	signature:(void)
purple_util_uninit	util.h	/^void purple_util_uninit(void);$/;"	p	signature:(void)
purple_util_write_data_to_file	util.c	/^purple_util_write_data_to_file(const char *filename, const char *data, gssize size)$/;"	f	signature:(const char *filename, const char *data, gssize size)
purple_util_write_data_to_file	util.h	/^gboolean purple_util_write_data_to_file(const char *filename, const char *data,$/;"	p	signature:(const char *filename, const char *data, gssize size)
purple_util_write_data_to_file_absolute	util.c	/^purple_util_write_data_to_file_absolute(const char *filename_full, const char *data, gssize size)$/;"	f	signature:(const char *filename_full, const char *data, gssize size)
purple_util_write_data_to_file_absolute	util.h	/^purple_util_write_data_to_file_absolute(const char *filename_full, const char *data, gssize size);$/;"	p	signature:(const char *filename_full, const char *data, gssize size)
purple_uuid_random	util.c	/^purple_uuid_random(void)$/;"	f	signature:(void)
purple_uuid_random	util.h	/^gchar *purple_uuid_random(void);$/;"	p	signature:(void)
purple_value_destroy	value.c	/^purple_value_destroy(PurpleValue *value)$/;"	f	signature:(PurpleValue *value)
purple_value_destroy	value.h	/^void purple_value_destroy(PurpleValue *value);$/;"	p	signature:(PurpleValue *value)
purple_value_dup	value.c	/^purple_value_dup(const PurpleValue *value)$/;"	f	signature:(const PurpleValue *value)
purple_value_dup	value.h	/^PurpleValue *purple_value_dup(const PurpleValue *value);$/;"	p	signature:(const PurpleValue *value)
purple_value_get_boolean	value.c	/^purple_value_get_boolean(const PurpleValue *value)$/;"	f	signature:(const PurpleValue *value)
purple_value_get_boolean	value.h	/^gboolean purple_value_get_boolean(const PurpleValue *value);$/;"	p	signature:(const PurpleValue *value)
purple_value_get_boxed	value.c	/^purple_value_get_boxed(const PurpleValue *value)$/;"	f	signature:(const PurpleValue *value)
purple_value_get_boxed	value.h	/^void *purple_value_get_boxed(const PurpleValue *value);$/;"	p	signature:(const PurpleValue *value)
purple_value_get_char	value.c	/^purple_value_get_char(const PurpleValue *value)$/;"	f	signature:(const PurpleValue *value)
purple_value_get_char	value.h	/^char purple_value_get_char(const PurpleValue *value);$/;"	p	signature:(const PurpleValue *value)
purple_value_get_enum	value.c	/^purple_value_get_enum(const PurpleValue *value)$/;"	f	signature:(const PurpleValue *value)
purple_value_get_enum	value.h	/^int purple_value_get_enum(const PurpleValue *value);$/;"	p	signature:(const PurpleValue *value)
purple_value_get_int	value.c	/^purple_value_get_int(const PurpleValue *value)$/;"	f	signature:(const PurpleValue *value)
purple_value_get_int	value.h	/^int purple_value_get_int(const PurpleValue *value);$/;"	p	signature:(const PurpleValue *value)
purple_value_get_int64	value.c	/^purple_value_get_int64(const PurpleValue *value)$/;"	f	signature:(const PurpleValue *value)
purple_value_get_int64	value.h	/^gint64 purple_value_get_int64(const PurpleValue *value);$/;"	p	signature:(const PurpleValue *value)
purple_value_get_long	value.c	/^purple_value_get_long(const PurpleValue *value)$/;"	f	signature:(const PurpleValue *value)
purple_value_get_long	value.h	/^long purple_value_get_long(const PurpleValue *value);$/;"	p	signature:(const PurpleValue *value)
purple_value_get_object	value.c	/^purple_value_get_object(const PurpleValue *value)$/;"	f	signature:(const PurpleValue *value)
purple_value_get_object	value.h	/^void *purple_value_get_object(const PurpleValue *value);$/;"	p	signature:(const PurpleValue *value)
purple_value_get_pointer	value.c	/^purple_value_get_pointer(const PurpleValue *value)$/;"	f	signature:(const PurpleValue *value)
purple_value_get_pointer	value.h	/^void *purple_value_get_pointer(const PurpleValue *value);$/;"	p	signature:(const PurpleValue *value)
purple_value_get_short	value.c	/^purple_value_get_short(const PurpleValue *value)$/;"	f	signature:(const PurpleValue *value)
purple_value_get_short	value.h	/^short purple_value_get_short(const PurpleValue *value);$/;"	p	signature:(const PurpleValue *value)
purple_value_get_specific_type	value.c	/^purple_value_get_specific_type(const PurpleValue *value)$/;"	f	signature:(const PurpleValue *value)
purple_value_get_specific_type	value.h	/^const char *purple_value_get_specific_type(const PurpleValue *value);$/;"	p	signature:(const PurpleValue *value)
purple_value_get_string	value.c	/^purple_value_get_string(const PurpleValue *value)$/;"	f	signature:(const PurpleValue *value)
purple_value_get_string	value.h	/^const char *purple_value_get_string(const PurpleValue *value);$/;"	p	signature:(const PurpleValue *value)
purple_value_get_subtype	value.c	/^purple_value_get_subtype(const PurpleValue *value)$/;"	f	signature:(const PurpleValue *value)
purple_value_get_subtype	value.h	/^unsigned int purple_value_get_subtype(const PurpleValue *value);$/;"	p	signature:(const PurpleValue *value)
purple_value_get_type	value.c	/^purple_value_get_type(const PurpleValue *value)$/;"	f	signature:(const PurpleValue *value)
purple_value_get_type	value.h	/^PurpleType purple_value_get_type(const PurpleValue *value);$/;"	p	signature:(const PurpleValue *value)
purple_value_get_uchar	value.c	/^purple_value_get_uchar(const PurpleValue *value)$/;"	f	signature:(const PurpleValue *value)
purple_value_get_uchar	value.h	/^unsigned char purple_value_get_uchar(const PurpleValue *value);$/;"	p	signature:(const PurpleValue *value)
purple_value_get_uint	value.c	/^purple_value_get_uint(const PurpleValue *value)$/;"	f	signature:(const PurpleValue *value)
purple_value_get_uint	value.h	/^unsigned int purple_value_get_uint(const PurpleValue *value);$/;"	p	signature:(const PurpleValue *value)
purple_value_get_uint64	value.c	/^purple_value_get_uint64(const PurpleValue *value)$/;"	f	signature:(const PurpleValue *value)
purple_value_get_uint64	value.h	/^guint64 purple_value_get_uint64(const PurpleValue *value);$/;"	p	signature:(const PurpleValue *value)
purple_value_get_ulong	value.c	/^purple_value_get_ulong(const PurpleValue *value)$/;"	f	signature:(const PurpleValue *value)
purple_value_get_ulong	value.h	/^unsigned long purple_value_get_ulong(const PurpleValue *value);$/;"	p	signature:(const PurpleValue *value)
purple_value_get_ushort	value.c	/^purple_value_get_ushort(const PurpleValue *value)$/;"	f	signature:(const PurpleValue *value)
purple_value_get_ushort	value.h	/^unsigned short purple_value_get_ushort(const PurpleValue *value);$/;"	p	signature:(const PurpleValue *value)
purple_value_is_outgoing	value.c	/^purple_value_is_outgoing(const PurpleValue *value)$/;"	f	signature:(const PurpleValue *value)
purple_value_is_outgoing	value.h	/^gboolean purple_value_is_outgoing(const PurpleValue *value);$/;"	p	signature:(const PurpleValue *value)
purple_value_new	value.c	/^purple_value_new(PurpleType type, ...)$/;"	f	signature:(PurpleType type, ...)
purple_value_new	value.h	/^PurpleValue *purple_value_new(PurpleType type, ...);$/;"	p	signature:(PurpleType type, ...)
purple_value_new_outgoing	value.c	/^purple_value_new_outgoing(PurpleType type, ...)$/;"	f	signature:(PurpleType type, ...)
purple_value_new_outgoing	value.h	/^PurpleValue *purple_value_new_outgoing(PurpleType type, ...);$/;"	p	signature:(PurpleType type, ...)
purple_value_set_boolean	value.c	/^purple_value_set_boolean(PurpleValue *value, gboolean data)$/;"	f	signature:(PurpleValue *value, gboolean data)
purple_value_set_boolean	value.h	/^void purple_value_set_boolean(PurpleValue *value, gboolean data);$/;"	p	signature:(PurpleValue *value, gboolean data)
purple_value_set_boxed	value.c	/^purple_value_set_boxed(PurpleValue *value, void *data)$/;"	f	signature:(PurpleValue *value, void *data)
purple_value_set_boxed	value.h	/^void purple_value_set_boxed(PurpleValue *value, void *data);$/;"	p	signature:(PurpleValue *value, void *data)
purple_value_set_char	value.c	/^purple_value_set_char(PurpleValue *value, char data)$/;"	f	signature:(PurpleValue *value, char data)
purple_value_set_char	value.h	/^void purple_value_set_char(PurpleValue *value, char data);$/;"	p	signature:(PurpleValue *value, char data)
purple_value_set_enum	value.c	/^purple_value_set_enum(PurpleValue *value, int data)$/;"	f	signature:(PurpleValue *value, int data)
purple_value_set_enum	value.h	/^void purple_value_set_enum(PurpleValue *value, int data);$/;"	p	signature:(PurpleValue *value, int data)
purple_value_set_int	value.c	/^purple_value_set_int(PurpleValue *value, int data)$/;"	f	signature:(PurpleValue *value, int data)
purple_value_set_int	value.h	/^void purple_value_set_int(PurpleValue *value, int data);$/;"	p	signature:(PurpleValue *value, int data)
purple_value_set_int64	value.c	/^purple_value_set_int64(PurpleValue *value, gint64 data)$/;"	f	signature:(PurpleValue *value, gint64 data)
purple_value_set_int64	value.h	/^void purple_value_set_int64(PurpleValue *value, gint64 data);$/;"	p	signature:(PurpleValue *value, gint64 data)
purple_value_set_long	value.c	/^purple_value_set_long(PurpleValue *value, long data)$/;"	f	signature:(PurpleValue *value, long data)
purple_value_set_long	value.h	/^void purple_value_set_long(PurpleValue *value, long data);$/;"	p	signature:(PurpleValue *value, long data)
purple_value_set_object	value.c	/^purple_value_set_object(PurpleValue *value, void *data)$/;"	f	signature:(PurpleValue *value, void *data)
purple_value_set_object	value.h	/^void purple_value_set_object(PurpleValue *value, void *data);$/;"	p	signature:(PurpleValue *value, void *data)
purple_value_set_pointer	value.c	/^purple_value_set_pointer(PurpleValue *value, void *data)$/;"	f	signature:(PurpleValue *value, void *data)
purple_value_set_pointer	value.h	/^void purple_value_set_pointer(PurpleValue *value, void *data);$/;"	p	signature:(PurpleValue *value, void *data)
purple_value_set_short	value.c	/^purple_value_set_short(PurpleValue *value, short data)$/;"	f	signature:(PurpleValue *value, short data)
purple_value_set_short	value.h	/^void purple_value_set_short(PurpleValue *value, short data);$/;"	p	signature:(PurpleValue *value, short data)
purple_value_set_string	value.c	/^purple_value_set_string(PurpleValue *value, const char *data)$/;"	f	signature:(PurpleValue *value, const char *data)
purple_value_set_string	value.h	/^void purple_value_set_string(PurpleValue *value, const char *data);$/;"	p	signature:(PurpleValue *value, const char *data)
purple_value_set_uchar	value.c	/^purple_value_set_uchar(PurpleValue *value, unsigned char data)$/;"	f	signature:(PurpleValue *value, unsigned char data)
purple_value_set_uchar	value.h	/^void purple_value_set_uchar(PurpleValue *value, unsigned char data);$/;"	p	signature:(PurpleValue *value, unsigned char data)
purple_value_set_uint	value.c	/^purple_value_set_uint(PurpleValue *value, unsigned int data)$/;"	f	signature:(PurpleValue *value, unsigned int data)
purple_value_set_uint	value.h	/^void purple_value_set_uint(PurpleValue *value, unsigned int data);$/;"	p	signature:(PurpleValue *value, unsigned int data)
purple_value_set_uint64	value.c	/^purple_value_set_uint64(PurpleValue *value, guint64 data)$/;"	f	signature:(PurpleValue *value, guint64 data)
purple_value_set_uint64	value.h	/^void purple_value_set_uint64(PurpleValue *value, guint64 data);$/;"	p	signature:(PurpleValue *value, guint64 data)
purple_value_set_ulong	value.c	/^purple_value_set_ulong(PurpleValue *value, unsigned long data)$/;"	f	signature:(PurpleValue *value, unsigned long data)
purple_value_set_ulong	value.h	/^void purple_value_set_ulong(PurpleValue *value, unsigned long data);$/;"	p	signature:(PurpleValue *value, unsigned long data)
purple_value_set_ushort	value.c	/^purple_value_set_ushort(PurpleValue *value, unsigned short data)$/;"	f	signature:(PurpleValue *value, unsigned short data)
purple_value_set_ushort	value.h	/^void purple_value_set_ushort(PurpleValue *value, unsigned short data);$/;"	p	signature:(PurpleValue *value, unsigned short data)
purple_version_check	version.c	/^const char *purple_version_check(guint required_major, guint required_minor, guint required_micro)$/;"	f	signature:(guint required_major, guint required_minor, guint required_micro)
purple_version_check	version.h	/^const char *purple_version_check(guint required_major, guint required_minor, guint required_micro);$/;"	p	signature:(guint required_major, guint required_minor, guint required_micro)
purple_whiteboard_clear	whiteboard.c	/^void purple_whiteboard_clear(PurpleWhiteboard *wb)$/;"	f	signature:(PurpleWhiteboard *wb)
purple_whiteboard_clear	whiteboard.h	/^void purple_whiteboard_clear(PurpleWhiteboard *wb);$/;"	p	signature:(PurpleWhiteboard *wb)
purple_whiteboard_create	whiteboard.c	/^PurpleWhiteboard *purple_whiteboard_create(PurpleAccount *account, const char *who, int state)$/;"	f	signature:(PurpleAccount *account, const char *who, int state)
purple_whiteboard_create	whiteboard.h	/^PurpleWhiteboard *purple_whiteboard_create(PurpleAccount *account, const char *who, int state);$/;"	p	signature:(PurpleAccount *account, const char *who, int state)
purple_whiteboard_destroy	whiteboard.c	/^void purple_whiteboard_destroy(PurpleWhiteboard *wb)$/;"	f	signature:(PurpleWhiteboard *wb)
purple_whiteboard_destroy	whiteboard.h	/^void purple_whiteboard_destroy(PurpleWhiteboard *wb);$/;"	p	signature:(PurpleWhiteboard *wb)
purple_whiteboard_draw_line	whiteboard.c	/^void purple_whiteboard_draw_line(PurpleWhiteboard *wb, int x1, int y1, int x2, int y2, int color, int size)$/;"	f	signature:(PurpleWhiteboard *wb, int x1, int y1, int x2, int y2, int color, int size)
purple_whiteboard_draw_line	whiteboard.h	/^void purple_whiteboard_draw_line(PurpleWhiteboard *wb, int x1, int y1, int x2, int y2, int color, int size);$/;"	p	signature:(PurpleWhiteboard *wb, int x1, int y1, int x2, int y2, int color, int size)
purple_whiteboard_draw_list_destroy	whiteboard.c	/^void purple_whiteboard_draw_list_destroy(GList *draw_list)$/;"	f	signature:(GList *draw_list)
purple_whiteboard_draw_list_destroy	whiteboard.h	/^void purple_whiteboard_draw_list_destroy(GList *draw_list);$/;"	p	signature:(GList *draw_list)
purple_whiteboard_draw_point	whiteboard.c	/^void purple_whiteboard_draw_point(PurpleWhiteboard *wb, int x, int y, int color, int size)$/;"	f	signature:(PurpleWhiteboard *wb, int x, int y, int color, int size)
purple_whiteboard_draw_point	whiteboard.h	/^void purple_whiteboard_draw_point(PurpleWhiteboard *wb, int x, int y, int color, int size);$/;"	p	signature:(PurpleWhiteboard *wb, int x, int y, int color, int size)
purple_whiteboard_get_brush	whiteboard.c	/^gboolean purple_whiteboard_get_brush(const PurpleWhiteboard *wb, int *size, int *color)$/;"	f	signature:(const PurpleWhiteboard *wb, int *size, int *color)
purple_whiteboard_get_brush	whiteboard.h	/^gboolean purple_whiteboard_get_brush(const PurpleWhiteboard *wb, int *size, int *color);$/;"	p	signature:(const PurpleWhiteboard *wb, int *size, int *color)
purple_whiteboard_get_dimensions	whiteboard.c	/^gboolean purple_whiteboard_get_dimensions(const PurpleWhiteboard *wb, int *width, int *height)$/;"	f	signature:(const PurpleWhiteboard *wb, int *width, int *height)
purple_whiteboard_get_dimensions	whiteboard.h	/^gboolean purple_whiteboard_get_dimensions(const PurpleWhiteboard *wb, int *width, int *height);$/;"	p	signature:(const PurpleWhiteboard *wb, int *width, int *height)
purple_whiteboard_get_session	whiteboard.c	/^PurpleWhiteboard *purple_whiteboard_get_session(const PurpleAccount *account, const char *who)$/;"	f	signature:(const PurpleAccount *account, const char *who)
purple_whiteboard_get_session	whiteboard.h	/^PurpleWhiteboard *purple_whiteboard_get_session(const PurpleAccount *account, const char *who);$/;"	p	signature:(const PurpleAccount *account, const char *who)
purple_whiteboard_send_brush	whiteboard.c	/^void purple_whiteboard_send_brush(PurpleWhiteboard *wb, int size, int color)$/;"	f	signature:(PurpleWhiteboard *wb, int size, int color)
purple_whiteboard_send_brush	whiteboard.h	/^void purple_whiteboard_send_brush(PurpleWhiteboard *wb, int size, int color);$/;"	p	signature:(PurpleWhiteboard *wb, int size, int color)
purple_whiteboard_send_clear	whiteboard.c	/^void purple_whiteboard_send_clear(PurpleWhiteboard *wb)$/;"	f	signature:(PurpleWhiteboard *wb)
purple_whiteboard_send_clear	whiteboard.h	/^void purple_whiteboard_send_clear(PurpleWhiteboard *wb);$/;"	p	signature:(PurpleWhiteboard *wb)
purple_whiteboard_send_draw_list	whiteboard.c	/^void purple_whiteboard_send_draw_list(PurpleWhiteboard *wb, GList *list)$/;"	f	signature:(PurpleWhiteboard *wb, GList *list)
purple_whiteboard_send_draw_list	whiteboard.h	/^void purple_whiteboard_send_draw_list(PurpleWhiteboard *wb, GList *list);$/;"	p	signature:(PurpleWhiteboard *wb, GList *list)
purple_whiteboard_set_brush	whiteboard.c	/^void purple_whiteboard_set_brush(PurpleWhiteboard *wb, int size, int color)$/;"	f	signature:(PurpleWhiteboard *wb, int size, int color)
purple_whiteboard_set_brush	whiteboard.h	/^void purple_whiteboard_set_brush(PurpleWhiteboard *wb, int size, int color);$/;"	p	signature:(PurpleWhiteboard *wb, int size, int color)
purple_whiteboard_set_dimensions	whiteboard.c	/^void purple_whiteboard_set_dimensions(PurpleWhiteboard *wb, int width, int height)$/;"	f	signature:(PurpleWhiteboard *wb, int width, int height)
purple_whiteboard_set_dimensions	whiteboard.h	/^void purple_whiteboard_set_dimensions(PurpleWhiteboard *wb, int width, int height);$/;"	p	signature:(PurpleWhiteboard *wb, int width, int height)
purple_whiteboard_set_prpl_ops	whiteboard.c	/^void purple_whiteboard_set_prpl_ops(PurpleWhiteboard *wb, PurpleWhiteboardPrplOps *ops)$/;"	f	signature:(PurpleWhiteboard *wb, PurpleWhiteboardPrplOps *ops)
purple_whiteboard_set_prpl_ops	whiteboard.h	/^void purple_whiteboard_set_prpl_ops(PurpleWhiteboard *wb, PurpleWhiteboardPrplOps *ops);$/;"	p	signature:(PurpleWhiteboard *wb, PurpleWhiteboardPrplOps *ops)
purple_whiteboard_set_ui_ops	whiteboard.c	/^void purple_whiteboard_set_ui_ops(PurpleWhiteboardUiOps *ops)$/;"	f	signature:(PurpleWhiteboardUiOps *ops)
purple_whiteboard_set_ui_ops	whiteboard.h	/^void purple_whiteboard_set_ui_ops(PurpleWhiteboardUiOps *ops);$/;"	p	signature:(PurpleWhiteboardUiOps *ops)
purple_whiteboard_start	whiteboard.c	/^void purple_whiteboard_start(PurpleWhiteboard *wb)$/;"	f	signature:(PurpleWhiteboard *wb)
purple_whiteboard_start	whiteboard.h	/^void purple_whiteboard_start(PurpleWhiteboard *wb);$/;"	p	signature:(PurpleWhiteboard *wb)
purple_win32_proxy_get_info	proxy.c	/^purple_win32_proxy_get_info(void)$/;"	f	file:	signature:(void)
purple_xfer_add	ft.c	/^purple_xfer_add(PurpleXfer *xfer)$/;"	f	signature:(PurpleXfer *xfer)
purple_xfer_add	ft.h	/^void purple_xfer_add(PurpleXfer *xfer);$/;"	p	signature:(PurpleXfer *xfer)
purple_xfer_ask_accept	ft.c	/^purple_xfer_ask_accept(PurpleXfer *xfer)$/;"	f	file:	signature:(PurpleXfer *xfer)
purple_xfer_ask_recv	ft.c	/^purple_xfer_ask_recv(PurpleXfer *xfer)$/;"	f	file:	signature:(PurpleXfer *xfer)
purple_xfer_cancel_local	ft.c	/^purple_xfer_cancel_local(PurpleXfer *xfer)$/;"	f	signature:(PurpleXfer *xfer)
purple_xfer_cancel_local	ft.h	/^void purple_xfer_cancel_local(PurpleXfer *xfer);$/;"	p	signature:(PurpleXfer *xfer)
purple_xfer_cancel_remote	ft.c	/^purple_xfer_cancel_remote(PurpleXfer *xfer)$/;"	f	signature:(PurpleXfer *xfer)
purple_xfer_cancel_remote	ft.h	/^void purple_xfer_cancel_remote(PurpleXfer *xfer);$/;"	p	signature:(PurpleXfer *xfer)
purple_xfer_choose_file	ft.c	/^purple_xfer_choose_file(PurpleXfer *xfer)$/;"	f	file:	signature:(PurpleXfer *xfer)
purple_xfer_choose_file	ft.c	/^static int purple_xfer_choose_file(PurpleXfer *xfer);$/;"	p	file:	signature:(PurpleXfer *xfer)
purple_xfer_choose_file_cancel_cb	ft.c	/^purple_xfer_choose_file_cancel_cb(void *user_data, const char *filename)$/;"	f	file:	signature:(void *user_data, const char *filename)
purple_xfer_choose_file_ok_cb	ft.c	/^purple_xfer_choose_file_ok_cb(void *user_data, const char *filename)$/;"	f	file:	signature:(void *user_data, const char *filename)
purple_xfer_conversation_write	ft.c	/^purple_xfer_conversation_write(PurpleXfer *xfer, gchar *message,$/;"	f	signature:(PurpleXfer *xfer, gchar *message, gboolean is_error)
purple_xfer_conversation_write	ft.h	/^void purple_xfer_conversation_write(PurpleXfer *xfer, char *message, gboolean is_error);$/;"	p	signature:(PurpleXfer *xfer, char *message, gboolean is_error)
purple_xfer_conversation_write_internal	ft.c	/^purple_xfer_conversation_write_internal(PurpleXfer *xfer,$/;"	f	file:	signature:(PurpleXfer *xfer, const char *message, gboolean is_error, gboolean print_thumbnail)
purple_xfer_conversation_write_with_thumbnail	ft.c	/^purple_xfer_conversation_write_with_thumbnail(PurpleXfer *xfer,$/;"	f	file:	signature:(PurpleXfer *xfer, const gchar *message)
purple_xfer_destroy	ft.c	/^purple_xfer_destroy(PurpleXfer *xfer)$/;"	f	file:	signature:(PurpleXfer *xfer)
purple_xfer_end	ft.c	/^purple_xfer_end(PurpleXfer *xfer)$/;"	f	signature:(PurpleXfer *xfer)
purple_xfer_end	ft.h	/^void purple_xfer_end(PurpleXfer *xfer);$/;"	p	signature:(PurpleXfer *xfer)
purple_xfer_error	ft.c	/^purple_xfer_error(PurpleXferType type, PurpleAccount *account, const char *who, const char *msg)$/;"	f	signature:(PurpleXferType type, PurpleAccount *account, const char *who, const char *msg)
purple_xfer_error	ft.h	/^void purple_xfer_error(PurpleXferType type, PurpleAccount *account, const char *who, const char *msg);$/;"	p	signature:(PurpleXferType type, PurpleAccount *account, const char *who, const char *msg)
purple_xfer_get_account	ft.c	/^purple_xfer_get_account(const PurpleXfer *xfer)$/;"	f	signature:(const PurpleXfer *xfer)
purple_xfer_get_account	ft.h	/^PurpleAccount *purple_xfer_get_account(const PurpleXfer *xfer);$/;"	p	signature:(const PurpleXfer *xfer)
purple_xfer_get_bytes_remaining	ft.c	/^purple_xfer_get_bytes_remaining(const PurpleXfer *xfer)$/;"	f	signature:(const PurpleXfer *xfer)
purple_xfer_get_bytes_remaining	ft.h	/^size_t purple_xfer_get_bytes_remaining(const PurpleXfer *xfer);$/;"	p	signature:(const PurpleXfer *xfer)
purple_xfer_get_bytes_sent	ft.c	/^purple_xfer_get_bytes_sent(const PurpleXfer *xfer)$/;"	f	signature:(const PurpleXfer *xfer)
purple_xfer_get_bytes_sent	ft.h	/^size_t purple_xfer_get_bytes_sent(const PurpleXfer *xfer);$/;"	p	signature:(const PurpleXfer *xfer)
purple_xfer_get_end_time	ft.c	/^purple_xfer_get_end_time(const PurpleXfer *xfer)$/;"	f	signature:(const PurpleXfer *xfer)
purple_xfer_get_end_time	ft.h	/^time_t purple_xfer_get_end_time(const PurpleXfer *xfer);$/;"	p	signature:(const PurpleXfer *xfer)
purple_xfer_get_filename	ft.c	/^purple_xfer_get_filename(const PurpleXfer *xfer)$/;"	f	signature:(const PurpleXfer *xfer)
purple_xfer_get_filename	ft.h	/^const char *purple_xfer_get_filename(const PurpleXfer *xfer);$/;"	p	signature:(const PurpleXfer *xfer)
purple_xfer_get_local_filename	ft.c	/^purple_xfer_get_local_filename(const PurpleXfer *xfer)$/;"	f	signature:(const PurpleXfer *xfer)
purple_xfer_get_local_filename	ft.h	/^const char *purple_xfer_get_local_filename(const PurpleXfer *xfer);$/;"	p	signature:(const PurpleXfer *xfer)
purple_xfer_get_local_port	ft.c	/^purple_xfer_get_local_port(const PurpleXfer *xfer)$/;"	f	signature:(const PurpleXfer *xfer)
purple_xfer_get_local_port	ft.h	/^unsigned int purple_xfer_get_local_port(const PurpleXfer *xfer);$/;"	p	signature:(const PurpleXfer *xfer)
purple_xfer_get_progress	ft.c	/^purple_xfer_get_progress(const PurpleXfer *xfer)$/;"	f	signature:(const PurpleXfer *xfer)
purple_xfer_get_progress	ft.h	/^double purple_xfer_get_progress(const PurpleXfer *xfer);$/;"	p	signature:(const PurpleXfer *xfer)
purple_xfer_get_remote_ip	ft.c	/^purple_xfer_get_remote_ip(const PurpleXfer *xfer)$/;"	f	signature:(const PurpleXfer *xfer)
purple_xfer_get_remote_ip	ft.h	/^const char *purple_xfer_get_remote_ip(const PurpleXfer *xfer);$/;"	p	signature:(const PurpleXfer *xfer)
purple_xfer_get_remote_port	ft.c	/^purple_xfer_get_remote_port(const PurpleXfer *xfer)$/;"	f	signature:(const PurpleXfer *xfer)
purple_xfer_get_remote_port	ft.h	/^unsigned int purple_xfer_get_remote_port(const PurpleXfer *xfer);$/;"	p	signature:(const PurpleXfer *xfer)
purple_xfer_get_remote_user	ft.c	/^purple_xfer_get_remote_user(const PurpleXfer *xfer)$/;"	f	signature:(const PurpleXfer *xfer)
purple_xfer_get_remote_user	ft.h	/^const char *purple_xfer_get_remote_user(const PurpleXfer *xfer);$/;"	p	signature:(const PurpleXfer *xfer)
purple_xfer_get_size	ft.c	/^purple_xfer_get_size(const PurpleXfer *xfer)$/;"	f	signature:(const PurpleXfer *xfer)
purple_xfer_get_size	ft.h	/^size_t purple_xfer_get_size(const PurpleXfer *xfer);$/;"	p	signature:(const PurpleXfer *xfer)
purple_xfer_get_start_time	ft.c	/^purple_xfer_get_start_time(const PurpleXfer *xfer)$/;"	f	signature:(const PurpleXfer *xfer)
purple_xfer_get_start_time	ft.h	/^time_t purple_xfer_get_start_time(const PurpleXfer *xfer);$/;"	p	signature:(const PurpleXfer *xfer)
purple_xfer_get_status	ft.c	/^purple_xfer_get_status(const PurpleXfer *xfer)$/;"	f	signature:(const PurpleXfer *xfer)
purple_xfer_get_status	ft.h	/^PurpleXferStatusType purple_xfer_get_status(const PurpleXfer *xfer);$/;"	p	signature:(const PurpleXfer *xfer)
purple_xfer_get_thumbnail	ft.c	/^purple_xfer_get_thumbnail(const PurpleXfer *xfer, gsize *len)$/;"	f	signature:(const PurpleXfer *xfer, gsize *len)
purple_xfer_get_thumbnail	ft.h	/^gconstpointer purple_xfer_get_thumbnail(const PurpleXfer *xfer, gsize *len);$/;"	p	signature:(const PurpleXfer *xfer, gsize *len)
purple_xfer_get_thumbnail_mimetype	ft.c	/^purple_xfer_get_thumbnail_mimetype(const PurpleXfer *xfer)$/;"	f	signature:(const PurpleXfer *xfer)
purple_xfer_get_thumbnail_mimetype	ft.h	/^const gchar *purple_xfer_get_thumbnail_mimetype(const PurpleXfer *xfer);$/;"	p	signature:(const PurpleXfer *xfer)
purple_xfer_get_type	ft.c	/^purple_xfer_get_type(const PurpleXfer *xfer)$/;"	f	signature:(const PurpleXfer *xfer)
purple_xfer_get_type	ft.h	/^PurpleXferType purple_xfer_get_type(const PurpleXfer *xfer);$/;"	p	signature:(const PurpleXfer *xfer)
purple_xfer_get_ui_ops	ft.c	/^purple_xfer_get_ui_ops(const PurpleXfer *xfer)$/;"	f	signature:(const PurpleXfer *xfer)
purple_xfer_get_ui_ops	ft.h	/^PurpleXferUiOps *purple_xfer_get_ui_ops(const PurpleXfer *xfer);$/;"	p	signature:(const PurpleXfer *xfer)
purple_xfer_increase_buffer_size	ft.c	/^purple_xfer_increase_buffer_size(PurpleXfer *xfer)$/;"	f	file:	signature:(PurpleXfer *xfer)
purple_xfer_is_canceled	ft.c	/^purple_xfer_is_canceled(const PurpleXfer *xfer)$/;"	f	signature:(const PurpleXfer *xfer)
purple_xfer_is_canceled	ft.h	/^gboolean purple_xfer_is_canceled(const PurpleXfer *xfer);$/;"	p	signature:(const PurpleXfer *xfer)
purple_xfer_is_completed	ft.c	/^purple_xfer_is_completed(const PurpleXfer *xfer)$/;"	f	signature:(const PurpleXfer *xfer)
purple_xfer_is_completed	ft.h	/^gboolean purple_xfer_is_completed(const PurpleXfer *xfer);$/;"	p	signature:(const PurpleXfer *xfer)
purple_xfer_new	ft.c	/^purple_xfer_new(PurpleAccount *account, PurpleXferType type, const char *who)$/;"	f	signature:(PurpleAccount *account, PurpleXferType type, const char *who)
purple_xfer_new	ft.h	/^PurpleXfer *purple_xfer_new(PurpleAccount *account,$/;"	p	signature:(PurpleAccount *account, PurpleXferType type, const char *who)
purple_xfer_prepare_thumbnail	ft.c	/^purple_xfer_prepare_thumbnail(PurpleXfer *xfer, const gchar *formats)$/;"	f	signature:(PurpleXfer *xfer, const gchar *formats)
purple_xfer_prepare_thumbnail	ft.h	/^void purple_xfer_prepare_thumbnail(PurpleXfer *xfer, const gchar *formats);$/;"	p	signature:(PurpleXfer *xfer, const gchar *formats)
purple_xfer_priv_data_destroy	ft.c	/^purple_xfer_priv_data_destroy(gpointer data)$/;"	f	file:	signature:(gpointer data)
purple_xfer_prpl_ready	ft.c	/^purple_xfer_prpl_ready(PurpleXfer *xfer)$/;"	f	signature:(PurpleXfer *xfer)
purple_xfer_prpl_ready	ft.h	/^void purple_xfer_prpl_ready(PurpleXfer *xfer);$/;"	p	signature:(PurpleXfer *xfer)
purple_xfer_read	ft.c	/^purple_xfer_read(PurpleXfer *xfer, guchar **buffer)$/;"	f	signature:(PurpleXfer *xfer, guchar **buffer)
purple_xfer_read	ft.h	/^gssize purple_xfer_read(PurpleXfer *xfer, guchar **buffer);$/;"	p	signature:(PurpleXfer *xfer, guchar **buffer)
purple_xfer_ref	ft.c	/^purple_xfer_ref(PurpleXfer *xfer)$/;"	f	signature:(PurpleXfer *xfer)
purple_xfer_ref	ft.h	/^void purple_xfer_ref(PurpleXfer *xfer);$/;"	p	signature:(PurpleXfer *xfer)
purple_xfer_request	ft.c	/^purple_xfer_request(PurpleXfer *xfer)$/;"	f	signature:(PurpleXfer *xfer)
purple_xfer_request	ft.h	/^void purple_xfer_request(PurpleXfer *xfer);$/;"	p	signature:(PurpleXfer *xfer)
purple_xfer_request_accepted	ft.c	/^purple_xfer_request_accepted(PurpleXfer *xfer, const char *filename)$/;"	f	signature:(PurpleXfer *xfer, const char *filename)
purple_xfer_request_accepted	ft.h	/^void purple_xfer_request_accepted(PurpleXfer *xfer, const char *filename);$/;"	p	signature:(PurpleXfer *xfer, const char *filename)
purple_xfer_request_denied	ft.c	/^purple_xfer_request_denied(PurpleXfer *xfer)$/;"	f	signature:(PurpleXfer *xfer)
purple_xfer_request_denied	ft.h	/^void purple_xfer_request_denied(PurpleXfer *xfer);$/;"	p	signature:(PurpleXfer *xfer)
purple_xfer_set_ack_fnc	ft.c	/^purple_xfer_set_ack_fnc(PurpleXfer *xfer,$/;"	f	signature:(PurpleXfer *xfer, void (*fnc)(PurpleXfer *, const guchar *, size_t))
purple_xfer_set_ack_fnc	ft.h	/^void purple_xfer_set_ack_fnc(PurpleXfer *xfer,$/;"	p	signature:(PurpleXfer *xfer, void (*fnc)(PurpleXfer *, const guchar *, size_t))
purple_xfer_set_bytes_sent	ft.c	/^purple_xfer_set_bytes_sent(PurpleXfer *xfer, size_t bytes_sent)$/;"	f	signature:(PurpleXfer *xfer, size_t bytes_sent)
purple_xfer_set_bytes_sent	ft.h	/^void purple_xfer_set_bytes_sent(PurpleXfer *xfer, size_t bytes_sent);$/;"	p	signature:(PurpleXfer *xfer, size_t bytes_sent)
purple_xfer_set_cancel_recv_fnc	ft.c	/^purple_xfer_set_cancel_recv_fnc(PurpleXfer *xfer, void (*fnc)(PurpleXfer *))$/;"	f	signature:(PurpleXfer *xfer, void (*fnc)(PurpleXfer *))
purple_xfer_set_cancel_recv_fnc	ft.h	/^void purple_xfer_set_cancel_recv_fnc(PurpleXfer *xfer, void (*fnc)(PurpleXfer *));$/;"	p	signature:(PurpleXfer *xfer, void (*fnc)(PurpleXfer *))
purple_xfer_set_cancel_send_fnc	ft.c	/^purple_xfer_set_cancel_send_fnc(PurpleXfer *xfer, void (*fnc)(PurpleXfer *))$/;"	f	signature:(PurpleXfer *xfer, void (*fnc)(PurpleXfer *))
purple_xfer_set_cancel_send_fnc	ft.h	/^void purple_xfer_set_cancel_send_fnc(PurpleXfer *xfer, void (*fnc)(PurpleXfer *));$/;"	p	signature:(PurpleXfer *xfer, void (*fnc)(PurpleXfer *))
purple_xfer_set_completed	ft.c	/^purple_xfer_set_completed(PurpleXfer *xfer, gboolean completed)$/;"	f	signature:(PurpleXfer *xfer, gboolean completed)
purple_xfer_set_completed	ft.h	/^void purple_xfer_set_completed(PurpleXfer *xfer, gboolean completed);$/;"	p	signature:(PurpleXfer *xfer, gboolean completed)
purple_xfer_set_end_fnc	ft.c	/^purple_xfer_set_end_fnc(PurpleXfer *xfer, void (*fnc)(PurpleXfer *))$/;"	f	signature:(PurpleXfer *xfer, void (*fnc)(PurpleXfer *))
purple_xfer_set_end_fnc	ft.h	/^void purple_xfer_set_end_fnc(PurpleXfer *xfer, void (*fnc)(PurpleXfer *));$/;"	p	signature:(PurpleXfer *xfer, void (*fnc)(PurpleXfer *))
purple_xfer_set_filename	ft.c	/^purple_xfer_set_filename(PurpleXfer *xfer, const char *filename)$/;"	f	signature:(PurpleXfer *xfer, const char *filename)
purple_xfer_set_filename	ft.h	/^void purple_xfer_set_filename(PurpleXfer *xfer, const char *filename);$/;"	p	signature:(PurpleXfer *xfer, const char *filename)
purple_xfer_set_init_fnc	ft.c	/^purple_xfer_set_init_fnc(PurpleXfer *xfer, void (*fnc)(PurpleXfer *))$/;"	f	signature:(PurpleXfer *xfer, void (*fnc)(PurpleXfer *))
purple_xfer_set_init_fnc	ft.h	/^void purple_xfer_set_init_fnc(PurpleXfer *xfer, void (*fnc)(PurpleXfer *));$/;"	p	signature:(PurpleXfer *xfer, void (*fnc)(PurpleXfer *))
purple_xfer_set_local_filename	ft.c	/^purple_xfer_set_local_filename(PurpleXfer *xfer, const char *filename)$/;"	f	signature:(PurpleXfer *xfer, const char *filename)
purple_xfer_set_local_filename	ft.h	/^void purple_xfer_set_local_filename(PurpleXfer *xfer, const char *filename);$/;"	p	signature:(PurpleXfer *xfer, const char *filename)
purple_xfer_set_message	ft.c	/^purple_xfer_set_message(PurpleXfer *xfer, const char *message)$/;"	f	signature:(PurpleXfer *xfer, const char *message)
purple_xfer_set_message	ft.h	/^void purple_xfer_set_message(PurpleXfer *xfer, const char *message);$/;"	p	signature:(PurpleXfer *xfer, const char *message)
purple_xfer_set_read_fnc	ft.c	/^purple_xfer_set_read_fnc(PurpleXfer *xfer, gssize (*fnc)(guchar **, PurpleXfer *))$/;"	f	signature:(PurpleXfer *xfer, gssize (*fnc)(guchar **, PurpleXfer *))
purple_xfer_set_read_fnc	ft.h	/^void purple_xfer_set_read_fnc(PurpleXfer *xfer,$/;"	p	signature:(PurpleXfer *xfer, gssize (*fnc)(guchar **, PurpleXfer *))
purple_xfer_set_request_denied_fnc	ft.c	/^void purple_xfer_set_request_denied_fnc(PurpleXfer *xfer, void (*fnc)(PurpleXfer *))$/;"	f	signature:(PurpleXfer *xfer, void (*fnc)(PurpleXfer *))
purple_xfer_set_request_denied_fnc	ft.h	/^void purple_xfer_set_request_denied_fnc(PurpleXfer *xfer, void (*fnc)(PurpleXfer *));$/;"	p	signature:(PurpleXfer *xfer, void (*fnc)(PurpleXfer *))
purple_xfer_set_size	ft.c	/^purple_xfer_set_size(PurpleXfer *xfer, size_t size)$/;"	f	signature:(PurpleXfer *xfer, size_t size)
purple_xfer_set_size	ft.h	/^void purple_xfer_set_size(PurpleXfer *xfer, size_t size);$/;"	p	signature:(PurpleXfer *xfer, size_t size)
purple_xfer_set_start_fnc	ft.c	/^purple_xfer_set_start_fnc(PurpleXfer *xfer, void (*fnc)(PurpleXfer *))$/;"	f	signature:(PurpleXfer *xfer, void (*fnc)(PurpleXfer *))
purple_xfer_set_start_fnc	ft.h	/^void purple_xfer_set_start_fnc(PurpleXfer *xfer, void (*fnc)(PurpleXfer *));$/;"	p	signature:(PurpleXfer *xfer, void (*fnc)(PurpleXfer *))
purple_xfer_set_status	ft.c	/^purple_xfer_set_status(PurpleXfer *xfer, PurpleXferStatusType status)$/;"	f	file:	signature:(PurpleXfer *xfer, PurpleXferStatusType status)
purple_xfer_set_thumbnail	ft.c	/^purple_xfer_set_thumbnail(PurpleXfer *xfer, gconstpointer thumbnail,$/;"	f	signature:(PurpleXfer *xfer, gconstpointer thumbnail, gsize size, const gchar *mimetype)
purple_xfer_set_thumbnail	ft.h	/^void purple_xfer_set_thumbnail(PurpleXfer *xfer, gconstpointer thumbnail,$/;"	p	signature:(PurpleXfer *xfer, gconstpointer thumbnail, gsize size, const gchar *mimetype)
purple_xfer_set_write_fnc	ft.c	/^purple_xfer_set_write_fnc(PurpleXfer *xfer,$/;"	f	signature:(PurpleXfer *xfer, gssize (*fnc)(const guchar *, size_t, PurpleXfer *))
purple_xfer_set_write_fnc	ft.h	/^void purple_xfer_set_write_fnc(PurpleXfer *xfer,$/;"	p	signature:(PurpleXfer *xfer, gssize (*fnc)(const guchar *, size_t, PurpleXfer *))
purple_xfer_show_file_error	ft.c	/^static void purple_xfer_show_file_error(PurpleXfer *xfer, const char *filename)$/;"	f	file:	signature:(PurpleXfer *xfer, const char *filename)
purple_xfer_start	ft.c	/^purple_xfer_start(PurpleXfer *xfer, int fd, const char *ip,$/;"	f	signature:(PurpleXfer *xfer, int fd, const char *ip, unsigned int port)
purple_xfer_start	ft.h	/^void purple_xfer_start(PurpleXfer *xfer, int fd, const char *ip,$/;"	p	signature:(PurpleXfer *xfer, int fd, const char *ip, unsigned int port)
purple_xfer_status_type_to_string	ft.c	/^purple_xfer_status_type_to_string(PurpleXferStatusType type)$/;"	f	file:	signature:(PurpleXferStatusType type)
purple_xfer_ui_ready	ft.c	/^purple_xfer_ui_ready(PurpleXfer *xfer)$/;"	f	signature:(PurpleXfer *xfer)
purple_xfer_ui_ready	ft.h	/^void purple_xfer_ui_ready(PurpleXfer *xfer);$/;"	p	signature:(PurpleXfer *xfer)
purple_xfer_unref	ft.c	/^purple_xfer_unref(PurpleXfer *xfer)$/;"	f	signature:(PurpleXfer *xfer)
purple_xfer_unref	ft.h	/^void purple_xfer_unref(PurpleXfer *xfer);$/;"	p	signature:(PurpleXfer *xfer)
purple_xfer_update_progress	ft.c	/^purple_xfer_update_progress(PurpleXfer *xfer)$/;"	f	signature:(PurpleXfer *xfer)
purple_xfer_update_progress	ft.h	/^void purple_xfer_update_progress(PurpleXfer *xfer);$/;"	p	signature:(PurpleXfer *xfer)
purple_xfer_write	ft.c	/^purple_xfer_write(PurpleXfer *xfer, const guchar *buffer, gsize size)$/;"	f	signature:(PurpleXfer *xfer, const guchar *buffer, gsize size)
purple_xfer_write	ft.h	/^gssize purple_xfer_write(PurpleXfer *xfer, const guchar *buffer, gsize size);$/;"	p	signature:(PurpleXfer *xfer, const guchar *buffer, gsize size)
purple_xfers_get_all	ft.c	/^purple_xfers_get_all()$/;"	f
purple_xfers_get_all	ft.h	/^GList *purple_xfers_get_all(void);$/;"	p	signature:(void)
purple_xfers_get_handle	ft.c	/^purple_xfers_get_handle(void) {$/;"	f	signature:(void)
purple_xfers_get_handle	ft.h	/^void *purple_xfers_get_handle(void);$/;"	p	signature:(void)
purple_xfers_get_ui_ops	ft.c	/^purple_xfers_get_ui_ops(void) {$/;"	f	signature:(void)
purple_xfers_get_ui_ops	ft.h	/^PurpleXferUiOps *purple_xfers_get_ui_ops(void);$/;"	p	signature:(void)
purple_xfers_init	ft.c	/^purple_xfers_init(void) {$/;"	f	signature:(void)
purple_xfers_init	ft.h	/^void purple_xfers_init(void);$/;"	p	signature:(void)
purple_xfers_set_ui_ops	ft.c	/^purple_xfers_set_ui_ops(PurpleXferUiOps *ops) {$/;"	f	signature:(PurpleXferUiOps *ops)
purple_xfers_set_ui_ops	ft.h	/^void purple_xfers_set_ui_ops(PurpleXferUiOps *ops);$/;"	p	signature:(PurpleXferUiOps *ops)
purple_xfers_uninit	ft.c	/^purple_xfers_uninit(void)$/;"	f	signature:(void)
purple_xfers_uninit	ft.h	/^void purple_xfers_uninit(void);$/;"	p	signature:(void)
purplebuddylist	blist.c	/^static PurpleBuddyList *purplebuddylist = NULL;$/;"	v	file:
put_cert	certificate.h	/^	gboolean (* put_cert)(const gchar *id, PurpleCertificate *crt);$/;"	m	struct:_PurpleCertificatePool	access:public
query	dnssrv.c	/^	char *query;$/;"	m	struct:_PurpleSrvTxtQueryData	file:	access:public
query	dnssrv.c	/^	char query[256];$/;"	m	struct:_PurpleSrvInternalQuery	file:	access:public
query_data	proxy.c	/^	PurpleDnsQueryData *query_data;$/;"	m	struct:_PurpleProxyConnectData	file:	access:public
query_data_new	dnssrv.c	/^query_data_new(int type, gchar *query, gpointer extradata)$/;"	f	file:	signature:(int type, gchar *query, gpointer extradata)
queryans	dnssrv.c	/^} queryans;$/;"	t	typeref:union:__anon89	file:
queue	media/backend-fs2.c	/^	GstElement *queue;$/;"	m	struct:_PurpleMediaBackendFs2Stream	file:	access:public
queued_requests	dnsquery.c	/^static GSList *queued_requests = NULL;$/;"	v	file:
quit	core.h	/^	void (*quit)(void);$/;"	m	struct:__anon21	access:public
r2	valgrind.h	/^      unsigned int r2;  \/* what tocptr do we need? *\/$/;"	m	struct:__anon109	access:public
r2	valgrind.h	/^      unsigned long long int r2;  \/* what tocptr do we need? *\/$/;"	m	struct:__anon108	access:public
r2	valgrind.h	/^      unsigned long long int r2;  \/* what tocptr do we need? *\/$/;"	m	struct:__anon110	access:public
read	ft.h	/^		gssize (*read)(guchar **buffer, PurpleXfer *xfer);$/;"	m	struct:_PurpleXfer::__anon25	access:public
read	log.h	/^	char *(*read)(PurpleLog *log, PurpleLogReadFlags *flags);$/;"	m	struct:_PurpleLogLogger	access:public
read	sslconn.h	/^	size_t (*read)(PurpleSslConnection *gsc, void *data, size_t len);$/;"	m	struct:__anon99	access:public
read_buf_len	proxy.c	/^	gsize read_buf_len;$/;"	m	struct:_PurpleProxyConnectData	file:	access:public
read_buffer	proxy.c	/^	guchar *read_buffer;$/;"	m	struct:_PurpleProxyConnectData	file:	access:public
read_cb	proxy.c	/^	PurpleInputFunction read_cb;$/;"	m	struct:_PurpleProxyConnectData	file:	access:public
read_from_parent	dnssrv.c	/^read_from_parent(int in, int out, gpointer data, gsize size)$/;"	f	file:	signature:(int in, int out, gpointer data, gsize size)
read_icon_file	buddyicon.c	/^read_icon_file(const char *path, guchar **data, size_t *len)$/;"	f	file:	signature:(const char *path, guchar **data, size_t *len)
read_len	proxy.c	/^	gsize read_len;$/;"	m	struct:_PurpleProxyConnectData	file:	access:public
read_smiley_file	smiley.c	/^read_smiley_file(const char *path, guchar **data, size_t *len)$/;"	f	file:	signature:(const char *path, guchar **data, size_t *len)
read_smiley_file	smiley.c	/^static gboolean read_smiley_file(const char *path, guchar **data, size_t *len);$/;"	p	file:	signature:(const char *path, guchar **data, size_t *len)
ready	ft.c	/^	} ready;$/;"	m	struct:_PurpleXferPrivData	typeref:enum:_PurpleXferPrivData::__anon52	file:	access:public
reason	certificate.c	/^	gchar *reason;$/;"	m	struct:__anon14	file:	access:public
received_message_cb	pounce.c	/^received_message_cb(PurpleAccount *account, const char *name, void *data)$/;"	f	file:	signature:(PurpleAccount *account, const char *name, void *data)
recv_cb	sslconn.c	/^recv_cb(gpointer data, gint source, PurpleInputCondition cond)$/;"	f	file:	signature:(gpointer data, gint source, PurpleInputCondition cond)
recv_cb	sslconn.h	/^	PurpleSslInputFunction recv_cb;$/;"	m	struct:_PurpleSslConnection	access:public
recv_cb_data	sslconn.h	/^	void *recv_cb_data;$/;"	m	struct:_PurpleSslConnection	access:public
ref	account.c	/^	guint ref;$/;"	m	struct:__anon4	file:	access:public
ref	cipher.c	/^	guint ref;            \/**< Reference count *\/$/;"	m	struct:_PurpleCipher	file:	access:public
ref	ft.h	/^	guint ref;                    \/**< The reference count.                *\/$/;"	m	struct:_PurpleXfer	access:public
ref	roomlist.h	/^	guint ref; \/**< The reference count. *\/$/;"	m	struct:_PurpleRoomlist	access:public
ref	stringref.c	/^	guint32 ref;	\/**< The reference count of this string.$/;"	m	struct:_PurpleStringref	file:	access:public
ref_count	buddyicon.c	/^	int ref_count;             \/**< The buddy icon reference count.      *\/$/;"	m	struct:_PurpleBuddyIcon	file:	access:public
ref_filename	buddyicon.c	/^ref_filename(const char *filename)$/;"	f	file:	signature:(const char *filename)
refcount	desktopitem.c	/^	int refcount;$/;"	m	struct:_PurpleDesktopItem	file:	access:public
refcount	imgstore.c	/^	guint8 refcount;$/;"	m	struct:_PurpleStoredImage	file:	access:public
register_user	prpl.h	/^	void (*register_user)(PurpleAccount *);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
registration_cb	account.h	/^	PurpleAccountRegistrationCb registration_cb;$/;"	m	struct:_PurpleAccount	access:public
registration_cb_user_data	account.h	/^	void *registration_cb_user_data;$/;"	m	struct:_PurpleAccount	access:public
reject_chat	prpl.h	/^	void (*reject_chat)(PurpleConnection *, GHashTable *components);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
rem_deny	prpl.h	/^	void (*rem_deny)(PurpleConnection *, const char *name);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
rem_permit	prpl.h	/^	void (*rem_permit)(PurpleConnection *, const char *name);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
remember_pass	account.h	/^	gboolean remember_pass;     \/**< Remember the password.                 *\/$/;"	m	struct:_PurpleAccount	access:public
remote_candidates	media.c	/^	GList *remote_candidates;$/;"	m	struct:_PurpleMediaStream	file:	access:public
remote_candidates	media/backend-fs2.c	/^	GList *remote_candidates;$/;"	m	struct:_PurpleMediaBackendFs2Stream	file:	access:public
remote_ip	ft.h	/^	char *remote_ip;              \/**< The remote IP address.              *\/$/;"	m	struct:_PurpleXfer	access:public
remote_port	ft.h	/^	int remote_port;              \/**< The remote port.                    *\/$/;"	m	struct:_PurpleXfer	access:public
remove	blist.h	/^	void (*remove)(PurpleBuddyList *list,$/;"	m	struct:_PurpleBlistUiOps	access:public
remove	log.h	/^	gboolean (*remove)(PurpleLog *log);$/;"	m	struct:_PurpleLogLogger	access:public
remove_buddies	prpl.h	/^	void (*remove_buddies)(PurpleConnection *, GList *buddies, GList *groups);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
remove_buddy	prpl.h	/^	void (*remove_buddy)(PurpleConnection *, PurpleBuddy *buddy, PurpleGroup *group);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
remove_element	media/backend-fs2.c	/^remove_element(GstElement *element)$/;"	f	file:	signature:(GstElement *element)
remove_group	prpl.h	/^	void (*remove_group)(PurpleConnection *gc, PurpleGroup *group);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
remove_node	blist.h	/^	void (*remove_node)(PurpleBlistNode *node);$/;"	m	struct:_PurpleBlistUiOps	access:public
remove_old_transient_statuses	savedstatuses.c	/^remove_old_transient_statuses(void)$/;"	f	file:	signature:(void)
remove_pref	prefs.c	/^remove_pref(struct purple_pref *pref)$/;"	f	file:	signature:(struct purple_pref *pref)
rename_group	prpl.h	/^	void (*rename_group)(PurpleConnection *, const char *old_name,$/;"	m	struct:_PurplePluginProtocolInfo	access:public
reply_cb	stun.c	/^static void reply_cb(gpointer data, gint source, PurpleInputCondition cond) {$/;"	f	file:	signature:(gpointer data, gint source, PurpleInputCondition cond)
report_disconnect	connection.h	/^	void (*report_disconnect)(PurpleConnection *gc, const char *text);$/;"	m	struct:__anon75	access:public
report_disconnect_reason	connection.h	/^	void (*report_disconnect_reason)(PurpleConnection *gc,$/;"	m	struct:__anon75	access:public
request	util.c	/^	char *request;$/;"	m	struct:_PurpleUtilFetchUrlData	file:	access:public
request_action	request.h	/^	void *(*request_action)(const char *title, const char *primary,$/;"	m	struct:__anon148	access:public
request_action_with_icon	request.h	/^	void *(*request_action_with_icon)(const char *title, const char *primary,$/;"	m	struct:__anon148	access:public
request_add	account.h	/^	void (*request_add)(PurpleAccount *account,$/;"	m	struct:_PurpleAccountUiOps	access:public
request_add_buddy	blist.h	/^	void (*request_add_buddy)(PurpleAccount *account, const char *username,$/;"	m	struct:_PurpleBlistUiOps	access:public
request_add_chat	blist.h	/^	void (*request_add_chat)(PurpleAccount *account, PurpleGroup *group,$/;"	m	struct:_PurpleBlistUiOps	access:public
request_add_group	blist.h	/^	void (*request_add_group)(void);$/;"	m	struct:_PurpleBlistUiOps	access:public
request_auth_cb	account.c	/^request_auth_cb(void *data)$/;"	f	file:	signature:(void *data)
request_authorize	account.h	/^	void *(*request_authorize)(PurpleAccount *account,$/;"	m	struct:_PurpleAccountUiOps	access:public
request_choice	request.h	/^	void *(*request_choice)(const char *title, const char *primary,$/;"	m	struct:__anon148	access:public
request_denied	ft.h	/^		void (*request_denied)(PurpleXfer *xfer);$/;"	m	struct:_PurpleXfer::__anon25	access:public
request_deny_cb	account.c	/^request_deny_cb(void *data)$/;"	f	file:	signature:(void *data)
request_fields	request.h	/^	void *(*request_fields)(const char *title, const char *primary,$/;"	m	struct:__anon148	access:public
request_file	request.h	/^	void *(*request_file)(const char *title, const char *filename,$/;"	m	struct:__anon148	access:public
request_folder	request.h	/^	void *(*request_folder)(const char *title, const char *dirname,$/;"	m	struct:__anon148	access:public
request_input	request.h	/^	void *(*request_input)(const char *title, const char *primary,$/;"	m	struct:__anon148	access:public
request_pad_unlinked_cb	mediamanager.c	/^request_pad_unlinked_cb(GstPad *pad, GstPad *peer, gpointer user_data)$/;"	f	file:	signature:(GstPad *pad, GstPad *peer, gpointer user_data)
request_password_cancel_cb	account.c	/^request_password_cancel_cb(PurpleAccount *account, PurpleRequestFields *fields)$/;"	f	file:	signature:(PurpleAccount *account, PurpleRequestFields *fields)
request_password_ok_cb	account.c	/^request_password_ok_cb(PurpleAccount *account, PurpleRequestFields *fields)$/;"	f	file:	signature:(PurpleAccount *account, PurpleRequestFields *fields)
request_ui_ops	request.c	/^static PurpleRequestUiOps *request_ui_ops = NULL;$/;"	v	file:
request_written	util.c	/^	gsize request_written;$/;"	m	struct:_PurpleUtilFetchUrlData	file:	access:public
required	prpl.h	/^	gboolean required;       \/**< True if it's required *\/$/;"	m	struct:proto_chat_entry	access:public
required	request.h	/^	gboolean required;$/;"	m	struct:_PurpleRequestField	access:public
required_fields	request.h	/^	GList *required_fields;$/;"	m	struct:__anon138	access:public
res_main_thread_cb	dnssrv.c	/^res_main_thread_cb(gpointer data)$/;"	f	file:	signature:(gpointer data)
res_thread	dnssrv.c	/^res_thread(gpointer data)$/;"	f	file:	signature:(gpointer data)
reserved	core.c	/^	void *reserved;$/;"	m	struct:PurpleCore	file:	access:public
reserved	nat-pmp.c	/^	char		reserved[2];$/;"	m	struct:__anon40	file:	access:public
reset	cipher.h	/^	void (*reset)(PurpleCipherContext *context, void *extra);$/;"	m	struct:_PurpleCipherOps	access:public
reset_typing_cb	conversation.c	/^reset_typing_cb(gpointer data)$/;"	f	file:	signature:(gpointer data)
resolve	dnssrv.c	/^resolve(int in, int out)$/;"	f	file:	signature:(int in, int out)
resolve	dnssrv.h	/^	gboolean (*resolve)(PurpleSrvTxtQueryData *query_data,$/;"	m	struct:__anon81	access:public
resolve_host	dnsquery.c	/^resolve_host(PurpleDnsQueryData *query_data)$/;"	f	file:	signature:(PurpleDnsQueryData *query_data)
resolve_host	dnsquery.h	/^	gboolean (*resolve_host)(PurpleDnsQueryData *query_data,$/;"	m	struct:__anon78	access:public
resolve_ip	dnsquery.c	/^resolve_ip(PurpleDnsQueryData *query_data)$/;"	f	file:	signature:(PurpleDnsQueryData *query_data)
resolved	dnssrv.c	/^resolved(gpointer data, gint source, PurpleInputCondition cond)$/;"	f	file:	signature:(gpointer data, gint source, PurpleInputCondition cond)
resolver	dnsquery.c	/^	GThread *resolver;$/;"	m	struct:_PurpleDnsQueryData	file:	access:public
resolver	dnsquery.c	/^	PurpleDnsQueryResolverProcess *resolver;$/;"	m	struct:_PurpleDnsQueryData	file:	access:public
resolver	dnssrv.c	/^	GThread *resolver;$/;"	m	struct:_PurpleSrvTxtQueryData	file:	access:public
response	dnssrv.c	/^	PurpleSrvResponse *response;$/;"	m	struct:_PurpleSrvResponseContainer	file:	access:public
responsecompare	dnssrv.c	/^responsecompare(gconstpointer ar, gconstpointer br)$/;"	f	file:	signature:(gconstpointer ar, gconstpointer br)
resultcode	nat-pmp.c	/^	guint16		resultcode;$/;"	m	struct:_PurplePmpMapResponse	file:	access:public
resultcode	nat-pmp.c	/^	guint16		resultcode;$/;"	m	struct:__anon39	file:	access:public
results	dnssrv.c	/^	GList *results;$/;"	m	struct:_PurpleSrvTxtQueryData	file:	access:public
ret_value	plugin.c	/^	PurpleValue *ret_value;$/;"	m	struct:__anon11	file:	access:public
ret_value	signals.c	/^	PurpleValue *ret_value;$/;"	m	struct:__anon101	file:	access:public
retry	network.c	/^	gboolean retry;$/;"	m	struct:_PurpleNetworkListenData	file:	access:public
retry	stun.c	/^	int retry;$/;"	m	struct:stun_conn	file:	access:public
retry_count	upnp.c	/^	int retry_count;$/;"	m	struct:__anon64	file:	access:public
reverse	accountopt.h	/^	gboolean reverse;       \/**< TRUE if the separator should be found$/;"	m	struct:__anon67	access:public
roomlist_cancel	prpl.h	/^	void (*roomlist_cancel)(PurpleRoomlist *list);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
roomlist_expand_category	prpl.h	/^	void (*roomlist_expand_category)(PurpleRoomlist *list, PurpleRoomlistRoom *category);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
roomlist_get_list	prpl.h	/^	PurpleRoomlist *(*roomlist_get_list)(PurpleConnection *gc);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
roomlist_room_serialize	prpl.h	/^	char *(*roomlist_room_serialize)(PurpleRoomlistRoom *room);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
rooms	roomlist.h	/^	GList *rooms; \/**< The list of rooms. *\/$/;"	m	struct:_PurpleRoomlist	access:public
root	blist.h	/^	PurpleBlistNode *root;          \/**< The first node in the buddy list *\/$/;"	m	struct:_PurpleBuddyList	access:public
rows	notify.h	/^	GList *rows;           \/**< List of rows in the result. *\/$/;"	m	struct:__anon115	access:public
s4_canread	proxy.c	/^s4_canread(gpointer data, gint source, PurpleInputCondition cond)$/;"	f	file:	signature:(gpointer data, gint source, PurpleInputCondition cond)
s4_canwrite	proxy.c	/^s4_canwrite(gpointer data, gint source, PurpleInputCondition cond)$/;"	f	file:	signature:(gpointer data, gint source, PurpleInputCondition cond)
s4_host_resolved	proxy.c	/^s4_host_resolved(GSList *hosts, gpointer data, const char *error_message)$/;"	f	file:	signature:(GSList *hosts, gpointer data, const char *error_message)
s5_canread	proxy.c	/^s5_canread(gpointer data, gint source, PurpleInputCondition cond)$/;"	f	file:	signature:(gpointer data, gint source, PurpleInputCondition cond)
s5_canread_again	proxy.c	/^s5_canread_again(gpointer data, gint source, PurpleInputCondition cond)$/;"	f	file:	signature:(gpointer data, gint source, PurpleInputCondition cond)
s5_canwrite	proxy.c	/^s5_canwrite(gpointer data, gint source, PurpleInputCondition cond)$/;"	f	file:	signature:(gpointer data, gint source, PurpleInputCondition cond)
s5_ensure_buffer_length	proxy.c	/^s5_ensure_buffer_length(PurpleProxyConnectData *connect_data, int len)$/;"	f	file:	signature:(PurpleProxyConnectData *connect_data, int len)
s5_parse_chap_msg	proxy.c	/^s5_parse_chap_msg(PurpleProxyConnectData *connect_data)$/;"	f	file:	signature:(PurpleProxyConnectData *connect_data)
s5_readauth	proxy.c	/^s5_readauth(gpointer data, gint source, PurpleInputCondition cond)$/;"	f	file:	signature:(gpointer data, gint source, PurpleInputCondition cond)
s5_readchap	proxy.c	/^s5_readchap(gpointer data, gint source, PurpleInputCondition cond)$/;"	f	file:	signature:(gpointer data, gint source, PurpleInputCondition cond)
s5_readchap	proxy.c	/^s5_readchap(gpointer data, gint source, PurpleInputCondition cond);$/;"	p	file:	signature:(gpointer data, gint source, PurpleInputCondition cond)
s5_sendconnect	proxy.c	/^s5_sendconnect(gpointer data, int source)$/;"	f	file:	signature:(gpointer data, int source)
sa	util.c	/^	struct sockaddr         sa;$/;"	m	union:purple_sockaddr	typeref:struct:purple_sockaddr::sockaddr	file:	access:public
sa_in	util.c	/^	struct sockaddr_in      sa_in;$/;"	m	union:purple_sockaddr	typeref:struct:purple_sockaddr::sockaddr_in	file:	access:public
sa_in6	util.c	/^	struct sockaddr_in6     sa_in6;$/;"	m	union:purple_sockaddr	typeref:struct:purple_sockaddr::sockaddr_in6	file:	access:public
sa_stor	util.c	/^	struct sockaddr_storage sa_stor;$/;"	m	union:purple_sockaddr	typeref:struct:purple_sockaddr::sockaddr_storage	file:	access:public
sanitize	desktopitem.c	/^sanitize (PurpleDesktopItem *item, const char *uri)$/;"	f	file:	signature:(PurpleDesktopItem *item, const char *uri)
save	pounce.h	/^	gboolean save;                \/**< Whether or not the pounce should$/;"	m	struct:_PurplePounce	access:public
save_account	blist.h	/^	void (*save_account)(PurpleAccount *account);$/;"	m	struct:_PurpleBlistUiOps	access:public
save_cb	account.c	/^save_cb(gpointer data)$/;"	f	file:	signature:(gpointer data)
save_cb	blist.c	/^save_cb(gpointer data)$/;"	f	file:	signature:(gpointer data)
save_cb	pounce.c	/^save_cb(gpointer data)$/;"	f	file:	signature:(gpointer data)
save_cb	prefs.c	/^save_cb(gpointer data)$/;"	f	file:	signature:(gpointer data)
save_cb	savedstatuses.c	/^save_cb(gpointer data)$/;"	f	file:	signature:(gpointer data)
save_node	blist.h	/^	void (*save_node)(PurpleBlistNode *node);$/;"	m	struct:_PurpleBlistUiOps	access:public
save_smileys_cb	smiley.c	/^save_smileys_cb(gpointer data)$/;"	f	file:	signature:(gpointer data)
save_timer	account.c	/^static guint    save_timer = 0;$/;"	v	file:
save_timer	blist.c	/^static guint          save_timer = 0;$/;"	v	file:
save_timer	pounce.c	/^static guint       save_timer = 0;$/;"	v	file:
save_timer	prefs.c	/^static guint       save_timer = 0;$/;"	v	file:
save_timer	savedstatuses.c	/^static guint       save_timer = 0;$/;"	v	file:
save_timer	smiley.c	/^static guint save_timer = 0;$/;"	v	file:
saveable	status.c	/^	gboolean saveable;$/;"	m	struct:_PurpleStatusType	file:	access:public
saved_statuses	savedstatuses.c	/^static GList      *saved_statuses = NULL;$/;"	v	file:
saved_statuses_sort_func	savedstatuses.c	/^saved_statuses_sort_func(gconstpointer a, gconstpointer b)$/;"	f	file:	signature:(gconstpointer a, gconstpointer b)
scale_rules	prpl.h	/^	PurpleIconScaleRules scale_rules;  \/**< How to stretch this icon *\/$/;"	m	struct:_PurpleBuddyIconSpec	access:public
scale_x	request.h	/^			unsigned int scale_x;$/;"	m	struct:_PurpleRequestField::__anon140::__anon147	access:public
scale_y	request.h	/^			unsigned int scale_y;$/;"	m	struct:_PurpleRequestField::__anon140::__anon147	access:public
schedule_accounts_save	account.c	/^schedule_accounts_save(void)$/;"	f	file:	signature:(void)
schedule_pounces_save	pounce.c	/^schedule_pounces_save(void)$/;"	f	file:	signature:(void)
schedule_prefs_save	prefs.c	/^schedule_prefs_save(void)$/;"	f	file:	signature:(void)
schedule_save	savedstatuses.c	/^schedule_save(void)$/;"	f	file:	signature:(void)
schedule_save	savedstatuses.c	/^static void schedule_save(void);$/;"	p	file:	signature:(void)
scheme	certificate.h	/^	PurpleCertificateScheme * scheme;$/;"	m	struct:_PurpleCertificate	access:public
scheme	certificate.h	/^	PurpleCertificateScheme *scheme;$/;"	m	struct:_PurpleCertificateVerificationRequest	access:public
scheme_name	certificate.h	/^	gchar *scheme_name;$/;"	m	struct:_PurpleCertificatePool	access:public
scheme_name	certificate.h	/^	gchar *scheme_name;$/;"	m	struct:_PurpleCertificateVerifier	access:public
score_pref_changed_cb	status.c	/^score_pref_changed_cb(const char *name, PurplePrefType type,$/;"	f	file:	signature:(const char *name, PurplePrefType type, gconstpointer value, gpointer data)
search_paths	plugin.c	/^static GList *search_paths     = NULL;$/;"	v	file:
secret	prpl.h	/^	gboolean secret;         \/**< True if the entry is secret (password) *\/$/;"	m	struct:proto_chat_entry	access:public
section_from_key	desktopitem.c	/^section_from_key (PurpleDesktopItem *item, const char *key)$/;"	f	file:	signature:(PurpleDesktopItem *item, const char *key)
sections	desktopitem.c	/^	GList *sections;$/;"	m	struct:_PurpleDesktopItem	file:	access:public
select_random_response	dnssrv.c	/^select_random_response(GList *list, PurpleSrvResponseContainer **container_ptr)$/;"	f	file:	signature:(GList *list, PurpleSrvResponseContainer **container_ptr)
selected	request.h	/^			GList *selected;$/;"	m	struct:_PurpleRequestField::__anon140::__anon145	access:public
selected_table	request.h	/^			GHashTable *selected_table;$/;"	m	struct:_PurpleRequestField::__anon140::__anon145	access:public
send_attention	prpl.h	/^	gboolean (*send_attention)(PurpleConnection *gc, const char *username, guint type);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
send_confirm	conversation.h	/^	void (*send_confirm)(PurpleConversation *conv, const char *message);$/;"	m	struct:_PurpleConversationUiOps	access:public
send_dns_request_to_child	dnsquery.c	/^send_dns_request_to_child(PurpleDnsQueryData *query_data,$/;"	f	file:	signature:(PurpleDnsQueryData *query_data, PurpleDnsQueryResolverProcess *resolver)
send_draw_list	whiteboard.h	/^	void (*send_draw_list)(PurpleWhiteboard *wb, GList *draw_list);        \/**< send_draw_list function *\/$/;"	m	struct:_PurpleWhiteboardPrplOps	access:public
send_file	prpl.h	/^	void (*send_file)(PurpleConnection *, const char *who, const char *filename);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
send_im	prpl.h	/^	int  (*send_im)(PurpleConnection *, const char *who,$/;"	m	struct:_PurplePluginProtocolInfo	access:public
send_keepalive	connection.c	/^send_keepalive(gpointer data)$/;"	f	file:	signature:(gpointer data)
send_raw	prpl.h	/^	int (*send_raw)(PurpleConnection *gc, const char *buf, int len);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
send_typed_cb	conversation.c	/^send_typed_cb(gpointer data)$/;"	f	file:	signature:(gpointer data)
send_typed_timeout	conversation.h	/^	guint  send_typed_timeout;         \/**< The type again timer handle. *\/$/;"	m	struct:_PurpleConvIm	access:public
send_typing	prpl.h	/^	unsigned int (*send_typing)(PurpleConnection *, const char *name, PurpleTypingState state);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
sent	server.c	/^	time_t sent;$/;"	m	struct:last_auto_response	file:	access:public
serv_add_deny	server.c	/^void serv_add_deny(PurpleConnection *gc, const char *name)$/;"	f	signature:(PurpleConnection *gc, const char *name)
serv_add_deny	server.h	/^void serv_add_deny(PurpleConnection *, const char *);$/;"	p	signature:(PurpleConnection *, const char *)
serv_add_permit	server.c	/^void serv_add_permit(PurpleConnection *gc, const char *name)$/;"	f	signature:(PurpleConnection *gc, const char *name)
serv_add_permit	server.h	/^void serv_add_permit(PurpleConnection *, const char *);$/;"	p	signature:(PurpleConnection *, const char *)
serv_alias_buddy	server.c	/^void serv_alias_buddy(PurpleBuddy *b)$/;"	f	signature:(PurpleBuddy *b)
serv_alias_buddy	server.h	/^void serv_alias_buddy(PurpleBuddy *);$/;"	p	signature:(PurpleBuddy *)
serv_chat_invite	server.c	/^void serv_chat_invite(PurpleConnection *gc, int id, const char *message, const char *name)$/;"	f	signature:(PurpleConnection *gc, int id, const char *message, const char *name)
serv_chat_invite	server.h	/^void serv_chat_invite(PurpleConnection *, int, const char *, const char *);$/;"	p	signature:(PurpleConnection *, int, const char *, const char *)
serv_chat_leave	server.c	/^void serv_chat_leave(PurpleConnection *gc, int id)$/;"	f	signature:(PurpleConnection *gc, int id)
serv_chat_leave	server.h	/^void serv_chat_leave(PurpleConnection *, int);$/;"	p	signature:(PurpleConnection *, int)
serv_chat_send	server.c	/^int serv_chat_send(PurpleConnection *gc, int id, const char *message, PurpleMessageFlags flags)$/;"	f	signature:(PurpleConnection *gc, int id, const char *message, PurpleMessageFlags flags)
serv_chat_send	server.h	/^int  serv_chat_send(PurpleConnection *, int, const char *, PurpleMessageFlags flags);$/;"	p	signature:(PurpleConnection *, int, const char *, PurpleMessageFlags flags)
serv_chat_whisper	server.c	/^void serv_chat_whisper(PurpleConnection *gc, int id, const char *who, const char *message)$/;"	f	signature:(PurpleConnection *gc, int id, const char *who, const char *message)
serv_chat_whisper	server.h	/^void serv_chat_whisper(PurpleConnection *, int, const char *, const char *);$/;"	p	signature:(PurpleConnection *, int, const char *, const char *)
serv_get_info	server.c	/^void serv_get_info(PurpleConnection *gc, const char *name)$/;"	f	signature:(PurpleConnection *gc, const char *name)
serv_get_info	server.h	/^void serv_get_info(PurpleConnection *, const char *);$/;"	p	signature:(PurpleConnection *, const char *)
serv_got_alias	server.c	/^serv_got_alias(PurpleConnection *gc, const char *who, const char *alias)$/;"	f	signature:(PurpleConnection *gc, const char *who, const char *alias)
serv_got_alias	server.h	/^void serv_got_alias(PurpleConnection *gc, const char *who, const char *alias);$/;"	p	signature:(PurpleConnection *gc, const char *who, const char *alias)
serv_got_attention	server.c	/^serv_got_attention(PurpleConnection *gc, const char *who, guint type_code)$/;"	f	signature:(PurpleConnection *gc, const char *who, guint type_code)
serv_got_attention	server.h	/^void serv_got_attention(PurpleConnection *gc, const char *who, guint type_code);$/;"	p	signature:(PurpleConnection *gc, const char *who, guint type_code)
serv_got_chat_in	server.c	/^void serv_got_chat_in(PurpleConnection *g, int id, const char *who,$/;"	f	signature:(PurpleConnection *g, int id, const char *who, PurpleMessageFlags flags, const char *message, time_t mtime)
serv_got_chat_in	server.h	/^void serv_got_chat_in(PurpleConnection *g, int id, const char *who,$/;"	p	signature:(PurpleConnection *g, int id, const char *who, PurpleMessageFlags flags, const char *message, time_t mtime)
serv_got_chat_invite	server.c	/^void serv_got_chat_invite(PurpleConnection *gc, const char *name,$/;"	f	signature:(PurpleConnection *gc, const char *name, const char *who, const char *message, GHashTable *data)
serv_got_chat_invite	server.h	/^void serv_got_chat_invite(PurpleConnection *gc, const char *name,$/;"	p	signature:(PurpleConnection *gc, const char *name, const char *who, const char *message, GHashTable *data)
serv_got_chat_left	server.c	/^void serv_got_chat_left(PurpleConnection *g, int id)$/;"	f	signature:(PurpleConnection *g, int id)
serv_got_chat_left	server.h	/^void serv_got_chat_left(PurpleConnection *g, int id);$/;"	p	signature:(PurpleConnection *g, int id)
serv_got_im	server.c	/^void serv_got_im(PurpleConnection *gc, const char *who, const char *msg,$/;"	f	signature:(PurpleConnection *gc, const char *who, const char *msg, PurpleMessageFlags flags, time_t mtime)
serv_got_im	server.h	/^void serv_got_im(PurpleConnection *gc, const char *who, const char *msg,$/;"	p	signature:(PurpleConnection *gc, const char *who, const char *msg, PurpleMessageFlags flags, time_t mtime)
serv_got_joined_chat	server.c	/^PurpleConversation *serv_got_joined_chat(PurpleConnection *gc,$/;"	f	signature:(PurpleConnection *gc, int id, const char *name)
serv_got_joined_chat	server.h	/^PurpleConversation *serv_got_joined_chat(PurpleConnection *gc,$/;"	p	signature:(PurpleConnection *gc, int id, const char *name)
serv_got_typing	server.c	/^void serv_got_typing(PurpleConnection *gc, const char *name, int timeout,$/;"	f	signature:(PurpleConnection *gc, const char *name, int timeout, PurpleTypingState state)
serv_got_typing	server.h	/^void serv_got_typing(PurpleConnection *gc, const char *name, int timeout,$/;"	p	signature:(PurpleConnection *gc, const char *name, int timeout, PurpleTypingState state)
serv_got_typing_stopped	server.c	/^void serv_got_typing_stopped(PurpleConnection *gc, const char *name) {$/;"	f	signature:(PurpleConnection *gc, const char *name)
serv_got_typing_stopped	server.h	/^void serv_got_typing_stopped(PurpleConnection *gc, const char *name);$/;"	p	signature:(PurpleConnection *gc, const char *name)
serv_join_chat	server.c	/^void serv_join_chat(PurpleConnection *gc, GHashTable *data)$/;"	f	signature:(PurpleConnection *gc, GHashTable *data)
serv_join_chat	server.h	/^void serv_join_chat(PurpleConnection *, GHashTable *data);$/;"	p	signature:(PurpleConnection *, GHashTable *data)
serv_move_buddy	server.c	/^void serv_move_buddy(PurpleBuddy *b, PurpleGroup *og, PurpleGroup *ng)$/;"	f	signature:(PurpleBuddy *b, PurpleGroup *og, PurpleGroup *ng)
serv_move_buddy	server.h	/^void serv_move_buddy(PurpleBuddy *, PurpleGroup *, PurpleGroup *);$/;"	p	signature:(PurpleBuddy *, PurpleGroup *, PurpleGroup *)
serv_reject_chat	server.c	/^void serv_reject_chat(PurpleConnection *gc, GHashTable *data)$/;"	f	signature:(PurpleConnection *gc, GHashTable *data)
serv_reject_chat	server.h	/^void serv_reject_chat(PurpleConnection *, GHashTable *data);$/;"	p	signature:(PurpleConnection *, GHashTable *data)
serv_rem_deny	server.c	/^void serv_rem_deny(PurpleConnection *gc, const char *name)$/;"	f	signature:(PurpleConnection *gc, const char *name)
serv_rem_deny	server.h	/^void serv_rem_deny(PurpleConnection *, const char *);$/;"	p	signature:(PurpleConnection *, const char *)
serv_rem_permit	server.c	/^void serv_rem_permit(PurpleConnection *gc, const char *name)$/;"	f	signature:(PurpleConnection *gc, const char *name)
serv_rem_permit	server.h	/^void serv_rem_permit(PurpleConnection *, const char *);$/;"	p	signature:(PurpleConnection *, const char *)
serv_send_attention	server.c	/^serv_send_attention(PurpleConnection *gc, const char *who, guint type_code)$/;"	f	signature:(PurpleConnection *gc, const char *who, guint type_code)
serv_send_attention	server.h	/^void serv_send_attention(PurpleConnection *gc, const char *who, guint type_code);$/;"	p	signature:(PurpleConnection *gc, const char *who, guint type_code)
serv_send_file	server.c	/^void serv_send_file(PurpleConnection *gc, const char *who, const char *file)$/;"	f	signature:(PurpleConnection *gc, const char *who, const char *file)
serv_send_file	server.h	/^void serv_send_file(PurpleConnection *gc, const char *who, const char *file);$/;"	p	signature:(PurpleConnection *gc, const char *who, const char *file)
serv_send_im	server.c	/^int serv_send_im(PurpleConnection *gc, const char *name, const char *message,$/;"	f	signature:(PurpleConnection *gc, const char *name, const char *message, PurpleMessageFlags flags)
serv_send_im	server.h	/^int  serv_send_im(PurpleConnection *, const char *, const char *, PurpleMessageFlags flags);$/;"	p	signature:(PurpleConnection *, const char *, const char *, PurpleMessageFlags flags)
serv_send_typing	server.c	/^serv_send_typing(PurpleConnection *gc, const char *name, PurpleTypingState state)$/;"	f	signature:(PurpleConnection *gc, const char *name, PurpleTypingState state)
serv_send_typing	server.h	/^unsigned int serv_send_typing(PurpleConnection *gc, const char *name, PurpleTypingState state);$/;"	p	signature:(PurpleConnection *gc, const char *name, PurpleTypingState state)
serv_set_info	server.c	/^void serv_set_info(PurpleConnection *gc, const char *info)$/;"	f	signature:(PurpleConnection *gc, const char *info)
serv_set_info	server.h	/^void serv_set_info(PurpleConnection *, const char *);$/;"	p	signature:(PurpleConnection *, const char *)
serv_set_permit_deny	server.c	/^void serv_set_permit_deny(PurpleConnection *gc)$/;"	f	signature:(PurpleConnection *gc)
serv_set_permit_deny	server.h	/^void serv_set_permit_deny(PurpleConnection *);$/;"	p	signature:(PurpleConnection *)
server	upnp.c	/^	struct sockaddr_in server;$/;"	m	struct:__anon64	typeref:struct:__anon64::sockaddr_in	file:	access:public
server_alias	blist.h	/^	char *server_alias;                     \/**< The server-specified alias of the buddy.  (i.e. MSN "Friendly Names") *\/$/;"	m	struct:_PurpleBuddy	access:public
servername	stun.h	/^	char *servername;$/;"	m	struct:_PurpleStunNatDiscovery	access:public
service_type	upnp.c	/^	gchar service_type[20];$/;"	m	struct:__anon63	file:	access:public
service_type	upnp.c	/^	gchar service_type[20];$/;"	m	struct:__anon64	file:	access:public
sess_len1	ntlm.c	/^	guint16 sess_len1;$/;"	m	struct:type3_message	file:	access:public
sess_len2	ntlm.c	/^	guint16 sess_len2;$/;"	m	struct:type3_message	file:	access:public
sess_off	ntlm.c	/^	guint32 sess_off;         \/* message length *\/$/;"	m	struct:type3_message	file:	access:public
session	media.c	/^	PurpleMediaSession *session;$/;"	m	struct:_PurpleMediaStream	file:	access:public
session	media/backend-fs2.c	/^	FsSession *session;$/;"	m	struct:_PurpleMediaBackendFs2Session	file:	access:public
session	media/backend-fs2.c	/^	PurpleMediaBackendFs2Session *session;$/;"	m	struct:_PurpleMediaBackendFs2Stream	file:	access:public
session_id	mediamanager.c	/^	gchar *session_id;$/;"	m	struct:_PurpleMediaOutputWindow	file:	access:public
session_type_from_fs	media/backend-fs2.c	/^session_type_from_fs(FsMediaType type, FsStreamDirection direction)$/;"	f	file:	signature:(FsMediaType type, FsStreamDirection direction)
session_type_to_fs_media_type	media/backend-fs2.c	/^session_type_to_fs_media_type(PurpleMediaSessionType type)$/;"	f	file:	signature:(PurpleMediaSessionType type)
session_type_to_fs_stream_direction	media/backend-fs2.c	/^session_type_to_fs_stream_direction(PurpleMediaSessionType type)$/;"	f	file:	signature:(PurpleMediaSessionType type)
sessions	media.c	/^	GHashTable *sessions;	\/* PurpleMediaSession table *\/$/;"	m	struct:_PurpleMediaPrivate	file:	access:public
sessions	media/backend-fs2.c	/^	GHashTable *sessions;$/;"	m	struct:_PurpleMediaBackendFs2Private	file:	access:public
set	desktopitem.c	/^set (PurpleDesktopItem *item, const char *key, const char *value)$/;"	f	file:	signature:(PurpleDesktopItem *item, const char *key, const char *value)
set_account_idle	idle.c	/^set_account_idle(PurpleAccount *account, int time_idle)$/;"	f	file:	signature:(PurpleAccount *account, int time_idle)
set_account_unidle	idle.c	/^set_account_unidle(PurpleAccount *account)$/;"	f	file:	signature:(PurpleAccount *account)
set_batch_mode	cipher.h	/^	void (*set_batch_mode)(PurpleCipherContext *context, PurpleCipherBatchMode mode);$/;"	m	struct:_PurpleCipherOps	access:public
set_brush	whiteboard.h	/^	void (*set_brush) (PurpleWhiteboard *wb, int size, int color);		\/**< set the size and color of the brush *\/$/;"	m	struct:_PurpleWhiteboardUiOps	access:public
set_brush	whiteboard.h	/^	void (*set_brush) (PurpleWhiteboard *wb, int size, int color);         \/**< set the brush size and color *\/$/;"	m	struct:_PurpleWhiteboardPrplOps	access:public
set_buddy_icon	prpl.h	/^	void (*set_buddy_icon)(PurpleConnection *, PurpleStoredImage *img);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
set_chat_topic	prpl.h	/^	void (*set_chat_topic)(PurpleConnection *gc, int id, const char *topic);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
set_creation_time	savedstatuses.c	/^set_creation_time(PurpleSavedStatus *status, time_t creation_time)$/;"	f	file:	signature:(PurpleSavedStatus *status, time_t creation_time)
set_current_error	account.c	/^set_current_error(PurpleAccount *account, PurpleConnectionErrorInfo *new_err)$/;"	f	file:	signature:(PurpleAccount *account, PurpleConnectionErrorInfo *new_err)
set_current_error	account.c	/^static void set_current_error(PurpleAccount *account,$/;"	p	file:	signature:(PurpleAccount *account, PurpleConnectionErrorInfo *new_err)
set_dimensions	whiteboard.h	/^	void (*set_dimensions)(PurpleWhiteboard *wb, int width, int height);   \/**< set_dimensions function *\/$/;"	m	struct:_PurpleWhiteboardPrplOps	access:public
set_dimensions	whiteboard.h	/^	void (*set_dimensions)(PurpleWhiteboard *wb, int width, int height); \/**< set_dimensions function *\/$/;"	m	struct:_PurpleWhiteboardUiOps	access:public
set_fields	roomlist.h	/^	void (*set_fields)(PurpleRoomlist *list, GList *fields); \/**< Sets the columns. *\/$/;"	m	struct:_PurpleRoomlistUiOps	access:public
set_idle	prpl.h	/^	void (*set_idle)(PurpleConnection *, int idletime);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
set_info	prpl.h	/^	void (*set_info)(PurpleConnection *, const char *info);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
set_iv	cipher.h	/^	void (*set_iv)(PurpleCipherContext *context, guchar *iv, size_t len);$/;"	m	struct:_PurpleCipherOps	access:public
set_key	cipher.h	/^	void (*set_key)(PurpleCipherContext *context, const guchar *key);$/;"	m	struct:_PurpleCipherOps	access:public
set_key_with_len	cipher.h	/^	void (*set_key_with_len)(PurpleCipherContext *context, const guchar *key, size_t len);$/;"	m	struct:_PurpleCipherOps	access:public
set_option	cipher.h	/^	void (*set_option)(PurpleCipherContext *context, const gchar *name, void *value);$/;"	m	struct:_PurpleCipherOps	access:public
set_params	media/backend-iface.h	/^	void (*set_params) (PurpleMediaBackend *self,$/;"	m	struct:_PurpleMediaBackendIface	access:public
set_permit_deny	prpl.h	/^	void (*set_permit_deny)(PurpleConnection *);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
set_public_alias	prpl.h	/^	void (*set_public_alias)(PurpleConnection *gc, const char *alias,$/;"	m	struct:_PurplePluginProtocolInfo	access:public
set_public_alias_unsupported	account.c	/^set_public_alias_unsupported(gpointer data)$/;"	f	file:	signature:(gpointer data)
set_remote_codecs	media/backend-iface.h	/^	gboolean (*set_remote_codecs) (PurpleMediaBackend *self,$/;"	m	struct:_PurpleMediaBackendIface	access:public
set_salt	cipher.h	/^	void (*set_salt)(PurpleCipherContext *context, guchar *salt);$/;"	m	struct:_PurpleCipherOps	access:public
set_send_codec	media/backend-iface.h	/^	gboolean (*set_send_codec) (PurpleMediaBackend *self,$/;"	m	struct:_PurpleMediaBackendIface	access:public
set_status	prpl.h	/^	void (*set_status)(PurpleAccount *account, PurpleStatus *status);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
set_status_with_attrs	util.c	/^set_status_with_attrs(PurpleStatus *status, ...)$/;"	f	file:	signature:(PurpleStatus *status, ...)
set_user_info_cb	account.c	/^set_user_info_cb(PurpleAccount *account, const char *user_info)$/;"	f	file:	signature:(PurpleAccount *account, const char *user_info)
set_visible	blist.h	/^	void (*set_visible)(PurpleBuddyList *list,$/;"	m	struct:_PurpleBlistUiOps	access:public
setting_to_xmlnode	account.c	/^setting_to_xmlnode(gpointer key, gpointer value, gpointer user_data)$/;"	f	file:	signature:(gpointer key, gpointer value, gpointer user_data)
settings	account.h	/^	GHashTable *settings;       \/**< Protocol-specific settings.            *\/$/;"	m	struct:_PurpleAccount	access:public
settings	blist.h	/^	GHashTable *settings;               \/**< per-node settings              *\/$/;"	m	struct:_PurpleBlistNode	access:public
setup_des_key	ntlm.c	/^setup_des_key(const guint8 key_56[], guint8 *key)$/;"	f	file:	signature:(const guint8 key_56[], guint8 *key)
setup_type	desktopitem.c	/^setup_type (PurpleDesktopItem *item, const char *uri)$/;"	f	file:	signature:(PurpleDesktopItem *item, const char *uri)
short_data	value.h	/^		short short_data;$/;"	m	union:__anon18::__anon19	access:public
shortcut	smiley.c	/^	char *shortcut;                \/**< Shortcut associated with the custom$/;"	m	struct:_PurpleSmiley	file:	access:public
show	blist.h	/^	void (*show)(PurpleBuddyList *list);     \/**< The core will call this when it's finished doing its core stuff *\/$/;"	m	struct:_PurpleBlistUiOps	access:public
show_all	request.h	/^			gboolean show_all;$/;"	m	struct:_PurpleRequestField::__anon140::__anon146	access:public
show_with_account	roomlist.h	/^	void (*show_with_account)(PurpleAccount *account); \/**< Force the ui to pop up a dialog and get the list *\/$/;"	m	struct:_PurpleRoomlistUiOps	access:public
sibling	prefs.c	/^	struct purple_pref *sibling;$/;"	m	struct:purple_pref	typeref:struct:purple_pref::purple_pref	file:	access:public
signal_connect_common	signals.c	/^signal_connect_common(void *instance, const char *signal, void *handle,$/;"	f	file:	signature:(void *instance, const char *signal, void *handle, PurpleCallback func, void *data, int priority, gboolean use_vargs)
signal_count	signals.c	/^	size_t signal_count;$/;"	m	struct:__anon100	file:	access:public
signals	signals.c	/^	GHashTable *signals;$/;"	m	struct:__anon100	file:	access:public
signals	smiley.c	/^static guint signals[SIG_LAST];$/;"	v	file:
signed_by	certificate.h	/^	gboolean (*signed_by)(PurpleCertificate *crt, PurpleCertificate *issuer);$/;"	m	struct:_PurpleCertificateScheme	access:public
signed_off_cb	account.c	/^signed_off_cb(PurpleConnection *gc,$/;"	f	file:	signature:(PurpleConnection *gc, gpointer unused)
signed_on_cb	account.c	/^signed_on_cb(PurpleConnection *gc,$/;"	f	file:	signature:(PurpleConnection *gc, gpointer unused)
signing_off_cb	idle.c	/^signing_off_cb(PurpleConnection *gc, void *data)$/;"	f	file:	signature:(PurpleConnection *gc, void *data)
signing_on_cb	idle.c	/^signing_on_cb(PurpleConnection *gc, void *data)$/;"	f	file:	signature:(PurpleConnection *gc, void *data)
silence_threshold	media/backend-fs2.c	/^	gdouble silence_threshold;$/;"	m	struct:_PurpleMediaBackendFs2Private	file:	access:public
sink	mediamanager.c	/^	GstElement *sink;$/;"	m	struct:_PurpleMediaOutputWindow	file:	access:public
size	ft.h	/^	size_t size;                  \/**< The size of the file.               *\/$/;"	m	struct:_PurpleXfer	access:public
size	imgstore.c	/^	size_t size;     \/**< The image data's size. *\/$/;"	m	struct:_PurpleStoredImage	file:	access:public
size	log.h	/^	int (*size)(PurpleLog *log);$/;"	m	struct:_PurpleLogLogger	access:public
size	request.h	/^			gsize size;$/;"	m	struct:_PurpleRequestField::__anon140::__anon147	access:public
smiley_checksum_index	smiley.c	/^static GHashTable *smiley_checksum_index = NULL; \/* checksum (char *) => smiley (PurpleSmiley*) *\/$/;"	v	file:
smiley_shortcut_index	smiley.c	/^static GHashTable *smiley_shortcut_index = NULL; \/* shortcut (char *) => smiley (PurpleSmiley*) *\/$/;"	v	file:
smiley_to_xmlnode	smiley.c	/^smiley_to_xmlnode(PurpleSmiley *smiley)$/;"	f	file:	signature:(PurpleSmiley *smiley)
smileys_dir	smiley.c	/^static char *smileys_dir = NULL;$/;"	v	file:
smileys_loaded	smiley.c	/^static gboolean smileys_loaded = FALSE;$/;"	v	file:
smileys_to_xmlnode	smiley.c	/^smileys_to_xmlnode(void)$/;"	f	file:	signature:(void)
snarf_locale_from_key	desktopitem.c	/^snarf_locale_from_key (const char *key)$/;"	f	file:	signature:(const char *key)
socket_ready_cb	proxy.c	/^socket_ready_cb(gpointer data, gint source, PurpleInputCondition cond)$/;"	f	file:	signature:(gpointer data, gint source, PurpleInputCondition cond)
socket_type	network.c	/^	int socket_type;$/;"	m	struct:_PurpleNetworkListenData	file:	access:public
socket_type	proxy.c	/^	int socket_type;$/;"	m	struct:_PurpleProxyConnectData	file:	access:public
socks5_connected_to_proxy	proxy.c	/^static void socks5_connected_to_proxy(gpointer data, gint source,$/;"	f	file:	signature:(gpointer data, gint source, const gchar *error_message)
socks5errors	proxy.c	/^static const char * const socks5errors[] = {$/;"	v	file:
sound_files	sound-theme.c	/^	GHashTable *sound_files;$/;"	m	struct:__anon87	file:	access:public
sound_ui_ops	sound.c	/^static PurpleSoundUiOps *sound_ui_ops = NULL;$/;"	v	file:
specific_type	value.h	/^		char *specific_type;$/;"	m	union:__anon18::__anon20	access:public
src	media/backend-fs2.c	/^	GstElement *src;$/;"	m	struct:_PurpleMediaBackendFs2Session	file:	access:public
src	media/backend-fs2.c	/^	GstElement *src;$/;"	m	struct:_PurpleMediaBackendFs2Stream	file:	access:public
src_pad_added_cb	media/backend-fs2.c	/^src_pad_added_cb(FsStream *fsstream, GstPad *srcpad,$/;"	f	file:	signature:(FsStream *fsstream, GstPad *srcpad, FsCodec *codec, PurpleMediaBackendFs2Stream *stream)
src_pad_added_cb_cb	media/backend-fs2.c	/^src_pad_added_cb_cb(PurpleMediaBackendFs2Stream *stream)$/;"	f	file:	signature:(PurpleMediaBackendFs2Stream *stream)
src_tag	util.c	/^	char *src_tag;$/;"	m	struct:purple_parse_tag	file:	access:public
srcpad	media/backend-fs2.c	/^	GstPad *srcpad;$/;"	m	struct:_PurpleMediaBackendFs2Session	file:	access:public
srcvalve	media/backend-fs2.c	/^	GstElement *srcvalve;$/;"	m	struct:_PurpleMediaBackendFs2Session	file:	access:public
srv	dnssrv.c	/^		PurpleSrvCallback srv;$/;"	m	union:_PurpleSrvTxtQueryData::__anon90	file:	access:public
srv_reorder	dnssrv.c	/^srv_reorder(GList *list, int num)$/;"	f	file:	signature:(GList *list, int num)
srv_txt_query_ui_ops	dnssrv.c	/^static PurpleSrvTxtQueryUiOps *srv_txt_query_ui_ops = NULL;$/;"	v	file:
ssl_connection	util.c	/^	PurpleSslConnection *ssl_connection;$/;"	m	struct:_PurpleUtilFetchUrlData	file:	access:public
ssl_init	sslconn.c	/^ssl_init(void)$/;"	f	file:	signature:(void)
ssl_url_fetch_connect_cb	util.c	/^static void ssl_url_fetch_connect_cb(gpointer data, PurpleSslConnection *ssl_connection, PurpleInputCondition cond)$/;"	f	file:	signature:(gpointer data, PurpleSslConnection *ssl_connection, PurpleInputCondition cond)
ssl_url_fetch_connect_cb	util.c	/^static void ssl_url_fetch_connect_cb(gpointer data, PurpleSslConnection *ssl_connection, PurpleInputCondition cond);$/;"	p	file:	signature:(gpointer data, PurpleSslConnection *ssl_connection, PurpleInputCondition cond)
ssl_url_fetch_error_cb	util.c	/^static void ssl_url_fetch_error_cb(PurpleSslConnection *ssl_connection, PurpleSslErrorType error, gpointer data)$/;"	f	file:	signature:(PurpleSslConnection *ssl_connection, PurpleSslErrorType error, gpointer data)
ssl_url_fetch_error_cb	util.c	/^static void ssl_url_fetch_error_cb(PurpleSslConnection *ssl_connection, PurpleSslErrorType error, gpointer data);$/;"	p	file:	signature:(PurpleSslConnection *ssl_connection, PurpleSslErrorType error, gpointer data)
ssl_url_fetch_recv_cb	util.c	/^static void ssl_url_fetch_recv_cb(gpointer data, PurpleSslConnection *ssl_connection, PurpleInputCondition cond)$/;"	f	file:	signature:(gpointer data, PurpleSslConnection *ssl_connection, PurpleInputCondition cond)
standard_is_boolean	desktopitem.c	/^standard_is_boolean (const char * key)$/;"	f	file:	signature:(const char * key)
standard_is_strings	desktopitem.c	/^standard_is_strings (const char *key)$/;"	f	file:	signature:(const char *key)
start	ft.h	/^		void (*start)(PurpleXfer *xfer);$/;"	m	struct:_PurpleXfer::__anon25	access:public
start	whiteboard.h	/^	void (*start)(PurpleWhiteboard *wb);                                   \/**< start function *\/$/;"	m	struct:_PurpleWhiteboardPrplOps	access:public
start_element_handler	pounce.c	/^start_element_handler(GMarkupParseContext *context,$/;"	f	file:	signature:(GMarkupParseContext *context, const gchar *element_name, const gchar **attribute_names, const gchar **attribute_values, gpointer user_data, GError **error)
start_time	ft.h	/^	time_t start_time;            \/**< When the transfer of data began.    *\/$/;"	m	struct:_PurpleXfer	access:public
start_verification	certificate.h	/^	void (* start_verification)(PurpleCertificateVerificationRequest *vrq);$/;"	m	struct:_PurpleCertificateVerifier	access:public
state	connection.h	/^	PurpleConnectionState state;   \/**< The connection state.              *\/$/;"	m	struct:_PurpleConnection	access:public
state	whiteboard.h	/^	int state;                       \/**< State of whiteboard session *\/$/;"	m	struct:_PurpleWhiteboard	access:public
state_changed_cb	media/backend-fs2.c	/^state_changed_cb(PurpleMedia *media, PurpleMediaState state,$/;"	f	file:	signature:(PurpleMedia *media, PurpleMediaState state, gchar *sid, gchar *name, PurpleMediaBackendFs2 *self)
state_changed_cb	media/backend-fs2.c	/^state_changed_cb(PurpleMedia *media, PurpleMediaState state,$/;"	p	file:	signature:(PurpleMedia *media, PurpleMediaState state, gchar *sid, gchar *name, PurpleMediaBackendFs2 *self)
status	ft.h	/^	PurpleXferStatusType status;    \/**< File Transfer's status.             *\/$/;"	m	struct:_PurpleXfer	access:public
status	nat-pmp.c	/^	PurpleUPnPStatus status;$/;"	m	struct:__anon42	file:	access:public
status	stun.h	/^	PurpleStunStatus status;$/;"	m	struct:_PurpleStunNatDiscovery	access:public
status	upnp.c	/^	PurpleUPnPStatus status;$/;"	m	struct:__anon63	file:	access:public
status_attr_to_xmlnode	account.c	/^status_attr_to_xmlnode(const PurpleStatus *status, const PurpleStatusType *type, const PurpleStatusAttr *attr)$/;"	f	file:	signature:(const PurpleStatus *status, const PurpleStatusType *type, const PurpleStatusAttr *attr)
status_attrs_to_xmlnode	account.c	/^status_attrs_to_xmlnode(const PurpleStatus *status)$/;"	f	file:	signature:(const PurpleStatus *status)
status_changed	account.h	/^	void (*status_changed)(PurpleAccount *account,$/;"	m	struct:_PurpleAccountUiOps	access:public
status_has_changed	status.c	/^status_has_changed(PurpleStatus *status)$/;"	f	file:	signature:(PurpleStatus *status)
status_primitive_map	status.c	/^} const status_primitive_map[] =$/;"	v	file:
status_table	status.c	/^	GHashTable *status_table;$/;"	m	struct:_PurplePresence	file:	access:public
status_text	prpl.h	/^	char *(*status_text)(PurpleBuddy *buddy);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
status_to_xmlnode	account.c	/^status_to_xmlnode(const PurpleStatus *status)$/;"	f	file:	signature:(const PurpleStatus *status)
status_to_xmlnode	savedstatuses.c	/^status_to_xmlnode(PurpleSavedStatus *status)$/;"	f	file:	signature:(PurpleSavedStatus *status)
status_types	account.h	/^	GList *status_types;        \/**< Status types.                          *\/$/;"	m	struct:_PurpleAccount	access:public
status_types	prpl.h	/^	GList *(*status_types)(PurpleAccount *account);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
statuses	status.c	/^	GList *statuses;$/;"	m	struct:_PurplePresence	file:	access:public
statuses_loaded	savedstatuses.c	/^static gboolean    statuses_loaded = FALSE;$/;"	v	file:
statuses_to_xmlnode	account.c	/^statuses_to_xmlnode(const PurplePresence *presence)$/;"	f	file:	signature:(const PurplePresence *presence)
statuses_to_xmlnode	savedstatuses.c	/^statuses_to_xmlnode(void)$/;"	f	file:	signature:(void)
stream	media/backend-fs2.c	/^	FsStream *stream;$/;"	m	struct:_PurpleMediaBackendFs2Stream	file:	access:public
stream_info_cb	media/backend-fs2.c	/^stream_info_cb(PurpleMedia *media, PurpleMediaInfoType type,$/;"	f	file:	signature:(PurpleMedia *media, PurpleMediaInfoType type, gchar *sid, gchar *name, gboolean local, PurpleMediaBackendFs2 *self)
stream_info_cb	media/backend-fs2.c	/^stream_info_cb(PurpleMedia *media, PurpleMediaInfoType type,$/;"	p	file:	signature:(PurpleMedia *media, PurpleMediaInfoType type, gchar *sid, gchar *name, gboolean local, PurpleMediaBackendFs2 *self)
streams	media.c	/^	GList *streams;		\/* PurpleMediaStream table *\/$/;"	m	struct:_PurpleMediaPrivate	file:	access:public
streams	media/backend-fs2.c	/^	GList *streams;$/;"	m	struct:_PurpleMediaBackendFs2Private	file:	access:public
string	account.c	/^		char *string;$/;"	m	union:__anon2::__anon3	file:	access:public
string	accountopt.h	/^		char *string;       \/**< The default string value.              *\/$/;"	m	union:__anon65::__anon66	access:public
string	prefs.c	/^		char *string;$/;"	m	union:purple_pref::__anon15	file:	access:public
string	request.h	/^		} string;$/;"	m	union:_PurpleRequestField::__anon140	typeref:struct:_PurpleRequestField::__anon140::__anon141	access:public
string_data	value.h	/^		char *string_data;$/;"	m	union:__anon18::__anon19	access:public
stringlist	prefs.c	/^		GList *stringlist;$/;"	m	union:purple_pref::__anon15	file:	access:public
stringref_free	stringref.c	/^static void stringref_free(PurpleStringref *stringref)$/;"	f	file:	signature:(PurpleStringref *stringref)
stringref_free	stringref.c	/^static void stringref_free(PurpleStringref *stringref);$/;"	p	file:	signature:(PurpleStringref *stringref)
struct_size	prpl.h	/^	unsigned long struct_size;$/;"	m	struct:_PurplePluginProtocolInfo	access:public
stun_attrib	stun.c	/^struct stun_attrib {$/;"	s	file:
stun_attrib::len	stun.c	/^	guint16 len;$/;"	m	struct:stun_attrib	file:	access:public
stun_attrib::type	stun.c	/^	guint16 type;$/;"	m	struct:stun_attrib	file:	access:public
stun_change	stun.c	/^struct stun_change {$/;"	s	file:
stun_change::attrib	stun.c	/^	struct stun_attrib attrib;$/;"	m	struct:stun_change	typeref:struct:stun_change::stun_attrib	file:	access:public
stun_change::hdr	stun.c	/^	struct stun_header hdr;$/;"	m	struct:stun_change	typeref:struct:stun_change::stun_header	file:	access:public
stun_change::value	stun.c	/^	char value[4];$/;"	m	struct:stun_change	file:	access:public
stun_conn	stun.c	/^struct stun_conn {$/;"	s	file:
stun_conn::addr	stun.c	/^	struct sockaddr_in addr;$/;"	m	struct:stun_conn	typeref:struct:stun_conn::sockaddr_in	file:	access:public
stun_conn::fd	stun.c	/^	int fd;$/;"	m	struct:stun_conn	file:	access:public
stun_conn::incb	stun.c	/^	guint incb;$/;"	m	struct:stun_conn	file:	access:public
stun_conn::packet	stun.c	/^	struct stun_header *packet;$/;"	m	struct:stun_conn	typeref:struct:stun_conn::stun_header	file:	access:public
stun_conn::packetsize	stun.c	/^	size_t packetsize;$/;"	m	struct:stun_conn	file:	access:public
stun_conn::retry	stun.c	/^	int retry;$/;"	m	struct:stun_conn	file:	access:public
stun_conn::test	stun.c	/^	int test;$/;"	m	struct:stun_conn	file:	access:public
stun_conn::timeout	stun.c	/^	guint timeout;$/;"	m	struct:stun_conn	file:	access:public
stun_header	stun.c	/^struct stun_header {$/;"	s	file:
stun_header::len	stun.c	/^	guint16 len;$/;"	m	struct:stun_header	file:	access:public
stun_header::transid	stun.c	/^	guint32 transid[4];$/;"	m	struct:stun_header	file:	access:public
stun_header::type	stun.c	/^	guint16 type;$/;"	m	struct:stun_header	file:	access:public
stun_ip	network.c	/^static gchar *stun_ip = NULL;$/;"	v	file:
subject_name	certificate.h	/^	gchar *subject_name;$/;"	m	struct:_PurpleCertificateVerificationRequest	access:public
substatus_to_xmlnode	savedstatuses.c	/^substatus_to_xmlnode(PurpleSavedStatusSub *substatus)$/;"	f	file:	signature:(PurpleSavedStatusSub *substatus)
substatuses	savedstatuses.c	/^	GList *substatuses;      \/**< A list of PurpleSavedStatusSub's. *\/$/;"	m	struct:_PurpleSavedStatus	file:	access:public
subtype	value.h	/^		unsigned int subtype;$/;"	m	union:__anon18::__anon20	access:public
success	upnp.c	/^	gboolean success;$/;"	m	struct:_UPnPMappingAddRemove	file:	access:public
sum	dnssrv.c	/^	int sum;$/;"	m	struct:_PurpleSrvResponseContainer	file:	access:public
summary	plugin.h	/^	char *summary;$/;"	m	struct:_PurplePluginInfo	access:public
supports_add	media/backend-fs2.c	/^	gboolean supports_add;$/;"	m	struct:_PurpleMediaBackendFs2Stream	file:	access:public
sync_accounts	account.c	/^sync_accounts(void)$/;"	f	file:	signature:(void)
sync_pounces	pounce.c	/^sync_pounces(void)$/;"	f	file:	signature:(void)
sync_prefs	prefs.c	/^sync_prefs(void)$/;"	f	file:	signature:(void)
sync_smileys	smiley.c	/^sync_smileys(void)$/;"	f	file:	signature:(void)
sync_statuses	savedstatuses.c	/^sync_statuses(void)$/;"	f	file:	signature:(void)
system_log	account.h	/^	PurpleLog *system_log;        \/**< The system log                         *\/$/;"	m	struct:_PurpleAccount	access:public
tee	media/backend-fs2.c	/^	GstElement *tee;$/;"	m	struct:_PurpleMediaBackendFs2Session	file:	access:public
tee	media/backend-fs2.c	/^	GstElement *tee;$/;"	m	struct:_PurpleMediaBackendFs2Stream	file:	access:public
test	stun.c	/^	int test;$/;"	m	struct:stun_conn	file:	access:public
text	accountopt.h	/^	char *text;             \/**< The text that will appear to the user. *\/$/;"	m	struct:__anon65	access:public
text	accountopt.h	/^	char *text;             \/**< The text that will appear to the user. *\/$/;"	m	struct:__anon67	access:public
text_handler	pounce.c	/^text_handler(GMarkupParseContext *context, const gchar *text,$/;"	f	file:	signature:(GMarkupParseContext *context, const gchar *text, gsize text_len, gpointer user_data, GError **error)
theme_clean_text	theme.c	/^theme_clean_text(const gchar *text)$/;"	f	file:	signature:(const gchar *text)
theme_table	theme-manager.c	/^static GHashTable *theme_table = NULL;$/;"	v	file:
thumbnail_data	ft.c	/^	gpointer thumbnail_data;		\/**< thumbnail image *\/$/;"	m	struct:_PurpleXferPrivData	file:	access:public
thumbnail_mimetype	ft.c	/^	gchar *thumbnail_mimetype;$/;"	m	struct:_PurpleXferPrivData	file:	access:public
thumbnail_size	ft.c	/^	gsize thumbnail_size;$/;"	m	struct:_PurpleXferPrivData	file:	access:public
tima	upnp.c	/^	guint tima;	\/* purple_timeout_add handle *\/$/;"	m	struct:__anon64	file:	access:public
tima	upnp.c	/^	guint tima; \/* purple_timeout_add handle *\/$/;"	m	struct:_UPnPMappingAddRemove	file:	access:public
time	log.h	/^	time_t time;                          \/**< The time this conversation$/;"	m	struct:_PurpleLog	access:public
time_until_next_idle_event	idle.c	/^static gint time_until_next_idle_event;$/;"	v	file:
timeout	dnsquery.c	/^	guint timeout;$/;"	m	struct:_PurpleDnsQueryData	file:	access:public
timeout	stun.c	/^	guint timeout;$/;"	m	struct:stun_conn	file:	access:public
timeout_add	eventloop.h	/^	guint (*timeout_add)(guint interval, GSourceFunc function, gpointer data);$/;"	m	struct:_PurpleEventLoopUiOps	access:public
timeout_add_seconds	eventloop.h	/^	guint (*timeout_add_seconds)(guint interval, GSourceFunc function,$/;"	m	struct:_PurpleEventLoopUiOps	access:public
timeout_remove	eventloop.h	/^	gboolean (*timeout_remove)(guint handle);$/;"	m	struct:_PurpleEventLoopUiOps	access:public
timeoutfunc	stun.c	/^static gboolean timeoutfunc(gpointer data) {$/;"	f	file:	signature:(gpointer data)
timer	network.c	/^	int timer;$/;"	m	struct:_PurpleNetworkListenData	file:	access:public
title	conversation.h	/^	char *title;                \/**< The window title.                  *\/$/;"	m	struct:_PurpleConversation	access:public
title	notify.h	/^	char *title; \/**< Title of the column. *\/$/;"	m	struct:__anon117	access:public
title	request.h	/^	char *title;$/;"	m	struct:__anon139	access:public
title	savedstatuses.c	/^	char *title;$/;"	m	struct:_PurpleSavedStatus	file:	access:public
tm	log.h	/^	struct tm *tm;                        \/**< The time this conversation$/;"	m	struct:_PurpleLog	typeref:struct:_PurpleLog::tm	access:public
token_char_p	util.c	312;"	d	file:
tooltip_text	prpl.h	/^	void (*tooltip_text)(PurpleBuddy *buddy, PurpleNotifyUserInfo *user_info, gboolean full);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
topic	conversation.h	/^	char  *topic;                    \/**< The topic.                    *\/$/;"	m	struct:_PurpleConvChat	access:public
total_size	log.h	/^	int (*total_size)(PurpleLogType type, const char *name, PurpleAccount *account);$/;"	m	struct:_PurpleLogLogger	access:public
totalsize	blist.h	/^	int totalsize;			       \/**< The number of chats and contacts in this group *\/$/;"	m	struct:_PurpleGroup	access:public
totalsize	blist.h	/^	int totalsize;		    \/**< The number of buddies in this contact *\/$/;"	m	struct:_PurpleContact	access:public
transfer_cb	ft.c	/^transfer_cb(gpointer data, gint source, PurpleInputCondition condition)$/;"	f	file:	signature:(gpointer data, gint source, PurpleInputCondition condition)
transid	stun.c	/^	guint32 transid[4];$/;"	m	struct:stun_header	file:	access:public
trap_gdb_bug	dnsquery.c	/^trap_gdb_bug(int sig)$/;"	f	file:	signature:(int sig)
try_connect	proxy.c	/^static void try_connect(PurpleProxyConnectData *connect_data)$/;"	f	file:	signature:(PurpleProxyConnectData *connect_data)
try_connect	proxy.c	/^static void try_connect(PurpleProxyConnectData *connect_data);$/;"	p	file:	signature:(PurpleProxyConnectData *connect_data)
try_english_key	desktopitem.c	/^try_english_key (PurpleDesktopItem *item, const char *key)$/;"	f	file:	signature:(PurpleDesktopItem *item, const char *key)
ttl	media/candidate.c	/^	guint ttl;$/;"	m	struct:_PurpleMediaCandidatePrivate	file:	access:public
turn_ip	network.c	/^static gchar *turn_ip = NULL;$/;"	v	file:
txt	dnssrv.c	/^		PurpleTxtCallback txt;$/;"	m	union:_PurpleSrvTxtQueryData::__anon90	file:	access:public
txt_logger	log.c	/^static PurpleLogLogger *txt_logger;$/;"	v	file:
txt_logger_finalize	log.c	/^static void txt_logger_finalize(PurpleLog *log)$/;"	f	file:	signature:(PurpleLog *log)
txt_logger_finalize	log.c	/^static void txt_logger_finalize(PurpleLog *log);$/;"	p	file:	signature:(PurpleLog *log)
txt_logger_list	log.c	/^static GList *txt_logger_list(PurpleLogType type, const char *sn, PurpleAccount *account)$/;"	f	file:	signature:(PurpleLogType type, const char *sn, PurpleAccount *account)
txt_logger_list	log.c	/^static GList *txt_logger_list(PurpleLogType type, const char *sn, PurpleAccount *account);$/;"	p	file:	signature:(PurpleLogType type, const char *sn, PurpleAccount *account)
txt_logger_list_syslog	log.c	/^static GList *txt_logger_list_syslog(PurpleAccount *account)$/;"	f	file:	signature:(PurpleAccount *account)
txt_logger_list_syslog	log.c	/^static GList *txt_logger_list_syslog(PurpleAccount *account);$/;"	p	file:	signature:(PurpleAccount *account)
txt_logger_read	log.c	/^static char *txt_logger_read(PurpleLog *log, PurpleLogReadFlags *flags)$/;"	f	file:	signature:(PurpleLog *log, PurpleLogReadFlags *flags)
txt_logger_read	log.c	/^static char *txt_logger_read(PurpleLog *log, PurpleLogReadFlags *flags);$/;"	p	file:	signature:(PurpleLog *log, PurpleLogReadFlags *flags)
txt_logger_total_size	log.c	/^static int txt_logger_total_size(PurpleLogType type, const char *name, PurpleAccount *account)$/;"	f	file:	signature:(PurpleLogType type, const char *name, PurpleAccount *account)
txt_logger_total_size	log.c	/^static int txt_logger_total_size(PurpleLogType type, const char *name, PurpleAccount *account);$/;"	p	file:	signature:(PurpleLogType type, const char *name, PurpleAccount *account)
txt_logger_write	log.c	/^static gsize txt_logger_write(PurpleLog *log,$/;"	f	file:	signature:(PurpleLog *log, PurpleMessageFlags type, const char *from, time_t time, const char *message)
txt_logger_write	log.c	/^static gsize txt_logger_write(PurpleLog *log,$/;"	p	file:	signature:(PurpleLog *log, PurpleMessageFlags type, const char *from, time_t time, const char *message)
type	account.c	/^	PurpleAccountRequestType type;$/;"	m	struct:__anon4	file:	access:public
type	account.c	/^	PurplePrefType type;$/;"	m	struct:__anon2	file:	access:public
type	accountopt.h	/^	PurplePrefType type;      \/**< The type of value.                     *\/$/;"	m	struct:__anon65	access:public
type	blist.h	/^	PurpleBlistNodeType type;             \/**< The type of node this is       *\/$/;"	m	struct:_PurpleBlistNode	access:public
type	connection.h	/^	PurpleConnectionError type;$/;"	m	struct:__anon74	access:public
type	conversation.c	/^	PurpleConversationType type;$/;"	m	struct:_purple_hconv	file:	access:public
type	conversation.h	/^	PurpleConversationType type;  \/**< The type of conversation.          *\/$/;"	m	struct:_PurpleConversation	access:public
type	desktopitem.c	/^	PurpleDesktopItemType type;$/;"	m	struct:_PurpleDesktopItem	file:	access:public
type	dnssrv.c	/^	int type;$/;"	m	struct:_PurpleSrvInternalQuery	file:	access:public
type	dnssrv.c	/^	int type;$/;"	m	struct:_PurpleSrvTxtQueryData	file:	access:public
type	ft.h	/^	PurpleXferType type;            \/**< The type of transfer.               *\/$/;"	m	struct:_PurpleXfer	access:public
type	log.h	/^	PurpleLogType type;                     \/**< The type of log this is *\/$/;"	m	struct:_PurpleLog	access:public
type	log.h	/^	PurpleLogType type;                     \/**< The type of logs available *\/$/;"	m	struct:_PurpleLogSet	access:public
type	media.c	/^	PurpleMediaSessionType type;$/;"	m	struct:_PurpleMediaSession	file:	access:public
type	media/backend-fs2.c	/^	PurpleMediaSessionType type;$/;"	m	struct:_PurpleMediaBackendFs2Session	file:	access:public
type	media/candidate.c	/^	PurpleMediaCandidateType type;$/;"	m	struct:_PurpleMediaCandidatePrivate	file:	access:public
type	mediamanager.c	/^	PurpleMediaElementType type;$/;"	m	struct:_PurpleMediaElementInfoPrivate	file:	access:public
type	notify.c	/^	PurpleNotifyType type;$/;"	m	struct:__anon135	file:	access:public
type	notify.c	/^	PurpleNotifyUserInfoEntryType type;$/;"	m	struct:_PurpleNotifyUserInfoEntry	file:	access:public
type	notify.h	/^	PurpleNotifySearchButtonType type;$/;"	m	struct:__anon118	access:public
type	ntlm.c	/^	guint32 type;            \/* 0x00000001 *\/$/;"	m	struct:type1_message	file:	access:public
type	ntlm.c	/^	guint32 type;            \/* 0x00000002 *\/$/;"	m	struct:type2_message	file:	access:public
type	ntlm.c	/^	guint32 type;            \/* 0x00000003 *\/$/;"	m	struct:type3_message	file:	access:public
type	plugin.h	/^	PurplePluginType type;$/;"	m	struct:_PurplePluginInfo	access:public
type	pluginpref.c	/^	PurplePluginPrefType type;$/;"	m	struct:_PurplePluginPref	file:	access:public
type	prefs.c	/^	PurplePrefType type;$/;"	m	struct:purple_pref	file:	access:public
type	proxy.h	/^	PurpleProxyType type;   \/**< The proxy type.  *\/$/;"	m	struct:__anon29	access:public
type	request.c	/^	PurpleRequestType type;$/;"	m	struct:__anon122	file:	access:public
type	request.h	/^	PurpleRequestFieldType type;$/;"	m	struct:_PurpleRequestField	access:public
type	roomlist.h	/^	PurpleRoomlistFieldType type; \/**< The type of field. *\/$/;"	m	struct:_PurpleRoomlistField	access:public
type	roomlist.h	/^	PurpleRoomlistRoomType type; \/**< The type of room. *\/$/;"	m	struct:_PurpleRoomlistRoom	access:public
type	savedstatuses.c	/^	PurpleStatusPrimitive type;$/;"	m	struct:_PurpleSavedStatus	file:	access:public
type	savedstatuses.c	/^	const PurpleStatusType *type;$/;"	m	struct:_PurpleSavedStatusSub	file:	access:public
type	status.c	/^	PurpleStatusPrimitive type;$/;"	m	struct:PurpleStatusPrimitiveMap	file:	access:public
type	status.c	/^	PurpleStatusType *type;$/;"	m	struct:_PurpleStatus	file:	access:public
type	stun.c	/^	guint16 type;$/;"	m	struct:stun_attrib	file:	access:public
type	stun.c	/^	guint16 type;$/;"	m	struct:stun_header	file:	access:public
type	stun.h	/^	PurpleStunNatType type;$/;"	m	struct:_PurpleStunNatDiscovery	access:public
type	theme-loader.c	/^	gchar *type;$/;"	m	struct:__anon43	file:	access:public
type	theme.c	/^	gchar *type;$/;"	m	struct:__anon26	file:	access:public
type	value.h	/^	PurpleType type;$/;"	m	struct:__anon18	access:public
type	xmlnode.h	/^	XMLNodeType type;		\/**< The type of the node. *\/$/;"	m	struct:_xmlnode	access:public
type1_message	ntlm.c	/^struct type1_message {$/;"	s	file:
type1_message::dom_len1	ntlm.c	/^	guint16 dom_len1;        \/* domain string length *\/$/;"	m	struct:type1_message	file:	access:public
type1_message::dom_len2	ntlm.c	/^	guint16 dom_len2;        \/* domain string length *\/$/;"	m	struct:type1_message	file:	access:public
type1_message::dom_off	ntlm.c	/^	guint32 dom_off;         \/* domain string offset *\/$/;"	m	struct:type1_message	file:	access:public
type1_message::flags	ntlm.c	/^	guint32 flags;           \/* 0x0000b203 *\/$/;"	m	struct:type1_message	file:	access:public
type1_message::host_len1	ntlm.c	/^	guint16 host_len1;       \/* host string length *\/$/;"	m	struct:type1_message	file:	access:public
type1_message::host_len2	ntlm.c	/^	guint16 host_len2;       \/* host string length *\/$/;"	m	struct:type1_message	file:	access:public
type1_message::host_off	ntlm.c	/^	guint32 host_off;        \/* host string offset (always 0x00000020) *\/$/;"	m	struct:type1_message	file:	access:public
type1_message::protocol	ntlm.c	/^	guint8  protocol[8];     \/* 'N', 'T', 'L', 'M', 'S', 'S', 'P', '\\0' *\/$/;"	m	struct:type1_message	file:	access:public
type1_message::type	ntlm.c	/^	guint32 type;            \/* 0x00000001 *\/$/;"	m	struct:type1_message	file:	access:public
type2_message	ntlm.c	/^struct type2_message {$/;"	s	file:
type2_message::context	ntlm.c	/^	guint8  context[8];$/;"	m	struct:type2_message	file:	access:public
type2_message::flags	ntlm.c	/^	guint32 flags;           \/* 0x00008201 *\/$/;"	m	struct:type2_message	file:	access:public
type2_message::msg_len1	ntlm.c	/^	guint16 msg_len1;        \/* target name length *\/$/;"	m	struct:type2_message	file:	access:public
type2_message::msg_len2	ntlm.c	/^	guint16 msg_len2;        \/* target name length *\/$/;"	m	struct:type2_message	file:	access:public
type2_message::nonce	ntlm.c	/^	guint8  nonce[8];        \/* nonce *\/$/;"	m	struct:type2_message	file:	access:public
type2_message::protocol	ntlm.c	/^	guint8  protocol[8];     \/* 'N', 'T', 'L', 'M', 'S', 'S', 'P', '\\0'*\/$/;"	m	struct:type2_message	file:	access:public
type2_message::type	ntlm.c	/^	guint32 type;            \/* 0x00000002 *\/$/;"	m	struct:type2_message	file:	access:public
type2_message::zero	ntlm.c	/^	guint32 zero;$/;"	m	struct:type2_message	file:	access:public
type3_message	ntlm.c	/^struct type3_message {$/;"	s	file:
type3_message::dom_len1	ntlm.c	/^	guint16 dom_len1;        \/* domain string length *\/$/;"	m	struct:type3_message	file:	access:public
type3_message::dom_len2	ntlm.c	/^	guint16 dom_len2;        \/* domain string length *\/$/;"	m	struct:type3_message	file:	access:public
type3_message::dom_off	ntlm.c	/^	guint32 dom_off;         \/* domain string offset (always 0x00000040) *\/$/;"	m	struct:type3_message	file:	access:public
type3_message::flags	ntlm.c	/^	guint32 flags;            \/* 0x00008201 *\/$/;"	m	struct:type3_message	file:	access:public
type3_message::host_len1	ntlm.c	/^	guint16 host_len1;       \/* host string length *\/$/;"	m	struct:type3_message	file:	access:public
type3_message::host_len2	ntlm.c	/^	guint16 host_len2;       \/* host string length *\/$/;"	m	struct:type3_message	file:	access:public
type3_message::host_off	ntlm.c	/^	guint32 host_off;        \/* host string offset *\/$/;"	m	struct:type3_message	file:	access:public
type3_message::lm_resp_len1	ntlm.c	/^	guint16 lm_resp_len1;    \/* LanManager response length (always 0x18)*\/$/;"	m	struct:type3_message	file:	access:public
type3_message::lm_resp_len2	ntlm.c	/^	guint16 lm_resp_len2;    \/* LanManager response length (always 0x18)*\/$/;"	m	struct:type3_message	file:	access:public
type3_message::lm_resp_off	ntlm.c	/^	guint32 lm_resp_off;     \/* LanManager response offset *\/$/;"	m	struct:type3_message	file:	access:public
type3_message::nt_resp_len1	ntlm.c	/^	guint16 nt_resp_len1;    \/* NT response length (always 0x18) *\/$/;"	m	struct:type3_message	file:	access:public
type3_message::nt_resp_len2	ntlm.c	/^	guint16 nt_resp_len2;    \/* NT response length (always 0x18) *\/$/;"	m	struct:type3_message	file:	access:public
type3_message::nt_resp_off	ntlm.c	/^	guint32 nt_resp_off;     \/* NT response offset *\/$/;"	m	struct:type3_message	file:	access:public
type3_message::protocol	ntlm.c	/^	guint8  protocol[8];     \/* 'N', 'T', 'L', 'M', 'S', 'S', 'P', '\\0'*\/$/;"	m	struct:type3_message	file:	access:public
type3_message::sess_len1	ntlm.c	/^	guint16 sess_len1;$/;"	m	struct:type3_message	file:	access:public
type3_message::sess_len2	ntlm.c	/^	guint16 sess_len2;$/;"	m	struct:type3_message	file:	access:public
type3_message::sess_off	ntlm.c	/^	guint32 sess_off;         \/* message length *\/$/;"	m	struct:type3_message	file:	access:public
type3_message::type	ntlm.c	/^	guint32 type;            \/* 0x00000003 *\/$/;"	m	struct:type3_message	file:	access:public
type3_message::user_len1	ntlm.c	/^	guint16 user_len1;       \/* username string length *\/$/;"	m	struct:type3_message	file:	access:public
type3_message::user_len2	ntlm.c	/^	guint16 user_len2;       \/* username string length *\/$/;"	m	struct:type3_message	file:	access:public
type3_message::user_off	ntlm.c	/^	guint32 user_off;        \/* username string offset *\/$/;"	m	struct:type3_message	file:	access:public
type_again	conversation.h	/^	time_t type_again;                 \/**< The type again time.         *\/$/;"	m	struct:_PurpleConvIm	access:public
type_from_string	desktopitem.c	/^type_from_string (const char *type)$/;"	f	file:	signature:(const char *type)
type_hint	request.h	/^	char *type_hint;$/;"	m	struct:_PurpleRequestField	access:public
typing_state	conversation.h	/^	PurpleTypingState typing_state;      \/**< The current typing state.    *\/$/;"	m	struct:_PurpleConvIm	access:public
typing_timeout	conversation.h	/^	guint  typing_timeout;             \/**< The typing timer handle.     *\/$/;"	m	struct:_PurpleConvIm	access:public
u	conversation.h	/^	} u;$/;"	m	struct:_PurpleConversation	typeref:union:_PurpleConversation::__anon61	access:public
u	request.h	/^	} u;$/;"	m	struct:_PurpleRequestField	typeref:union:_PurpleRequestField::__anon140	access:public
u	status.c	/^	} u;$/;"	m	struct:_PurplePresence	typeref:union:_PurplePresence::__anon34	file:	access:public
u	value.h	/^	} u;$/;"	m	struct:__anon18	typeref:union:__anon18::__anon20	access:public
uchar_data	value.h	/^		unsigned char uchar_data;$/;"	m	union:__anon18::__anon19	access:public
ui	account.c	/^	char *ui;$/;"	m	struct:__anon2	file:	access:public
ui	core.c	/^	char *ui;$/;"	m	struct:PurpleCore	file:	access:public
ui	pounce.c	/^	char *ui;$/;"	m	struct:__anon9	file:	access:public
ui_caps	mediamanager.c	/^	PurpleMediaCaps ui_caps;$/;"	m	struct:_PurpleMediaManagerPrivate	file:	access:public
ui_data	account.h	/^	void *ui_data;              \/**< The UI can put data here.              *\/$/;"	m	struct:_PurpleAccount	access:public
ui_data	blist.h	/^	void          *ui_data;             \/**< The UI can put data here.      *\/$/;"	m	struct:_PurpleBlistNode	access:public
ui_data	blist.h	/^	void *ui_data;                \/**< UI-specific data. *\/$/;"	m	struct:_PurpleBuddyList	access:public
ui_data	conversation.h	/^	gpointer ui_data;                \/** < The UI can put whatever it wants here. *\/$/;"	m	struct:_PurpleConvChatBuddy	access:public
ui_data	conversation.h	/^	void *ui_data;                           \/**< UI-specific data.       *\/$/;"	m	struct:_PurpleConversation	access:public
ui_data	ft.h	/^	void *ui_data;                    \/**< UI-specific data.       *\/$/;"	m	struct:_PurpleXfer	access:public
ui_data	request.h	/^	void *ui_data;$/;"	m	struct:_PurpleRequestField	access:public
ui_data	request.h	/^	void *ui_data;$/;"	m	struct:__anon138	access:public
ui_data	roomlist.h	/^	gpointer ui_data; \/**< UI private data. *\/$/;"	m	struct:_PurpleRoomlist	access:public
ui_data	whiteboard.h	/^	void *ui_data;                   \/**< Graphical user-interface data *\/$/;"	m	struct:_PurpleWhiteboard	access:public
ui_handle	account.c	/^	void *ui_handle;$/;"	m	struct:__anon4	file:	access:public
ui_handle	notify.c	/^	void *ui_handle;$/;"	m	struct:__anon135	file:	access:public
ui_handle	request.c	/^	void *ui_handle;$/;"	m	struct:__anon122	file:	access:public
ui_info	plugin.h	/^	void *ui_info; \/**< Used only by UI-specific plugins to build a preference screen with a custom UI *\/$/;"	m	struct:_PurplePluginInfo	access:public
ui_init	core.h	/^	void (*ui_init)(void);$/;"	m	struct:__anon21	access:public
ui_name	pounce.c	/^	char *ui_name;$/;"	m	struct:__anon7	file:	access:public
ui_ops	conversation.h	/^	PurpleConversationUiOps *ui_ops;           \/**< UI-specific operations. *\/$/;"	m	struct:_PurpleConversation	access:public
ui_ops	ft.h	/^	PurpleXferUiOps *ui_ops;            \/**< UI-specific operations. *\/$/;"	m	struct:_PurpleXfer	access:public
ui_prefs_init	core.h	/^	void (*ui_prefs_init)(void);$/;"	m	struct:__anon21	access:public
ui_read	ft.h	/^	gssize (*ui_read)(PurpleXfer *xfer, guchar **buffer, gssize size);$/;"	m	struct:__anon24	access:public
ui_requirement	plugin.h	/^	char *ui_requirement;$/;"	m	struct:_PurplePluginInfo	access:public
ui_setting_to_xmlnode	account.c	/^ui_setting_to_xmlnode(gpointer key, gpointer value, gpointer user_data)$/;"	f	file:	signature:(gpointer key, gpointer value, gpointer user_data)
ui_settings	account.h	/^	GHashTable *ui_settings;    \/**< UI-specific settings.                  *\/$/;"	m	struct:_PurpleAccount	access:public
ui_type	pounce.h	/^	char *ui_type;                \/**< The type of UI.            *\/$/;"	m	struct:_PurplePounce	access:public
ui_write	ft.h	/^	gssize (*ui_write)(PurpleXfer *xfer, const guchar *buffer, gssize size);$/;"	m	struct:__anon24	access:public
uint64_data	value.h	/^		guint64 uint64_data;$/;"	m	union:__anon18::__anon19	access:public
uint_data	value.h	/^		unsigned int uint_data;$/;"	m	union:__anon18::__anon19	access:public
ulong_data	value.h	/^		unsigned long ulong_data;$/;"	m	union:__anon18::__anon19	access:public
uninit	certificate.h	/^	void (* uninit)(void);$/;"	m	struct:_PurpleCertificatePool	access:public
uninit	cipher.h	/^	void (*uninit)(PurpleCipherContext *context);$/;"	m	struct:_PurpleCipherOps	access:public
uninit	sound.h	/^	void (*uninit)(void);$/;"	m	struct:_PurpleSoundUiOps	access:public
uninit	sslconn.h	/^	void (*uninit)(void);$/;"	m	struct:__anon99	access:public
unlink_teepad_dynamic	media/backend-fs2.c	/^unlink_teepad_dynamic(GstPad *srcpad, gboolean release_pad)$/;"	f	file:	signature:(GstPad *srcpad, gboolean release_pad)
unload	plugin.h	/^	gboolean (*unload)(PurplePlugin *plugin);$/;"	m	struct:_PurplePluginInfo	access:public
unload	plugin.h	/^	gboolean (*unload)(PurplePlugin *plugin);$/;"	m	struct:_PurplePluginLoaderInfo	access:public
unload_cb	plugin.c	/^static void (*unload_cb)(PurplePlugin *, void *) = NULL;$/;"	v	file:
unload_cb_data	plugin.c	/^static void *unload_cb_data = NULL;$/;"	v	file:
unloadable	plugin.h	/^	gboolean unloadable;                   \/**< Unloadable                *\/$/;"	m	struct:_PurplePlugin	access:public
unlocalized_name	prpl.h	/^	const char *unlocalized_name;      \/**< Unlocalized name for UIs needing it *\/$/;"	m	struct:_PurpleAttentionType	access:public
unref_filename	buddyicon.c	/^unref_filename(const char *filename)$/;"	f	file:	signature:(const char *filename)
unregister_user	prpl.h	/^	void (*unregister_user)(PurpleAccount *, PurpleAccountUnregistrationCb cb, void *user_data);$/;"	m	struct:_PurplePluginProtocolInfo	access:public
update	blist.h	/^	void (*update)(PurpleBuddyList *list,$/;"	m	struct:_PurpleBlistUiOps	access:public
update_buddy_idle	status.c	/^update_buddy_idle(PurpleBuddy *buddy, PurplePresence *presence,$/;"	f	file:	signature:(PurpleBuddy *buddy, PurplePresence *presence, time_t current_time, gboolean old_idle, gboolean idle)
update_keepalive	connection.c	/^update_keepalive(PurpleConnection *gc, gboolean on)$/;"	f	file:	signature:(PurpleConnection *gc, gboolean on)
update_progress	ft.h	/^	void (*update_progress)(PurpleXfer *xfer, double percent);$/;"	m	struct:__anon24	access:public
upnp_parse_description_cb	upnp.c	/^upnp_parse_description_cb(PurpleUtilFetchUrlData *url_data, gpointer user_data,$/;"	f	file:	signature:(PurpleUtilFetchUrlData *url_data, gpointer user_data, const gchar *httpResponse, gsize len, const gchar *error_message)
upnp_port_mappings	network.c	/^static GHashTable *upnp_port_mappings = NULL;$/;"	v	file:
url	util.c	/^	char *url;$/;"	m	struct:_PurpleUtilFetchUrlData	file:	access:public
url_fetch_connect_cb	util.c	/^static void url_fetch_connect_cb(gpointer url_data, gint source, const gchar *error_message);$/;"	p	file:	signature:(gpointer url_data, gint source, const gchar *error_message)
url_fetch_connect_cb	util.c	/^url_fetch_connect_cb(gpointer url_data, gint source, const gchar *error_message)$/;"	f	file:	signature:(gpointer url_data, gint source, const gchar *error_message)
url_fetch_recv_cb	util.c	/^url_fetch_recv_cb(gpointer url_data, gint source, PurpleInputCondition cond)$/;"	f	file:	signature:(gpointer url_data, gint source, PurpleInputCondition cond)
url_fetch_send_cb	util.c	/^url_fetch_send_cb(gpointer data, gint source, PurpleInputCondition cond)$/;"	f	file:	signature:(gpointer data, gint source, PurpleInputCondition cond)
usage_count	savedstatuses.c	/^	unsigned int usage_count;$/;"	m	struct:_PurpleSavedStatus	file:	access:public
use_vargs	signals.c	/^	gboolean use_vargs;$/;"	m	struct:__anon102	file:	access:public
user	account.c	/^	char *user;$/;"	m	struct:__anon4	file:	access:public
user	status.c	/^			char *user;$/;"	m	struct:_PurplePresence::__anon34::__anon35	file:	access:public
user	util.c	/^		char *user;$/;"	m	struct:_PurpleUtilFetchUrlData::__anon54	file:	access:public
user_agent	util.c	/^	char *user_agent;$/;"	m	struct:_PurpleUtilFetchUrlData	file:	access:public
user_data	plugin.h	/^	gpointer user_data;$/;"	m	struct:_PurplePluginAction	access:public
user_data	util.c	/^	void *user_data;$/;"	m	struct:_PurpleUtilFetchUrlData	file:	access:public
user_dir	util.c	/^static char *user_dir = NULL;$/;"	v	file:
user_info	account.h	/^	char *user_info;            \/**< User information.                      *\/$/;"	m	struct:_PurpleAccount	access:public
user_info_entries	notify.c	/^	GList *user_info_entries;$/;"	m	struct:_PurpleNotifyUserInfo	file:	access:public
user_len1	ntlm.c	/^	guint16 user_len1;       \/* username string length *\/$/;"	m	struct:type3_message	file:	access:public
user_len2	ntlm.c	/^	guint16 user_len2;       \/* username string length *\/$/;"	m	struct:type3_message	file:	access:public
user_off	ntlm.c	/^	guint32 user_off;        \/* username string offset *\/$/;"	m	struct:type3_message	file:	access:public
user_settable	status.c	/^	gboolean user_settable;$/;"	m	struct:_PurpleStatusType	file:	access:public
user_splits	prpl.h	/^	GList *user_splits;      \/**< A GList of PurpleAccountUserSplit *\/$/;"	m	struct:_PurplePluginProtocolInfo	access:public
userdata	account.c	/^	gpointer userdata;$/;"	m	struct:__anon4	file:	access:public
username	account.h	/^	char *username;             \/**< The username.                          *\/$/;"	m	struct:_PurpleAccount	access:public
username	buddyicon.c	/^	char *username;            \/**< The username the icon belongs to.    *\/$/;"	m	struct:_PurpleBuddyIcon	file:	access:public
username	media/candidate.c	/^	gchar *username;$/;"	m	struct:_PurpleMediaCandidatePrivate	file:	access:public
username	proxy.h	/^	char *username;       \/**< The username.    *\/$/;"	m	struct:__anon29	access:public
users	conversation.h	/^	GHashTable *users;               \/**< Hash table of the users in the room.$/;"	m	struct:_PurpleConvChat	access:public
ushort_data	value.h	/^		unsigned short ushort_data;$/;"	m	union:__anon18::__anon19	access:public
utf8_first	util.c	4527;"	d	file:
value	account.c	/^	} value;$/;"	m	struct:__anon2	typeref:union:__anon2::__anon3	file:	access:public
value	notify.c	/^	char *value;$/;"	m	struct:_PurpleNotifyUserInfoEntry	file:	access:public
value	prefs.c	/^	} value;$/;"	m	struct:purple_pref	typeref:union:purple_pref::__anon15	file:	access:public
value	request.h	/^			char *value;$/;"	m	struct:_PurpleRequestField::__anon140::__anon141	access:public
value	request.h	/^			gboolean value;$/;"	m	struct:_PurpleRequestField::__anon140::__anon143	access:public
value	request.h	/^			int value;$/;"	m	struct:_PurpleRequestField::__anon140::__anon142	access:public
value	request.h	/^			int value;$/;"	m	struct:_PurpleRequestField::__anon140::__anon144	access:public
value	stringref.c	/^	char value[1];	\/**< The string contained in this ref.$/;"	m	struct:_PurpleStringref	file:	access:public
value	stun.c	/^	char value[4];$/;"	m	struct:stun_change	file:	access:public
value	util.h	/^	void *value;$/;"	m	struct:_PurpleKeyValuePair	access:public
value_equals	buddyicon.c	/^value_equals(gpointer key, gpointer value, gpointer user_data)$/;"	f	file:	signature:(gpointer key, gpointer value, gpointer user_data)
value_to_xmlnode	blist.c	/^value_to_xmlnode(gpointer key, gpointer hvalue, gpointer user_data)$/;"	f	file:	signature:(gpointer key, gpointer hvalue, gpointer user_data)
value_type	status.c	/^	PurpleValue *value_type;$/;"	m	struct:_PurpleStatusAttr	file:	access:public
values	signals.c	/^	PurpleValue **values;$/;"	m	struct:__anon101	file:	access:public
verifier	certificate.h	/^	PurpleCertificateVerifier *verifier;$/;"	m	struct:_PurpleCertificateVerificationRequest	access:public
verifier	sslconn.h	/^	PurpleCertificateVerifier *verifier;$/;"	m	struct:_PurpleSslConnection	access:public
version	nat-pmp.c	/^	guint8		version;$/;"	m	struct:_PurplePmpMapResponse	file:	access:public
version	nat-pmp.c	/^	guint8		version;$/;"	m	struct:__anon39	file:	access:public
version	nat-pmp.c	/^	guint8		version;$/;"	m	struct:__anon40	file:	access:public
version	nat-pmp.c	/^	guint8	version;$/;"	m	struct:__anon38	file:	access:public
version	plugin.h	/^	char *version;$/;"	m	struct:_PurplePluginInfo	access:public
video_caps	mediamanager.c	/^	GstCaps *video_caps;$/;"	m	struct:_PurpleMediaManagerPrivate	file:	access:public
video_sink	mediamanager.c	/^	PurpleMediaElementInfo *video_sink;$/;"	m	struct:_PurpleMediaManagerPrivate	file:	access:public
video_src	mediamanager.c	/^	PurpleMediaElementInfo *video_src;$/;"	m	struct:_PurpleMediaManagerPrivate	file:	access:public
visible	request.h	/^	gboolean visible;$/;"	m	struct:_PurpleRequestField	access:public
volume	media/backend-fs2.c	/^	GstElement *volume;$/;"	m	struct:_PurpleMediaBackendFs2Stream	file:	access:public
vrq	certificate.c	/^	PurpleCertificateVerificationRequest *vrq;$/;"	m	struct:__anon14	file:	access:public
wants_to_die	connection.h	/^	gboolean wants_to_die;$/;"	m	struct:_PurpleConnection	access:public
watcher	ft.h	/^	int watcher;                  \/**< Watcher.                            *\/$/;"	m	struct:_PurpleXfer	access:public
wbList	whiteboard.c	/^static GList *wbList = NULL;$/;"	v	file:
webdata	util.c	/^	char *webdata;$/;"	m	struct:_PurpleUtilFetchUrlData	file:	access:public
website	util.c	/^	} website;$/;"	m	struct:_PurpleUtilFetchUrlData	typeref:struct:_PurpleUtilFetchUrlData::__anon54	file:	access:public
weight	dnssrv.h	/^	int weight;$/;"	m	struct:_PurpleSrvResponse	access:public
what	conversation.h	/^	char *what;$/;"	m	struct:_PurpleConvMessage	access:public
when	conversation.h	/^	time_t when;$/;"	m	struct:_PurpleConvMessage	access:public
whiteboard_prpl_ops	prpl.h	/^	PurpleWhiteboardPrplOps *whiteboard_prpl_ops;$/;"	m	struct:_PurplePluginProtocolInfo	access:public
whiteboard_ui_ops	whiteboard.c	/^static PurpleWhiteboardUiOps *whiteboard_ui_ops = NULL;$/;"	v	file:
who	conversation.h	/^	char  *who;                      \/**< The person who set the topic. *\/$/;"	m	struct:_PurpleConvChat	access:public
who	conversation.h	/^	char *who;$/;"	m	struct:_PurpleConvMessage	access:public
who	ft.h	/^	char *who;                    \/**< The person on the other end of the$/;"	m	struct:_PurpleXfer	access:public
who	whiteboard.h	/^	char *who;                       \/**< Name of the remote user *\/$/;"	m	struct:_PurpleWhiteboard	access:public
window_id	mediamanager.c	/^	gulong window_id;$/;"	m	struct:_PurpleMediaOutputWindow	file:	access:public
window_id_cb	mediamanager.c	/^window_id_cb(GstBus *bus, GstMessage *msg, PurpleMediaOutputWindow *ow)$/;"	f	file:	signature:(GstBus *bus, GstMessage *msg, PurpleMediaOutputWindow *ow)
wpurple_get_connected_network_count	network.c	/^wpurple_get_connected_network_count(void)$/;"	f	file:	signature:(void)
wpurple_network_change_thread	network.c	/^static gpointer wpurple_network_change_thread(gpointer data)$/;"	f	file:	signature:(gpointer data)
wpurple_network_change_thread_cb	network.c	/^static gboolean wpurple_network_change_thread_cb(gpointer data)$/;"	f	file:	signature:(gpointer data)
write	ft.h	/^		gssize (*write)(const guchar *buffer, size_t size, PurpleXfer *xfer);$/;"	m	struct:_PurpleXfer::__anon25	access:public
write	log.h	/^	gsize (*write)(PurpleLog *log,$/;"	m	struct:_PurpleLogLogger	access:public
write	sslconn.h	/^	size_t (*write)(PurpleSslConnection *gsc, const void *data, size_t len);$/;"	m	struct:__anon99	access:public
write_buf_len	proxy.c	/^	gsize write_buf_len;$/;"	m	struct:_PurpleProxyConnectData	file:	access:public
write_buffer	proxy.c	/^	guchar *write_buffer;$/;"	m	struct:_PurpleProxyConnectData	file:	access:public
write_chat	conversation.h	/^	void (*write_chat)(PurpleConversation *conv, const char *who,$/;"	m	struct:_PurpleConversationUiOps	access:public
write_conv	conversation.h	/^	void (*write_conv)(PurpleConversation *conv,$/;"	m	struct:_PurpleConversationUiOps	access:public
write_im	conversation.h	/^	void (*write_im)(PurpleConversation *conv, const char *who,$/;"	m	struct:_PurpleConversationUiOps	access:public
write_to_parent	dnsquery.c	/^write_to_parent(int fd, const void *buf, size_t count)$/;"	f	file:	signature:(int fd, const void *buf, size_t count)
write_to_parent	dnssrv.c	/^write_to_parent(int in, int out, gconstpointer data, gsize size)$/;"	f	file:	signature:(int in, int out, gconstpointer data, gsize size)
written_len	proxy.c	/^	gsize written_len;$/;"	m	struct:_PurpleProxyConnectData	file:	access:public
x509_ca	certificate.c	/^static PurpleCertificatePool x509_ca = {$/;"	v	file:
x509_ca	certificate.c	/^static PurpleCertificatePool x509_ca;$/;"	v	file:
x509_ca_cert_in_pool	certificate.c	/^x509_ca_cert_in_pool(const gchar *id)$/;"	f	file:	signature:(const gchar *id)
x509_ca_certs	certificate.c	/^static GList *x509_ca_certs = NULL;$/;"	v	file:
x509_ca_delete_cert	certificate.c	/^x509_ca_delete_cert(const gchar *id)$/;"	f	file:	signature:(const gchar *id)
x509_ca_element	certificate.c	/^} x509_ca_element;$/;"	t	typeref:struct:__anon13	file:
x509_ca_element_free	certificate.c	/^x509_ca_element_free(x509_ca_element *el)$/;"	f	file:	signature:(x509_ca_element *el)
x509_ca_get_cert	certificate.c	/^x509_ca_get_cert(const gchar *id)$/;"	f	file:	signature:(const gchar *id)
x509_ca_get_certs	certificate.c	/^x509_ca_get_certs(const gchar *id)$/;"	f	file:	signature:(const gchar *id)
x509_ca_get_idlist	certificate.c	/^x509_ca_get_idlist(void)$/;"	f	file:	signature:(void)
x509_ca_init	certificate.c	/^x509_ca_init(void)$/;"	f	file:	signature:(void)
x509_ca_initialized	certificate.c	/^static gboolean x509_ca_initialized = FALSE;$/;"	v	file:
x509_ca_lazy_init	certificate.c	/^x509_ca_lazy_init(void)$/;"	f	file:	signature:(void)
x509_ca_locate_cert	certificate.c	/^x509_ca_locate_cert(GList *lst, const gchar *dn)$/;"	f	file:	signature:(GList *lst, const gchar *dn)
x509_ca_locate_certs	certificate.c	/^x509_ca_locate_certs(GList *lst, const gchar *dn)$/;"	f	file:	signature:(GList *lst, const gchar *dn)
x509_ca_paths	certificate.c	/^static GList *x509_ca_paths = NULL;$/;"	v	file:
x509_ca_put_cert	certificate.c	/^x509_ca_put_cert(const gchar *id, PurpleCertificate *crt)$/;"	f	file:	signature:(const gchar *id, PurpleCertificate *crt)
x509_ca_quiet_put_cert	certificate.c	/^x509_ca_quiet_put_cert(PurpleCertificate *crt)$/;"	f	file:	signature:(PurpleCertificate *crt)
x509_ca_uninit	certificate.c	/^x509_ca_uninit(void)$/;"	f	file:	signature:(void)
x509_singleuse	certificate.c	/^static PurpleCertificateVerifier x509_singleuse = {$/;"	v	file:
x509_singleuse_destroy_request	certificate.c	/^x509_singleuse_destroy_request (PurpleCertificateVerificationRequest *vrq)$/;"	f	file:	signature:(PurpleCertificateVerificationRequest *vrq)
x509_singleuse_start_verify	certificate.c	/^x509_singleuse_start_verify (PurpleCertificateVerificationRequest *vrq)$/;"	f	file:	signature:(PurpleCertificateVerificationRequest *vrq)
x509_singleuse_verify_cb	certificate.c	/^x509_singleuse_verify_cb (PurpleCertificateVerificationRequest *vrq, gint id)$/;"	f	file:	signature:(PurpleCertificateVerificationRequest *vrq, gint id)
x509_tls_cached	certificate.c	/^static PurpleCertificateVerifier x509_tls_cached = {$/;"	v	file:
x509_tls_cached	certificate.c	/^static PurpleCertificateVerifier x509_tls_cached;$/;"	v	file:
x509_tls_cached_cert_in_cache	certificate.c	/^x509_tls_cached_cert_in_cache(PurpleCertificateVerificationRequest *vrq,$/;"	f	file:	signature:(PurpleCertificateVerificationRequest *vrq, PurpleCertificateInvalidityFlags flags)
x509_tls_cached_check_subject_name	certificate.c	/^x509_tls_cached_check_subject_name(PurpleCertificateVerificationRequest *vrq,$/;"	f	file:	signature:(PurpleCertificateVerificationRequest *vrq, PurpleCertificateInvalidityFlags flags)
x509_tls_cached_complete	certificate.c	/^x509_tls_cached_complete(PurpleCertificateVerificationRequest *vrq,$/;"	f	file:	signature:(PurpleCertificateVerificationRequest *vrq, PurpleCertificateInvalidityFlags flags)
x509_tls_cached_destroy_request	certificate.c	/^x509_tls_cached_destroy_request(PurpleCertificateVerificationRequest *vrq)$/;"	f	file:	signature:(PurpleCertificateVerificationRequest *vrq)
x509_tls_cached_show_cert	certificate.c	/^x509_tls_cached_show_cert(x509_tls_cached_ua_ctx *c, gint id)$/;"	f	file:	signature:(x509_tls_cached_ua_ctx *c, gint id)
x509_tls_cached_start_verify	certificate.c	/^x509_tls_cached_start_verify(PurpleCertificateVerificationRequest *vrq)$/;"	f	file:	signature:(PurpleCertificateVerificationRequest *vrq)
x509_tls_cached_ua_ctx	certificate.c	/^} x509_tls_cached_ua_ctx;$/;"	t	typeref:struct:__anon14	file:
x509_tls_cached_ua_ctx_free	certificate.c	/^x509_tls_cached_ua_ctx_free(x509_tls_cached_ua_ctx *c)$/;"	f	file:	signature:(x509_tls_cached_ua_ctx *c)
x509_tls_cached_ua_ctx_new	certificate.c	/^x509_tls_cached_ua_ctx_new(PurpleCertificateVerificationRequest *vrq,$/;"	f	file:	signature:(PurpleCertificateVerificationRequest *vrq, const gchar *reason)
x509_tls_cached_unknown_peer	certificate.c	/^x509_tls_cached_unknown_peer(PurpleCertificateVerificationRequest *vrq,$/;"	f	file:	signature:(PurpleCertificateVerificationRequest *vrq, PurpleCertificateInvalidityFlags flags)
x509_tls_cached_unknown_peer	certificate.c	/^x509_tls_cached_unknown_peer(PurpleCertificateVerificationRequest *vrq,$/;"	p	file:	signature:(PurpleCertificateVerificationRequest *vrq, PurpleCertificateInvalidityFlags flags)
x509_tls_cached_user_auth	certificate.c	/^x509_tls_cached_user_auth(PurpleCertificateVerificationRequest *vrq,$/;"	f	file:	signature:(PurpleCertificateVerificationRequest *vrq, const gchar *reason)
x509_tls_cached_user_auth	certificate.c	/^x509_tls_cached_user_auth(PurpleCertificateVerificationRequest *vrq,$/;"	p	file:	signature:(PurpleCertificateVerificationRequest *vrq, const gchar *reason)
x509_tls_cached_user_auth_accept_cb	certificate.c	/^x509_tls_cached_user_auth_accept_cb(x509_tls_cached_ua_ctx *c, gint ignore)$/;"	f	file:	signature:(x509_tls_cached_ua_ctx *c, gint ignore)
x509_tls_cached_user_auth_cb	certificate.c	/^x509_tls_cached_user_auth_cb (x509_tls_cached_ua_ctx *c, gint id)$/;"	f	file:	signature:(x509_tls_cached_ua_ctx *c, gint id)
x509_tls_cached_user_auth_reject_cb	certificate.c	/^x509_tls_cached_user_auth_reject_cb(x509_tls_cached_ua_ctx *c, gint ignore)$/;"	f	file:	signature:(x509_tls_cached_ua_ctx *c, gint ignore)
x509_tls_peers	certificate.c	/^static PurpleCertificatePool x509_tls_peers = {$/;"	v	file:
x509_tls_peers	certificate.c	/^static PurpleCertificatePool x509_tls_peers;$/;"	v	file:
x509_tls_peers_cert_in_pool	certificate.c	/^x509_tls_peers_cert_in_pool(const gchar *id)$/;"	f	file:	signature:(const gchar *id)
x509_tls_peers_delete_cert	certificate.c	/^x509_tls_peers_delete_cert(const gchar *id)$/;"	f	file:	signature:(const gchar *id)
x509_tls_peers_get_cert	certificate.c	/^x509_tls_peers_get_cert(const gchar *id)$/;"	f	file:	signature:(const gchar *id)
x509_tls_peers_get_idlist	certificate.c	/^x509_tls_peers_get_idlist(void)$/;"	f	file:	signature:(void)
x509_tls_peers_init	certificate.c	/^x509_tls_peers_init(void)$/;"	f	file:	signature:(void)
x509_tls_peers_put_cert	certificate.c	/^x509_tls_peers_put_cert(const gchar *id, PurpleCertificate *crt)$/;"	f	file:	signature:(const gchar *id, PurpleCertificate *crt)
xdigits	util.c	/^static const char xdigits[] =$/;"	v	file:
xfer_ui_ops	ft.c	/^static PurpleXferUiOps *xfer_ui_ops = NULL;$/;"	v	file:
xfers	ft.c	/^static GList *xfers;$/;"	v	file:
xfers_data	ft.c	/^static GHashTable *xfers_data = NULL;$/;"	v	file:
xmlnode	xmlnode.h	/^typedef struct _xmlnode xmlnode;$/;"	t	typeref:struct:_xmlnode
xmlnode_copy	xmlnode.c	/^xmlnode_copy(const xmlnode *src)$/;"	f	signature:(const xmlnode *src)
xmlnode_copy	xmlnode.h	/^xmlnode *xmlnode_copy(const xmlnode *src);$/;"	p	signature:(const xmlnode *src)
xmlnode_copy_foreach_ns	xmlnode.c	/^xmlnode_copy_foreach_ns(gpointer key, gpointer value, gpointer user_data)$/;"	f	file:	signature:(gpointer key, gpointer value, gpointer user_data)
xmlnode_free	xmlnode.c	/^xmlnode_free(xmlnode *node)$/;"	f	signature:(xmlnode *node)
xmlnode_free	xmlnode.h	/^void xmlnode_free(xmlnode *node);$/;"	p	signature:(xmlnode *node)
xmlnode_from_file	xmlnode.c	/^xmlnode_from_file(const char *dir,const char *filename, const char *description, const char *process)$/;"	f	signature:(const char *dir,const char *filename, const char *description, const char *process)
xmlnode_from_file	xmlnode.h	/^xmlnode *xmlnode_from_file(const char *dir, const char *filename,$/;"	p	signature:(const char *dir, const char *filename, const char *description, const char *process)
xmlnode_from_str	xmlnode.c	/^xmlnode_from_str(const char *str, gssize size)$/;"	f	signature:(const char *str, gssize size)
xmlnode_from_str	xmlnode.h	/^xmlnode *xmlnode_from_str(const char *str, gssize size);$/;"	p	signature:(const char *str, gssize size)
xmlnode_get_attrib	xmlnode.c	/^xmlnode_get_attrib(const xmlnode *node, const char *attr)$/;"	f	signature:(const xmlnode *node, const char *attr)
xmlnode_get_attrib	xmlnode.h	/^const char *xmlnode_get_attrib(const xmlnode *node, const char *attr);$/;"	p	signature:(const xmlnode *node, const char *attr)
xmlnode_get_attrib_with_namespace	xmlnode.c	/^xmlnode_get_attrib_with_namespace(const xmlnode *node, const char *attr, const char *xmlns)$/;"	f	signature:(const xmlnode *node, const char *attr, const char *xmlns)
xmlnode_get_attrib_with_namespace	xmlnode.h	/^const char *xmlnode_get_attrib_with_namespace(const xmlnode *node, const char *attr, const char *xmlns);$/;"	p	signature:(const xmlnode *node, const char *attr, const char *xmlns)
xmlnode_get_child	xmlnode.c	/^xmlnode_get_child(const xmlnode *parent, const char *name)$/;"	f	signature:(const xmlnode *parent, const char *name)
xmlnode_get_child	xmlnode.h	/^xmlnode *xmlnode_get_child(const xmlnode *parent, const char *name);$/;"	p	signature:(const xmlnode *parent, const char *name)
xmlnode_get_child_with_namespace	xmlnode.c	/^xmlnode_get_child_with_namespace(const xmlnode *parent, const char *name, const char *ns)$/;"	f	signature:(const xmlnode *parent, const char *name, const char *ns)
xmlnode_get_child_with_namespace	xmlnode.h	/^xmlnode *xmlnode_get_child_with_namespace(const xmlnode *parent, const char *name, const char *xmlns);$/;"	p	signature:(const xmlnode *parent, const char *name, const char *xmlns)
xmlnode_get_data	xmlnode.c	/^xmlnode_get_data(const xmlnode *node)$/;"	f	signature:(const xmlnode *node)
xmlnode_get_data	xmlnode.h	/^char *xmlnode_get_data(const xmlnode *node);$/;"	p	signature:(const xmlnode *node)
xmlnode_get_data_unescaped	xmlnode.c	/^xmlnode_get_data_unescaped(const xmlnode *node)$/;"	f	signature:(const xmlnode *node)
xmlnode_get_data_unescaped	xmlnode.h	/^char *xmlnode_get_data_unescaped(const xmlnode *node);$/;"	p	signature:(const xmlnode *node)
xmlnode_get_namespace	xmlnode.c	/^const char *xmlnode_get_namespace(xmlnode *node)$/;"	f	signature:(xmlnode *node)
xmlnode_get_namespace	xmlnode.h	/^const char *xmlnode_get_namespace(xmlnode *node);$/;"	p	signature:(xmlnode *node)
xmlnode_get_next_twin	xmlnode.c	/^xmlnode_get_next_twin(xmlnode *node)$/;"	f	signature:(xmlnode *node)
xmlnode_get_next_twin	xmlnode.h	/^xmlnode *xmlnode_get_next_twin(xmlnode *node);$/;"	p	signature:(xmlnode *node)
xmlnode_get_parent	xmlnode.c	/^xmlnode *xmlnode_get_parent(const xmlnode *child)$/;"	f	signature:(const xmlnode *child)
xmlnode_get_parent	xmlnode.h	/^xmlnode *xmlnode_get_parent(const xmlnode *child);$/;"	p	signature:(const xmlnode *child)
xmlnode_get_prefix	xmlnode.c	/^const char *xmlnode_get_prefix(const xmlnode *node)$/;"	f	signature:(const xmlnode *node)
xmlnode_get_prefix	xmlnode.h	/^const char *xmlnode_get_prefix(const xmlnode *node);$/;"	p	signature:(const xmlnode *node)
xmlnode_insert_child	xmlnode.c	/^xmlnode_insert_child(xmlnode *parent, xmlnode *child)$/;"	f	signature:(xmlnode *parent, xmlnode *child)
xmlnode_insert_child	xmlnode.h	/^void xmlnode_insert_child(xmlnode *parent, xmlnode *child);$/;"	p	signature:(xmlnode *parent, xmlnode *child)
xmlnode_insert_data	xmlnode.c	/^xmlnode_insert_data(xmlnode *node, const char *data, gssize size)$/;"	f	signature:(xmlnode *node, const char *data, gssize size)
xmlnode_insert_data	xmlnode.h	/^void xmlnode_insert_data(xmlnode *node, const char *data, gssize size);$/;"	p	signature:(xmlnode *node, const char *data, gssize size)
xmlnode_new	xmlnode.c	/^xmlnode_new(const char *name)$/;"	f	signature:(const char *name)
xmlnode_new	xmlnode.h	/^xmlnode *xmlnode_new(const char *name);$/;"	p	signature:(const char *name)
xmlnode_new_child	xmlnode.c	/^xmlnode_new_child(xmlnode *parent, const char *name)$/;"	f	signature:(xmlnode *parent, const char *name)
xmlnode_new_child	xmlnode.h	/^xmlnode *xmlnode_new_child(xmlnode *parent, const char *name);$/;"	p	signature:(xmlnode *parent, const char *name)
xmlnode_parser_element_end_libxml	xmlnode.c	/^xmlnode_parser_element_end_libxml(void *user_data, const xmlChar *element_name,$/;"	f	file:	signature:(void *user_data, const xmlChar *element_name, const xmlChar *prefix, const xmlChar *xmlns)
xmlnode_parser_element_start_libxml	xmlnode.c	/^xmlnode_parser_element_start_libxml(void *user_data,$/;"	f	file:	signature:(void *user_data, const xmlChar *element_name, const xmlChar *prefix, const xmlChar *xmlns, int nb_namespaces, const xmlChar **namespaces, int nb_attributes, int nb_defaulted, const xmlChar **attributes)
xmlnode_parser_element_text_libxml	xmlnode.c	/^xmlnode_parser_element_text_libxml(void *user_data, const xmlChar *text, int text_len)$/;"	f	file:	signature:(void *user_data, const xmlChar *text, int text_len)
xmlnode_parser_error_libxml	xmlnode.c	/^xmlnode_parser_error_libxml(void *user_data, const char *msg, ...)$/;"	f	file:	signature:(void *user_data, const char *msg, ...)
xmlnode_parser_libxml	xmlnode.c	/^static xmlSAXHandler xmlnode_parser_libxml = {$/;"	v	file:
xmlnode_parser_structural_error_libxml	xmlnode.c	/^xmlnode_parser_structural_error_libxml(void *user_data, xmlErrorPtr error)$/;"	f	file:	signature:(void *user_data, xmlErrorPtr error)
xmlnode_remove_attrib	xmlnode.c	/^xmlnode_remove_attrib(xmlnode *node, const char *attr)$/;"	f	signature:(xmlnode *node, const char *attr)
xmlnode_remove_attrib	xmlnode.h	/^void xmlnode_remove_attrib(xmlnode *node, const char *attr);$/;"	p	signature:(xmlnode *node, const char *attr)
xmlnode_remove_attrib_with_namespace	xmlnode.c	/^xmlnode_remove_attrib_with_namespace(xmlnode *node, const char *attr, const char *xmlns)$/;"	f	signature:(xmlnode *node, const char *attr, const char *xmlns)
xmlnode_remove_attrib_with_namespace	xmlnode.h	/^void xmlnode_remove_attrib_with_namespace(xmlnode *node, const char *attr, const char *xmlns);$/;"	p	signature:(xmlnode *node, const char *attr, const char *xmlns)
xmlnode_set_attrib	xmlnode.c	/^xmlnode_set_attrib(xmlnode *node, const char *attr, const char *value)$/;"	f	signature:(xmlnode *node, const char *attr, const char *value)
xmlnode_set_attrib	xmlnode.h	/^void xmlnode_set_attrib(xmlnode *node, const char *attr, const char *value);$/;"	p	signature:(xmlnode *node, const char *attr, const char *value)
xmlnode_set_attrib_full	xmlnode.c	/^xmlnode_set_attrib_full(xmlnode *node, const char *attr, const char *xmlns, const char *prefix, const char *value)$/;"	f	signature:(xmlnode *node, const char *attr, const char *xmlns, const char *prefix, const char *value)
xmlnode_set_attrib_full	xmlnode.h	/^void xmlnode_set_attrib_full(xmlnode *node, const char *attr, const char *xmlns,$/;"	p	signature:(xmlnode *node, const char *attr, const char *xmlns, const char *prefix, const char *value)
xmlnode_set_attrib_with_namespace	xmlnode.c	/^xmlnode_set_attrib_with_namespace(xmlnode *node, const char *attr, const char *xmlns, const char *value)$/;"	f	signature:(xmlnode *node, const char *attr, const char *xmlns, const char *value)
xmlnode_set_attrib_with_namespace	xmlnode.h	/^void xmlnode_set_attrib_with_namespace(xmlnode *node, const char *attr, const char *xmlns, const char *value);$/;"	p	signature:(xmlnode *node, const char *attr, const char *xmlns, const char *value)
xmlnode_set_attrib_with_prefix	xmlnode.c	/^xmlnode_set_attrib_with_prefix(xmlnode *node, const char *attr, const char *prefix, const char *value)$/;"	f	signature:(xmlnode *node, const char *attr, const char *prefix, const char *value)
xmlnode_set_attrib_with_prefix	xmlnode.h	/^void xmlnode_set_attrib_with_prefix(xmlnode *node, const char *attr, const char *prefix, const char *value);$/;"	p	signature:(xmlnode *node, const char *attr, const char *prefix, const char *value)
xmlnode_set_namespace	xmlnode.c	/^void xmlnode_set_namespace(xmlnode *node, const char *xmlns)$/;"	f	signature:(xmlnode *node, const char *xmlns)
xmlnode_set_namespace	xmlnode.h	/^void xmlnode_set_namespace(xmlnode *node, const char *xmlns);$/;"	p	signature:(xmlnode *node, const char *xmlns)
xmlnode_set_prefix	xmlnode.c	/^void xmlnode_set_prefix(xmlnode *node, const char *prefix)$/;"	f	signature:(xmlnode *node, const char *prefix)
xmlnode_set_prefix	xmlnode.h	/^void xmlnode_set_prefix(xmlnode *node, const char *prefix);$/;"	p	signature:(xmlnode *node, const char *prefix)
xmlnode_to_formatted_str	xmlnode.c	/^xmlnode_to_formatted_str(const xmlnode *node, int *len)$/;"	f	signature:(const xmlnode *node, int *len)
xmlnode_to_formatted_str	xmlnode.h	/^char *xmlnode_to_formatted_str(const xmlnode *node, int *len);$/;"	p	signature:(const xmlnode *node, int *len)
xmlnode_to_str	xmlnode.c	/^xmlnode_to_str(const xmlnode *node, int *len)$/;"	f	signature:(const xmlnode *node, int *len)
xmlnode_to_str	xmlnode.h	/^char *xmlnode_to_str(const xmlnode *node, int *len);$/;"	p	signature:(const xmlnode *node, int *len)
xmlnode_to_str_foreach_append_ns	xmlnode.c	/^xmlnode_to_str_foreach_append_ns(const char *key, const char *value,$/;"	f	file:	signature:(const char *key, const char *value, GString *buf)
xmlnode_to_str_helper	xmlnode.c	/^xmlnode_to_str_helper(const xmlnode *node, int *len, gboolean formatting, int depth)$/;"	f	file:	signature:(const xmlnode *node, int *len, gboolean formatting, int depth)
xmlns	xmlnode.h	/^	char *xmlns;		\/**< The namespace of the node *\/$/;"	m	struct:_xmlnode	access:public
zero	ntlm.c	/^	guint32 zero;$/;"	m	struct:type2_message	file:	access:public
